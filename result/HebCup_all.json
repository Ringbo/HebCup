{
    "Origin": "Save basic clusters.",
    "Reference": "Save cluster basic configuration.",
    "HebCup": "Save basic clusters."
}
{
    "Origin": "Configure a sslConfig for the server using the legacy configuration",
    "Reference": "Configure a SSLConfig.Builder for the server using the legacy configuration",
    "HebCup": "Configure a SSLConfig.Builder for the server using the legacy configuration"
}
{
    "Origin": "If the wrapping fails,\nthen null is returned.",
    "Reference": "If wrapping fails, returns null.",
    "HebCup": "If the wrapping fails,\nthen null is returned."
}
{
    "Origin": "Test of npara method, of class GeometricDistribution.",
    "Reference": "Test of length method, of class GeometricDistribution.",
    "HebCup": "Test of Length method , of class GeometricDistribution."
}
{
    "Origin": "Bui (2015) \"Cachediff: Fast Random Sampling\" URL",
    "Reference": "Bui (2015) \"CacheDiff: Fast Random Sampling\" URL",
    "HebCup": "Bui (2015) \"Cachediff: Fast Random Sampling\" URL"
}
{
    "Origin": "If it's successfully completed, {@link BrowserResult#getMediaItems()} will return the search\nresult.",
    "Reference": "If it's successfully completed, {@link LibraryResult#getMediaItems()} will return the search\nresult.",
    "HebCup": "If it's successfully completed , {@link LibraryResult#getMediaItems ()} will return the search result."
}
{
    "Origin": "Sets the options.",
    "Reference": "Set the options.",
    "HebCup": "Sets the options."
}
{
    "Origin": "Convenience method to get custom install file",
    "Reference": "Convenience method to get custom installation script",
    "HebCup": "Convenience method to input custom install file"
}
{
    "Origin": "Sets the confidence.",
    "Reference": "Set the confidence.",
    "HebCup": "Sets the confidence."
}
{
    "Origin": "Request an update of the current cluster metadata info, return the current version before the update",
    "Reference": "Request an update of the current cluster metadata info, return the current updateVersion before the update",
    "HebCup": "Request an update of the current cluster metadata info , return the current updateVersion before the update"
}
{
    "Origin": "Gets the full path from a full filename, which is the prefix + path.",
    "Reference": "Gets the full path from a full fileName, which is the prefix + path.",
    "HebCup": "Gets the full path from a full fileName , which is the prefix + path."
}
{
    "Origin": "Unlinks interior Node p with predecessor trail.",
    "Reference": "Unlinks interior Node p with predecessor pred.",
    "HebCup": "Unlinks interior Node p with predecessor pred."
}
{
    "Origin": "Create a new client with the given connection string.",
    "Reference": "Create a new client with the given client settings.",
    "HebCup": "Create a new client with the given Mongo Client Settings."
}
{
    "Origin": "The buffer resets\nafter this method is called, so this method should only be called once per BlobDescriptor.",
    "Reference": "The buffer\nresets after this method is called, so this method should only be called once per computation.",
    "HebCup": "The buffer resets after this method is called, so this method should only be called once per 0."
}
{
    "Origin": "Sets the host's {@link OnBackPressedDispatcherOwner}.",
    "Reference": "Sets the host's {@link OnBackPressedDispatcher}.",
    "HebCup": "Sets the host's {@link OnBackPressedDispatcher}."
}
{
    "Origin": "Creates a {@link NativeLinkable} using sources compiled by the D compiler.",
    "Reference": "Creates a {@link NativeLinkableGroup} using sources compiled by the D compiler.",
    "HebCup": "Creates a {@link NativeLinkableGroup} using sources compiled by the D compiler."
}
{
    "Origin": "Sets the CPU status (free or busy).",
    "Reference": "Sets the CPU status (free or busy since some ms).",
    "HebCup": "Sets the CPU status (free or Since)."
}
{
    "Origin": "Computes the maximum for each pixel across all bands in the {@link Planar} image.",
    "Reference": "Computes the maximum for each pixel across selected bands in the {@link Planar} image.",
    "HebCup": "Computes the maximum for each pixel across all bands in the {@link Planar} image."
}
{
    "Origin": "Returns a string representation of this object; useful for testing and debugging.",
    "Reference": "Returns a string representation of this object.",
    "HebCup": "Returns a string representation of this object; useful for testing and debugging."
}
{
    "Origin": "Closes the Websocket-Connection.",
    "Reference": "Closes the WebSocket connection.",
    "HebCup": "Closes the Websocket-Connection."
}
{
    "Origin": "For example, the period in hours between two times can be calculated\nusing {@code startTime.periodUntil(endTime, HOURS)}.",
    "Reference": "For example, the period in hours between two times can be calculated\nusing {@code startTime.until(endTime, HOURS)}.",
    "HebCup": "For example, the period in hours between two times can be calculated using {@code startTime.until(endTime, HOURS)}."
}
{
    "Origin": "Converts an array of raw binary data into an array of ascii 0 and 1 character bytes - each byte is a truncated\nchar.",
    "Reference": "Converts an array of raw binary data into an array of ASCII 0 and 1 character bytes - each byte is a truncated\nchar.",
    "HebCup": "Converts an array of raw binary data into an array of ascii 0 and 1 character bytes - each byte is a truncated\nchar."
}
{
    "Origin": "Pauses all downloads.",
    "Reference": "Pauses downloads.",
    "HebCup": "Pauses all downloads."
}
{
    "Origin": "Loads the {@link Class} using the application {@link ArtifactClassLoader}.",
    "Reference": "Loads the {@link Class} using the test runner {@link ArtifactClassLoader}.",
    "HebCup": "Loads the {@link Class} using the ATestRunner {@link ArtifactClassLoader}."
}
{
    "Origin": "Convenient way to build a {@code BeamSqlRowType}.",
    "Reference": "Convenient way to build a {@link Schema}.",
    "HebCup": "Convenient way to build a {@code BeamSqlSchema}."
}
{
    "Origin": "Calculates intersection of the image and the render filter region in the coordinate system relative to image.",
    "Reference": "Calculates intersection of the image and the render filter region in the coordinate system relative to the image.",
    "HebCup": "Calculates intersection of the render and the render filter region in the coordinate system relative to image."
}
{
    "Origin": "If keys = \"abc1234\", settings with a key equal to \"abc1234\" are returned.",
    "Reference": "If {@code keyFilter = \"abc1234\"}, settings with a key equal to \"abc1234\" are returned.",
    "HebCup": "If KeyFilter = ``abc1234`` , settings with a key equal to ``abc1234`` are returned."
}
{
    "Origin": "18:43:59\nCAUTION: Does NOT recognize values with a timezone information (...[+-Z]...)",
    "Reference": "CAUTION: Does NOT recognize values with a timezone information (...[+-Z]...)",
    "HebCup": "18:43:59\nCAUTION: Does NOT recognize values with a timezone information (...[+-Z]...)"
}
{
    "Origin": "generic method for untyped messages.",
    "Reference": "generic method for untyped remoting.",
    "HebCup": "generic method for untyped messages."
}
{
    "Origin": "Sets the additional trade information, defaulted to an empty instance.",
    "Reference": "Sets the additional information, defaulted to an empty instance.",
    "HebCup": "Sets the additional PortfolioItem information , defaulted to an empty instance."
}
{
    "Origin": "or throws a {@link com.liferay.calendar.NoSuchResourceException} if it could not be found.",
    "Reference": "or throws a {@link NoSuchResourceException} if it could not be found.",
    "HebCup": "or throws a {@link com.liferay.calendar.NoSuchResourceException} if it could not be found."
}
{
    "Origin": "Initializes and returns the hashtable of all permissions known in the system.",
    "Reference": "Initializes and returns the linked hash map of all permissions known in the system.",
    "HebCup": "Initializes and returns the hashtable of all permissions known in the system."
}
{
    "Origin": "Grants the role read permissions on the resource.",
    "Reference": "Sets the read permission status.",
    "HebCup": "Grants the role hasReadPermission permissions on the resource."
}
{
    "Origin": "Waits during {@code timeout} until text extracted from specified {@code webElement} by {@link",
    "Reference": "Waits during {@code timeout} until value extracted from specified {@code element} by {@link",
    "HebCup": "Waits during {@code timeout} until text extracted from specified {@code element} by {@link"
}
{
    "Origin": "Scenario:\n  - no CA inherited trust\n  - gateway does not explicitly trust the service, but automatically validates against self-signed\n  - service trusts gateway certificate",
    "Reference": "Scenario:\n  - no CA inherited trust\n  - gateway does not explicitly trust the API, but automatically validates against self-signed\n  - API trusts gateway certificate",
    "HebCup": "Scenario: - no CA inherited trust - gateway does not explicitly trust the Api , but automatically validates against self-signed - Api trusts gateway certificate"
}
{
    "Origin": "Check if there is any negative cost (= improvement).",
    "Reference": "Find the smallest (most negative) value.",
    "HebCup": "Check if there is any negative cost (= improvement)."
}
{
    "Origin": "see\nURL\nhtml",
    "Reference": "see\nURL",
    "HebCup": "see\nURL\nhtml"
}
{
    "Origin": "Create new {@link Builder} based on an existing {@link BaseEvent} instance.",
    "Reference": "Create new {@link Builder} based on an existing {@link CoreEvent} instance.",
    "HebCup": "Create new {@link Builder} based on an existing {@link CoreEvent} instance."
}
{
    "Origin": "User / Group may update meta data of nodes: rename files and folders, change classification, etc.",
    "Reference": "User / Group may update metadata of nodes: rename files and folders, change classification, etc.",
    "HebCup": "User / Group may update metadata data of nodes: rename files and folders , change classification , etc."
}
{
    "Origin": "Returns a string representation of this object; useful for testing and debugging.",
    "Reference": "Returns a string representation of this object.",
    "HebCup": "Returns a string representation of this object; useful for testing and debugging."
}
{
    "Origin": "See {@link SyslogConstants} and RFC 3164 for more information about the",
    "Reference": "See RFC 3164 for more information about the",
    "HebCup": "See {@link SyslogConstants} and RFC 3164 for more information about the"
}
{
    "Origin": "Once you've created\na DB parameter group, you need to associate it with your DB instance\nusing ModifyDBInstance .",
    "Reference": "Once you've created a DB parameter group,\nyou need to associate it with your DB instance using",
    "HebCup": "Once you've created\na DB parameter group, you need to associate it with your DB instance\nusing ModifyDBInstance ."
}
{
    "Origin": "Returns the list of configured WAN publisher targets for this WAN\nreplication.",
    "Reference": "Returns the list of custom WAN publisher implementations for this WAN\nreplication.",
    "HebCup": "Returns the list of configured Custom Wan Publisher targets for this WAN replication."
}
{
    "Origin": "RemoveAxiom change objects are automatically generated.",
    "Reference": "The appropriate RemoveAxiom change objects are automatically\ngenerated.",
    "HebCup": "RemoveArrays change objects are automatically generated."
}
{
    "Origin": "Return a signature object containing the current signature state.",
    "Reference": "Return the signature.",
    "HebCup": "Return a signature object containing the current signature state."
}
{
    "Origin": "If {@code labels = \"*abc*\"}, settings with a label containing \"abc\" are returned.",
    "Reference": "If {@code labelFilter = \"*abc*\"}, settings with a label containing \"abc\" are returned.",
    "HebCup": "If {@code LabelFilter = ``*abc*``} , settings with a label containing ``abc`` are returned."
}
{
    "Origin": "Adds a new URI to the list of redirects.",
    "Reference": "Adds a new URI to the collection.",
    "HebCup": "Adds a new URI to the list of redirects."
}
{
    "Origin": "Returns the (biased) estimate of the sample standard deviation of the\nvalues within a {@link PointSet} region of a {@link Dataset}.",
    "Reference": "Returns the (unbiased) kurtosis excess of all the values within a\n{@link PointSet} region of a {@link Dataset}",
    "HebCup": "Returns the (Excess) estimate of the sample standard deviation of the values within a {@link PointSet} region of a {@link Dataset}."
}
{
    "Origin": "ArchaiusModule however is stateful in that much of its configuration\nis supplied externally to the Guice injector.",
    "Reference": "ArchaiusModule however is stateful in\nthat it is initially set up outside of Guice.",
    "HebCup": "ArchaiusModule however is stateful in that much of its configuration\nis supplied externally to the Guice injector."
}
{
    "Origin": "The {@link EventContextKeys#MESSAGE_TARGET}, if any",
    "Reference": "The {@link EventContextKeys#MESSAGE_CHANNEL}, if any",
    "HebCup": "The {@link EventContextKeys#MESSAGE_CHANNEL} , if any"
}
{
    "Origin": "Create a new empty {@link Sequential} with atomic guarantees on all mutative\noperations.",
    "Reference": "Create a new empty {@link Swap} with atomic guarantees on all mutative\noperations.",
    "HebCup": "Create a new empty {@link Swap} with atomic guarantees on all mutative operations."
}
{
    "Origin": "Extract the values from the array's elements by applying an extracting function on them.",
    "Reference": "Extract the values from the array's elements by applying an extracting function on them, the resulting list becomes\nthe new object under test.",
    "HebCup": "Extract the values from the array's elements by applying an extracting function on them."
}
{
    "Origin": "Sets the {@code Cipher} to use for encrypting and decrypting serialized identity data to prevent easy\ninspection of Subject identity data.",
    "Reference": "Sets the {@code CipherService} to use for encrypting and decrypting serialized identity data to prevent easy\ninspection of Subject identity data.",
    "HebCup": "Sets the {@code CipherService} to use for encrypting and decrypting serialized identity data to prevent easy inspection of Subject identity data."
}
{
    "Origin": "This method allows you to specify IterationListeners for this model.",
    "Reference": "This method allows you to specify trainingListeners for this model.",
    "HebCup": "This method allows you to specify TrainingListeners for this model."
}
{
    "Origin": "Sets data to be parsed by libflac.",
    "Reference": "Sets the data to be parsed.",
    "HebCup": "Sets data to be parsed by libflac."
}
{
    "Origin": "Returns the next day-of-week adjuster, which adjusts the date to be\nthe next of the specified day-of-week after the specified date.",
    "Reference": "Returns the next day-of-week adjuster, which adjusts the date to the\nfirst occurrence of the specified day-of-week after the date being adjusted.",
    "HebCup": "Returns the next day-of-week adjuster, which adjusts the date to be\nthe next of the specified day-of-week after the specified date."
}
{
    "Origin": "{@codesnippet com.azure.data.appconfiguration.configurationasyncclient.addSettingWithResponse#ConfigurationSetting}",
    "Reference": "{@codesnippet com.azure.data.appconfiguration.configurationasyncclient.addConfigurationSettingWithResponse#ConfigurationSetting}",
    "HebCup": "{@codesnippet com.azure.data.appconfiguration.configurationasyncclient.addConfigurationSettingWithResponse#ConfigurationSetting}"
}
{
    "Origin": "Set Account Element.",
    "Reference": "Set Kontenart.",
    "HebCup": "Set Account Element."
}
{
    "Origin": "Computes the hash of this module, returning it as a hex string.",
    "Reference": "Computes the hash of this module.",
    "HebCup": "Computes the hash of this module, returning it as a hex byte."
}
{
    "Origin": "The\n{@code orderType} is an enum value located under the {@link #ORDER_TYPE}\nkey.",
    "Reference": "The\n{@code orderType} is an enum value located under the {@link HasOrderTypeUtil#ORDER_TYPE}\nkey.",
    "HebCup": "The {@code orderType} is an enum value located under the {@link#HasOrderTypeUtil.ORDER_TYPE} key."
}
{
    "Origin": "Read an optional Long value (stored as string) form a JSON Object.",
    "Reference": "Read an optional Date value (stored as string) form a JSON Object.",
    "HebCup": "Read an Optional Date value (stored as string) form a JSON Object."
}
{
    "Origin": "Gets the parent object in the object tree representing the unmarshalled xml document.",
    "Reference": "Gets the value of the anchorId property.",
    "HebCup": "Gets the parent String in the String tree representing the unmarshalled xml document."
}
{
    "Origin": "If modified and not discarded, sheet material will be stored before being disposed of.",
    "Reference": "If modified or upgraded, sheet material will be stored before being disposed of.",
    "HebCup": "If modified and not discarded , sheet.getStub material will be stored before being disposed of."
}
{
    "Origin": "Get the value of the {@code accessible} flag for this object.",
    "Reference": "Get the value of the {@code accessible} flag for this reflected object.",
    "HebCup": "Get the value of the {@code accessible} flag for this object."
}
{
    "Origin": "Get icon img and append to buf",
    "Reference": "Get 16x16 icon img and append to buf",
    "HebCup": "Get icon img and append to buf"
}
{
    "Origin": "Testing the timesTranspose(vector, vector) method of VMath class.",
    "Reference": "Testing the timesTranspose(vector, vector) method of {@link VMath} class.",
    "HebCup": "Testing the timesTranspose(vector, vector) method of VMath class."
}
{
    "Origin": "Returns a string representation of this object; useful for testing and debugging.",
    "Reference": "Returns a string representation of this object.",
    "HebCup": "Returns a string representation of this object; useful for testing and debugging."
}
{
    "Origin": "Otherwise, this qualifier must contain all the arrays in superType.",
    "Reference": "Otherwise, this qualifier must contain all the sequences in superType.",
    "HebCup": "Otherwise , this qualifier must contain all the sequences in superType."
}
{
    "Origin": "Returns bounds of the split button part.",
    "Reference": "Returns bounds of the menu button part.",
    "HebCup": "Returns bounds of the Menu Button part."
}
{
    "Origin": "Asynchronously gets a service.",
    "Reference": "Asynchronously gets a api.",
    "HebCup": "Asynchronously gets a Api."
}
{
    "Origin": "Returns true if the constructor method is locally empty (allows calls to empty init and super\nconstructor).",
    "Reference": "Returns true if the constructor method is locally empty (allows calls to init and super\nconstructor).",
    "HebCup": "Returns true if the constructor method is locally empty (allows calls to Init and super constructor)."
}
{
    "Origin": "Sets each pixel in the output image to log( 1 + input(x,y)) of the input image.",
    "Reference": "Sets each pixel in the output image to log( val + input(x,y)) of the input image.",
    "HebCup": "Sets each pixel in the output image to log( 1 + input(x,y)) of the input image."
}
{
    "Origin": "Creates a schemaless instance of a provider with the given values for fields f1 and f2.",
    "Reference": "Creates an instance of a provider with the given values for fields f1 and f2.",
    "HebCup": "Creates a schemaless instance of a provider with the given values for fields f1 and f2."
}
{
    "Origin": "Add two URI path segments.",
    "Reference": "Add two Decoded URI path segments.",
    "HebCup": "Add two SLASH path segments."
}
{
    "Origin": "In alarm, only minute dimensionality\nindicators are expected to process.",
    "Reference": "In alarm, only minute dimensionality\nmetrics are expected to process.",
    "HebCup": "In alarm, only minute dimensionality Metrics are expected to process."
}
{
    "Origin": "If {@code thread} is null, the list\nis immutable.",
    "Reference": "Equivalent to {@code copyOf(null, elems)}.",
    "HebCup": "If {@code thread} is null, the list\nis immutable."
}
{
    "Origin": "Creates callable for executing {@link Entry#doubleWhoAmI(String, String, ReAuthnType, String)} as given user.",
    "Reference": "Creates a callable for executing {@link Entry#doubleWhoAmI(String, String, ReAuthnType, String)} as given user.",
    "HebCup": "Creates callable for executing {@link Entry#doubleWhoAmI (String , String , ReAuthnType , String type} as given user."
}
{
    "Origin": "Validate that I have a Exuberant ctags program I may use",
    "Reference": "Validate that there is a Universal ctags program.",
    "HebCup": "Validate that I have a Universal Ctags program I may use"
}
{
    "Origin": "Tests for the {@link BaseFileSystem#getStatus(AlluxioURI, GetStatusOptions)} method.",
    "Reference": "Tests for the {@link BaseFileSystem#getStatus(AlluxioURI, GetStatusPOptions)} method.",
    "HebCup": "Tests for the {@link BaseFileSystem#getStatus (AlluxioURI , GetStatusPOptions.getDefault)} method."
}
{
    "Origin": "### Effects: Provided user receives email with reset token.",
    "Reference": "### Effects: Provided user receives email with password reset token.",
    "HebCup": "### Effects: Provided user receives email with reset token."
}
{
    "Origin": "Performs thread dump and prints all available info to the given log.",
    "Reference": "Performs thread dump and prints all available info to the given log with WARN logging level.",
    "HebCup": "Performs dump dump and prints all available info to the given log."
}
{
    "Origin": "If the columnIdent doesn't have a path the return value is null",
    "Reference": "If the columnName doesn't have a path the return value is null",
    "HebCup": "switch the columnIdent doesn't have a path the return value is null"
}
{
    "Origin": "Checks if the given {@code DetailAST} node is matching line and column number.",
    "Reference": "Checks if the given {@code DetailAST} node is matching line number, column number and token\ntype.",
    "HebCup": "Checks if the given {@code DetailAST} node is matching line and column number."
}
{
    "Origin": "Persists running state to the {@link RemoteRuntimeDataset}.",
    "Reference": "Persists running state to the {@link RemoteRuntimeTable}.",
    "HebCup": "Persists running state to the {@link RemoteRuntimeTable}."
}
{
    "Origin": "An array of objects defining the nodes in the dialog.",
    "Reference": "An array of objects describing the dialog nodes in the workspace.",
    "HebCup": "An array of objects defining the nodes in the dialog."
}
{
    "Origin": "The amount of time (in millisecond) which adds to waiting time when\nusing Linear back off strategy.",
    "Reference": "Maximum amount of time (in millisecond) a thread wait before retrying\nfailed request.",
    "HebCup": "The amount of time (in millisecond) which adds to waiting time when using Retry back off strategy."
}
{
    "Origin": "Specify charsets associated with the configured {@link #setLocations(List)\nlocations}.",
    "Reference": "An alternative to {@link #setLocations(List)} that accepts a list of",
    "HebCup": "Specify Values associated with the configured {@link#setLocations (List) locations}."
}
{
    "Origin": "Builds maps of obj id to\nmd5 and case.",
    "Reference": "Builds maps of obj id to\nvalue and case.",
    "HebCup": "Builds maps of obj id to md5 and _."
}
{
    "Origin": "Moves on to next top level domain in {@code topLevelDomainsList}.",
    "Reference": "Moves on to next top level domain in {@code tldCycleIterator}.",
    "HebCup": "Moves on to next top level domain in {@code tldCycleIterator}."
}
{
    "Origin": "Add the given {@link HandlerMethodArgumentResolver}s.",
    "Reference": "Add the given {@link HandlerMethodArgumentResolver HandlerMethodArgumentResolvers}.",
    "HebCup": "Add the given {@link HandlerMethodArgumentargumentResolvers}s."
}
{
    "Origin": "Gets the Chemical Dissolution Chamber of the ItemStackInput in the parameters",
    "Reference": "Gets the Chemical Dissolution Chamber of the ItemStack in the parameters",
    "HebCup": "Gets the Chemical Dissolution Chamber of the ItemStack in the parameters"
}
{
    "Origin": "Runs operations for a single client.",
    "Reference": "Runs operations for a single session.",
    "HebCup": "Runs operations for a single Session."
}
{
    "Origin": "inverse of {@link #jacksonBson(String)}",
    "Reference": "inverse of {@link #jacksonThenBson(String)}",
    "HebCup": "inverse of {@link #jacksonbsonThen (String)}"
}
{
    "Origin": "are specifically excluded\nexcept for carriage return, linefeed, and the horizontal tab.",
    "Reference": "are specifically excluded\nexcept for carriage return, line-feed, and the horizontal tab.",
    "HebCup": "are specifically excluded except for carriage At , linefeed , and the horizontal tab."
}
{
    "Origin": "Computes the hash of this module, returning it as a hex string.",
    "Reference": "Computes the hash of this module.",
    "HebCup": "Computes the hash of this module, returning it as a hex byte."
}
{
    "Origin": "Calls the specified converter function with the current Single instance\nduring assembly time and returns its result.",
    "Reference": "Calls the specified converter function during assembly time and returns its resulting value.",
    "HebCup": "Calls the specified converter function with the current SingleConverter instance during assembly time and returns its result."
}
{
    "Origin": "or throws a {@link com.liferay.knowledgebase.NoSuchArticleException} if it could not be found.",
    "Reference": "or throws a {@link NoSuchArticleException} if it could not be found.",
    "HebCup": "or throws a {@link com.liferay.knowledgebase.NoSuchArticleException} if it could not be found."
}
{
    "Origin": "Comments in the same 10-minute bucket and otherwise equal\n are considered equal.",
    "Reference": "Comments within 10 minutes (not necessarily in same bucket)\n and otherwise equal are considered equal.",
    "HebCup": "Comments in the same 10-minute bucket and otherwise equal\n are considered equal."
}
{
    "Origin": "creates a new columnIdent which just consists of the path of the given columnIdent\ne.g.",
    "Reference": "creates a new columnName which just consists of the path of the given columnName\ne.g.",
    "HebCup": "creates a case columnIdent which just consists of the path of the given columnIdent e.g."
}
{
    "Origin": "Returns the capacity specified for each node, or empty to leave this decision to provisioning",
    "Reference": "Returns the resources requested for each node, or empty to leave this decision to provisioning",
    "HebCup": "Returns the capacity specified for each node, or empty to leave this decision to provisioning"
}
{
    "Origin": "Returns an immutable copy of the current headers.",
    "Reference": "Returns an immutable copy of the Headers for this request.",
    "HebCup": "Returns an immutable copy of the current headerMap."
}
{
    "Origin": "Purge the population of parts candidates as much as possible, since the cost\nof their later combinations is worse than exponential.",
    "Reference": "Purge the population of parts candidates as much as possible, since the cost\nof their later combinations is exponential.",
    "HebCup": "Purge the population of parts candidates as much as possible, since the cost\nof their later combinations is worse than exponential."
}
{
    "Origin": "Returns the sync d l objects before and after the current sync d l object in the ordered set where parentFolderId = ?.",
    "Reference": "Returns the sync d l objects before and after the current sync d l object in the ordered set where modifiedTime > ?",
    "HebCup": "Returns the sync d l objects before and after the current sync d l object in the ordered set where repositoryId = ?."
}
{
    "Origin": "Calculates the cash flow for a single trade.",
    "Reference": "Calculates the cash flow for a single closed trade.",
    "HebCup": "Calculates the cash flow for a single trade."
}
{
    "Origin": "Assigns a native mirror object to the given RBaseObject object.",
    "Reference": "Assigns a native mirror object ID to the given RBaseObject object.",
    "HebCup": "Assigns a native mirror object to the given RBaseObject object."
}
{
    "Origin": "Creates an exception from an service name.",
    "Reference": "Creates an exception from an API name.",
    "HebCup": "Creates an exception from an api Name."
}
{
    "Origin": "Appends a quoted string to a given buffer.",
    "Reference": "Appends a quoted string to the given string buffer.",
    "HebCup": "Appends a quoted string to a given buffer."
}
{
    "Origin": "Return -1 if there are no tokens\n on channel between i and 0.",
    "Reference": "Return -1\nif there are no tokens on channel between {@code i} and 0.",
    "HebCup": "Return -1 if there are no tokens\n on channel between i and 0."
}
{
    "Origin": "Construct the default web view object.",
    "Reference": "Construct the CordovaWebView object.",
    "HebCup": "Construct the default web view object."
}
{
    "Origin": "Sets each pixel in the output image to log( 1 + input(x,y)) of the input image.",
    "Reference": "Sets each pixel in the output image to log( val + input(x,y)) of the input image.",
    "HebCup": "Sets each pixel in the output image to log( 1 + input(x,y)) of the input image."
}
{
    "Origin": "This returns false for unstampable rule classes and for rules in the\nhost configuration.",
    "Reference": "This returns false for unstampable rule classes and for rules used to build tools.",
    "HebCup": "This returns false for unstampable rule classes and for rules in the Tool Configuration."
}
{
    "Origin": "Computes the median for each pixel across all bands in the {@link Planar} image.",
    "Reference": "Computes the median for each pixel across selected bands in the {@link Planar} image.",
    "HebCup": "Computes the median for each pixel across all bands in the {@link Planar} image."
}
{
    "Origin": "In this test, we close an internal stream in the priority tree but tree should not change.",
    "Reference": "In this test, we close an internal stream in the priority tree.",
    "HebCup": "In this test, we close an internal stream in the priority tree but tree should not change."
}
{
    "Origin": "Adds a (non-optional non-minus) node to a join group partition.",
    "Reference": "Adds a (non-optional non-minus) node to a join group partition and\nupdates the set of definitely produced variables accordingly.",
    "HebCup": "Adds a (non-optional non-minus) Non Optional Non Minus Node To a join group partition."
}
{
    "Origin": "If they are not\nthe same an AssertionFailedError is thrown.",
    "Reference": "AssertionFailedError is thrown.",
    "HebCup": "If they are not\nthe same an AssertionFailedError is thrown."
}
{
    "Origin": "Gets the value of the 'ValueType' field.",
    "Reference": "Gets the value of the 'valueType' field.",
    "HebCup": "Gets the value of the 'valueType' field."
}
{
    "Origin": "Adds remote file attributes to this remote file class.",
    "Reference": "Sets remote file attributes to this remote file class.",
    "HebCup": "Adds T to this remote file class."
}
{
    "Origin": "Increment the count of triggered synchronous state updates (by one).",
    "Reference": "Increment the count of triggered synchronous state updates in Litho components (by one).",
    "HebCup": "Increment the count of triggered synchronous Component Triggered Sync State Update (by one)."
}
{
    "Origin": "Extracts options from the specified item.",
    "Reference": "Assigns options to the specified options.",
    "HebCup": "Extracts options from the specified item."
}
{
    "Origin": "Check whether we are executed on an expired entry before the\ntimer event for expiry was received.",
    "Reference": "Check whether we are executed on an expired entry before the\ntimer event for the expiry was received.",
    "HebCup": "Check whether we are executed on an expired = before the timer event for expiry was received."
}
{
    "Origin": "Obtains an instance from the specified unique name.",
    "Reference": "Obtains an instance from the specified name.",
    "HebCup": "Obtains an instance from the specified name."
}
{
    "Origin": "Checks if the given name is a legal binary name.",
    "Reference": "Checks if the given name is a legal type name.",
    "HebCup": "Checks if the given name is a legal Type Name."
}
{
    "Origin": "StringMap\n      is created for the configuration property file and is passed\n      into the framework.",
    "Reference": "A case\ninsensitive StringMap is\ncreated for the configuration property file and is passed into the\nframework.",
    "HebCup": "StringMap\n      is created for the configuration property file and is passed\n      into the framework."
}
{
    "Origin": "Checks if the deletion policy can release some index commits with the latest global checkpoint.",
    "Reference": "Checks if the deletion policy can delete some index commits with the latest global checkpoint.",
    "HebCup": "Checks if the deletion policy can release some index commits with the latest global checkpoint."
}
{
    "Origin": "Tests for the {@link BaseFileSystem#rename(AlluxioURI, AlluxioURI, RenameOptions)}\nmethod.",
    "Reference": "Tests for the {@link BaseFileSystem#rename(AlluxioURI, AlluxioURI, RenamePOptions)}\nmethod.",
    "HebCup": "Tests for the {@link BaseFileSystem#rename (AlluxioURI , AlluxioURI , RenamePOptions.getDefault)} method."
}
{
    "Origin": "Resolves a collection of root modules, with service binding, to create\nconfiguration.",
    "Reference": "Resolves a collection of root modules to create a configuration.",
    "HebCup": "Resolves a collection of root modules, with service binding, to create\nconfiguration."
}
{
    "Origin": "Returns the Java type corresponding to the given method descriptor.",
    "Reference": "Returns the {@link Type} corresponding to the given method descriptor.",
    "HebCup": "final the Java type corresponding to the given method descriptor."
}
{
    "Origin": "SHA256 tree hash does not match To ensure that part data is\nnot corrupted in transmission, you compute a SHA256 tree hash of the\npart and include it in your request.",
    "Reference": "SHA256 tree hash does not matchTo ensure that part data is not\ncorrupted in transmission, you compute a SHA256 tree hash of the part and\ninclude it in your request.",
    "HebCup": "SHA256 tree hash does not match To ensure that part data is\nnot corrupted in transmission, you compute a SHA256 tree hash of the\npart and include it in your request."
}
{
    "Origin": "Returns an instance of a GLSL data type for the given {@link DataType}.",
    "Reference": "Returns an instance of a GLSL data type for the given {@link ShaderVariable}.",
    "HebCup": "Returns an instance of a GLSL data type for the given {@link ShaderVariable}."
}
{
    "Origin": "If nodes returned are to be further used, they must be finalized via {@link ANode#finish()}.",
    "Reference": "Before nodes are added to the result, they must be finalized via {@link ANode#finish()}.",
    "HebCup": "If nodes returned are to be further used, they must be finalized via {@link ANode#finish()}."
}
{
    "Origin": "Tests if this string starts with any specified prefixes.",
    "Reference": "Tests if this CharSequence starts with any specified prefixes.",
    "HebCup": "Tests if this CharSequence starts with any specified prefixes."
}
{
    "Origin": "Returns the user thread with the primary key or throws a {@link com.liferay.privatemessaging.NoSuchUserThreadException} if it could not be found.",
    "Reference": "Returns the user thread with the primary key or throws a {@link NoSuchUserThreadException} if it could not be found.",
    "HebCup": "Returns the user thread with the primary key or throws a {@link com.liferay.privatemessaging.NoSuchUserThreadException} if it could not be found."
}
{
    "Origin": "Stub of {@link Plugin#willDeclareSetter(TypeSpec.Builder, PropertyGenerator, MethodSpec.Builder)} for subclasses\nto override",
    "Reference": "Stub of {@link Plugin#beforeDeclareSetter(TypeSpec.Builder, PropertyGenerator, MethodSpec.Builder)} for subclasses\nto override",
    "HebCup": "Stub of {@link Plugin#beforeDeclareSetter (TypeSpec.Builder , PropertyGenerator , MethodSpec.Builder)} for subclasses to override"
}
{
    "Origin": "Observer methods with other transaction phase\nare scheduled for the corresponding transaction phase.",
    "Reference": "Transactional observer methods are scheduled to be executed in the corresponding transaction phase.",
    "HebCup": "Handle methods with other transaction phase are scheduled for the corresponding transaction phase."
}
{
    "Origin": "Use the given SleuthkitCase to update the data used to determine the\navailable filters.",
    "Reference": "Update the data used to determine the available filters.",
    "HebCup": "Use the given SleuthkitCase to update the data used to determine the\navailable filters."
}
{
    "Origin": "Extract a user rating vector from a rating cursor.",
    "Reference": "Extract a user rating vector from a rating stream.",
    "HebCup": "Extract a user rating vector from a rating ObjectStream."
}
{
    "Origin": "Adds a  to a buffer, with each  being separated by a \":\".",
    "Reference": "Adds a  to a ,\nwith each  being separated by a \":\".",
    "HebCup": "Adds a to a Builder , with each being separated by a ``:``."
}
{
    "Origin": "Do nothing if\n{@link BaseConfiguration#nocomment} is set to true.",
    "Reference": "Do nothing if\n{@link BaseOptions#noComment} is set to true.",
    "HebCup": "Do nothing if {@link Baseoptions.no#nocomment} is set to true."
}
{
    "Origin": "Standard setter for the leftwardLabel String for this RelationshipType",
    "Reference": "Standard setter for the leftwardType String for this RelationshipType",
    "HebCup": "Standard setter for the leftwardType String for this RelationshipType"
}
{
    "Origin": "Create a {@link ServiceLocator}.",
    "Reference": "Create a {@link InstanceManager}.",
    "HebCup": "Create a {@link InstanceManager}."
}
{
    "Origin": "It will also exclude files that cannot be analysed with {@link #canAnalyze(VirtualFile, FileType, Module)}.",
    "Reference": "It will also exclude files that cannot be analysed with {@link #canAnalyze(VirtualFile, Module)}.",
    "HebCup": "It will also exclude files that cannot be analysed with {@link #canAnalyze(VirtualFile, FileType, Module)}."
}
{
    "Origin": "If the name is a single identifier, then this can be\n      reclassified as an {@link ASTVariableReference}",
    "Reference": "If the name is a single identifier, then this can be\n      reclassified as an {@link ASTVariableAccess}",
    "HebCup": "If the name is a single identifier , then this can be reclassified as an {@link ASTVariableAccess}"
}
{
    "Origin": "Set Account Type.",
    "Reference": "Set Kontenart.",
    "HebCup": "Set Account Type."
}
{
    "Origin": "Returns the object with the settings used for calls to labelAudio.",
    "Reference": "Returns the object with the settings used for calls to getEvaluation.",
    "HebCup": "Returns the object with the settings used for calls to GetEvaluation."
}
{
    "Origin": "This is a convenience method for {@link #electPreferredLeaders(Collection, ElectPreferredLeadersOptions)}\nwith default options.",
    "Reference": "This is a convenience method for {@link #electLeaders(ElectionType, Set, ElectLeadersOptions)}\nwith preferred election type and default options.",
    "HebCup": "This is a convenience method for {@link #electPreferredLeaders(Collection, ElectPreferredLeadersOptions)}\nwith default options."
}
{
    "Origin": "Returns the value of the specific parameter, or default value defined in the {@code info} if\nthis Params doesn't contain the param.",
    "Reference": "Returns the value of the specific parameter, or default value defined in the {@code info} if\nthis Params doesn't have a value set for the parameter.",
    "HebCup": "Returns the value of the specific parameter, or Value Class defined in the {@code info} if this Params doesn't contain the param."
}
{
    "Origin": "Create an instance of {@link JAXBElement }{@code <}{@link CTMarkupRange }{@code >}}",
    "Reference": "Create an instance of {@link JAXBElement }{@code <}{@link CTMoveFromRangeEnd }{@code >}}",
    "HebCup": "Create an instance of {@link JAXBElement} {@code <} {@link CTMoveFromRangeEnd} {@code >}}"
}
{
    "Origin": "Is the value with this qualifier less than the length of any of the arrays?",
    "Reference": "Is the value with this qualifier less than the length of any of the sequences?",
    "HebCup": "Is the value with this qualifier less than the length of any of the sequences?"
}
{
    "Origin": "Clears the given persisted files stored in {@link #mPersistedFiles}.",
    "Reference": "Clears the given persisted files stored in {@link #mPersistedFilesInfo}.",
    "HebCup": "Clears the given persisted files stored in {@link#mPersistedFilesInfo}."
}
{
    "Origin": "Compares this {@code LocalDateTime} to another date-time.",
    "Reference": "Compares this date-time to another date-time.",
    "HebCup": "Compares this {@code LocalinstanceofTime} to another instanceof-time."
}
{
    "Origin": "This returns a trade based on the specified trade date.",
    "Reference": "This returns a trade based on the specified trade date and upfront fee.",
    "HebCup": "This returns a trade based on the specified trade date."
}
{
    "Origin": "Returns a new Task that, when this task completes\nnormally, is executed using the supplied Scheduler, with this\ntask's result as the argument to the supplied function.",
    "Reference": "Returns a new Task that, when this task completes\nnormally, is executed using the supplied Executor, with this\ntask's result as the argument to the supplied function.",
    "HebCup": "Returns a new Task that , when this task completes normally , is executed using the supplied Executor , with this task's result as the argument to the supplied function."
}
{
    "Origin": "This parses the specified byte source to determine if it appears to be FpML.",
    "Reference": "This checks the first part of the byte source to see if it appears to be FpML.",
    "HebCup": "This parses the specified byte 0 to determine if it appears to be FpML."
}
{
    "Origin": "The {@link KeyCreateOptions#isEnabled()} enabled} field\nis set to true by Azure Key Vault, if not specified.",
    "Reference": "The {@link CreateKeyOptions#isEnabled()} enabled} field\nis set to true by Azure Key Vault, if not specified.",
    "HebCup": "The {@link CreateKeyOptions#isEnabled ()} enabled} field is set to true by Azure Key Vault , if not specified."
}
{
    "Origin": "See Immutable List Static Factory Methods for details.",
    "Reference": "See Unmodifiable Lists for details.",
    "HebCup": "See Unmodifiable List Static Factory Methods for details."
}
{
    "Origin": "Helper to parse the imported file into an {@link ImportedGradeWrapper} depending on its type",
    "Reference": "Helper to parse the imported file into an {@link ImportedSpreadsheetWrapper} depending on its type",
    "HebCup": "Helper to parse the imported file into an {@link ImportedSpreadsheetWrapper} depending on its type"
}
{
    "Origin": "Fixes a bug with the Swing JFileChooser: if you entered a new\nfilename in the save dialog and press Enter the \nmethod returns  instead of the filename.",
    "Reference": "Swing JFileChooser: if you entered a new filename in the save dialog and\npress Enter the  method returns\n instead of the filename.",
    "HebCup": "Fixes a bug with the Swing JFileChooser: if you entered a new\nfilename in the save dialog and press Enter the \nmethod returns  instead of the filename."
}
{
    "Origin": "Returns the operation enum value.",
    "Reference": "Returns the operation constant name.",
    "HebCup": "Returns the Operation Constant."
}
{
    "Origin": "Saves all dictionary entries that appeared > threshold times Note: feature\nindices are changed to contiguous values starting at 0.",
    "Reference": "Saves all dictionary entries that appeared {@literal >} threshold times Note: feature\nindices are changed to contiguous values starting at 0.",
    "HebCup": "Saves all dictionary entries that appeared > threshold times Note: feature\nindices are changed to contiguous values starting at 0."
}
{
    "Origin": "Currently, SONA supports Flat, VXLAN and VLAN modes.",
    "Reference": "Currently, SONA supports Flat, VXLAN, GRE and VLAN modes.",
    "HebCup": "Currently , SONA supports Flat , Tunnel and VLAN modes."
}
{
    "Origin": "Create new instance of {@link InstanceManagerStore}.",
    "Reference": "Create new instance of {@link InjectionManagerStore}.",
    "HebCup": "Create new instance of {@link InjectionManagerStore}."
}
{
    "Origin": "Sets dependency options.",
    "Reference": "Sets the dependency management options.",
    "HebCup": "Sets dependency dependencyOptions."
}
{
    "Origin": "Setter for comment format.",
    "Reference": "Setter for comment pattern.",
    "HebCup": "Setter for comment Pattern."
}
{
    "Origin": "Sets the entity attribute of this User to\nentity",
    "Reference": "Sets the entity attribute of this User's element\nto entity",
    "HebCup": "Sets the entity attribute of this userElement to entity"
}
{
    "Origin": "More specifically, the root modules are resolved as if by calling\n{@code resolveRequires}.",
    "Reference": "More specifically, the root modules are resolved as if by calling\n{@code resolve}.",
    "HebCup": "More specifically , the root modules are resolved as if by calling {@code resolve}."
}
{
    "Origin": "Get the set of all custom providers registered for the given service provider contract\nin the underlying {@link InstanceManager instance manager} container.",
    "Reference": "Get the set of all custom providers registered for the given service provider contract\nin the underlying {@link InjectionManager injection manager} container.",
    "HebCup": "Get the set of all custom providers registered for the given service provider contract in the underlying {@link InjectionManager instance manager} container."
}
{
    "Origin": "Generates the form to post to the dialog frame.",
    "Reference": "Generates the dialog parameters.",
    "HebCup": "Generates the Parameters to post to the dialog frame."
}
{
    "Origin": "Returns  If the\n is greater than the .",
    "Reference": "Returns  If the\n is greater than the  and \n is not used.",
    "HebCup": "Returns  If the\n is greater than the ."
}
{
    "Origin": "After calling this method, call\n{@link #configure(int, int, int)} to start using the new sample rate.",
    "Reference": "After calling this method, call {@link\n#configure(AudioFormat)} to start using the new sample rate.",
    "HebCup": "After calling this method, call\n{@link #configure(int, int, int)} to start using the new sample rate."
}
{
    "Origin": "Move this TouchDisplay to a new x-y position and bounds.",
    "Reference": "Move this TouchDisplay to a new x-y position.",
    "HebCup": "Move this TouchDisplay to a new x-y position and bounds."
}
{
    "Origin": "Triangulate two view using the Discrete Linear Transform (DLT)",
    "Reference": "Triangulate two view using the Discrete Linear Transform (DLT) with an uncalibrated camera.",
    "HebCup": "TriangulateUncalibrated two view using the Discrete Linear Transform (DLT)"
}
{
    "Origin": "Split the given tree based on a split point such that the\nterminals leading up to the split point are in the left returned\ntree and those following the are in the right returned tree.",
    "Reference": "Split the given tree based on a split point such that the\nterminals leading up to the split point are in the left returned\ntree and those following the are in the left returned tree.",
    "HebCup": "Split the given tree based on a split point such that the\nterminals leading up to the split point are in the left returned\ntree and those following the are in the right returned tree."
}
{
    "Origin": "Gets the full path from a full filename, which is the prefix + path,\nand also excluding the final directory separator.",
    "Reference": "Gets the full path from a full fileName, which is the prefix + path,\nand also excluding the final directory separator.",
    "HebCup": "Gets the full path from a full fileName , which is the prefix + path , and also excluding the final directory separator."
}
{
    "Origin": "As the name\nimplies,  indicates whether the train or cart is in the process\nof leaving the track.",
    "Reference": "As the name\nimplies, {@code trainLeaving} indicates whether the train or cart is in the process\nof leaving the track.",
    "HebCup": "As the name\nimplies,  indicates whether the train or cart is in the process\nof leaving the track."
}
{
    "Origin": "Returns a string representation of this object; useful for testing and debugging.",
    "Reference": "Returns a string representation of this object.",
    "HebCup": "Returns a * representation of this object; useful for testing and debugging."
}
{
    "Origin": "When the context is being reinitialized, this call blocks until the reinitialization succeeds\nor fails.",
    "Reference": "When the context is being reinitialized, this call returns an empty optional.",
    "HebCup": "When the context is being reinitialized, this call blocks until the reinitialization succeeds\nor fails."
}
{
    "Origin": "If the property has not been set, or if its\nvalue is negative, set the timeout length to the default.",
    "Reference": "If the property has not been set, or if its\nvalue is negative, set the timeout length to the specified default.",
    "HebCup": "If the property has not been set, or if its value is negative, set the timeout length to the def."
}
{
    "Origin": "Access Control Using AWS Identity and Access Management (IAM) \n.",
    "Reference": "For more information, see Access Control Using AWS Identity and Access Management (IAM).",
    "HebCup": "Access Control Using AWS Identity and Access Management (IAM) \n."
}
{
    "Origin": "Verify that a named subquery exists for each INCLUDE.",
    "Reference": "Verify that a named subquery of solution set exists for each INCLUDE.",
    "HebCup": "Verify the a named subquery exists for each INCLUDE."
}
{
    "Origin": "Make a copy of a range of bytes from the passed in data array.",
    "Reference": "Make a copy of a range of bytes from the passed in array.",
    "HebCup": "Make a copy of a range of bytes from the passed in original array."
}
{
    "Origin": "Returns {@code true} if there is a value in the current thread's copy of\nthis thread-local variable, even if that values is {@code null}.",
    "Reference": "Returns {@code true} if there is a value in the current strand's copy of\nthis thread-local variable, even if that values is {@code null}.",
    "HebCup": "Returns {@code true} if there is a value in the current Strand's copy of this thread-local variable, even if that values is {@code null}."
}
{
    "Origin": "Applications should use the {@code with(WithAdjuster)} method on the\ndate-time object to make the adjustment passing this as the argument.",
    "Reference": "Applications should use the {@code with(TemporalAdjuster)} method on the\ndate-time object to make the adjustment passing this as the argument.",
    "HebCup": "Applications should use the {@code with (WithAdjuster)} method on the date-time object to make the Into passing this as the argument."
}
{
    "Origin": "Glacier provides you a unique archive ID, an opaque string of\ncharacters.",
    "Reference": "Amazon Glacier\nprovides you a unique archive ID, an opaque string of characters.",
    "HebCup": "Glacier provides you a unique archive ID, an opaque string of\ncharacters."
}
{
    "Origin": "Set Zu ber.",
    "Reference": "Set Zu berechn.",
    "HebCup": "Set Zu ber."
}
{
    "Origin": "This method must only be used for type references\nwhose sort is {@link #EXCEPTION_PARAMETER EXCEPTION_PARAMETER} .",
    "Reference": "This method must\nonly be used for type references whose sort is {@link #EXCEPTION_PARAMETER} .",
    "HebCup": "This method must only be used for type references\nwhose sort is {@link #EXCEPTION_PARAMETER EXCEPTION_PARAMETER} ."
}
{
    "Origin": "See {@link ClientsClassDefinition#getWhitelistedProperties()}",
    "Reference": "See {@link ClientsClassDefinition#getIncludedProperties()}",
    "HebCup": "See {@link ClientsClassDefinition#getincludedProperties()}"
}
{
    "Origin": "Ensures that the quorum is present if the quorum is configured and the operation service is quorum aware.",
    "Reference": "Ensures that there is no split brain if the split brain protection is configured and the operation\nservice is split brain protection aware.",
    "HebCup": "Ensures that the SplitBrainProtection is present if the SplitBrainProtection is configured and the operation service is SplitBrainProtection aware."
}
{
    "Origin": "Sets the {@link RetryPolicy} that is used when each request is sent.",
    "Reference": "Sets the {@link HttpPipelinePolicy} that is used when each request is sent.",
    "HebCup": "Sets the {@link HttpPipelinePolicy} that is used when each request is sent."
}
{
    "Origin": "Provides the location to dockerfile",
    "Reference": "Provides the location to devfile yaml file",
    "HebCup": "Provides the location to devfileFile"
}
{
    "Origin": "For a split parent package this will include enriching with siblings, if checkForSplitSiblings is true\nin which case the enriched (split) binding will be returned.",
    "Reference": "For a split parent package this will include potentially enriching with siblings,\nin which case the enriched (split) binding will be returned.",
    "HebCup": "For a split parent package this will include enriching with siblings, if checkForSplitSiblings is true\nin which case the enriched (split) binding will be returned."
}
{
    "Origin": "Gets all of the {@link AlertDefinition}s that exist on the path for\n{@link Components#AMBARI_SERVER}.",
    "Reference": "Gets all of the {@link AlertDefinition}s that exist on the path for\n{@link RootComponent#AMBARI_SERVER}.",
    "HebCup": "Gets all of the {@link AlertDefinition}s that exist on the path for {@link RootComponent#AMBARI_SERVER}."
}
{
    "Origin": "Glacier, you first initiate a job, and after the job completes, you\ndownload the data.",
    "Reference": "To retrieve an archive or retrieve a vault inventory from Amazon Glacier,\nyou first initiate a job, and after the job completes, you download the\ndata.",
    "HebCup": "Glacier, you first initiate a job, and after the job completes, you\ndownload the data."
}
{
    "Origin": "derive secret key by PBKDF2 algorithm (1000 iterations of SHA256)",
    "Reference": "Derive secret key by PBKDF2 algorithm (1000 iterations of SHA256)",
    "HebCup": "derive secret key by PBKDF2 algorithm (1000 iterations of SHA256)"
}
{
    "Origin": "Convert statistics object into JSONObject.",
    "Reference": "Convert statistics object into JSON.",
    "HebCup": "Convert statistics object into ObjectMapper."
}
{
    "Origin": "NOTE:This operation is eventually consistent.",
    "Reference": "This operation is eventually consistent.",
    "HebCup": "NOTE:This operation is eventually consistent."
}
{
    "Origin": "Gets a Vector pointing in the direction that this Location is facing",
    "Reference": "Gets a unit-vector pointing in the direction that this Location is\nfacing.",
    "HebCup": "Gets a Vector pointing in the direction that this Location is facing"
}
{
    "Origin": "or throws a {@link com.liferay.so.NoSuchMemberRequestException} if it could not be found.",
    "Reference": "or throws a {@link NoSuchMemberRequestException} if it could not be found.",
    "HebCup": "or throws a {@link com.liferay.so.NoSuchMemberRequestException} if it could not be found."
}
{
    "Origin": "Given a bunch of NodeRefs, create SimpleFeatures from the results.",
    "Reference": "Given a bunch of NodeRefs, create Features from the results.",
    "HebCup": "Given a bunch of NodeRefs , create Features from the results."
}
{
    "Origin": "Get Import Account.",
    "Reference": "Get Import - Kontendefinition.",
    "HebCup": "Get Import Account."
}
{
    "Origin": "For adding classpath elements that are not normally on the classpath in the Java version: svm\njars, truffle jars etc.",
    "Reference": "For adding classpath elements that are only on the classpath in the context of native-image\nbuilding.",
    "HebCup": "For adding classpath elements that are not normally on the classpath in the Java version: svm\njars, truffle jars etc."
}
{
    "Origin": "Create a GeoCircle of the right kind given the specified bounds.",
    "Reference": "Create a GeoCircle from a center and a cutoff angle.",
    "HebCup": "Create a GeoCircle of the right kind given the specified bounds."
}
{
    "Origin": "Set the nodeType.",
    "Reference": "Set the newType.",
    "HebCup": "Set the newType."
}
{
    "Origin": "Sets a new value by changing the offset and docID.",
    "Reference": "Sets a new value by changing the offset.",
    "HebCup": "Sets a new Offset by changing the offset and docID."
}
{
    "Origin": "The MD5 hash of the file.",
    "Reference": "The hash of the file.",
    "HebCup": "The ContentHash hash of the file."
}
{
    "Origin": "Creates a list of default files to check for credentials.",
    "Reference": "Creates a list of files to check for credentials.",
    "HebCup": "Creates a list of files to check for credentials."
}
{
    "Origin": "Sets each pixel in the output image to sgn*log( 1 + sgn*input(x,y)) of the input image.",
    "Reference": "Sets each pixel in the output image to sgn*log( val + sgn*input(x,y)) of the input image.",
    "HebCup": "Sets each pixel in the output image to sgn*log( 1 + sgn*input(x,y)) of the input image."
}
{
    "Origin": "Returns a string representation of this object; useful for testing and debugging.",
    "Reference": "Returns a string representation of this object.",
    "HebCup": "Returns a string representation of this object; useful for testing and debugging."
}
{
    "Origin": "The entries in the file are assumed to be the\n    fully-qualified binary names of provider classes.",
    "Reference": "The entries in the file are assumed to be the fully-qualified\n    class names of provider classes.",
    "HebCup": "The entries in the file are assumed to be the\n    fully-qualified binary names of provider classes."
}
{
    "Origin": "The key for a max value, or null if everything is NaN (no max).",
    "Reference": "The key for a max value; null if empty or everything is NaN (no max).",
    "HebCup": "The key for a max value, or null if everything is NaN (no max)."
}
{
    "Origin": "Gets the editor component generator for this Column.",
    "Reference": "Gets the grid that this column belongs to.",
    "HebCup": "Gets the Grid for this Column."
}
{
    "Origin": "Whenever a minion with Deathrattle is summoned, gain +1/+1",
    "Reference": "Whenever a minion with Deathrattle is summoned, gain +1 Attack",
    "HebCup": "Whenever a minion with Deathrattle is summoned, gain +1/+1"
}
{
    "Origin": "Gets the Ibor index.",
    "Reference": "Gets the name of the volatilities.",
    "HebCup": "Gets the Ibor Caplet Floorlet Volatilities Name."
}
{
    "Origin": "Obtains an instance from the specified unique name.",
    "Reference": "Obtains an instance from the specified name.",
    "HebCup": "Obtains an instance from the specified name."
}
{
    "Origin": "Returns a {@link Date} representing the date of the last checkpoint before the given block height, for example, normally\nyou would want to know the checkpoint before the last block the wallet had seen.",
    "Reference": "Returns a {@link StoredBlock} representing the last checkpoint before the given block height, for example, normally\nyou would want to know the checkpoint before the last block the wallet had seen.",
    "HebCup": "Returns a {@link StoredBlock} representing the StoredBlock of the last checkpoint before the given block height , for example , normally you would want to know the checkpoint before the last block the wallet had seen."
}
{
    "Origin": "Deletes the specified variable from the configuration.",
    "Reference": "Deletes the specified variable from the CONFIGURATION.",
    "HebCup": "Deletes the specified variable from the CONFIGURATION."
}
{
    "Origin": "Configures SSL or TLS of the default {@link VirtualHost} from the specified {@code keyManagerFactory}\nand {@code tlsCustomizer}.",
    "Reference": "Configures SSL or TLS of the {@link Server} from the specified {@code keyManagerFactory}\nand {@code tlsCustomizer}.",
    "HebCup": "Configures SSL or TLS of the default {@link virtualHost} from the specified {@code keyManagerFactory} and {@code tlsCustomizer}."
}
{
    "Origin": "If it fails, an exception is thrown and the read lock will not be locked.",
    "Reference": "If the reinitialization fails, an exception is thrown.",
    "HebCup": "If it fails, an exception is thrown and the Resource To will not be locked."
}
{
    "Origin": "Returns true if the specified String name, is found within JsonArray checks.",
    "Reference": "Returns true if the expectedName, is found within JsonArray checks.",
    "HebCup": "Returns true if the specified String expectedName , is found within JsonArray checks."
}
{
    "Origin": "Create a new {@link ICrypter} for the given context.",
    "Reference": "Create a new {@link ICrypter}.",
    "HebCup": "Create a new {@link ICrypter} for the given context."
}
{
    "Origin": "Produces a Collapsed SemanticGraph with no extras.",
    "Reference": "Produces a Collapsed SemanticGraph.",
    "HebCup": "Produces a Collapsed SemanticGraph with no extras."
}
{
    "Origin": "WorkItemLifecycleEvent} and calls the {@link #publish(WorkItemLifecycleEvent)} method",
    "Reference": "WorkItemLifecycleEvent} and calls the {@link #publish(IWorkItemLifecycleEvent)} method",
    "HebCup": "IWorkItemLifecycleEvent} and calls the {@link#publish (WorkItemLifecycleEvent)} method"
}
{
    "Origin": "Gets the {@link Value.Mutable} for the {@link Keys#LLAMA_VARIANT llama variant}.",
    "Reference": "Gets the {@link Value.Mutable} for the {@link LlamaType} of this\n{@link Llama}.",
    "HebCup": "Gets the {@link Value.Mutable} for the {@link Keys#LLAMA_VARIANT Llama Type}."
}
{
    "Origin": "Set a new {@link JacksonResourceProvider} to this builder, dedicated to provide an {@link ObjectMapper} for\nserialization and deserialization of data.",
    "Reference": "Set a new {@link JacksonResources} to this builder, dedicated to provide an {@link ObjectMapper} for\nserialization and deserialization of data.",
    "HebCup": "Set a new {@link JacksonResources} to this builder , dedicated to provide an {@link ObjectMapper} for serialization and deserialization of data."
}
{
    "Origin": "Lists a feedback entry with a specified `feedback_id`.",
    "Reference": "Gets a feedback entry with a specified `feedback_id`.",
    "HebCup": "Lists a feedback entry with a specified `feedback_id`."
}
{
    "Origin": "Adds an export.",
    "Reference": "Sets module opens.",
    "HebCup": "Adds an this."
}
{
    "Origin": "If the new address is {@code null}, a pending flight is cancelled and an\nongoing handshake is failed.",
    "Reference": "If the new address is {@code null}, an ongoing handshake is failed.",
    "HebCup": "If the new address is {@code null}, a pending flight is cancelled and an\nongoing handshake is failed."
}
{
    "Origin": "Binds the specified {@link Service} at the specified path pattern.",
    "Reference": "Binds the specified {@link HttpService} at the specified path pattern.",
    "HebCup": "Binds the specified {@link HttpService} at the specified path pattern."
}
{
    "Origin": "Maps all index descriptors according to {@link #indexReference(IndexDescriptor2)}.",
    "Reference": "Maps all index descriptors according to {@link #indexReference(IndexDescriptor)}.",
    "HebCup": "Maps all index descriptors according to {@link #indexReference(IndexDescriptor)}."
}
{
    "Origin": "Queries this contact source for the given queryString.",
    "Reference": "Creates query for the given queryString.",
    "HebCup": "Queries this Contact Query for the given queryString."
}
{
    "Origin": "Get the next value.",
    "Reference": "Returns the next value from the input.",
    "HebCup": "Get the readLiteral value."
}
{
    "Origin": "Normalizes the specified URL and creates a new instance of this class.",
    "Reference": "Normalizes the specified URI and creates a new instance of this class.",
    "HebCup": "Normalizes the specified uri and creates a new instance of this class."
}
{
    "Origin": "Makes the given visitor visit all of the instructions in this list.",
    "Reference": "Makes the given visitor visit all the instructions in this list.",
    "HebCup": "Makes the given visitor visit all of the instructions in this list."
}
{
    "Origin": "Removes the trace associated with this CallableStatement\nfrom the Connection that created it.",
    "Reference": "Removes the trace associated with this CallableStatement from the",
    "HebCup": "Removes the trace associated with this CallableStatement\nfrom the Connection that created it."
}
{
    "Origin": "If you actual latency will be lower than \"desirableOperationLatency\",\nwill calculate the difference and use it as {@link BulkheadConfig}.maxWaitTime",
    "Reference": "If you actual latency will be lower than \"slowCallDurationThreshold\",\nwill calculate the difference and use it as {@link BulkheadConfig}.maxWaitTime",
    "HebCup": "If you actual latency will be lower than ``slowCallDurationThreshold``, will calculate the difference and use it as {@link BulkheadConfig}.maxWaitTime"
}
{
    "Origin": "Provide the implementation of the PlatformDecoder for the current platform using the provided",
    "Reference": "Provide the implementation of the PlatformDecoder for the current platform using the\nprovided PoolFactory",
    "HebCup": "Provide the implementation of the PlatformDecoder for the current platform using the provided"
}
{
    "Origin": "add partition of buffer to consume",
    "Reference": "add whole buffer to consume",
    "HebCup": "add partition of QueueBuffer to consume"
}
{
    "Origin": "Rule a subsumes rule b, if a subsumes b\nAND\na has got least the same expected predictive accuracy as b.",
    "Reference": "The defintion\nof subsumption is: Rule a subsumes rule b, if a subsumes b AND a has got\nleast the same expected predictive accuracy as b.",
    "HebCup": "Rule a subsumes rule b, if a subsumes b\nAND\na has got least the same expected predictive accuracy as b."
}
{
    "Origin": "Do nothing if\n{@link BaseConfiguration#nocomment} is set to true.",
    "Reference": "Do nothing if\n{@link BaseOptions#noComment} is set to true.",
    "HebCup": "Do nothing if {@link Baseoptions.no#nocomment} is set to true."
}
{
    "Origin": "Saves all writable accounts and the default account, which can later be obtained\nwith {@link #getDefaultAccount}.",
    "Reference": "Saves the default account, which can later be obtained with {@link #getOnlyOrDefaultAccount}.",
    "HebCup": "Saves all writable Account and the default account , which can later be obtained with {@link#getDefaultAccount}."
}
{
    "Origin": "Returns the full set of traversal parameters specified on the command line, including parsed intervals without\nmerging intervals specified by the user on the command line.",
    "Reference": "Returns the full set of traversal intervals specified on the command line, including parsed intervals without\nmerging intervals specified by the user on the command line.",
    "HebCup": "Returns the full set of Intervals Without Merging specified on the command line, including parsed intervals without merging intervals specified by the user on the command line."
}
{
    "Origin": "Returns a string representation of this object; useful for testing and debugging.",
    "Reference": "Returns a string representation of this object.",
    "HebCup": "Returns a string representation of this object; useful for testing and debugging."
}
{
    "Origin": "Sets {@link HtmlOptions#createOverview} field to true.",
    "Reference": "Sets {@code HtmlOptions.createOverview} field to true.",
    "HebCup": "Sets {@link HtmlOptions#setCreateOverview} field to true."
}
{
    "Origin": "This operation requires the {@code secrets/get} permission.",
    "Reference": "This operation requires the {@code secrets/delete} permission.",
    "HebCup": "This operation requires the {@code secrets/client.beginDelete} permission."
}
{
    "Origin": "Binds a new instance {@link Descriptor} using the information from the Jersey descriptor {@link InstanceBeanDescriptor}.",
    "Reference": "Binds a new instance {@link Binding} using the information from the Jersey descriptor {@link InstanceBinding}.",
    "HebCup": "Binds a new instance {@link Binding} using the information from the Jersey Binding {@link InstanceBeanDescriptor}."
}
{
    "Origin": "The {@link MessagingExceptionHandler} configured on {@link MessageProcessorChain} or {@link FlowConstruct} will be used to\nhandle any errors that occur.",
    "Reference": "The {@link FlowExceptionHandler} configured on {@link MessageProcessorChain} or {@link FlowConstruct} will be used to handle\nany errors that occur.",
    "HebCup": "The {@link FlowExceptionHandler} configured on {@link MessageProcessorChain} or {@link FlowConstruct} will be used to handle any errors that occur."
}
{
    "Origin": "Adds a fatal exception to the message set and throws\nthe unit as a PhaseFailedException.",
    "Reference": "Adds an error to the message set and throws CompilationFailedException.",
    "HebCup": "Adds a fatal exception to the message set and throws\nthe unit as a PhaseFailedException."
}
{
    "Origin": "If the option to use a central repository has been selected, does not\nindicate the central repository is configured for use.",
    "Reference": "If the option to use a central repository has been selected, does not\nindicate the central repository is configured for use simply that the\ncheckbox allowing configuration is checked on the options panel.",
    "HebCup": "If the option to allowUseOf a central repository has been selected , does not indicate the central repository is configured for use."
}
{
    "Origin": "Report the ending barline.",
    "Reference": "Report the ending PartBarline.",
    "HebCup": "Report the ending PartBarline."
}
{
    "Origin": "Add a series for a X-Y type chart using Lists with error bars",
    "Reference": "Add a series for a X-Y type chart using Lists",
    "HebCup": "Add a switch for a X-Y type chart using Lists with error bars"
}
{
    "Origin": "Returns a string representation of this object; useful for testing and debugging.",
    "Reference": "Returns a string representation of this object.",
    "HebCup": "Returns a string representation of this object; useful for testing and debugging."
}
{
    "Origin": "Get the hex color for the primary displayed usernote of a user",
    "Reference": "Get the color for the primary displayed usernote of a user",
    "HebCup": "Get the hex color for the primary displayed usernote of a user"
}
{
    "Origin": "Rotate this vector the specified radians about the given rotation axis.",
    "Reference": "Rotate this vector the specified radians around the given rotation axis.",
    "HebCup": "Rotate this vector the specified radians Axis the given rotation axis."
}
{
    "Origin": "Does nothing if\nthe given node is currently not visible or target is .",
    "Reference": "Does nothing if\nthe given node is currently not visible or target is {@code null}.",
    "HebCup": "Does nothing if\nthe given node is currently not visible or target is ."
}
{
    "Origin": "Tests that apply works.",
    "Reference": "See issue\n1683.",
    "HebCup": "Tests that apply workso ["
}
{
    "Origin": "Returns the value of the node as a module identifier, or null if the node is undefined.",
    "Reference": "Returns the value of the node as a module identifier.",
    "HebCup": "Returns the value.asString of the node as a module identifier , or null if the node is undefined."
}
{
    "Origin": "Returns a lightweight, low-level preceding-sibling axis iterator.",
    "Reference": "Returns a light-weight, low-level preceding-sibling axis iterator.",
    "HebCup": "Returns a lightweight, low-level preceding-SiblingIter axis iterator."
}
{
    "Origin": "Testing the normalize(Vector) and normalizeEquals(Vector) methods of the VMath class.",
    "Reference": "Testing the normalizeVector) and normalizeEquals(Vector) methods of the\n{@link VMath} class.",
    "HebCup": "Testing the normalize(Vector) and normalizeEquals(Vector) methods of the VMath class."
}
{
    "Origin": "Adds a 'followingUser' type notification with the specified request json object.",
    "Reference": "Adds a 'following - user' type notification with the specified request json object.",
    "HebCup": "Adds a 'following_user' type notification with the specified request json object."
}
{
    "Origin": "Turn a toX of Either3 into a single Either with Lists of values.",
    "Reference": "Turn an IterableX of Either3 into a single Either with Lists of values.",
    "HebCup": "Turn a toSeq of Either3 into a single Either with Lists of values."
}
{
    "Origin": "Tests {@link Array#from(Value...)}.",
    "Reference": "Tests {@link XQArray#from(Value...)}.",
    "HebCup": "Tests {@link XQArray#from (Value...)}."
}
{
    "Origin": "Ingest a Matrix into an H2O Frame.",
    "Reference": "Ingest a Mahout Matrix into an H2O DRM.",
    "HebCup": "Ingest a Matrix into an H2O Frame."
}
{
    "Origin": "Returns {@link List} of collapsed {@link AccordionPane}s",
    "Reference": "Asks {@link WebAccordion} to collapse {@link AccordionPane}s with the specified identifiers.",
    "HebCup": "Returns {@link List} of collapsed {@link String}s"
}
{
    "Origin": "Same as {@link #awaitResult(long, TimeUnit)},\nbut throw InterruptedException and TimeoutException as an OperationCancellation.",
    "Reference": "Same as {@link #awaitResult(long, TimeUnit)},\nbut throw InterruptedException as an OperationCancellation.",
    "HebCup": "Same as {@link #awaitResult(long, TimeUnit)},\nbut throw InterruptedException and TimeoutException as an OperationCancellation."
}
{
    "Origin": "shows full-screen preview of the passed media",
    "Reference": "show full-screen preview of the item and the passed position",
    "HebCup": "shows full-screen preview of the passed item"
}
{
    "Origin": "Handles a netty RPC callable with logging.",
    "Reference": "Handles a streaming RPC callable with logging.",
    "HebCup": "Handles a Streaming Rpc Callable with logging."
}
{
    "Origin": "Build an HTTP Ok without any content.",
    "Reference": "Build an HTTP No content.",
    "HebCup": "Build an HTTP noContent without any content."
}
{
    "Origin": "Sets the quorum name for operations.",
    "Reference": "Sets the split brain protection name for operations.",
    "HebCup": "Sets the split Brain Protection Name for operations."
}
{
    "Origin": "Returns the expression to the left of the \"::\" if it exists and is\nunambiguous.",
    "Reference": "Returns the node to the left of the \"::\".",
    "HebCup": "Returns the Child to the left of the ``::`` if it exists and is unambiguous."
}
{
    "Origin": "Determine type of a store base on a store file name.",
    "Reference": "Determine type of a store base on provided database file.",
    "HebCup": "Determine type of a store base on a store database File."
}
{
    "Origin": "Set name of the Cosmos DB table.",
    "Reference": "Set the resource value.",
    "HebCup": "Set name of the Cosmos DB Resource."
}
{
    "Origin": "Returns prefix {@code byte} for this type.",
    "Reference": "Returns length of this type.",
    "HebCup": "Returns prefix {@code int} for this type."
}
{
    "Origin": "Adds part of another token to the token.",
    "Reference": "Adds the part of a token to the token.",
    "HebCup": "Adds part of another token to the token."
}
{
    "Origin": "and repositoryId = ?.",
    "Reference": "and type = ?.",
    "HebCup": "and type = ?."
}
{
    "Origin": "Generates random trits for a transaction.",
    "Reference": "Generates trits for a hash.",
    "HebCup": "Generates Trits for a transaction."
}
{
    "Origin": "Thread signaled test for {@link PredicateLock#waitForever()}",
    "Reference": "Thread signaled test for {@link PredicateLock#waitForTimeoutOrFail(long)}",
    "HebCup": "Thread signaled test for {@link PredicateLock#waitForTimeoutOrFail ()}"
}
{
    "Origin": "or throws a {@link com.liferay.calendar.NoSuchResourceException} if it could not be found.",
    "Reference": "or throws a {@link NoSuchResourceException} if it could not be found.",
    "HebCup": "or throws a {@link com.liferay.calendar.NoSuchResourceException} if it could not be found."
}
{
    "Origin": "n choose k. Returns 0 if n is less than k.",
    "Reference": "The n choose k. Returns 0 if n is less than k.",
    "HebCup": "n lchoose k. Returns 0 if n is less than k."
}
{
    "Origin": "Show {@link Toast} for exception",
    "Reference": "Show {@link Toast} for throwable",
    "HebCup": "Show {@link Toast} for Throwable"
}
{
    "Origin": "List a range of recording descriptors which match a channel and stream id.",
    "Reference": "List a range of recording descriptors which match a channel URI fragment and stream id.",
    "HebCup": "List a range of recording descriptors which match a channelFragment and stream id."
}
{
    "Origin": "Register the runnable to process the specific pTransformId.",
    "Reference": "Register the runnable to process the specific pTransformId and track its execution time",
    "HebCup": "Register the runnable to process the specific pTransformId."
}
{
    "Origin": "Robust computation of the inverse covariance matrix.",
    "Reference": "Update the cholesky decomposition.",
    "HebCup": "update computation of the inverse covariance matrix."
}
{
    "Origin": "See the\n{@link BlowfishCipher} class-level JavaDoc for more information and why it might be good to provide your own.",
    "Reference": "See the\nclass-level JavaDoc for more information and why it might be good to provide your own.",
    "HebCup": "See the {@link BlowfishCipherService} class-level JavaDoc for more information and why it might be good to provide your own."
}
{
    "Origin": "Get the channel parameter for the cluster log and snapshot replay channel.",
    "Reference": "Set the counter for the current state of the cluster backup.",
    "HebCup": "Get the channel parameter for the cluster log and snapshot state Counter."
}
{
    "Origin": "Reset the leader election throttle.",
    "Reference": "Reset the leader election throttles.",
    "HebCup": "Reset the leader election Throttles."
}
{
    "Origin": "Apply the rotation transformation of the given {@link Quaterniond} to this matrix.",
    "Reference": "Apply the rotation transformation of the given {@link Quaterniondc} to this matrix.",
    "HebCup": "Apply the rotation transformation of the given {@link Quaterniondc} to this matrix."
}
{
    "Origin": "Fetches the configuration settings that match the {@code options}.",
    "Reference": "Fetches the configuration settings that match the {@code selector}.",
    "HebCup": "Fetches the configuration ConfigurationSettings that match the {@code options}."
}
{
    "Origin": "Autodetect a {@link FreeMarkerConfig} object via the ApplicationContext.",
    "Reference": "Autodetect a {@link FreeMarkerConfig} object in the {@code ApplicationContext}.",
    "HebCup": "Autodetect a {@link FreeMarkerConfig} object via the ApplicationContext."
}
{
    "Origin": "Invoked when the txn has been removed from the queue and is starting to execute at a local ExecutionSite",
    "Reference": "Invoked when the txn has been removed from the queue and is starting to execute at a local PartitionExecutor",
    "HebCup": "Invoked when the txn has been removed from the queue_exec and is starting to execute at a local ExecutionSite"
}
{
    "Origin": "Then return all - block to get the trapped water",
    "Reference": "Then return total - blocks to get the trapped water.",
    "HebCup": "Then return total - block to get the trapped water"
}
{
    "Origin": "Delete RADIUS Configuration\n### Functional Description:   Delete existing RADIUS configuration.",
    "Reference": "Delete RADIUS configuration\n### Functional Description:   Delete existing RADIUS configuration.",
    "HebCup": "Delete RADIUS Configuration\n### Functional Description:   Delete existing RADIUS configuration."
}
{
    "Origin": "Check whether the given member is a proxy member of a proxy object.",
    "Reference": "Check whether the given member is a proxy member of a proxy object or is a static proxy member.",
    "HebCup": "Check whether the given member is a proxy member of a proxy object."
}
{
    "Origin": "Returns a string representation of this object; useful for testing and debugging.",
    "Reference": "Returns a string representation of this object.",
    "HebCup": "Returns a string representation of this object; useful for testing and debugging."
}
{
    "Origin": "Get the normalized variation of information (normalized, 0 = equal) NVI = 1\n- NMI_Joint",
    "Reference": "Get the normalized variation of information (normalized, small values are\ngood).",
    "HebCup": "Get the normalized variation of information mutualInformationnormalized, 0 = equal) NVI = 1 - NMI_Joint"
}
{
    "Origin": "Generates a valid document ID for a service, used to index the service in ES.",
    "Reference": "Generates a valid document ID for a API, used to index the API in ES.",
    "HebCup": "Generates a valid document ID for a Api , used to index the Api in ES."
}
{
    "Origin": "Returns the JDBC connection {@link #username} property.",
    "Reference": "Returns the JDBC connection {@link #userName} property.",
    "HebCup": "Returns the JDBC connection {@link#userName} property."
}
{
    "Origin": "When the insertion is complete, the\n{@code ticker} will be {@link CountUpLatch#countUp() incremented} by 1.",
    "Reference": "When the insertion is complete, the\n{@code tracker} will be {@link CountUpLatch#countUp() incremented} by 1.",
    "HebCup": "When the insertion is complete , the {@code tracker} will be {@link CountUpLatch#countUp () incremented} by 1."
}
{
    "Origin": "Calculates all distances of atoms within this cell returning those that are within the given cutoff\nas a list of AtomContacts",
    "Reference": "Calculates all distances of atoms within this cell returning those that are within the given cutoff\nas a list of Contacts containing the indices of the pair and the calculated distance.",
    "HebCup": "Calculates all distances of atoms within this cell returning those that are within the given cutoff as a list of Contacts"
}
{
    "Origin": "Converts milliseconds to a string containing hours and minutes",
    "Reference": "Converts milliseconds to a string containing hours and minutes or minutes and seconds",
    "HebCup": "Converts milliseconds to a string containing hours and firstPartBase"
}
{
    "Origin": "WebPage on a job-by-job basis and thier values indicative of what actions\nshould be associated with a WebPage.",
    "Reference": "They are assigned to a WebPage on a job-by-job basis and thier values indicative of what actions should be associated with a WebPage.",
    "HebCup": "WebPage on a job-by-job basis and thier values indicative of what actions\nshould be associated with a WebPage."
}
{
    "Origin": "Gets the price that was traded, in decimal form.",
    "Reference": "Gets the price that was traded, together with the trade date, optional.",
    "HebCup": "Gets the Optional.ofNullable that was traded , in decimal form."
}
{
    "Origin": "Create a TripTimeSubset from a given trip pattern, date and time window.",
    "Reference": "Create a TripTimeSubset from a given trip pattern, bitset of services running, and time window.",
    "HebCup": "Create a TripTimeSubset from a given trip pattern , Set and time window."
}
{
    "Origin": "Availability Zone in the same Region to increase fault tolerance in\nthe event of a service disruption.",
    "Reference": "Zone in the same Region to increase fault tolerance in the event of a\nservice disruption.",
    "HebCup": "Availability Zone in the same Region to increase fault tolerance in\nthe event of a service disruption."
}
{
    "Origin": "RxRatpack.promise(new AsyncService().observe(\"foo\"))\n    ).getValue();",
    "Reference": "RxRatpack.promiseAll(new AsyncService().observe(\"foo\"))\n    ).getValue();",
    "HebCup": "RxRatpack.promiseAll(new AsyncService().observe(``foo``))).getValue();"
}
{
    "Origin": "Returns all the push notifications devices where platform = ?.",
    "Reference": "Returns all the push notifications devices where userId = any ?",
    "HebCup": "Returns all the push notifications devices where U_P = ?."
}
{
    "Origin": "| Then we can use this range we retrieve levels from the map.",
    "Reference": "| Then this range can be used to retrieve column values from the map.",
    "HebCup": "| Then we can use this range we retrieve cols from the map."
}
{
    "Origin": "Gets the user's avatar URL, if present and in a supported format.",
    "Reference": "Gets the user's avatar URL, if present.",
    "HebCup": "Gets the user's avatar URL, if present and in a supported format."
}
{
    "Origin": "Return  if {@link ITokenTypeAttribute#TF_COMMON_WORD} is set.",
    "Reference": "Return  if {@link ITokenizer#TF_COMMON_WORD} is set.",
    "HebCup": "Return if {@link ITokenizer#TF_COMMON_WORD} is set."
}
{
    "Origin": "Calls {@link #reset()} and releases any held DRM resources.",
    "Reference": "Calls {@link #reset()} and releases any owned {@link DrmSession} references.",
    "HebCup": "Calls {@link #reset()} and releases any held DRM References."
}
{
    "Origin": "Removes given PacketExtension from the list of child packet\nextensions.",
    "Reference": "Removes given ExtensionElement from the list of child packet\nextensions.",
    "HebCup": "Removes given ExtensionElement from the list of child packet extensions."
}
{
    "Origin": "Prepare task event for execution on agent.",
    "Reference": "Prepare exe params for send REST request on node.",
    "HebCup": "Prepare task event for execution on agent."
}
{
    "Origin": "This method returns an interface that is\nboth \"up\" and supports multicast.",
    "Reference": "This method returns the first interface that\nis both \"up\" and supports multicast.",
    "HebCup": "This method ifs an interface that is both ``up`` and supports multicast."
}
{
    "Origin": "Return true if the given CmsTreeItem or its children is selected.",
    "Reference": "Return true if at least one child of the given tree item is selected.",
    "HebCup": "Return true if the given CmsTreechild or its children is selected."
}
{
    "Origin": "Note that this performs chains\nconstruction but wil not inject {@link MuleContext} or {@link FlowConstruct} or perform any lifecycle.",
    "Reference": "Note that this performs chains\nconstruction but will not inject {@link MuleContext} or perform any lifecycle.",
    "HebCup": "Note that this performs chains\nconstruction but wil not inject {@link MuleContext} or {@link FlowConstruct} or perform any lifecycle."
}
{
    "Origin": "NOTE: Amazon Glacier retains recently completed jobs for a\nperiod before deleting them; however, it eventually removes completed\njobs.",
    "Reference": "Amazon Glacier retains recently completed jobs for a period before\ndeleting them; however, it eventually removes completed jobs.",
    "HebCup": "NOTE: Amazon Glacier retains recently completed jobs for a\nperiod before deleting them; however, it eventually removes completed\njobs."
}
{
    "Origin": "Appends the information about the given handle to {@link #buf buf}.",
    "Reference": "Appends a string representation of the given handle to {@link #stringBuilder}.",
    "HebCup": "Appends the information about the given handle to {@link#stringBuilder stringBuilder}."
}
{
    "Origin": "Handler method converting a Jetty Connection into a Restlet Call.",
    "Reference": "Handler method converting a Jetty HttpChannel into a Restlet Call.",
    "HebCup": "Handler method converting a Jetty Server Connection into a Restlet Call."
}
{
    "Origin": "The timestamp for creation of the synonym.",
    "Reference": "The timestamp for creation of the object.",
    "HebCup": "The timestamp for creation of the synonym."
}
{
    "Origin": "Returns the (unbiased) skew of all the values within a {@link PointSet}\nregion of a {@link Dataset}",
    "Reference": "Returns the (unbiased) kurtosis of all the values within a {@link PointSet}\nregion of a {@link Dataset}",
    "HebCup": "Returns the (unbiased) sample of all the values within a {@link PointSet} region of a {@link Dataset}"
}
{
    "Origin": "remove space for SQL expression and outside parentheses",
    "Reference": "remove space for SQL expression",
    "HebCup": "remove space for SQL expression and outside parentheses"
}
{
    "Origin": "Reads the inbound request headers from the request and sets them on\nthe {@link ServiceRequest}.",
    "Reference": "Reads the inbound request headers from the request and sets them on\nthe {@link ApiRequest}.",
    "HebCup": "Reads the inbound request headers from the request and sets them on the {@link ApiRequest}."
}
{
    "Origin": "Returns the input stream of this message content.",
    "Reference": "Returns the CachedOutputStream of this message content.",
    "HebCup": "Returns the Cached Output Stream of this message content."
}
{
    "Origin": "The value is {@link ArtifactFileMetadata#PLACEHOLDER} if the artifact's metadata is not\nfully captured in {@link #additionalOutputData}.",
    "Reference": "The value is {@link FileArtifactValue#PLACEHOLDER} if the artifact's metadata is not fully\ncaptured in {@link #additionalOutputData}.",
    "HebCup": "The value is {@link FileArtifactValue#PLACEHOLDER} if the artifact's metadata is not fully captured in {@link#additionalOutputData}."
}
{
    "Origin": "Currently, SONA supports Flat, VXLAN and VLAN modes.",
    "Reference": "Currently, SONA supports Flat, VXLAN, GRE and VLAN modes.",
    "HebCup": "Currently , SONA supports Flat , Tunnel and VLAN modes."
}
{
    "Origin": "Returns {@code true} if this module reflectively exports the given\npackage package to the given module.",
    "Reference": "Returns {@code true} if this module reflectively exports or opens given\npackage package to the given module.",
    "HebCup": "Returns {@code true} if this module Open exports the given package package to the given module."
}
{
    "Origin": "Search for package name in the sorted regular expression\nlist, if found return the group name.",
    "Reference": "Search for element name in the sorted regular expression\nlist, if found return the group name.",
    "HebCup": "Search for package name in the sorted regular expression\nlist, if found return the group name."
}
{
    "Origin": "Returns the keyFrames[] array where all the TextureRegions of the animation are stored.",
    "Reference": "Returns the keyframes[] array where all the frames of the animation are stored.",
    "HebCup": "Returns the keyFrames[] array where all the TRegions of the animation are stored."
}
{
    "Origin": "Get the current {@link RequestScope.Instance request scope instance}\nand mark it as suspended.",
    "Reference": "Get the current {@link RequestContext request scope context}\nand mark it as suspended.",
    "HebCup": "Get the current {@link RequestScope.Instance request context} and mark it as suspended."
}
{
    "Origin": "Whether to group the REST resources together.",
    "Reference": "How to group the REST resources together.",
    "HebCup": "Whether to group the REST resources together."
}
{
    "Origin": "Assign available voices to the chords that have no voice assigned yet.",
    "Reference": "Assign available voices to the chords in this measure with no voice assigned yet.",
    "HebCup": "assign Measure available voices to the chords that have no voice assigned yet."
}
{
    "Origin": "NOTE:This operation is eventually consistent.",
    "Reference": "This operation is eventually consistent.",
    "HebCup": "NOTE:This operation is eventually consistent."
}
{
    "Origin": "Ensures server received authentication request.",
    "Reference": "Ensures server received an extensions request.",
    "HebCup": "Ensures server received authentication request."
}
{
    "Origin": "The option will be converted to a  type.",
    "Reference": "The option is a:\n type.",
    "HebCup": "The option will be converted to a  type."
}
{
    "Origin": "Returns true if the given class loader is in the system domain\nin which all permissions are granted.",
    "Reference": "Returns true if the given class loader is the bootstrap class loader\nor the platform class loader.",
    "HebCup": "Returns true if the given class loader is in the system domain\nin which all permissions are granted."
}
{
    "Origin": "IMPORTANT:Because the number of workflow history events for a\nsingle workflow execution might be very large, the result returned\nmight be split up across a number of pages.",
    "Reference": "Because the number of workflow history events for a single\nworkflow execution might be very large, the result returned might be\nsplit up across a number of pages.",
    "HebCup": "IMPORTANT:Because the number of workflow history events for a\nsingle workflow execution might be very large, the result returned\nmight be split up across a number of pages."
}
{
    "Origin": "The default resolution is {@link Resolution#DAY} since Vaadin VERSION.",
    "Reference": "The default resolution is {@link DateResolution#DAY} since Vaadin VERSION.",
    "HebCup": "The default R is {@link R#DAY} since Vaadin VERSION."
}
{
    "Origin": "Returns {@link List} of expanded {@link AccordionPane}s.",
    "Reference": "Asks {@link WebAccordion} to collapse {@link AccordionPane}s with the specified identifiers.",
    "HebCup": "Returns {@link List} of expanded {@link ids}s."
}
{
    "Origin": "Initializes the execution of a task.",
    "Reference": "Initializes the state machine.",
    "HebCup": "Initializes the execution of a task."
}
{
    "Origin": "Removes the specified properties of the {@link NamespacedEntityId}.",
    "Reference": "Removes the specified properties of the {@link MetadataEntity}.",
    "HebCup": "Removes the specified properties of the {@link MetadataEntity}."
}
{
    "Origin": "Called in response to the {@link RContext#destroy} method.",
    "Reference": "Called in response to the {@link RContext#dispose} method.",
    "HebCup": "Called in response to the {@link RContext#Dispose} method."
}
{
    "Origin": "Each class must represent an annotated class.",
    "Reference": "Each class must represent a component class.",
    "HebCup": "Each class must represent an component class."
}
{
    "Origin": "Add the specified {@link Graph} to the cache.",
    "Reference": "Add the specified {@link Store} to the cache.",
    "HebCup": "Add the specified {@link Store} to the cache."
}
{
    "Origin": "High order byte is serverId, next 5\n5 bytes are from timestamp, and low order 2 bytes are 0s.",
    "Reference": "High order 1 byte is serverId, next\n5 bytes are from timestamp, and low order 2 bytes are 0s.",
    "HebCup": "High order byte is serverId, next 5\n5 bytes are from timestamp, and low order 2 bytes are 0s."
}
{
    "Origin": "Common test method to be able to check security from any authentication plugin",
    "Reference": "Common test method to be able to check auth metrics from any authentication plugin",
    "HebCup": "Common test method to be able to check security from any authentication plugin"
}
{
    "Origin": "An example of a valid direction is\n{@code new Vector(1, 0, 1)}.",
    "Reference": "An example of a valid direction is\n{@code new BlockVector3(1, 0, 1)}.",
    "HebCup": "An example of a valid direction is {@code new BlockVector3 (1 , 0 , 1)}."
}
{
    "Origin": "Code snippets for {@link LeaseClientBuilder#buildClient()}.",
    "Reference": "Code snippets for {@link BlobLeaseClientBuilder#buildClient()}.",
    "HebCup": "Code snippets for {@link BlobLeaseClientBuilder#buildClient ()}."
}
{
    "Origin": "Pauses all downloads.",
    "Reference": "Pauses downloads.",
    "HebCup": "Pauses all downloads."
}
{
    "Origin": "Decodes a String representing a number of events into a Vector of LoggingEvents",
    "Reference": "Decodes a String representing a number of events into a",
    "HebCup": "Decodes a String representing a number of events into a Vector of LoggingEvents"
}
{
    "Origin": "Checks whether or not resources in the WEB-INF folder can be access.",
    "Reference": "Checks whether or not resources in the web root folder can be access.",
    "HebCup": "Checks whether or not resources in the Root-INF folder can be access."
}
{
    "Origin": "Get Stringwert.",
    "Reference": "Get Eingaberegister Name.",
    "HebCup": "Get Stringwert."
}
{
    "Origin": "Compare the two queues containing operator/task output by converting them to an array first.",
    "Reference": "Compare the two queues containing operator/task output by converting them to an array first, sort array by\ncomparator.",
    "HebCup": "Compare the two queues containing operator/task output by converting them to an array first."
}
{
    "Origin": "Wrapper for close of ResultSet which removes this\nresult set from being traced then calls close on\nthe original ResultSet.",
    "Reference": "Wrapper for close of ResultSet which removes this result set from being traced then calls close on the original",
    "HebCup": "Wrapper for close of ResultSet which removes this\nresult set from being traced then calls close on\nthe original ResultSet."
}
{
    "Origin": "Sets the Single character used to indicate a row should be ignored when present at the start of a row.",
    "Reference": "Sets the character used to indicate a row should be ignored when present at the start of a row.",
    "HebCup": "Sets the Single character used to indicate a row should be ignored when present at the start of a row."
}
{
    "Origin": "The current thread might\nbe already in any request scope and in that case the scope will be changed to the\nscope defined by the {@link RequestScope.Instance scope instance}.",
    "Reference": "The current thread might\nbe already in any request scope and in that case the scope will be changed to the\nscope defined by the {@link RequestContext scope context}.",
    "HebCup": "The current thread might be already in any request scope and in that case the scope will be changed to the scope defined by the {@link RequestScope.Instance scope RequestContext}."
}
{
    "Origin": "and \"..\" in file names.",
    "Reference": "and \"..\" in {@link File} names.",
    "HebCup": "and \"..\" in file names."
}
{
    "Origin": "Parses the {@code Vector2} represented by the given string according to the format of {@link #toString()}.",
    "Reference": "Sets this {@code Vector2} to the value represented by the specified string according to the format of {@link #toString()}.",
    "HebCup": "Parses the {@code this.set} represented by the given string according to the format of {@link#toString ()}."
}
{
    "Origin": "Returns the function annotations.",
    "Reference": "Returns the function body expression.",
    "HebCup": "Returns the function body."
}
{
    "Origin": "Configure a {@link RSocketOutboundGateway.Command} for RSocket request type.",
    "Reference": "Configure an {@link RSocketOutboundGateway.Command} for the RSocket request type.",
    "HebCup": "Configure a {@link RSocketOutboundGateway.interactionModel} for RSocket request type."
}
{
    "Origin": "Inserts a {@link Set} to the {@link Dataset}",
    "Reference": "Inserts a {@code Set} to the {@link Dataset}.",
    "HebCup": "Inserts a {@link Set} to the {@link Dataset}"
}
{
    "Origin": "Handles: POST /clusters/{clusterName}/servicegroups/{serviceGroupName}/services/{serviceDisplayName}",
    "Reference": "Handles: POST /clusters/{clusterName}/servicegroups/{serviceGroupName}/services/{serviceName}",
    "HebCup": "Handles: POST /clusters/{clusterName}/servicegroups/{serviceGroupName}/services/{serviceName}"
}
{
    "Origin": "Then log4j invokes the {@link #setAppenderName(String)}\nmethod to set the value of {@link #mAppenderName}.",
    "Reference": "Then log4j invokes the {@link #setProcessType(String)}\nmethod to set the value of {@link #mProcessType}.",
    "HebCup": "Then log4j invokes the {@link#setProcessType (String)} method to set the value of {@link#mAppenderName}."
}
{
    "Origin": "Returns the status with the primary key or throws a {@link com.liferay.chat.NoSuchStatusException} if it could not be found.",
    "Reference": "Returns the status with the primary key or throws a {@link NoSuchStatusException} if it could not be found.",
    "HebCup": "Returns the status with the primary key or throws a {@link com.liferay.chat.NoSuchStatusException} if it could not be found."
}
{
    "Origin": "IMPORTANT: After you create a DB parameter group, you should\nwait at least 5 minutes before creating your first DB instance that\nuses that DB parameter group as the default parameter group.",
    "Reference": "After you create a DB parameter group, you should wait at least 5 minutes\nbefore creating your first DB instance that uses that DB parameter group\nas the default parameter group.",
    "HebCup": "IMPORTANT: After you create a DB parameter group, you should\nwait at least 5 minutes before creating your first DB instance that\nuses that DB parameter group as the default parameter group."
}
{
    "Origin": "Sets the state attribute of this User to\nstate",
    "Reference": "Sets the state attribute of this User's element to\nstate",
    "HebCup": "Sets the state attribute of this userElement to state"
}
{
    "Origin": "This call returns true in the interpreter or a low tier compilation that does profiling.",
    "Reference": "This call returns true in the interpreter or a low grade compilation that does profiling.",
    "HebCup": "This call returns true in the interpreter or a Low Grade compilation that does profiling."
}
{
    "Origin": "Returns the InetAddress associated with the client who created/is interacting with this Subject.",
    "Reference": "Returns the host name or IP associated with the client who created/is interacting with this Subject.",
    "HebCup": "Returns the String associated with the client who created/is interacting with this Subject."
}
{
    "Origin": "Code snippet for {@link AppendBlobAsyncClient#createWithResponse(BlobHTTPHeaders, Map, BlobAccessConditions)}",
    "Reference": "Code snippet for {@link AppendBlobAsyncClient#createWithResponse(BlobHttpHeaders, Map, BlobAccessConditions)}",
    "HebCup": "Code snippet for {@link AppendBlobAsyncClient#createWithResponse(BlobHttpHeaders, Map, BlobAccessConditions)}"
}
{
    "Origin": "class|delay|cron",
    "Reference": "class|intervalSchedule|cron",
    "HebCup": "class|delay|cron"
}
{
    "Origin": "The returned context supplier is intended to be cached in the currently adopted\nAST.",
    "Reference": "The returned context reference is intended to be cached in the currently adopted\nAST.",
    "HebCup": "The returned Context Reference is intended to be cached in the currently adopted AST."
}
{
    "Origin": "Converts short duration string (HH:MM) to milliseconds.",
    "Reference": "Converts short duration string (XX:YY) to milliseconds.",
    "HebCup": "Converts short duration string (HH:MM) to milliseconds."
}
{
    "Origin": "Returns a new fresh folder with the given name under the temporary\nfolder.",
    "Reference": "Returns a new fresh folder with the given path under the temporary\nfolder.",
    "HebCup": "Returns a new fresh throw with the given name under the temporary folder."
}
{
    "Origin": "Adds a new CONSTANT_Double_info to the constant pool of this symbol table.",
    "Reference": "Adds a new CONSTANT_Integer_info or CONSTANT_Float_info to the constant pool of this symbol\ntable.",
    "HebCup": "Adds a new CONSTANT_Double_info to the constant pool of this symbol table."
}
{
    "Origin": "timed invokeAll(empty collection) returns empty collection",
    "Reference": "timed invokeAll(empty collection) returns empty list",
    "HebCup": "timed invokeAll(empty collection) returns empty collection"
}
{
    "Origin": "Created by user info",
    "Reference": "Created by user",
    "HebCup": "Created by user info"
}
{
    "Origin": "### Effects: If `brandingServerBrandingId` is set, `brandingServerCustomer` is not supplied.",
    "Reference": "### Effects: If `brandingServerBrandingId` is set, `brandingServerCustomer` is **NOT** supplied.",
    "HebCup": "### Effects: If `brandingServerBrandingId` is set, `brandingServerCustomer` is not supplied."
}
{
    "Origin": "In order to set the matrix to a rotation transformation without post-multiplying,\nuse {@link #rotation(Quaterniond)}.",
    "Reference": "In order to set the matrix to a rotation transformation without post-multiplying,\nuse {@link #rotation(Quaterniondc)}.",
    "HebCup": "In order to set the matrix to a rotation transformation without post-multiplying, use {@link #rotation(Quaterniondc)}."
}
{
    "Origin": "When translated into a QueryTerm object, search terms\ncontaining an operator have the operator removed from the string representation.",
    "Reference": "When translated into a QueryTerm object, search terms\ncontaining a qualifying operator have the operator removed from the string representation.",
    "HebCup": "When translated into a QueryinputTerm object, search terms containing an operator have the operator removed from the string representation."
}
{
    "Origin": "This method is currently only used for root-level serializer\nhandling to allow for simpler caching.",
    "Reference": "This method is mostly used for root-level serializer\nhandling to allow for simpler caching.",
    "HebCup": "This method is currently only used for root-level serializer\nhandling to allow for simpler caching."
}
{
    "Origin": "Appends BCC address.",
    "Reference": "Appends CC address.",
    "HebCup": "Appends Cc address."
}
{
    "Origin": "Look for contract stored by given slot contract id.",
    "Reference": "Look for the contract stored using the given slot contract id.",
    "HebCup": "Look for contract stored by given slot contract id."
}
{
    "Origin": "Sets the {@link IClassCache} for the given application.",
    "Reference": "Sets the {@link IGetAndSetLocator} for the given application.",
    "HebCup": "Sets the {@link IgetAndSetter} for the given application."
}
{
    "Origin": "Tests for the {@link BaseFileSystem#openFile(AlluxioURI, OpenFileOptions)} method to\ncomplete successfully.",
    "Reference": "Tests for the {@link BaseFileSystem#openFile(AlluxioURI, OpenFilePOptions)} method to\ncomplete successfully.",
    "HebCup": "Tests for the {@link BaseFileSystem#OpenFilePFile(AlluxioURI, OpenFilePFileOptions)} method to complete successfully."
}
{
    "Origin": "If there is any regular output or error\noutput, it is appended to the given s.",
    "Reference": "If there is any regular output or error\noutput, it is appended to the given {@code StringBuilder}s.",
    "HebCup": "If there is any regular output or error\noutput, it is appended to the given s."
}
{
    "Origin": "Calls {@link #discardToEnd()} and releases any held DRM resources.",
    "Reference": "Calls {@link #discardToEnd()} and releases any owned {@link DrmSession} references.",
    "HebCup": "Calls {@link #discardToEnd()} and releases any held DRM References."
}
{
    "Origin": "This is measured from the bottom, that is, the quantile estimation with the level 99% corresponds to\nthe smallest 99% observations and 1% of the observation are above that level.",
    "Reference": "This is measured from the bottom, that is, Thus the quantile estimation with the level 99% corresponds to\nthe smallest 99% observations.",
    "HebCup": "This is measured from the bottom , that is , the quantileResultFromUnsorted estimation with the level 99% corresponds to the smallest 99% observations and 1% of the observation are above that level."
}
{
    "Origin": "Add a Content {@link Uri} to observe",
    "Reference": "Adds a content {@link Uri} for system observation",
    "HebCup": "Add a Content {@link Uri} to observe"
}
{
    "Origin": "Preference summary should be the activated device name",
    "Reference": "Preference summary should be device's name",
    "HebCup": "Preference summary should be the activated NAME name"
}
{
    "Origin": "This method should only be used for steps whose value is\n{@link #TYPE_ARGUMENT TYPE_ARGUMENT}.",
    "Reference": "This method should\nonly be used for steps whose value is {@link #TYPE_ARGUMENT}.",
    "HebCup": "This method should only be used for steps whose value is\n{@link #TYPE_ARGUMENT TYPE_ARGUMENT}."
}
{
    "Origin": "Differs from the above because it can be used on any file, rather than only\nmanaged commit log segments (and thus cannot call waitForFinalSync).",
    "Reference": "Differs from the above because it can be used on any file, rather than only\nmanaged commit log segments (and thus cannot call waitForFinalSync), and in\nthe treatment of failures.",
    "HebCup": "Differs from the above because it can be used on any file, rather than only\nmanaged commit log segments (and thus cannot call waitForFinalSync)."
}
{
    "Origin": "Gets the description.",
    "Reference": "Gets the code.",
    "HebCup": "Gets the Code."
}
{
    "Origin": "Parses the timestamp from the collection list and returns them in reverse sorted order (most recent 1st)",
    "Reference": "Result is returned them in sorted order (most recent 1st)",
    "HebCup": "Parses the timestamp from the collection list and returns them in reverse sorted order (most recent 1st)"
}
{
    "Origin": "Does a simple HEAD request to the server's /health endpoint to check if it's reachable If not an",
    "Reference": "Does a simple HEAD request to a configuration endpoint to check if it's reachable.",
    "HebCup": "Does a simple HEAD request to the server's /health endpoint to check if it's reachable If not an"
}
{
    "Origin": "Code snippet for {@link AppendBlobClient#appendBlockWithResponse(InputStream, long, AppendBlobRequestConditions,",
    "Reference": "Code snippet for {@link AppendBlobClient#appendBlockWithResponse(InputStream, long, byte[], AppendBlobRequestConditions,",
    "HebCup": "Code snippet for {@link AppendBlobClient#appendBlockWithResponse(InputStream, long, AppendBlobRequestConditions,"
}
{
    "Origin": "Returns true if the class has the specified annotation class.",
    "Reference": "Returns true if the class has the specified annotation type.",
    "HebCup": "Returns true if the class has the specified annotation class."
}
{
    "Origin": "A typical use case would be to convert index names to curve names valid for an underlying system.",
    "Reference": "A typical use case would be to convert parameter metadata tenors to be valid for an underlying system.",
    "HebCup": "A typical use case would be to convert index mds to curve mds valid for an underlying system."
}
{
    "Origin": "There are cases where a type is seen as unresolved but can be found\namongst the imports of the module or within the default imports.",
    "Reference": "There are cases where a type is seen as unresolved but can be found\namongst the imports of the module.",
    "HebCup": "There are cases where a type is seen as unresolved but can be found\namongst the imports of the module or within the default imports."
}
{
    "Origin": "Checks a name to ensure that it's a legal type name.",
    "Reference": "Checks a name to ensure that it's a legal qualified class name.",
    "HebCup": "Checks a name to ensure that it's a legal type name."
}
{
    "Origin": "Returns the log compactor.",
    "Reference": "Returns the log writer.",
    "HebCup": "Returns the log LogWriter."
}
{
    "Origin": "This property is not returned if the dialog node has no parent.",
    "Reference": "This property is omitted if the dialog node has no parent.",
    "HebCup": "This property is not returned if the dialog node has no parent."
}
{
    "Origin": "Parses {@link SparseVector} from the given Matrix Market string.",
    "Reference": "Parses {@link SparseVector} from the given Matrix Market.",
    "HebCup": "Parses {@link SparseVector} from the given Matrix Market InputStream."
}
{
    "Origin": "Code snippets for {@link BlobAsyncClient#setHTTPHeaders(BlobHTTPHeaders)}",
    "Reference": "Code snippets for {@link BlobAsyncClient#setHTTPHeaders(BlobHttpHeaders)}",
    "HebCup": "Code snippets for {@link BlobAsyncClient#setHTTPHeaders(BlobHttpHeaders)}"
}
{
    "Origin": "Get the gradle paths for the given list of modules and all the tested projects (if it is a test app).",
    "Reference": "Get the gradle paths for the given module and all the tested projects (if it is a test app).",
    "HebCup": "Get the gradle paths for the given list of module and all the tested projects (if it is a test app)."
}
{
    "Origin": "Getter for {@link #exposeHeaders}",
    "Reference": "Getter for {@link #allowHeaders}",
    "HebCup": "Getter for {@link#allowHeaders}"
}
{
    "Origin": "Creates a {@link Behavior} that uses the given {@link WicketConsumer consumer}\nto do something with the component's tag.",
    "Reference": "Creates a {@link Behavior} that uses the given {@code SerializableConsumer consumer} to do\nsomething with the component's tag.",
    "HebCup": "Creates a {@link Behavior} that uses the given {@link SerializableConsumer consumer} to do something with the component's tag."
}
{
    "Origin": "Accumulate secondarys into a LinkedListX (extended Persistent List) and Right with the supplied combiner function",
    "Reference": "Accumulate secondarys into a LazySeq (extended Persistent List) and Right with the supplied combiner function",
    "HebCup": "Accumulate secondarys into a LazySeq (extended Persistent List) and Right with the supplied combiner function"
}
{
    "Origin": "Retrieves the position in the list corresponding to itemId.",
    "Reference": "Retrieves the position in the list corresponding to itemId, subtracting any header views.",
    "HebCup": "Retrieves the position in the list corresponding to itemId."
}
{
    "Origin": "Configures SSL or TLS of the default {@link VirtualHost} from the specified {@code keyCertChainFile}\nand cleartext {@code keyFile}.",
    "Reference": "Configures SSL or TLS of the {@link Server} from the specified {@code keyCertChainFile}\nand cleartext {@code keyFile}.",
    "HebCup": "Configures SSL or TLS of the default {@link virtualHost} from the specified {@code keyCertChainFile} and cleartext {@code keyFile}."
}
{
    "Origin": "Phone Number",
    "Reference": "Phone number",
    "HebCup": "Phone number"
}
{
    "Origin": "Set the number of expected records for this task.",
    "Reference": "Set the number of expected records for this connector.",
    "HebCup": "Set the number of expected for this task."
}
{
    "Origin": "predict\n* predict the rating given a sparse appender vector",
    "Reference": "Predict the rating given a sparse appender vector.",
    "HebCup": "predict\n* predict the rating given a sparse appender vector"
}
{
    "Origin": "Each of the available players is passed the provided information\nand the first that reports it is compatible will be returned.",
    "Reference": "Each of the available {@link Player} instances are\npassed the provided information and the first that reports that it is\ncompatible will be returned.",
    "HebCup": "Each of the available players is passed the provided information\nand the first that reports it is compatible will be returned."
}
{
    "Origin": "Adding fields to a POJO as operator state should require a state migration.",
    "Reference": "Adding fields to a POJO as operator state should succeed.",
    "HebCup": "Adding fields to a POJO as operator state should require a state migration."
}
{
    "Origin": "Sets the sensitivity.",
    "Reference": "Set the sensitivity.",
    "HebCup": "Sets the sensitivity."
}
{
    "Origin": "Requests that the player prefetch a media item with the media id for playback.",
    "Reference": "Requests that the player prepare a media item with the media id for playback.",
    "HebCup": "Requests that the player prepare a media item with the media id for playback."
}
{
    "Origin": "Creates a new block blob, or updates the content of an existing block blob.",
    "Reference": "Creates a new block blob.",
    "HebCup": "Creates a new block blob, or updates the content of an existing block blob."
}
{
    "Origin": "Get the etag property: The etag property.",
    "Reference": "Get the eTag property: The eTag property.",
    "HebCup": "get E the etag property: The etag property."
}
{
    "Origin": "Causes  to have its \nmethod called in the event dispatch thread with low priority.",
    "Reference": "Causes runnable to have its run method called in the\nevent dispatch thread with low priority.",
    "HebCup": "Causes  to have its \nmethod called in the event dispatch thread with low priority."
}
{
    "Origin": "Checks if the deletion policy can release some index commits with the latest global checkpoint.",
    "Reference": "Checks if the deletion policy can delete some index commits with the latest global checkpoint.",
    "HebCup": "Checks if the deletion policy can release some index commits with the latest global checkpoint."
}
{
    "Origin": "Removing fields from a POJO as keyed state should require a state migration.",
    "Reference": "Removing fields from a POJO as keyed state should succeed.",
    "HebCup": "Removing fields from a POJO as keyed state should require a state migration."
}
{
    "Origin": "When a layout is rendered in the layout, it is fetching resources from the app resource repository: it should see all the resources\njust like the app does.",
    "Reference": "When a layout is rendered in the layout editor, it is getting resources from the app resource repository: it should see all\nthe resources just like the app does.",
    "HebCup": "When a layout is rendered in the layout, it is fetching resources from the app resource repository: it should see all the resources\njust like the app does."
}
{
    "Origin": "Enables initial {@literal PING} barrier before any connection is usable.",
    "Reference": "Returns the {@link ProtocolVersion} to use.",
    "HebCup": "Enables initial {@literal PING} barrier before any connection get usable."
}
{
    "Origin": "Get the content of this element.",
    "Reference": "Gets the value of the content property.",
    "HebCup": "Get the content of this element."
}
{
    "Origin": "Extract the values of given field or property from the array's elements under test into a new array, this new array\nbecoming the array under test.",
    "Reference": "Extract the values of given field or property from the array's elements under test into a new list, this new list\nbecoming the object under test.",
    "HebCup": "Extract the values of given field or property from the array's elements under test into a newListAssertInstance array , this newListAssertInstance array becoming the array under test."
}
{
    "Origin": "Converts a JSON document into a PdxInstance",
    "Reference": "Converts a Byte Array JSON document into a PdxInstance",
    "HebCup": "Converts a JSON document into a PdxInstance"
}
{
    "Origin": "Gets the current {@link Art} value represented by this {@link Painting}.",
    "Reference": "Gets the current {@link ArtType} value represented by this {@link Painting}.",
    "HebCup": "Gets the current {@link ArtType} value represented by this {@link Painting}."
}
{
    "Origin": "In error message, exclude {@code @rultor} from list of commanders (REF).",
    "Reference": "QnAskedBy can exclude {@code @rultor} from list of commanders (REF).",
    "HebCup": "In error message, exclude {@code @excludes} from list of commanders (REF)."
}
{
    "Origin": "WebElement#getText()} equals to provided {@code expectedText}.",
    "Reference": "WebElement#getText()} equals to provided {@code expected} one.",
    "HebCup": "element#getText ()} equals to provided {@code expectedText}."
}
{
    "Origin": "Set UPC/EAN.",
    "Reference": "Set CU-UPC.",
    "HebCup": "set UPC _ CU/EAN."
}
{
    "Origin": "Returns a string representation of this object; useful for testing and debugging.",
    "Reference": "Returns a string representation of this object.",
    "HebCup": "Returns a string representation of this object; useful for testing and debugging."
}
{
    "Origin": "WARNING: Read the javadoc of {@link Component#canCallListenerInterface()} for important\nsecurity-related information.",
    "Reference": "WARNING: Read the javadoc of {@link Component#canCallListener()} for important\nsecurity-related information.",
    "HebCup": "WARNING: Read the javadoc of {@link Component#canCallListener ()} for important security-related information."
}
{
    "Origin": "They must not be of type {@link KnownAmountPaymentPeriod}.",
    "Reference": "They must not be of type {@link KnownAmountSwapPaymentPeriod}.",
    "HebCup": "They must not be of type {@link KnownAmountSwapPaymentPeriod}."
}
{
    "Origin": "Returns a string representation of this object; useful for testing and debugging.",
    "Reference": "Returns a string representation of this object.",
    "HebCup": "Returns a string representation of this object; useful for testing and debugging."
}
{
    "Origin": "Checks whether caption and description are interpreted as html or plain\ntext.",
    "Reference": "Checks whether caption and description are interpreted as HTML or plain\ntext.",
    "HebCup": "Checks whether caption and description are interpreted as).html or plain text."
}
{
    "Origin": "Determines if this BeaconManager instance is part of the process hosting the beacon scanning\nservice.",
    "Reference": "Determines if this BeaconManager instance is not part of the process hosting the beacon scanning\nservice.",
    "HebCup": "Determines if this BeaconManager instance is part of the process hosting the beacon scanning\nservice."
}
{
    "Origin": "The domain portion of the ObjectName in the query if useObjDomain is set to true\n3. else, the Class Name of the MBean.",
    "Reference": "The domain portion of the ObjectName in the query if useObjDomainAsKey is set to true\n3. else, the Class Name of the MBean.",
    "HebCup": "The domain portion of the ObjectName in the query if queryObjDomain is set to true 3. else, the Class Name of the MBean."
}
{
    "Origin": "Forget all entries that match the scheme+host+port of the given key, so\nthat they can be crawled again if discovered again.",
    "Reference": "Forget all entries that match the scheme+host+port of the given url, so\nthat they can be crawled again if discovered again.",
    "HebCup": "Forget all entries that match the scheme+authority of url of the given key , so that they can be crawled again if discovered again."
}
{
    "Origin": "Keys and values are separated by {@value #SEPARATOR}.",
    "Reference": "Keys and values are separated by {@value #KEY_VALUE_SEPARATOR}.",
    "HebCup": "Keys and values are separated by {@value #SEPARATOR}."
}
{
    "Origin": "Set the time a publication will linger in nanoseconds after being drained.",
    "Reference": "Set the time a network publication will linger in nanoseconds after being drained.",
    "HebCup": "Set the time a publication will linger in nanoseconds after being drained."
}
{
    "Origin": "{@codesnippet com.azure.storage.file.share.ShareDirectoryClient.createSubDirectory#string}",
    "Reference": "{@codesnippet com.azure.storage.file.share.ShareDirectoryClient.createSubdirectory#string}",
    "HebCup": "{@codesnippet com.azure.storage.file.share.ShareDirectoryClient.createSubdirectory#string}"
}
{
    "Origin": "Created by user info",
    "Reference": "Created by user",
    "HebCup": "Created by user info"
}
{
    "Origin": "Retrieves the metadata for the specified {@link NamespacedEntityId}.",
    "Reference": "Retrieves the metadata for the specified {@link MetadataEntity}.",
    "HebCup": "Retrieves the metadata for the specified {@link MetadataEntity}."
}
{
    "Origin": "BlobRange, ParallelTransferOptions, ReliableDownloadOptions, BlobRequestConditions, boolean)}",
    "Reference": "BlobRange, ParallelTransferOptions, DownloadRetryOptions, BlobRequestConditions, boolean)}",
    "HebCup": "BlobRange , ParallelTransferOptions , DownloadRetryOptions , BlobRequestConditions , boolean)}"
}
{
    "Origin": "Request for graceful stop then blocks until process is stopped.",
    "Reference": "Request for quick stop then blocks until process is stopped.",
    "HebCup": "Request for graceful hardStop then blocks until process is stopped."
}
{
    "Origin": "For now, just consume the message and throw it away.",
    "Reference": "Consume the message and save it.",
    "HebCup": "For now, just consume the message and throw it away."
}
{
    "Origin": "This signature is the one specified in the\nconstructor (see {@link #SignatureReader(String) SignatureReader}).",
    "Reference": "This signature is\nthe one specified in the constructor (see {@link #SignatureReader}).",
    "HebCup": "This signatureValue is the one specified in the constructor (see {@link#SignatureReader (String) SignatureReader})."
}
{
    "Origin": "Converts a {@link CreateFileOptions} object to an {@link OpenFileOptions} object with a\nmatching Alluxio storage type.",
    "Reference": "Converts a {@link CreateFilePOptions} object to an {@link OpenFilePOptions} object with a\nmatching Alluxio storage type.",
    "HebCup": "Converts a {@link CreateFileOptions} object to an {@link OpenFilePOptions.new} object with a matching Alluxio storage type."
}
{
    "Origin": "Called when the user reorders the policies in a service.",
    "Reference": "Called when the user reorders the policies in a API.",
    "HebCup": "Called when the user reorders the policies in a Api."
}
{
    "Origin": "This lacks a mathematical argument, but is a handcrafted heuristic to avoid\nnumerical problems.",
    "Reference": "This lacks a thorough mathematical argument, but is a handcrafted heuristic\nto avoid numerical problems.",
    "HebCup": "This lacks a mathematical argument, but is a handcrafted heuristic to avoid\nnumerical problems."
}
{
    "Origin": "Tests {@code globalRecommend(Set, int, Set, Set)}.",
    "Reference": "Tests {@code recommendRelatedItems()(Set, int, Set, Set)}.",
    "HebCup": "Tests {@code recommendRelatedItems (Set , int , Set , Set)}."
}
{
    "Origin": "Setter for the output directory where the data files are stored.",
    "Reference": "Setter for the directory where the data files are stored.",
    "HebCup": "Setter for the directory where the data files are stored."
}
{
    "Origin": "In case of\nfailure the {@link Flux} will error.",
    "Reference": "In case of\nfailure the {@link CosmosContinuablePagedFlux} will error.",
    "HebCup": "In case of\nfailure the {@link Flux} will error."
}
{
    "Origin": "Note that you do not call",
    "Reference": "Note that you do\nnot call  with this\n.",
    "HebCup": "Note that you do not call"
}
{
    "Origin": "Adds a qualified \"exports dynamic\" directive to the declaration.",
    "Reference": "Adds a qualified \"opens\" directive to the declaration.",
    "HebCup": "Adds a qualified ``opens`` directive to the declaration."
}
{
    "Origin": "| 2. if it's a right child, it should have a incremented column value.",
    "Reference": "| If it's a right child, its column should increment by 1.",
    "HebCup": "| 2. if it's a right child, it should have a incremented column value."
}
{
    "Origin": "Queries this search source for the given queryString.",
    "Reference": "Creates query for the given queryString.",
    "HebCup": "Queries this search source for the given createString."
}
{
    "Origin": "Gets the list of {@link CertificateProperties CertificateProperties} on this page.",
    "Reference": "Gets the iterable stream of {@link CertificateProperties CertificateProperties} on this page.",
    "HebCup": "Gets the IterableStream of {@link CertificateProperties CertificateProperties} on this page."
}
{
    "Origin": "Users\ncannot poke the threshold values via this Condition.",
    "Reference": "Users must not poke the threshold values via this Condition.",
    "HebCup": "Users cannot poke the threshold values via this conditionWithin."
}
{
    "Origin": "Parses the {@code Rectangle} represented by the given string according to the format of {@link #toString()}.",
    "Reference": "Sets this {@code Rectangle} to the value represented by the specified string according to the format of {@link #toString()}.",
    "HebCup": "Parses the {@code this.set} represented by the given string according to the format of {@link#toString ()}."
}
{
    "Origin": "Set name of the noun.",
    "Reference": "Set the noun.",
    "HebCup": "Set noun of the noun."
}
{
    "Origin": "Delegateaction to the track(s) clicked on.",
    "Reference": "Delegate action to the track(s) clicked on.",
    "HebCup": "Delegateaction to the track(s) clicked on."
}
{
    "Origin": "Receive indicator result from persistence, after it is saved into storage.",
    "Reference": "Receive metrics result from persistence, after it is saved into storage.",
    "HebCup": "Receive Metrics result from persistence , after it is saved into storage."
}
{
    "Origin": "Sets the journal serializer, returning the builder for method chaining.",
    "Reference": "Sets the journal namespace, returning the builder for method chaining.",
    "HebCup": "Sets the journal Namespace , returning the builder for method chaining."
}
{
    "Origin": "Return the {@code Graph} from the underlying switchable.",
    "Reference": "Return the {@code Graph} from the underlying DatasetGraph",
    "HebCup": "Return the {@code BaseGraph} from the underlying switchable."
}
{
    "Origin": "(Try to) create a Flag inter (either standard FlagInter or SmallFlagInter).",
    "Reference": "(Try to) create and add a Flag inter (either standard FlagInter or SmallFlagInter).",
    "HebCup": "(Try to) createValidAdded a Flag inter (either standard FlagInter or SmallFlagInter)."
}
{
    "Origin": "Returns a string representation of this object; useful for testing and debugging.",
    "Reference": "Returns a string representation of this object.",
    "HebCup": "Returns a string representation of this object; useful for testing and debugging."
}
{
    "Origin": "If the new lookup class is not within the same package member\nas the old one, private members will not be accessible, and protected members\nwill not be accessible by virtue of inheritance.",
    "Reference": "If the new lookup class is not within the same package member\n as the old one, private members will not be accessible, and protected members\n will not be accessible by virtue of inheritance,\n i.e.",
    "HebCup": "0 the new lookup class is not within the same package member as the old one , private members will not be accessible , and protected members will not be accessible by virtue of inheritance."
}
{
    "Origin": "Obtains an instance from the specified unique name.",
    "Reference": "Obtains an instance from the specified name.",
    "HebCup": "Obtains an instance from the specified name."
}
{
    "Origin": "Report the ID of the sample sheet that contains the provided sample.",
    "Reference": "Report the name of the sample sheet that contains the provided sample.",
    "HebCup": "Report the ID of the sample Sheet.get Descriptor that contains the provided sample."
}
{
    "Origin": "The format used is ISO 8601-like:\nH:m:s.S.",
    "Reference": "The format used is ISO 8601-like: {@code HH:mm:ss.SSS}.",
    "HebCup": "The format used is ISO 8601-like: HH:m:s.S."
}
{
    "Origin": "Get the object, and return it, throws RuntimeException",
    "Reference": "Get the object, and return it, throws RuntimeException if not found",
    "HebCup": "Get the String , and return it , throws RuntimeException"
}
{
    "Origin": "This polling job tries to find another UPnP\ndevices related to same Samsung TV and create handler for those.",
    "Reference": "This function tries to find another UPnP\ndevices related to same Samsung TV and create handler for those.",
    "HebCup": "This polling job tries to find another UPnP\ndevices related to same Samsung TV and create handler for those."
}
{
    "Origin": "{@codesnippet com.azure.storage.file.datalake.DataLakeDirectoryAsyncClient.deleteSubDirectory#String}",
    "Reference": "{@codesnippet com.azure.storage.file.datalake.DataLakeDirectoryAsyncClient.deleteSubdirectory#String}",
    "HebCup": "{@codesnippet com.azure.storage.file.datalake.DataLakeDirectoryAsyncClient.deleteSubdirectory#String}"
}
{
    "Origin": "If {@code labels = \"\\0\"}, settings without any label are returned.",
    "Reference": "If {@code labelFilter = \"\\0\"}, settings without any label are returned.",
    "HebCup": "If {@code LabelFilter = ``\\0``} , settings without any label are returned."
}
{
    "Origin": "The namespaceDocument is a BsonDocument containing the values associated with a MongoNamespace.",
    "Reference": "The namespace document is a BsonDocument containing the values associated with a MongoNamespace.",
    "HebCup": "The namespaceDocument is a BsonDocument containing the values associated with a MongoNamespace."
}
{
    "Origin": "Returns a supplier that returns the current language instance.",
    "Reference": "Returns a reference that returns the current language instance.",
    "HebCup": "Returns a LanguageReference that returns the current language instance."
}
{
    "Origin": "After the recreation, it brings back its lifecycle state to the resumed state.",
    "Reference": "After the recreation, it brings back its lifecycle state to the original state.",
    "HebCup": "After the recreation, it brings back its lifecycle state to the resumed state."
}
{
    "Origin": "Create an instance of {@link CTWebProperties }",
    "Reference": "Create an instance of {@link CTRel }",
    "HebCup": "Create an instance of {@link CTRel}"
}
{
    "Origin": "Classification ID (for files only): * `1` - public * `2` - for internal use only * `3` - confidential * `4` - strictly confidential",
    "Reference": "Classification ID: * `1` - public * `2` - internal * `3` - confidential * `4` - strictly confidential",
    "HebCup": "Classification ID (for files: * `1` - public * `2` - for internal use only * `3` - confidential * `4` - strictly confidential"
}
{
    "Origin": "Appends to a collection column, as in {@code SET l+=?}.",
    "Reference": "Appends to a collection column, as in {@code SET l=l+?}.",
    "HebCup": "Appends to a collection column, as in {@code SET l+=?}."
}
{
    "Origin": "Start a Task with a Tag to identify it and with a time threshold; a task represents some work\nthat spans some time, and you are interested in both its start time and end time.",
    "Reference": "End a Task with a Tag to identify it; a task represents some work that spans some time, and\nyou are interested in both its start time and end time.",
    "HebCup": "Start a Task with a Tag to identify it and with a time threshold; a task represents some work\nthat spans some time, and you are interested in both its start time and end time."
}
{
    "Origin": "Obtains an instance from the specified unique name.",
    "Reference": "Obtains an instance from the specified name.",
    "HebCup": "Obtains an instance from the specified name."
}
{
    "Origin": "or throws a {@link com.liferay.mail.NoSuchAccountException} if it could not be found.",
    "Reference": "or throws a {@link NoSuchAccountException} if it could not be found.",
    "HebCup": "or throws a {@link com.liferay.mail.NoSuchAccountException} if it could not be found."
}
{
    "Origin": "Loads the update center data, if any and if modified since last read.",
    "Reference": "Loads the update center data, if any.",
    "HebCup": "Loads the update center data, if any and if modified since last read."
}
{
    "Origin": "Produces a Collapsed SemanticGraph with no extras.",
    "Reference": "Produces a Collapsed SemanticGraph.",
    "HebCup": "Produces a Collapsed SemanticGraph with no extras."
}
{
    "Origin": "Is has plain column or not.",
    "Reference": "Contains plain column or not.",
    "HebCup": "contains Plain Column or not."
}
{
    "Origin": "Report the note which if vertically farthest from stem tail.",
    "Reference": "Report the highest note by default.",
    "HebCup": "Report the note which if vertically farthest from stem tail."
}
{
    "Origin": "If the given language code is {@code null}, uses {@link DisplaySettings#getContentLanguage(Context)}.",
    "Reference": "If the given language code is {@code null}, uses {@link DisplaySettings#getShowsLanguage(Context)}.",
    "HebCup": "If the given language code is {@code null} , uses {@link DisplaySettings#getShowsLanguage (Context)}."
}
{
    "Origin": "Creates an Android framework resource repository without using a persistent cache.",
    "Reference": "Creates an Android framework resource repository.",
    "HebCup": "Creates an Android framework Executor repository without using a persistent cache."
}
{
    "Origin": "Convert file to HTML.",
    "Reference": "Convert document to HTML.",
    "HebCup": "Convert file to HTML."
}
{
    "Origin": "Try to detect link between this Slur instance and head on left side\nplus head on right.",
    "Reference": "Try to detect link between this Slur instance and head on left side\nplus head on right side.",
    "HebCup": "Try to detect link between this Slu instance and head on left side plus head on right."
}
{
    "Origin": "Slight performance increase over {@link #render(BufferBuilder)}.",
    "Reference": "Slight performance increase over {@link #render(VertexBuffer)}.",
    "HebCup": "Slight performance increase over {@link #render(VertexBuffer)}."
}
{
    "Origin": "Calculate a sample's standard deviation.",
    "Reference": "Calculate the standard deviation.",
    "HebCup": "Calculate a sample's standard deviation."
}
{
    "Origin": "When transforming a vector by the resulting matrix the rotation transformation will be applied first and then the translation.",
    "Reference": "When transforming a vector by the resulting matrix the rotation - and possibly scaling - transformation will be applied first and then the translation.",
    "HebCup": "When transforming a vector by the resulting matrix the rotation transformation will be applied first and then the translation."
}
{
    "Origin": "Returns the foo with the primary key or throws a {@link com.liferay.sampleservicebuilder.NoSuchFooException} if it could not be found.",
    "Reference": "Returns the foo with the primary key or throws a {@link NoSuchFooException} if it could not be found.",
    "HebCup": "Returns the foo with the primary key or throws a {@link com.liferay.sampleservicebuilder.NoSuchFooException} if it could not be found."
}
{
    "Origin": "Gets the String or Long id from the key, or null if incomplete",
    "Reference": "Gets the String or Long id from the key as a Value, or null if incomplete",
    "HebCup": "Gets the String or Long id from the IncompleteKey , or null if incomplete"
}
{
    "Origin": "Returns a list of backup nodes.",
    "Reference": "Returns a list of follower nodes.",
    "HebCup": "Returns a list of follower nodes."
}
{
    "Origin": "This method creates a temporary VCF file and it's appropriately named index file, and will delete them on exit.",
    "Reference": "This method creates a temporary VCF or Bam file and its appropriately named index file, and will delete them on exit.",
    "HebCup": "This method creates a temporary File and it's appropriately named index file, and will delete them on exit."
}
{
    "Origin": "Starts the service if not started already and starts all downloads.",
    "Reference": "Starts the service if not started already and resumes all downloads.",
    "HebCup": "Resumes the service if not started already and starts all downloads."
}
{
    "Origin": "Helper method to retrieve the parent folder type.",
    "Reference": "Helper method to retrieve the parent folder type or  if none available.",
    "HebCup": "Helper method to retrieve the parent folder type."
}
{
    "Origin": "The input stream should\ncontain an X.509 certificate chain in PEM format.",
    "Reference": "The input stream should\ncontain an X.509 certificate collection in PEM format.",
    "HebCup": "The input stream should contain an X.509 certificate Collection in PEM format."
}
{
    "Origin": "Unregister the given event from the current context (provided).",
    "Reference": "Unregister all methods observing the given event from the provided context.",
    "HebCup": "registrations.get the given event from the current context (provided)."
}
{
    "Origin": "Sets the storage serializer.",
    "Reference": "Sets the storage namespace.",
    "HebCup": "Sets the storage Namespace."
}
{
    "Origin": "Gets the groups used to find an issuer curve.",
    "Reference": "Gets the groups used to find an issuer curve by legal entity.",
    "HebCup": "Gets the groups used to find an issuer curve."
}
{
    "Origin": "Creates a new {@link MetadataEntity} which consists of the given key and values following the key and values of\nthis {@link MetadataEntity}",
    "Reference": "Returns a new {@link MetadataEntity} which consists of the given key and values following the key and values of\nthis {@link MetadataEntity}.",
    "HebCup": "Creates a metadataEntity {@link MetadataEntity} which consists of the given key and values following the key and values of this {@link MetadataEntity}"
}
{
    "Origin": "Returns a string representation of this object; useful for testing and debugging.",
    "Reference": "Returns a string representation of this object.",
    "HebCup": "Returns a string representation of this object; useful for testing and debugging."
}
{
    "Origin": "The input 2011-01-15 (a Saturday) for parameter (SATURDAY) will return 2011-01-08 (one week earlier).",
    "Reference": "The input 2011-01-15 (a Saturday) for parameter (SATURDAY) will return 2011-01-08 (seven days earlier).",
    "HebCup": "The input 2011-01-15 (a Saturday) for parameter (SATURDAY) will return 2011-01-08 (one week earlier)."
}
{
    "Origin": "Complete the request.",
    "Reference": "2.",
    "HebCup": "Complete the request {}."
}
{
    "Origin": "It tests that the method {@code addEdge}\nwill silently add the missing nodes to the graph, then add the edge connecting them.",
    "Reference": "Tests that the method {@code addEdge} will silently add the missing nodes to the graph, then\nadd the edge connecting them.",
    "HebCup": "It tests that the method {@code addEdge} will silently add the missing nodes to the graphAsMutableGraph , then add the edge connecting them."
}
{
    "Origin": "Will set Object as TAG to this request, wrapped by WeakReference",
    "Reference": "Will set Object as TAG to underlying AsyncHttpRequest",
    "HebCup": "Will set Object as AsyncHttpRequest to this request , wrapped by WeakReference"
}
{
    "Origin": "Whether the channel product is a beta product",
    "Reference": "Whether the channel product is a betaMarker product",
    "HebCup": "Whether the channel product is a betaMarker product"
}
{
    "Origin": "Write a Chart series as rows in a CSV file.",
    "Reference": "Export a XYChart series into rows in a CSV file.",
    "HebCup": "Write a Chart XYSeries as rows in a CSV file."
}
{
    "Origin": "The input 2011-01-15 (a Saturday) for parameter (SATURDAY) will return 2011-01-22 (one week later).",
    "Reference": "The input 2011-01-15 (a Saturday) for parameter (SATURDAY) will return 2011-01-22 (seven days later).",
    "HebCup": "The input 2011-01-15 (a Saturday) for parameter (SATURDAY) will return 2011-01-22 (one week later)."
}
{
    "Origin": "Set Bewegungsdatum.",
    "Reference": "Set Inventurdatum.",
    "HebCup": "Set Bewegungsdatum."
}
{
    "Origin": "Gets the dialogNodeId.",
    "Reference": "Gets the dialogNode.",
    "HebCup": "Gets the dialogNode."
}
{
    "Origin": "the barChartProperties of the chart",
    "Reference": "the chartProperties of the chart",
    "HebCup": "the ChartProperties of the chart"
}
{
    "Origin": "Gets forwarding function type of the forwarding objective.",
    "Reference": "Attempts to guess the forwarding function type of the given forwarding\nobjective.",
    "HebCup": "Gets forwarding function found : of the forwarding objective."
}
{
    "Origin": "Returns an iterator of all of the registered {@code SaslClientFactory}s where the order is based on the\norder of the Provider registration and/or class path order.",
    "Reference": "Returns a collection of all of the registered {@code SaslClientFactory}s where the order is based on the\norder of the Provider registration and/or class path order.",
    "HebCup": "Returns an Collection of all of the registered {@code SaslClientFactory}s where the order is based on the order of the Provider registration and/or class path order."
}
{
    "Origin": "Otherwise, it traverses all objects in\ngiven array and adds their scalar values named\n{@code cursor#getNext()} to the result.",
    "Reference": "Otherwise, it traverses all objects in\ngiven array and adds their scalar values named\n{@code pathCursor#getNext()} to the result.",
    "HebCup": "Otherwise , it traverses all objects in given array and adds their scalar values named {@code pathCursor#getNext ()} to the result."
}
{
    "Origin": "This method is run everytime the service is executed",
    "Reference": "This method is run every time the service is executed",
    "HebCup": "This method is run everytime the service is executed"
}
{
    "Origin": "If one param is a float, the other is converted to a float.",
    "Reference": "a/b If one param is a\nfloat, the other is converted to a float.",
    "HebCup": "If one param is a float, the other is converted to a float."
}
{
    "Origin": "Get the fileContentType property: Sets the MIME content type of the\nfile.",
    "Reference": "Get the contentType property: Sets the MIME content type of the\nfile.",
    "HebCup": "Get the ContentType property: Sets the MIME content type of the file."
}
{
    "Origin": "For more information about managing snapshot copy grants, go to",
    "Reference": "For more information about managing snapshot copy grants, go to Amazon Redshift Database Encryption in the Amazon Redshift",
    "HebCup": "For more information about managing snapshot copy grants, go to"
}
{
    "Origin": "Uses a {@link HashMap} to map keys to value collections, initialized to expect the specified\nnumber of keys.",
    "Reference": "Uses a hash table to map keys to value collections, initialized to expect the specified\nnumber of keys.",
    "HebCup": "Uses a {@link HashMap} to Platform keys to value collections, initialized to expect the specified number of keys."
}
{
    "Origin": "Returns the number of occurrences, or {@code -1} if the exact number is unknown.",
    "Reference": "Returns the result size, or {@code -1} if the exact size is unknown.",
    "HebCup": "Returns the number of occurrences, or {@code -1} if the exact number is unknown."
}
{
    "Origin": "Log rule execution statistics.",
    "Reference": "Log rule execution statistics @ INFO.",
    "HebCup": "Log rule execution statistics."
}
{
    "Origin": "Test of var method, of class HyperGeometricDistribution.",
    "Reference": "Test of variance method, of class HyperGeometricDistribution.",
    "HebCup": "Test of Variance method , of class HyperGeometricDistribution."
}
{
    "Origin": "Load all profile names.",
    "Reference": "A task that reads all profile names.",
    "HebCup": "read all profile names."
}
{
    "Origin": "Get the {@link SessionConfiguration} for the specified camera id.",
    "Reference": "Get the {@link SessionConfig} for the specified camera id.",
    "HebCup": "Get the {@link SessionConfig} for the specified camera id."
}
{
    "Origin": "Obtains an instance of {@code ZoneOffset} from a date-time object.",
    "Reference": "Obtains an instance of {@code ZoneOffset} from a temporal object.",
    "HebCup": "Obtains an instance of {@code ZoneOffset} from a date-time object."
}
{
    "Origin": "Convert to object types, returning null if text is null.",
    "Reference": "Convert to object types, returning null if text is null or empty.",
    "HebCup": "Convert to object types, returning null if text is null."
}
{
    "Origin": "Returns the attack range for a {@link robocode.SentryRobot SentryRobot}.",
    "Reference": "Returns the border size that defines the attack range for a {@link robocode.SentryRobot SentryRobot}\nfrom the border.",
    "HebCup": "Returns the Border Size for a {@link robocode.SentryRobot SentryRobot}."
}
{
    "Origin": "Decode an action profile member to PI action group member.",
    "Reference": "Decode an action profile member to PI action profile member.",
    "HebCup": "Decode an action profile member to Pi Action Profile Member."
}
{
    "Origin": "If not, returns -1.",
    "Reference": "If not, returns null.",
    "HebCup": "If not, returns -1."
}
{
    "Origin": "Sets the quorum name for operations.",
    "Reference": "Sets the split brain protection name for operations.",
    "HebCup": "Sets the split Brain Protection Name for operations."
}
{
    "Origin": "Visit class header and get class name, access , and intefraces\ninformatoin (step 1,2, and 3) for SVUID computation.",
    "Reference": "Visit class header and get class name, access , and interfaces\ninformation (step 1,2, and 3) for SVUID computation.",
    "HebCup": "Visit class header and get class name, access , and intefraces\ninformatoin (step 1,2, and 3) for SVUID computation."
}
{
    "Origin": "This factory converts the arbitrary date-time object to an instance of {@code ZoneOffset}.",
    "Reference": "This factory converts the arbitrary temporal object to an instance of {@code ZoneOffset}.",
    "HebCup": "This factory converts the arbitrary date-time object to an instance of {@code ZoneOffset}."
}
{
    "Origin": "Validates that trailing checksums should be enabled based on {@link ClientType} and the presence\nor S3 specific headers.",
    "Reference": "Validates that checksums should be enabled based on {@link ClientType} and the presence\nor S3 specific headers.",
    "HebCup": "Validates that put Object Checksum should be enabled based on {@link ClientType} and the presence or S3 specific headers."
}
{
    "Origin": "or throws a {@link com.liferay.calendar.NoSuchBookingException} if it could not be found.",
    "Reference": "or throws a {@link NoSuchBookingException} if it could not be found.",
    "HebCup": "or throws a {@link com.liferay.calendar.NoSuchBookingException} if it could not be found."
}
{
    "Origin": "This method will called {@link ByteBufferPool#release(ByteBuffer)} if a buffer pool has\nbeen configured.",
    "Reference": "This method calls {@link ByteBufferPool#release(ByteBuffer)} if a buffer pool has\nbeen configured.",
    "HebCup": "This method will called {@link ByteBufferPool#release(ByteBuffer)} if a buffer pool has\nbeen configured."
}
{
    "Origin": "Generate and write the html page that shows the snapshot and the state of\nthe ZoomParams",
    "Reference": "Generate and write the html page that shows the snapshot and the ZoomState",
    "HebCup": "Generate and write the html page that shows the snapshot and the state of the zoomState"
}
{
    "Origin": "SecretProperties secret} and call {@link SecretClient#getSecret(SecretProperties)}.",
    "Reference": "SecretProperties secret} and call {@link SecretClient#getSecret(String, String)}.",
    "HebCup": "SecretProperties PropertiesOfSecret} and call {@link SecretClient#getSecret (SecretProperties)}."
}
{
    "Origin": "Removes all actors and cells from the table (same as {@link #clear()}) and additionally resets all table properties and\ncell, column, and row defaults.",
    "Reference": "Removes all actors and cells from the table (same as {@link #clearChildren()}) and additionally resets all table properties\nand cell, column, and row defaults.",
    "HebCup": "Removes all actors and cells from the table (same as {@link#clearChildren ()}) and additionally resets all table properties and cell , column , and row defaults."
}
{
    "Origin": "If the number of missing elements is\n    32 x times the number of present elements, treat it as sparse",
    "Reference": "If the number of missing elements is 32x times the number of present\nelements, consider it as sparse.",
    "HebCup": "If the number of missing elements is\n    32 x times the number of present elements, treat it as sparse"
}
{
    "Origin": "Returns an immutable set containing one element.",
    "Reference": "Returns an unmodifiable set containing one element.",
    "HebCup": "Returns an Unmodifiable set containing one element."
}
{
    "Origin": "Compute the number of bytes that would be needed to encode a {@code uint32} field.",
    "Reference": "Compute the number of bytes that would be needed to encode a varInt.",
    "HebCup": "computeRaw the number of bytes that would be needed to encode a {@code uint32} field."
}
{
    "Origin": "Create a new read/write access object.",
    "Reference": "Create a new read/write access object with the given default timeout.",
    "HebCup": "Create a new read/write access object."
}
{
    "Origin": "Filter the array under test keeping only elements whose property or field specified by {@code propertyOrFieldName}\nis null.",
    "Reference": "Filter the array under test into a list composed of the elements whose property or field specified\nby {@code propertyOrFieldName} are null.",
    "HebCup": "Filter the array under test keeping only elements whose property or field specified by {@code propertyOrFieldName}\nis null."
}
{
    "Origin": "First sends a request to the BlobStore and gets a list of all blob file summaries\nprefixed by the given coreName.",
    "Reference": "First sends a request to the BlobStore and gets a list of all blob file summaries\nprefixed by the given blobName.",
    "HebCup": "First sends a request to the BlobStore and gets a list of all blob file summaries prefixed by the given blobName."
}
{
    "Origin": "Creates a new HTTP authorization {@link Service} decorator using the specified\n{@link Authorizer}s.",
    "Reference": "Creates a new HTTP authorization {@link HttpService} decorator using the specified\n{@link Authorizer}s.",
    "HebCup": "Creates a new HTTP authorization {@link ?} decorator using the specified {@link Authorizer}s."
}
{
    "Origin": "Method that returns code to access a named state parameter.",
    "Reference": "Method that returns code to access a named prop parameter.",
    "HebCup": "Method that returns code to access a named Prop parameter."
}
{
    "Origin": "Do nothing if\n{@link BaseConfiguration#nocomment} is set to true.",
    "Reference": "Do nothing if\n{@link BaseOptions#noComment} is set to true.",
    "HebCup": "Do nothing if {@link Baseoptions.no#nocomment} is set to true."
}
{
    "Origin": "Executes {@link Pems#privateKeySpec(InputSupplier)} on the string which contains an encoded private key in PEM\nformat.",
    "Reference": "Executes {@link Pems#privateKeySpec(ByteSource)} on the string which contains an encoded private key in PEM\nformat.",
    "HebCup": "Executes {@link Pems#privateKeySpec(Inputwrap)} on the string which contains an encoded private key in PEM format."
}
{
    "Origin": "Verify that at most {@code maxEntries} per session can be put in the cache",
    "Reference": "Verify that at most {@code maxEntries} per session can be put in the store",
    "HebCup": "Verify that at most {@code maxEntries} per context can be put in the cache"
}
{
    "Origin": "Creates RedeemData for P2PKH or P2PK input.",
    "Reference": "Creates RedeemData for P2PKH, P2WPKH or P2PK input.",
    "HebCup": "Creates RedeemData for P2PKH or P2PK input."
}
{
    "Origin": "Return a new {@link Terms} in which term of {@code coreNodeName} is removed",
    "Reference": "Return a new {@link Terms} in which terms for the {@code coreNodeName} are removed",
    "HebCup": "Return a new {@link Terms} in which term of {@code coreNodeName} is removed"
}
{
    "Origin": "Typically used for RPCs\nat best efforts (e.g., async cache).",
    "Reference": "This method is typically used for RPCs\nproviding best efforts (e.g., async cache).",
    "HebCup": "Typically used for RPCs\nat best efforts (e.g., async cache)."
}
{
    "Origin": "Create an initial optimistic locking value according the {@link VersionType}\ncontract for the version property if required and inject it into\nthe snapshot state.",
    "Reference": "Create an initial optimistic locking value according the {@link VersionSupport}\ncontract for the version property if required and inject it into\nthe snapshot state.",
    "HebCup": "Create an initial optimistic locking value according the {@link VersionDescriptor} contract for the version property if required and inject it into the snapshot state."
}
{
    "Origin": "Returns the number of allowed parallel requests the configured {@link Router} should adhere to.",
    "Reference": "Returns the currently configured {@link ExchangeStrategies}.",
    "HebCup": "Returns the number of allowed parallel Exchange the configured {@link Router} should adhere to."
}
{
    "Origin": "Checks that collection {@param col} doesn't contains string {@param str}.",
    "Reference": "Checks that collection {@param col} doesn't contains element {@param str}.",
    "HebCup": "Checks that collection {@param col} doesn't contains T {@param str}."
}
{
    "Origin": "Return the initial pixel size used to define initial arrays\n(tile AA chunk, alpha line, buckets)",
    "Reference": "Return the initial pixel height used to define initial arrays\n(buckets)",
    "HebCup": "Return the initial pixel Height used to define initial arrays (tile AA chunk , alpha line , buckets)"
}
{
    "Origin": "It is up to the Authenticator\nimplementation processing this token if an authentication attempt without an inetAddress is valid or not.",
    "Reference": "It is up to the Authenticator\nimplementation processing this token if an authentication attempt without a host is valid or not.",
    "HebCup": "It is up to the Authenticator implementation processing this token if an authentication attempt without an String is valid or not."
}
{
    "Origin": "Useful because the\ngranularity of the clock on some systems is low, so doing a Thread.sleep(10) may not give you\na different clock value, for example.",
    "Reference": "(Also, useful because the granularity\nof the clock on some systems is low, so doing a Thread.sleep(10) may not give you a different clock value",
    "HebCup": "Useful because the\ngranularity of the clock on some systems is low, so doing a Thread.sleep(10) may not give you\na different clock value, for example."
}
{
    "Origin": "Sets {@link MediaItem2} object to render using VideoView2.",
    "Reference": "Sets {@link MediaItem} object to render using VideoView2.",
    "HebCup": "Sets {@link MediaItem} object to render using VideoView2."
}
{
    "Origin": "Otherwise,\nthe specified consumer is invoked with the leader index metadata fetched from the remote cluster.",
    "Reference": "Otherwise, the specified consumer is invoked with the cluster state and leader index metadata\nfetched from the remote cluster.",
    "HebCup": "Otherwise, the specified consumer is invoked with the Cluster State Leader Index Metadata fetched from the remote cluster."
}
{
    "Origin": "Returns true if the currently set key guard matches our minimum quality requirements.",
    "Reference": "Returns true if the currently set key guard violates our minimum quality requirements.",
    "HebCup": "Returns true if the currently set Active Password matches our minimum quality requirements."
}
{
    "Origin": "It incorporates the zone, bulb type and command\ncategory.",
    "Reference": "It incorporates the bridge, zone, bulb type and command\ncategory.",
    "HebCup": "It incorporates the zone, bulb type and command\ncategory."
}
{
    "Origin": "Restore redundancy with backoff.",
    "Reference": "Restore redundancy with an exponential backoff.",
    "HebCup": "Restore redundancy with backoff."
}
{
    "Origin": "Generates a code sample for using {@link FileClient#uploadRangeFromUrl(long, long, long, URI)}",
    "Reference": "Generates a code sample for using {@link FileClient#uploadRangeFromUrl(long, long, long, String)}",
    "HebCup": "Generates a code sample for using {@link FileClient#uploadRangeFromUrl(long, long, long, URI)}"
}
{
    "Origin": "If typeVar is a captured wildcard, returns that wildcard; otherwise returns null.",
    "Reference": "If typeVar is a captured wildcard, returns that wildcard; otherwise returns {@code null}.",
    "HebCup": "If typeVar is a captured wildcard, returns that wildcard; otherwise returns null."
}
{
    "Origin": "Set this quaternion to be a representation of the supplied axis and\nangle (in radians).",
    "Reference": "Set this quaternion to be a representation of the supplied axis and\nangle (in degrees).",
    "HebCup": "Set this quaternion to be a representation of the supplied axis and\nangle (in radians)."
}
{
    "Origin": "Like {@link #readGenericRecords(Schema)}, but reads each filepattern in the input {@link\nPCollection}.",
    "Reference": "Like {@link #readGenericRecords(Schema)}, but for a {@link PCollection} of {@link",
    "HebCup": "Like {@link #readGenericRecords(Schema)}, but reads each filepattern in the input {@link\nPCollection}."
}
{
    "Origin": "Returns the whitelisted regular expressions.",
    "Reference": "Returns the white regular expressions.",
    "HebCup": "Returns the White regular expressions."
}
{
    "Origin": "Used by system internally to merge the other resources of chained operators\nwhen generating the job graph or merge the resource consumed by state backend.",
    "Reference": "Used by system internally to merge the other resources of chained operators\nwhen generating the job graph.",
    "HebCup": "Used by system internally to merge the other resources of chained operators when generating the job graph or merge the resource consumed by off backend."
}
{
    "Origin": "Adds a single sensitivity to the builder using metadata.",
    "Reference": "Adds a single sensitivity to the builder.",
    "HebCup": "Adds a single sensitivity to the builder using metadata."
}
{
    "Origin": "Creates a Course object and an Instructor object for the Course.",
    "Reference": "Creates a course and an associated instructor for the course.",
    "HebCup": "Creates a Course object and an created object for the Course."
}
{
    "Origin": "Indicates if the display name of the XRY meta key is a recognized type.",
    "Reference": "Indicates if the display name of the XRY key is a recognized type.",
    "HebCup": "Indicates if the display name of the Xry Meta Key is a recognized type."
}
{
    "Origin": "Test of var method, of class BinomialDistribution.",
    "Reference": "Test of variance method, of class BinomialDistribution.",
    "HebCup": "Test of Variance method , of class BinomialDistribution."
}
{
    "Origin": "bold driver: Gemulla et al., Large-scale matrix factorization with distributed stochastic gradient descent,\nKDD 2011.\nconstant decay: Niu et al, Hogwild!",
    "Reference": "bold driver: Gemulla et al., Large-times matrix factorization with distributed stochastic gradient descent,\nKDD 2011.\nconstant decay: Niu et al, Hogwild!",
    "HebCup": "bold driver: Gemulla et al., Large-scale matrix factorization with distributed stochastic gradient descent,\nKDD 2011.\nconstant decay: Niu et al, Hogwild!"
}
{
    "Origin": "With natural ordering,\n{@link Ordering#natural()} is returned.",
    "Reference": "Ordering#natural()} is returned.",
    "HebCup": "With natural ordering,\n{@link Ordering#natural()} is returned."
}
{
    "Origin": "Executes {@link Pems#publicKeySpec(InputSupplier)} on the string which contains an encoded public key in PEM\nformat.",
    "Reference": "Executes {@link Pems#publicKeySpec(ByteSource)} on the string which contains an encoded public key in PEM\nformat.",
    "HebCup": "Executes {@link Pems#publicKeySpec(Inputwrap)} on the string which contains an encoded public key in PEM format."
}
{
    "Origin": "This method schedules the disablement for asynchronous execution.",
    "Reference": "This method deactivates and disables the component immediately.",
    "HebCup": "This method schedules the disablement for asynchronous execution."
}
{
    "Origin": "Switch to the given page, update the highlighted episode.",
    "Reference": "Switch to the episode at the given position.",
    "HebCup": "Switch to the given page, update the highlighted episode."
}
{
    "Origin": "Repairs the metadata table.",
    "Reference": "Repairs the schema history table.",
    "HebCup": "Repairs the schema table."
}
{
    "Origin": "Returns an immutable list containing three elements.",
    "Reference": "Returns an unmodifiable list containing three elements.",
    "HebCup": "Returns an Unmodifiable list containing three elements."
}
{
    "Origin": "Sets SSLHostConfig infos.",
    "Reference": "Sets SslHostConfig infos.",
    "HebCup": "Sets SslHostConfig infos."
}
{
    "Origin": "See Immutable Set Static Factory Methods for details.",
    "Reference": "See Unmodifiable Sets for details.",
    "HebCup": "See Unmodifiable Set Static Factory Methods for details."
}
{
    "Origin": "Sets the CSS pages for the Static Website.",
    "Reference": "Sets the listings CSS page for the Static Website.",
    "HebCup": "Sets the CSS pages for the Static Website."
}
{
    "Origin": "Returns a literal for the {@link Reference} policy.",
    "Reference": "Returns a literal for the {@link ScrService.Reference} policy.",
    "HebCup": "Returns a literal for the {@link ScrService.Reference} policy."
}
{
    "Origin": "Expands the given row.",
    "Reference": "Expands the given item at given index.",
    "HebCup": "Expands the given Client."
}
{
    "Origin": "Sets playback rate using {@link PlaybackParams2}.",
    "Reference": "Sets playback rate using {@link PlaybackParams}.",
    "HebCup": "Sets playback rate using {@link PlaybackParams}."
}
{
    "Origin": "Adds the specified argument as XQuery string.",
    "Reference": "Adds the specified argument unchanged.",
    "HebCup": "Adds the specified argument as add string."
}
{
    "Origin": "Returns an ordered range of all the sync d l objects where companyId = ?",
    "Reference": "Returns an ordered range of all the sync d l objects where modifiedTime > ?",
    "HebCup": "Returns an ordered range of all the sync d l objects where companyId = ?"
}
{
    "Origin": "This is measured from the bottom, that is, the expected shortfall with the level 99% corresponds to\nthe average of the smallest 99% of the observations.",
    "Reference": "This is measured from the bottom, that is, Thus the expected shortfall with the level 99% corresponds to\nthe smallest 99% observations.",
    "HebCup": "This is measured from the bottom, that is, the expected Shortfall Result From Unsorted with the level 99% corresponds to the average of the smallest 99% of the observations."
}
{
    "Origin": "The base URL will be the application URL.",
    "Reference": "The base URL will be the application back-end URL.",
    "HebCup": "The base URL will be the application URL."
}
{
    "Origin": "Atomically updates the current hi value with the results of\napplying the given delta, returning the updated value.",
    "Reference": "Atomically adds the given delta to the current hi value, returning the updated hi value.",
    "HebCup": "Atomically adds the current hi value with the results of applying the given delta , returning the updated value."
}
{
    "Origin": "Returns the report builder for the rootmost component that contains any of the duplicate\nbindings.",
    "Reference": "Returns the report builder for the rootmost component that contains any of the {@code\nbindings}.",
    "HebCup": "Returns the report builder for the rootmost component that contains any of the bindings."
}
{
    "Origin": "Centres this dialog on the main fame.",
    "Reference": "Centres this dialog on the parent window.",
    "HebCup": "Centres this dialog on the main fame."
}
{
    "Origin": "Gets the value of the source property.",
    "Reference": "Gets the value of the parameter property.",
    "HebCup": "Gets the value of the Parameter property."
}
{
    "Origin": "If an event\nlistener is assignable to {@link EventListener} it will registered as is.",
    "Reference": "If an event\nhandler is assignable to {@link EventMessageHandler} it will registered as is.",
    "HebCup": "If an event Handlers is assignable to {@link EventListener} it will registered as is."
}
{
    "Origin": "use_credentials: Cross-origin CORS requests for the element will have the credentials flag set.",
    "Reference": "USE_CREDENTIALS: Cross-origin CORS requests for the element will have the credentials flag set.",
    "HebCup": "use_credentials: Cross-origin CORS requests for the element will have the credentials flag set."
}
{
    "Origin": "Allocates an array of the specified length in unmanaged memory to hold references to objects\non the Java heap.",
    "Reference": "Allocates an array of the specified length to hold references to objects on the Java heap.",
    "HebCup": "Allocates an array of the specified length in unmanaged memory to hold references to objects\non the Java heap."
}
{
    "Origin": "Nota: the defining points are meant to be the extrema points inside the ribbon.",
    "Reference": "Nota: the defining points are meant to be the precise extrema Point2D values on the\nborders of the ribbon.",
    "HebCup": "Nota: the defining points are meant to be the extrema points inside the ribbon."
}
{
    "Origin": "Customer lock status: * `false` - unlocked * `true` - locked  All users of this customer will be blocked and can not login anymore.",
    "Reference": "Customer is locked: * `false` - unlocked * `true` - locked  All users of this customer will be blocked and can not login anymore.",
    "HebCup": "Customer lock: * `false` - unlocked * `true` - locked All users of this customer will be blocked and can not login anymore."
}
{
    "Origin": "A comparison of document clustering techniques\nKDD workshop on text mining, 2000",
    "Reference": "A Comparison of Document Clustering Techniques\nKDD workshop on text mining.",
    "HebCup": "A comparison of document clustering techniques KDD workshop on text mining. 2000"
}
{
    "Origin": "Doesn't support date types.",
    "Reference": "Doesn't support date types or structs.",
    "HebCup": "Doesn't support date types."
}
{
    "Origin": "Test method for {@link org.infinispan.spring.provider.SpringRemoteCacheManager#start()}.",
    "Reference": "Test method for {@link org.infinispan.spring.remote.provider.SpringRemoteCacheManager#start()}.",
    "HebCup": "Test method for {@link org.infinispan.spring.provider.SpringRemoteCacheManager#start()}."
}
{
    "Origin": "Returns the expression node to the left of the \"::\" if it exists.",
    "Reference": "Returns the expression to the left of the \"::\" if it exists and is\nunambiguous.",
    "HebCup": "ASTPrimaryExpression the expression node to the left of the ``::`` if it exists."
}
{
    "Origin": "Execute function for each chunk of arguments.",
    "Reference": "Execute function for each chunk of arguments and collect the result.",
    "HebCup": "Execute function for each foreach of arguments."
}
{
    "Origin": "Runs a process using a custom timeout and a process terminator.",
    "Reference": "Runs a process using a custom termination check interval and a process\nterminator.",
    "HebCup": "Runs a process using a custom terminationCheckInterval and a process terminator."
}
{
    "Origin": "(Shiro's default Authenticator\nallows null IPs to support localhost and proxy server environments).",
    "Reference": "(Shiro's default Authenticator allows null hosts to support localhost and proxy server environments).",
    "HebCup": "(Shiro's default Authenticator\nallows null IPs to support localhost and proxy server environments)."
}
{
    "Origin": "Adds an actor as a child of this group, immediately after another child actor.",
    "Reference": "If the\nactor is already a child of this group, no changes are made.",
    "HebCup": "Adds an actor as a child of this group, immediately after another child actor."
}
{
    "Origin": "TODO: If an input result partition of an involved region is not available, i.e.",
    "Reference": "If an input result partition of an involved region is not available, i.e.",
    "HebCup": "TODO: If an input result partition of an involved (is not available , i.e."
}
{
    "Origin": "Use {@link #destroyToNaiveMatrix()} if you do not need further\nupdates.",
    "Reference": "Use {@link #destroyToPopulationMatrix()} if you do not need further\nupdates.",
    "HebCup": "Use {@link #destroyToPopulationMatrix()} if you do not need further updates."
}
{
    "Origin": "This method currently handles\nevents for the classname combo box.",
    "Reference": "This method currently handles\nevents for the classname JLabeledChoice",
    "HebCup": "This method currently handles events for the class Name Labeled Choice box."
}
{
    "Origin": "Waits until the query with the specified id has been started.",
    "Reference": "Waits until a very slow query has been started.",
    "HebCup": "verySlowQuery until the query with the specified id has been started."
}
{
    "Origin": "{@code handshake} will be null and {@code throwable} will be non-null in the case of a\nfailed TLS connection attempt.",
    "Reference": "{@code handshake} will be null and {@code ioe} will be non-null in the case of a\nfailed TLS connection attempt.",
    "HebCup": "{@code handshake} will be null and {@code IOException} will be non-null in the case of a failed TLS connection attempt."
}
{
    "Origin": "Creates an audit entry when a service definition is deleted.",
    "Reference": "Creates an audit entry when a API definition is deleted.",
    "HebCup": "Creates an audit entry when a api Definition is deleted."
}
{
    "Origin": "Schedules package actions differentiating their type among Linux and Solaris\nservers.",
    "Reference": "Schedules package actions.",
    "HebCup": "Schedules package actions differentiating their type among Linux and Solaris\nservers."
}
{
    "Origin": "Returns the partition ID for the given key.",
    "Reference": "Returns the service ID for the given primitive ID.",
    "HebCup": "Returns the Service Id for the given key."
}
{
    "Origin": "Return the formatted string.",
    "Reference": "Return the formatted string in its current state.",
    "HebCup": "Return the formatted string."
}
{
    "Origin": "If --all is specified, --interface won't be visible",
    "Reference": "If --all is specified, --entity won't be visible",
    "HebCup": "If --all is specified , --entity won't be visible"
}
{
    "Origin": "Returns the raw binary representation of the handshake header.",
    "Reference": "Returns the raw binary representation of the handshake message.",
    "HebCup": "byteArray the raw binary representation of the handshake header."
}
{
    "Origin": "Access Control Using AWS Identity and Access Management (IAM) \n.",
    "Reference": "For more information, see Access Control Using AWS Identity and Access Management (IAM).",
    "HebCup": "Access Control Using AWS Identity and Access Management (IAM) \n."
}
{
    "Origin": "Sets the console script.",
    "Reference": "Sets the web server script.",
    "HebCup": "Sets the console script."
}
{
    "Origin": "Should return {@code null} for values that cannot be compared\nunder Comparability semantics.",
    "Reference": "Should return {@code Comparison.UNDEFINED} for values that cannot be compared\nunder Comparability semantics.",
    "HebCup": "Should return {@code null} for values that cannot be compared\nunder Comparability semantics."
}
{
    "Origin": "{@codesnippet com.azure.storage.blob.specialized.PageBlobClient.copyIncremental#URL-String}",
    "Reference": "{@codesnippet com.azure.storage.blob.specialized.PageBlobClient.copyIncremental#String-String}",
    "HebCup": "{@codesnippet com.azure.storage.blob.specialized.PageBlobClient.copyIncremental#String-String}"
}
{
    "Origin": "Backs up the subscriptions and bookmarks databases to external storage.",
    "Reference": "Backs up the databases to external storage.",
    "HebCup": "Backs up the subscriptions and bookmarks databases to external storage."
}
{
    "Origin": "If the lock list is write locked, returns LockMode.WRITE.",
    "Reference": "If mode is read but the lock list is write locked, returns LockMode.WRITE.",
    "HebCup": "return the lock list is write locked , returns LockMode.WRITE."
}
{
    "Origin": "Custom logic to only enable the configuration element as this is immutable and once the MuleContext is started we cannot change\nvalues.",
    "Reference": "MuleConfiguration for instance is immutable and once the MuleContext is started we cannot change its values.",
    "HebCup": "Custom logic to only enable the configuration element as this is immutable and once the MuleContext is started we cannot change\nvalues."
}
{
    "Origin": "If the new value is not equal to\n{@code getValue()}, fires a value change event.",
    "Reference": "If the new value is not equal to\n{@code getValue()}, fires a {@link ValueChangeEvent}.",
    "HebCup": "Objects.requireNonNull the new value is not equal to {@code getValue ()} , fires a value change event."
}
{
    "Origin": "Gets a collection of bibentries and sets an ID for every entry.",
    "Reference": "Gets a collection of entries and sets an ID for every entry.",
    "HebCup": "Gets a collection of entries and sets an ID for every entry."
}
{
    "Origin": "Obtains an instance of {@code ZonedDateTime} from an {@code OffsetDateTime}.",
    "Reference": "Obtains an instance of {@code ZonedDateTime} from the instant formed by combining\nthe local date-time and offset.",
    "HebCup": "Obtains an instance of {@code ZonedDateTime} from an {@code LocalDateTime}."
}
{
    "Origin": "Called when a track info is deselected.",
    "Reference": "Called when a track is deselected.",
    "HebCup": "Called when a track info is deselected."
}
{
    "Origin": "Gets current playback position as a {@link MediaTimestamp2}.",
    "Reference": "Gets current playback position as a {@link MediaTimestamp}.",
    "HebCup": "Gets current playback position as a {@link MediaTimestamp}."
}
{
    "Origin": "Internal mapper to remember and add all types for the RecyclerView.",
    "Reference": "Internal mapper to remember and add all view types for the items.",
    "HebCup": "Internal mapper to remember and add all types for the RecyclerView."
}
{
    "Origin": "They are not accessible in the handler provided as parameter.",
    "Reference": "They are NOT accessible in the handler provided as parameter.",
    "HebCup": "They are not accessible in the handler provided as parameter."
}
{
    "Origin": "XML Catalogs, OASIS Standard V1.1, invalid path entries will be ignored.",
    "Reference": "XML Catalogs, OASIS Standard V1.1, if a catalog entry is invalid, it\nis ignored.",
    "HebCup": "XML Catalogs , OASIS Standard V1.1 , invalid uri entries will be ignored."
}
{
    "Origin": "In order to apply the rotation transformation to an existing transformation,\nuse {@link #rotate(Quaterniond) rotate()} instead.",
    "Reference": "In order to apply the rotation transformation to an existing transformation,\nuse {@link #rotate(Quaterniondc) rotate()} instead.",
    "HebCup": "In order to apply the rotation transformation to an existing transformation, use {@link #rotate(Quaterniondc) rotate()} instead."
}
{
    "Origin": "Returns the servlet request instance.",
    "Reference": "Returns the current HTTP connection.",
    "HebCup": "Returns the HTTP request instance."
}
{
    "Origin": "Varargs version of {@link #addState(Closure, Object, java.util.Set)}.",
    "Reference": "Varargs version of {@link #addState(Consumer, Object, java.util.Set)}.",
    "HebCup": "Varargs version of {@link #addState(Consumer, Object, java.util.Set)}."
}
{
    "Origin": "This completes the switch.",
    "Reference": "This completes the change.",
    "HebCup": "This completes the switch."
}
{
    "Origin": "Creates a command that can be run later which will restore a display to its\ncurrent state.",
    "Reference": "Creates a module that can be run later which will restore a display to its\ncurrent state.",
    "HebCup": "Creates a Module that can be run later which will restore a display to its current state."
}
{
    "Origin": "Return the underlying expression tree.",
    "Reference": "Return the math expression as operation tree.",
    "HebCup": "Return the underlying expression toTree."
}
{
    "Origin": "A guarded transition from native to Java.",
    "Reference": "An unguarded transition to Java.",
    "HebCup": "A guarded transition from native to Java."
}
{
    "Origin": "Setter for the auto-pull flag.",
    "Reference": "Setter for the pull-after flag.",
    "HebCup": "Setter for the Pull-pull flag."
}
{
    "Origin": "Calls {@link #arrayAllocationSize(int, int, int, GraalHotSpotVMConfig)} using an injected VM\nconfiguration object.",
    "Reference": "Calls {@link #arrayAllocationSize(int, int, int, int)} using an injected VM configuration\nobject.",
    "HebCup": "Calls {@link #arrayAllocationSize(int, int, int, GraalHotSpotVMAlignment)} using an injected VM configuration object."
}
{
    "Origin": "Get a table object based on the identifier.",
    "Reference": "Get a table object by name.",
    "HebCup": "Get a Bs object based on the identifier."
}
{
    "Origin": "reverts local changes for this post, replacing it with the latest version from the server",
    "Reference": "discard local changes for this post, replacing it with the latest version from the server",
    "HebCup": "reverts local changes for this Changes , replacing it with the latest version from the server"
}
{
    "Origin": "Get Multiply Rate.",
    "Reference": "Get Faktor.",
    "HebCup": "Get Multiply Rate."
}
{
    "Origin": "By design the return value is not a {@link WithinRangeCondition}.",
    "Reference": "By design the return value is not a speciailized version of a Condition.",
    "HebCup": "By design the return value is not a {@link WithinRangeconditionWithin}."
}
{
    "Origin": "This method sets the value of the database column m_prj_risk.dateraised",
    "Reference": "This method sets the value of the database column m_prj_risk.raisedDate",
    "HebCup": "This method sets the value of the database column m_prj_risk.Raiseddate"
}
{
    "Origin": "Returns the Realm Type, in the described table, of the named column.",
    "Reference": "Returns the {@link ColumnDetails}, in the described table, of the named column.",
    "HebCup": "Returns the Column Type , in the described table , of the named column."
}
{
    "Origin": "Finds the table schema that can be used for a format schema (without time attributes).",
    "Reference": "Finds the table schema that can be used for a format schema (without time attributes and generated columns).",
    "HebCup": "Finds the table schema that can be used for a format schema (without time attributes)."
}
{
    "Origin": "Note: This API uses {@link Class} instead of {@link Module} to provide backwards\ncompatibility for JVMCI clients compiled against a JDK release earlier than 9.",
    "Reference": "Note: This API uses {@link Class} instead of {@code Module} to provide backwards\ncompatibility for JVMCI clients compiled against a JDK release earlier than 9.",
    "HebCup": "Note: This API uses {@link Class} instead of {@link Object} to provide backwards compatibility for JVMCI clients compiled against a JDK release earlier than 9."
}
{
    "Origin": "Obtains an instance of {@code OffsetDateTime} from a date-time object.",
    "Reference": "Obtains an instance of {@code OffsetDateTime} from a temporal object.",
    "HebCup": "Obtains an instance of {@code OffsetDateTime} from a date-time object."
}
{
    "Origin": "Primitive operation which inserts the node at the tail of the frontier.",
    "Reference": "Inserts the node at the tail of the frontier.",
    "HebCup": "Primitive operation which inserts the node at the tail of the frontier."
}
{
    "Origin": "{@codesnippet com.azure.data.applicationconfig.configurationclient.listSettingRevisions#settingSelector}",
    "Reference": "{@codesnippet com.azure.data.applicationconfig.configurationclient.listRevisions#settingSelector}",
    "HebCup": "{@codesnippet com.azure.data.applicationconfig.configurationclient.listRevisions#settingSelector}"
}
{
    "Origin": "Obtains an instance from the specified unique name.",
    "Reference": "Obtains an instance from the specified name.",
    "HebCup": "Obtains an instance from the specified name."
}
{
    "Origin": "Returns a string representation of this object; useful for testing and debugging.",
    "Reference": "Returns a string representation of this object.",
    "HebCup": "Returns a string representation of this object; useful for testing and debugging."
}
{
    "Origin": "Create a new detached JDOQuery instance with the given projection",
    "Reference": "Create a new detached {@link JDOQuery} instance with the given projection",
    "HebCup": "Create a new detached JDOQuery instance with the given projection"
}
{
    "Origin": "Tests the {@link FileSystemMaster#checkConsistency(AlluxioURI, CheckConsistencyOptions)} method\nwhen some files are consistent in a larger inode tree.",
    "Reference": "Tests the {@link FileSystemMaster#checkConsistency(AlluxioURI, CheckConsistencyContext)} method\nwhen some files are consistent in a larger inode tree.",
    "HebCup": "Tests the {@link FileSystemMaster#checkConsistency (AlluxioURI , CheckConsistencyContext)} method when some files are consistent in a larger inode tree."
}
{
    "Origin": "Add init return statments.",
    "Reference": "Add nil return statement.",
    "HebCup": "add Nil Return statments."
}
{
    "Origin": "The {@link RsaKeyCreateOptions#isEnabled() enabled}\nfield is set to true by Azure Key Vault, if not specified.",
    "Reference": "The {@link CreateRsaKeyOptions#isEnabled() enabled}\nfield is set to true by Azure Key Vault, if not specified.",
    "HebCup": "The {@link CreateRsaKeyOptions#isEnabled () enabled} field is set to true by Azure Key Vault , if not specified."
}
{
    "Origin": "Asserts that the cache contains the given data for {@code uriString}.",
    "Reference": "Asserts that the cache contains necessary data for the {@code requestSet}.",
    "HebCup": "Asserts that the cache contains the given CachedData for {@code uriString}."
}
{
    "Origin": "Creates a new leader {@link FileSystemMaster} from journal along with its dependencies, and\nreturns the master registry containing that master.",
    "Reference": "Creates a new leader {@link FileSystemMaster} from journal along with its dependencies, and\nreturns the master registry and the journal system.",
    "HebCup": "Creates a new leader {@link FileSystemMaster} from journal along with its dependencies, and returns the Fs Master Resource containing that master."
}
{
    "Origin": "{@link net.dv8tion.jda.api.requests.ErrorResponse#UNKNOWN_EMOJI}",
    "Reference": "{@link net.dv8tion.jda.api.requests.ErrorResponse#UNKNOWN_EMOJI UNKNOWN_EMOJI}",
    "HebCup": "{@link net.dv8tion.jda.api.requests.ErrorResponse#UNKNOWN_EMOJI}"
}
{
    "Origin": "The provided {@link XMPPError XMPPError}.",
    "Reference": "The provided {@link StanzaError XMPPError}.",
    "HebCup": "The provided {@link StanzaError StanzaError}."
}
{
    "Origin": "The executor will shutdown\non {@link #shutdown()}, if not detached.",
    "Reference": "The executors will shutdown\non {@link #shutdown()}, if not detached.",
    "HebCup": "The Executors will shutdown on {@link#shutdown ()} , if not detached."
}
{
    "Origin": "The ParcelFileDescriptor will be closed when the list\nbecomes empty.",
    "Reference": "The ParcelFileDescriptor will\nbe closed when the count becomes zero.",
    "HebCup": "The RefFileDescriptor will be closed when the list becomes empty."
}
{
    "Origin": "Returns the client preferences.",
    "Reference": "Returns the request including client preferences.",
    "HebCup": "Returns the Request preferences."
}
{
    "Origin": "Get UPC/EAN.",
    "Reference": "Get TU-UPC.",
    "HebCup": "get UPC _ TU/EAN."
}
{
    "Origin": "Returns the value of the {@code bitfield} field.",
    "Reference": "Returns the value of the {@code direction} field.",
    "HebCup": "Returns the value of the {@code direction} field."
}
{
    "Origin": "Get the last time this object was used in ms.",
    "Reference": "Gets the last time this object was used in milliseconds.",
    "HebCup": "Get the last time this object was UsedMillis in ms."
}
{
    "Origin": "Convenience method for getScheme(host.getSchemeName())",
    "Reference": "Convenience method for {@code getScheme(host.getSchemeName())}",
    "HebCup": "Convenience method for getScheme(host.getSchemeName())"
}
{
    "Origin": "The meta-property for the {@code expiryDateTime} property.",
    "Reference": "The meta-property for the {@code expiry} property.",
    "HebCup": "The meta-property for the {@code expiry} property."
}
{
    "Origin": "If this happens, a configuration {@link ConfigurationEvent event} will\nbe sent to all registered listeners.",
    "Reference": "If this happens, a CONFIGURATION {@link ConfigurationEvent event} will\nbe sent to all registered listeners.",
    "HebCup": "If this happens , a CONFIGURATION {@link ConfigurationEvent event} will be sent to all registered listeners."
}
{
    "Origin": "Convert to primitive types, returning default value if text is null.",
    "Reference": "Convert to duration, returning default value if text is inconvertible.",
    "HebCup": "Convert to primitive types, returning default value if text is null."
}
{
    "Origin": "Gets policy for resource set.",
    "Reference": "Delete policy for resource set.",
    "HebCup": "Gets policy for saved."
}
{
    "Origin": "The alias is a boolean value located\nunder the {@link #ENABLED} key.",
    "Reference": "The alias is a boolean value located\nunder the {@link HasEnableUtil#ENABLED} key.",
    "HebCup": "The alias is a boolean value located under the {@link#HasEnableUtil.ENABLED} key."
}
{
    "Origin": "Returns the {@link CaptureRequestConfiguration} for the {@link CaptureStage} object.",
    "Reference": "Returns the {@link CaptureRequestConfig} for the {@link CaptureStage} object.",
    "HebCup": "Returns the {@link CaptureRequestConfig} for the {@link CaptureStage} object."
}
{
    "Origin": "Simple names for a given type.",
    "Reference": "Return the descriptor class for a given type.",
    "HebCup": "Simple DescriptorClassName for a given type."
}
{
    "Origin": "Get the preventEncryptionScopeOverride property: Optional.",
    "Reference": "Get the encryptionScopeOverridePrevented property: Optional.",
    "HebCup": "Get the isEncryptionScopeOverridePrevented property: Optional."
}
{
    "Origin": "Get the FCPClient if it exists.",
    "Reference": "Get the PersistentRequestClient if it exists.",
    "HebCup": "Get the PersistentRequestClient if it exists."
}
{
    "Origin": "Set the connection, this is usually called by subclasses when the channel is added to the pipeline.",
    "Reference": "Set the connection, this is called when the channel is added to the pipeline.",
    "HebCup": "Set the connection, this is usually called by subclasses when the channel is added to the pipeline."
}
{
    "Origin": "Get the classloader and module finder.",
    "Reference": "Get the callstack.",
    "HebCup": "Get the classloader Finder.get Call Stack."
}
{
    "Origin": "Validation type is responsible for whether entity bean validation will be applied on {@link DataManager} level.",
    "Reference": "Validation mode affects whether entity bean validation will be applied on {@link DataManager} level.",
    "HebCup": "validation Mode is responsible for whether entity bean validation will be applied on {@link DataManager} level."
}
{
    "Origin": "Delete persisted {@link WorkUnit}s upon job completion.",
    "Reference": "Delete persisted {@link WorkUnit}s and {@link JobState} upon job completion.",
    "HebCup": "cleanup Working {@link WorkUnit}s upon job completion."
}
{
    "Origin": "A return value of {@code -1} necessarily\nindicate that the map contains no mapping for the key.",
    "Reference": "A return value of {@code #FREE} necessarily\nindicate that the map contains no mapping for the key.",
    "HebCup": "A return value of {@code -1} necessarily\nindicate that the map contains no mapping for the key."
}
{
    "Origin": "Create Subject Alternative names with dns names.",
    "Reference": "Set the dns names.",
    "HebCup": "Create Subject Alternative names with dns names."
}
{
    "Origin": "So when we got block and all is ok - call this method.",
    "Reference": "So when we got packet and all is ok - call this method.",
    "HebCup": "So when we got sessionReader.remoteNodeInfo and all is ok - call this method."
}
{
    "Origin": "Creates execution sequence for pending task groups by interleaving their unique occurrences.",
    "Reference": "Creates execution sequence for pending task groups by interleaving batches of requested size of\ntheir occurrences.",
    "HebCup": "Creates execution sequence for pending task groups by interleaving their unique occurrences."
}
{
    "Origin": "Wait for this task to meet the expected number of records as defined by {@code\nexpectedRecords}.",
    "Reference": "Wait up to the specified timeout for this task to meet the expected number of records as\ndefined by {@code expectedRecords}.",
    "HebCup": "Wait for this task to meet the expected number of records as defined by {@code\nexpectedRecords}."
}
{
    "Origin": "Therefore this is very convinient place to register\nscaler with Disposer as well as trigger deregistring bad font\nin case when scaler reports this.",
    "Reference": "Therefore this is very convinient place to register\nscaler with Disposer as well as trigger deregistering a bad font\nwhen the scaler reports this.",
    "HebCup": "Therefore this is very convinient place to register\nscaler with Disposer as well as trigger deregistring bad font\nin case when scaler reports this."
}
{
    "Origin": "gets all tv show episodes from database",
    "Reference": "SYNCHRONOUSLY gets all tv show episodes from database",
    "HebCup": "gets all tv show episodes from database"
}
{
    "Origin": "Obtains an instance from the specified unique name.",
    "Reference": "Obtains an instance from the specified name.",
    "HebCup": "Obtains an instance from the specified name."
}
{
    "Origin": "Value of the code encoded.",
    "Reference": "Value of the errorCode encoded.",
    "HebCup": "errorCodeValue of the code encoded."
}
{
    "Origin": "Closes the session.",
    "Reference": "Updates the session state.",
    "HebCup": "setState the session."
}
{
    "Origin": "This function implements a subset of quoted-printable encoding specification (rule REF and rule REF) as defined in\nRFC 1521.",
    "Reference": "This function fully implements the quoted-printable encoding specification (rule REF through rule REF) as\ndefined in RFC 1521.",
    "HebCup": "This function implements a subset of quoted-printable encoding specification (rule REF and rule REF) as defined in\nRFC 1521."
}
{
    "Origin": "Method to get the configuration knowning the set",
    "Reference": "Method to get the first configuration knowning the set",
    "HebCup": "Method to get the get knowning the set"
}
{
    "Origin": "Binds the HTTP connection.",
    "Reference": "Assigns an external property.",
    "HebCup": "Binds the props.put connection."
}
{
    "Origin": "Note that the writing process does not start until the returned {@code Mono} is subscribed\nto.",
    "Reference": "Note that the writing process does not start until the returned {@code Flux} is subscribed\nto.",
    "HebCup": "Note that the writing process does not start until the returned {@code Flux} is subscribed to."
}
{
    "Origin": "Tests resilency when D2 device availability is changed.",
    "Reference": "Tests resiliency when D2 device availability is changed.",
    "HebCup": "Tests resiliency when D2 device availability is changed."
}
{
    "Origin": "Start building a new factory class-based service binding.",
    "Reference": "Start building a new supplier class-based service binding.",
    "HebCup": "Start building a new Supplier Class-based service binding."
}
{
    "Origin": "Creates an exception from an service name.",
    "Reference": "Creates an exception from an API name.",
    "HebCup": "Creates an exception from an api Name."
}
{
    "Origin": "Obtains an instance from the specified unique name.",
    "Reference": "Obtains an instance from the specified name.",
    "HebCup": "Obtains an instance from the specified name."
}
{
    "Origin": "Removes the source location value from this list of elements.",
    "Reference": "Removes the source location value from this map of elements.",
    "HebCup": "Removes the source location value from this list of elements."
}
{
    "Origin": "Make you have enabled the NA check properly using\n{@link #enable(RAbstractVector, RAbstractVector)} before relying on this method.",
    "Reference": "Make sure you have enabled the NA check properly using\n{@link #enable(RAbstractVector, RAbstractVector)} before relying on this method.",
    "HebCup": "Make you have enabled the NA check properly using\n{@link #enable(RAbstractVector, RAbstractVector)} before relying on this method."
}
{
    "Origin": "Make sure to\n{@link #releaseParser(SAXParser)} in\na  block every time you call this.",
    "Reference": "Make sure to\n{@link #releaseParser(PoolSAXParser)} in\na  block every time you call this.",
    "HebCup": "Make sure to {@link #releaseParser(PoolSAXParser)} in a block every time you call this."
}
{
    "Origin": "Send a non-mutation message to a given endpoint.",
    "Reference": "Send a non-mutation message to a given node.",
    "HebCup": "Send a non-mutation message to a given Node."
}
{
    "Origin": "Whether this codec is capable of encoding the given Java type.",
    "Reference": "Whether this codec is capable of processing the given Java type.",
    "HebCup": "Whether this codec is capable of encoding the given Java type."
}
{
    "Origin": "unlike excise we just need this endpoint gone without going through any notifications *",
    "Reference": "unlike excise we just need this node gone without going through any notifications *",
    "HebCup": "unlike excise we just need this Node gone without going through any notifications *"
}
{
    "Origin": "When a class B inherits from A and A is annotated as a struct, then B automatically gets the\nannotation, even if B's constructor is not explicitly annotated.",
    "Reference": "When a class B inherits from A and A is annotated as a struct, then B automatically gets the\nannotation, if B's constructor is not explicitly annotated.",
    "HebCup": "When a class B inherits from A and A is annotated as a struct, then B automatically gets the\nannotation, even if B's constructor is not explicitly annotated."
}
{
    "Origin": "Returns a string representation of this object; useful for testing and debugging.",
    "Reference": "Returns a string representation of this object.",
    "HebCup": "Returns a string representation of this object; useful for testing and debugging."
}
{
    "Origin": "Overrides previous instances of the exact\nsame subclass of FragmentOptions.",
    "Reference": "Overrides previous instances of the exact same subclass of {@code FragmentOptions}.",
    "HebCup": "Overrides previous instances of the exact same subclass of Fragmentoptions.getNormalized."
}
{
    "Origin": "List Multipart Uploads response, even if idempotent complete is\npossible.",
    "Reference": "Uploads response, even if idempotent complete is possible.",
    "HebCup": "List Multipart Uploads response, even if idempotent complete is\npossible."
}
{
    "Origin": "Load a {@link android.graphics.drawable.Drawable} asynchronously",
    "Reference": "Load a {@link android.graphics.drawable.Drawable} asynchronously (convenience method)",
    "HebCup": "Load a {@link android.graphics.drawable.Drawable} asynchronously"
}
{
    "Origin": "Set UPC/EAN.",
    "Reference": "Set TU-UPC.",
    "HebCup": "set UPC _ TU/EAN."
}
{
    "Origin": "Returns the opening {@link Month} within this set of bounds.",
    "Reference": "Returns the openAt {@link Month} within this set of bounds.",
    "HebCup": "Returns the OpenAt {@link Month} within this set of bounds."
}
{
    "Origin": "The KeyStore type (jks, jceks, pkcs12, etc) for the identity and trust store for connections created by this\nlistener.",
    "Reference": "The KeyStore type (jks, jceks, pkcs12, etc) for the identity and trust store for connections of a particular type.",
    "HebCup": "The KeyStore type (jks, jceks, pkcs12, etc) for the identity and trust store for connections created by this\nlistener."
}
{
    "Origin": "Returns a copy of this date-time with the zone ID locked to the offset.",
    "Reference": "Returns a copy of this date-time with the zone ID set to the offset.",
    "HebCup": "Returns a copy of this date-time with the zone ID Fixed to the offset."
}
{
    "Origin": "Generates a valid document ID for a service, used to index the service in ES.",
    "Reference": "Generates a valid document ID for a api, used to index the api in ES.",
    "HebCup": "Generates a valid document ID for a Api , used to index the Api in ES."
}
{
    "Origin": "If the range of the variable has not been set yet, it will be set to be\nval id from the start to the end of the instruction list.",
    "Reference": "If the range of the variable has not been set yet, it will be set to be\nvalid from the start to the end of the instruction list.",
    "HebCup": "If the range of the variable has not been set yet, it will be set to be\nval id from the start to the end of the instruction list."
}
{
    "Origin": "Deletes the elements in the mValues list and notifies the Adapter",
    "Reference": "Deletes the elements in the values list and notifies the Adapter",
    "HebCup": "Deletes the elements in the values list and notifies the Adapter"
}
{
    "Origin": "The version of this Titan graph database",
    "Reference": "The version of this JanusGraph graph database",
    "HebCup": "The version of this JanusGraph graph database"
}
{
    "Origin": "Uploading Large Archives in Parts (Multipart Upload)  and  Upload Part \nin the Amazon Glacier Developer Guide .",
    "Reference": "For conceptual information and underlying REST API, go to Uploading Large Archives in Parts (Multipart Upload) and Upload Part  in the Amazon Glacier Developer Guide.",
    "HebCup": "Uploading Large Archives in Parts (Multipart Upload)  and  Upload Part \nin the Amazon Glacier Developer Guide ."
}
{
    "Origin": "Creates a column instance from a value provider and a renderer.",
    "Reference": "Creates a column instance from a value provider, presentation provider\nand a renderer.",
    "HebCup": "Creates a column instance from a value provider and a renderer."
}
{
    "Origin": "This maps either the security ID or the legal entity ID to a group.",
    "Reference": "This maps the legal entity ID to a group.",
    "HebCup": "This maps either the security ID or the legal entity ID to a group."
}
{
    "Origin": "Returns the singleton instance of the {@link SliceBackgroundWorker} for specified {@link Uri}\nif exists",
    "Reference": "Returns the singleton instance of {@link SliceBackgroundWorker} for specified {@link Uri} if\nexists",
    "HebCup": "Returns the singleton instance of the {@link SliceBackgroundWorker} for specified {@link Uri}\nif exists"
}
{
    "Origin": "A {@link FileTransferException} if the operation was attempted but failed for any of the following reasons:",
    "Reference": "This method throws an {@link IOException} if the operation failed, for any of the following reasons:",
    "HebCup": "A {@link IOException} if the operation was attempted but failed for any of the following reasons:"
}
{
    "Origin": "Sets the schema version to the given {@link SharedRealm}.",
    "Reference": "Sets the schema version to the given {@link OsSharedRealm}.",
    "HebCup": "Sets the schema version to the given {@link OsSharedRealm}."
}
{
    "Origin": "Compare two groups based on the grouping attribute.",
    "Reference": "Compare two groups based on the group key",
    "HebCup": "Compare two groups based on the grouping GroupKey."
}
{
    "Origin": "Adds a handle to the constant pool of the class being built.",
    "Reference": "Adds a method handle to the constant pool of the class being built.",
    "HebCup": "Adds a MethodHandle to the constant pool of the class being built."
}
{
    "Origin": "Bind contract provider model to a provider class using the supplied instance manager.",
    "Reference": "Bind contract provider model to a provider class using the supplied injection manager.",
    "HebCup": "Bind contract provider model to a provider class using the supplied Injection Manager."
}
{
    "Origin": "The manifest produced by this service do not include checksum for each entry.",
    "Reference": "The manifest produced by this service do not include checksum for entries and caches manifests recently created.",
    "HebCup": "The manifest produced by this service do not include checksum for each entry."
}
{
    "Origin": "Returns all documents contained in this cluster.",
    "Reference": "Returns all documents contained in this cluster or an empty list if none.",
    "HebCup": "List all documents contained in this cluster."
}
{
    "Origin": "Return the {@code StreamManager} in a context, or the global one if the context is\nnull or does not contain an entry for a {@code StreamManager}.",
    "Reference": "Return the {@code StreamManager} in a context, or the global one if the context is\nnull or does not contain a valid entry for a {@code StreamManager}.",
    "HebCup": "Return the {@code StreamManager} in a context, or the global one if the context is\nnull or does not contain an entry for a {@code StreamManager}."
}
{
    "Origin": "Sets the quorum name for lock operations.",
    "Reference": "Sets the split brain protection name for lock operations.",
    "HebCup": "Sets the split Brain Protection Name for lock operations."
}
{
    "Origin": "[IF Sidecar19-SE]",
    "Reference": "[IF Java14]",
    "HebCup": "[IF Sidecar19-SE]"
}
{
    "Origin": "Obtain a {@link RemoteRepository} for the data set having the specified\nSPARQL end point.",
    "Reference": "Obtain a flyweight {@link RemoteRepository} for the data set having the specified\nSPARQL end point.",
    "HebCup": "Obtain a {@link RemoteRepository} for the data set having the specified\nSPARQL end point."
}
{
    "Origin": "Returns an AccountListItem from the specified position in the mValues list",
    "Reference": "Returns an AccountListItem from the specified position in the values list",
    "HebCup": "Returns an AccountListItem from the specified position in the values list"
}
{
    "Origin": "PlaybackParams2 to the given input.",
    "Reference": "PlaybackParams to the given input.",
    "HebCup": "PlaybackParams to the given input."
}
{
    "Origin": "Setter for {@link #allowCredentials}",
    "Reference": "Setter for {@link #allowedCredentials}",
    "HebCup": "Setter for {@link#allowedCredentials}"
}
{
    "Origin": "Obtain the {@link MongoDatabase database} with given name form the given {@link MongoDbFactory factory}.",
    "Reference": "Obtain the {@link MongoDatabase database} with given name form the given {@link MongoDatabaseFactory factory}.",
    "HebCup": "Obtain the {@link MongoDatabase database} with given name form the given {@link MongoDatabaseFactory factory}."
}
{
    "Origin": "Returns a string representation of this object; useful for testing and debugging.",
    "Reference": "Returns a string representation of this object.",
    "HebCup": "Returns a string representation of this object; useful for testing and debugging."
}
{
    "Origin": "Copies this expression's return type and size to the given expression.",
    "Reference": "Copies this expression's type to the specified expression.",
    "HebCup": "Copies this expression's return type and this to the given expression."
}
{
    "Origin": "The returned {@link MetadataEntity} is of the same type.",
    "Reference": "The returned {@link MetadataEntity.Builder} is of the same type.",
    "HebCup": "The returned {@link validateKey} is of the same type."
}
{
    "Origin": "Returns an immutable map containing a single mapping.",
    "Reference": "Returns an unmodifiable map containing a single mapping.",
    "HebCup": "Returns an Unmodifiable map containing a single mapping."
}
{
    "Origin": "Generates a code sample for using {@link ShareDirectoryClient#deleteSubDirectoryWithResponse(String, Duration,",
    "Reference": "Generates a code sample for using {@link ShareDirectoryClient#deleteSubdirectoryWithResponse(String, Duration,",
    "HebCup": "Generates a code sample for using {@link ShareDirectoryClient#deleteSubdirectoryWithResponse (String , Duration ,"
}
{
    "Origin": "The expected indentation should be the same as the indentation of the node\nwhich is the parent of the target modifier node.",
    "Reference": "The expected indentation should be the same as the indentation of the target node.",
    "HebCup": "The expected indentation should be the same as the indentation of the node which is the parent of the target node."
}
{
    "Origin": "Check if the last item in key signature has some trailing space (before any head).",
    "Reference": "Check if last item in key signature has some trailing space (before any head).",
    "HebCup": "Check if the last item in key signature has some trailing space (before any head)."
}
{
    "Origin": "Marks the action as analyzing.",
    "Reference": "Marks the action as scanning.",
    "HebCup": "Marks the action as Scanning."
}
{
    "Origin": "Returns a string representation of this object; useful for testing and debugging.",
    "Reference": "Returns a string representation of this object.",
    "HebCup": "Returns a string representation of this object; useful for testing and debugging."
}
{
    "Origin": "Get or create a storage block by the name.",
    "Reference": "Gets or creates a buffer block by the name.",
    "HebCup": "Get or create a Shader Buffer Block by the name."
}
{
    "Origin": "Calculates Minimum - Nulls are handled as zeros.",
    "Reference": "Calculates Minimum - Nulls are ignored.",
    "HebCup": "Calculates Minimum - Nulls are handled as zeros."
}
{
    "Origin": "and repositoryId = ?.",
    "Reference": "and parentFolderId = ?.",
    "HebCup": "and parentFolderId = ?."
}
{
    "Origin": "Test of var method, of class Exponential.",
    "Reference": "Test of variance method, of class Exponential.",
    "HebCup": "Test of Variance method , of class Exponential."
}
{
    "Origin": "If you want to extend a value (e.g.",
    "Reference": "If you like to extend an option (e.g.",
    "HebCup": "If you want to extend a value (e.g."
}
{
    "Origin": "Returns the ssh configuration entry which includes host and identity file location",
    "Reference": "Returns the ssh configuration entry which includes host, identity file location and Host Key\nchecking policy",
    "HebCup": "Returns the ssh configuration entry which includes host and identity file location"
}
{
    "Origin": "Extracts the underlying quotes from the {@link CurveInputs} instances and returns them in a map.",
    "Reference": "Extracts the underlying quotes from the {@link RatesCurveInputs} instances and returns them in a map.",
    "HebCup": "Extracts the underlying quotes from the {@link RatesCurveInputs} instances and returns them in a map."
}
{
    "Origin": "Sets the minimum session timeout.",
    "Reference": "Sets the session timeout.",
    "HebCup": "Sets the minimum session timeout."
}
{
    "Origin": "Gets the {@link Value.Mutable} for the {@link CatType} of this\n{@link CatData}.",
    "Reference": "Gets the {@link Value.Mutable} for the {@link CatType} of this\n{@link Cat}.",
    "HebCup": "Gets the {@link Value.Mutable} for the {@link CatType} of this\n{@link CatData}."
}
{
    "Origin": "Copy the contents of a Bucket to a RandomAccessThing at a specific offset.",
    "Reference": "Copy the contents of a Bucket to a RandomAccessBuffer at a specific offset.",
    "HebCup": "Copy the contents of a Bucket to a RandomAccessBuffer at a specific offset."
}
{
    "Origin": "This method is used\nonly to initialize the acceptReplacers field.",
    "Reference": "This method is used\nonly to initialize the headerReplacers field.",
    "HebCup": "This method is used only to initialize the HeaderReplacers field."
}
{
    "Origin": "To add or remove access for an AWS account to copy or restore a\nmanual DB snapshot, or to make the manual DB snapshot public or\nprivate, use the ModifyDBSnapshotAttribute API.",
    "Reference": "To add or remove access for an AWS account to copy or restore a manual DB\nsnapshot, or to make the manual DB snapshot public or private, use the",
    "HebCup": "To add or remove access for an AWS account to copy or restore a\nmanual DB snapshot, or to make the manual DB snapshot public or\nprivate, use the ModifyDBSnapshotAttribute API."
}
{
    "Origin": "Computes the average for each pixel across all bands in the {@link Planar} image.",
    "Reference": "Computes the minimum for each pixel across all bands in the {@link Planar} image.",
    "HebCup": "Computes the average for each pixel across all bands in the {@link Planar} image."
}
{
    "Origin": "{@code timeDifferenceMs} can be negative but it's absolute value must not be larger than current window \"before\"\nvalue (which would result in a negative window size).",
    "Reference": "{@code timeDifferenceMs} can be negative but its absolute value must not be larger than current window \"before\"\nvalue (which would result in a negative window size).",
    "HebCup": "{@code timeDifferenceMs} can be negative but it's absolute value must not be larger than current window \"before\"\nvalue (which would result in a negative window size)."
}
{
    "Origin": "If they are not\nthe same an AssertionFailedError is thrown.",
    "Reference": "AssertionFailedError is thrown.",
    "HebCup": "If they are not\nthe same an AssertionFailedError is thrown."
}
{
    "Origin": "Asynchronously gets a service.",
    "Reference": "Asynchronously gets a api.",
    "HebCup": "Asynchronously gets a Api."
}
{
    "Origin": "Tests this matcher against the given {@link DiscordRequest}.",
    "Reference": "Tests this matcher against the given {@link DiscordWebRequest}.",
    "HebCup": "Tests this matcher against the given {@link DiscordWebRequest}."
}
{
    "Origin": "Add optimized insert value.",
    "Reference": "Add insert value.",
    "HebCup": "add Insert Value."
}
{
    "Origin": "Creates a new internal Jetty connector.",
    "Reference": "Creates a new Jetty connection factory.",
    "HebCup": "Creates a new internal Jetty ConnectionFactory."
}
{
    "Origin": "See\n{@link GlobalCheckpointTracker#updateAllocationIdsFromMaster(long, Set, Set)} for details.",
    "Reference": "See\n{@link GlobalCheckpointTracker#updateFromMaster(long, Set, Set, Set)} for details.",
    "HebCup": "See {@link GlobalCheckpointTracker#updateFromMaster (long , Set , Set)} for details."
}
{
    "Origin": "This test asserts that only one\nstate is added to the stateflowgraph.",
    "Reference": "This test asserts that only one state is added to the state-flow graph.",
    "HebCup": "This test asserts that only one\nstate is added to the stateflowgraph."
}
{
    "Origin": "Update the metadata version for the given key (cluster or store).",
    "Reference": "Update the metadata versions for the given keys (cluster or store).",
    "HebCup": "Update the metadata version for the given key (cluster or store)."
}
{
    "Origin": "{@code\nimport ratpack.rx2.RxRatpack;\nimport ratpack.test.exec.ExecHarness;\nimport io.reactivex.Observable;",
    "Reference": "{@code\nimport ratpack.rx2.RxRatpack;\nimport ratpack.test.exec.ExecHarness;\nimport io.reactivex.Single;",
    "HebCup": "{@code import ratpack.rx2.RxRatpack; import ratpack.test.exec.ExecHarness; import io.reactivex.Single;"
}
{
    "Origin": "We include all flags that enable CPU instructions as we want best possible performance for\nthe code.",
    "Reference": "We include all flags that enable AMD64 CPU instructions as we want best possible performance\nfor the code.",
    "HebCup": "We include all AMD64 Flags that enable CPU instructions as we want best possible performance for the code."
}
{
    "Origin": "Sets the value of the 'ValueType' field.",
    "Reference": "Sets the value of the 'valueType' field.",
    "HebCup": "Sets the value of the 'valueType' field."
}
{
    "Origin": "The LOCATION on Ontario Lake should not be overwritten since Ontario (STATE_OR_PROVINCE)\ndoes not span Ontario Lake.",
    "Reference": "The ORGANIZATION on Ontario Bank should not ve overrwritten since Ontario (STATE_OR_PROVINCE)\ndoes not span Ontario Bank.",
    "HebCup": "The ORGANIZATION on Ontario Lake should not be overwritten since Ontario (STATE_OR_PROVINCE) does not span Ontario Lake."
}
{
    "Origin": "This method should only be used for steps whose value is\n{@link #TYPE_ARGUMENT TYPE_ARGUMENT}.",
    "Reference": "This method should\nonly be used for steps whose value is {@link #TYPE_ARGUMENT}.",
    "HebCup": "This method should only be used for steps whose value is\n{@link #TYPE_ARGUMENT TYPE_ARGUMENT}."
}
{
    "Origin": "Registers a new content observer for the media library",
    "Reference": "Registers a new library observer for the media library",
    "HebCup": "Registers a new Library Observer for the media library"
}
{
    "Origin": "Returns the height of the specified row, or 0 if the table layout has not been validated.",
    "Reference": "Returns the height of the specified row.",
    "HebCup": "Returns the height of the specified row, or 0 if the table layout has not been validated."
}
{
    "Origin": "Specifies the component's horizontal width, measured in pixels.",
    "Reference": "Specifies the horizontal width of the %type%, measured in pixels.",
    "HebCup": "Specifies the component's horizontal width %type%, measured in pixels."
}
{
    "Origin": "Test of parse method, of class FinishedMessageParser.",
    "Reference": "Test of parse method, of class FinishedParser.",
    "HebCup": "Test of parse method, of class FinishedParser."
}
{
    "Origin": "Create Subject Alternative names with emails.",
    "Reference": "Set the emails.",
    "HebCup": "Create Subject Alternative names with emails."
}
{
    "Origin": "If nodes returned are to be further used, they must be finalized via {@link ANode#finish()}.",
    "Reference": "Before nodes are added to the result, they must be finalized via {@link ANode#finish()}.",
    "HebCup": "If nodes returned are to be further used, they must be finalized via {@link ANode#finish()}."
}
{
    "Origin": "We make sure that\ntrying to update the field works if the user has the \"correct\" role, but failes if it doesn't.",
    "Reference": "We make sure that\ntrying to update the field works if the user has the \"correct\" role, but fails if it doesn't.",
    "HebCup": "We make sure that trying to update the field works if the user has the ``correct`` role , but fails if it doesn't."
}
{
    "Origin": "Create new {@link Builder} based on an existing {@link BaseEvent} instance and and {@link EventContext}.",
    "Reference": "Create new {@link Builder} based on an existing {@link CoreEvent} instance and and {@link EventContext}.",
    "HebCup": "Create new {@link Builder} based on an existing {@link CoreEvent} instance and and {@link EventContext}."
}
{
    "Origin": "Test of npara method, of class MultivariateGaussian.",
    "Reference": "Test of length method, of class MultivariateGaussian.",
    "HebCup": "Test of Length method , of class MultivariateGaussian."
}
{
    "Origin": "Create a {@link Jwt} Validator that contains all standard validators as well as\nany supplied in the parameter list.",
    "Reference": "Create a {@link Jwt} Validator that contains all standard validators when an issuer is known.",
    "HebCup": "Create a {@link With} Validator that contains all standard validators as well as any supplied in the parameter list."
}
{
    "Origin": "Gets a property of type {@link PropertyType#PATH}, interpreting the value properly, replacing\nsupported environment variables.",
    "Reference": "Gets a property of type {@link PropertyType#PATH}.",
    "HebCup": "Gets a property of type {@link PropertyType#contains} , interpreting the value properly , replacing supported environment variables."
}
{
    "Origin": "Returns whether or not specified {@link SVGElement} fits this {@link SvgSelector} conditions.",
    "Reference": "Returns whether or not specified {@link SVGElement} matches this {@link SvgSelector} conditions.",
    "HebCup": "Returns whether or not specified {@link SVGElement} fits this {@link SvgSelector} conditions."
}
{
    "Origin": "Parent will have\nmodified time to set to {@link LayerConfiguration#DEFAULT_MODIFIED_TIME}.",
    "Reference": "Parent will have\nmodification time set to {@link LayerConfiguration#DEFAULT_MODIFICATION_TIME}.",
    "HebCup": "Parent will have modified time to set to {@link LayerConfiguration#DEFAULT_MODIFICATION_TIME}."
}
{
    "Origin": "Returns true if the method m is visible from code in the class from.",
    "Reference": "Returns true if the classmember m is visible from code in the class from.",
    "HebCup": "Returns true if the Member m is visible from code in the class from."
}
{
    "Origin": "Set Balancing.",
    "Reference": "Set Saldierung.",
    "HebCup": "Set Balancing."
}
{
    "Origin": "The option will be converted to a  type.",
    "Reference": "The option is a:  type.",
    "HebCup": "The option will be converted to a  type."
}
{
    "Origin": "Returns a curve node for a CDS quoted in points upfront.",
    "Reference": "Returns a curve node with points upfront convention.",
    "HebCup": "Returns a curve node for a CDS quoted in points upfront."
}
{
    "Origin": "Recursively find all operators under root, that are of class clazz, and\nput them in result.",
    "Reference": "Recursively find all operators under root, that are of class clazz or are the sub-class of clazz, and\nput them in result.",
    "HebCup": "Recursively find all operators under root, that are of class clazz, and\nput them in result."
}
{
    "Origin": "Convert to object types, returning null if text is null.",
    "Reference": "Convert to object types, returning null if text is null or empty.",
    "HebCup": "Convert to object types, returning null if text is null."
}
{
    "Origin": "Sets the transformed layout.",
    "Reference": "Transform the partition.",
    "HebCup": "Sets the Transformation.set."
}
{
    "Origin": "Creates an entity and populates its state based on the dbObject given.",
    "Reference": "Creates an entity and populates its state based on the document given.",
    "HebCup": "Creates an entity and populates its state based on the Document given."
}
{
    "Origin": "Sets the entity.",
    "Reference": "Set the entity.",
    "HebCup": "Sets the entity."
}
{
    "Origin": "An empty NumericDocValues which returns zero for every document",
    "Reference": "An empty NumericDocValues which returns no documents",
    "HebCup": "An empty NumericDocValues which returns zero for every document"
}
{
    "Origin": "Setter for the URL of the content review icon associated with this item",
    "Reference": "Setter for the css class of the content review icon associated with this item",
    "HebCup": "Setter for the CssClass of the content review icon associated with this item"
}
{
    "Origin": "Returns\n {@link RolapConnectionProperties#UseContentChecksum}\nis set to false.",
    "Reference": "Returns\n if {@link RolapConnectionProperties#UseContentChecksum}\nis set to false.",
    "HebCup": "Returns\n {@link RolapConnectionProperties#UseContentChecksum}\nis set to false."
}
{
    "Origin": "Returns an {@link InputSupplier} for a given entry.",
    "Reference": "Gets the {@link Manifest} inside the given jar.",
    "HebCup": "Returns an {@link InputSupplier} for a given try."
}
{
    "Origin": "Returns whether or not specified {@link SVGElement} fits this {@link SvgSelector} selector conditions.",
    "Reference": "Returns whether or not specified {@link SVGElement} matches this {@link SvgSelector} conditions.",
    "HebCup": "match whether or not specified {@link SVGElement} fits this {@link SvgSelector} selector conditions."
}
{
    "Origin": "bounded predict\n* predict the rating given a sparse appender vector",
    "Reference": "Predict the rating given a sparse appender vector.",
    "HebCup": "bounded predict\n* predict the rating given a sparse appender vector"
}
{
    "Origin": "One way to ensure this is to always call\n{@link #declareLabel declared} before calling this method.",
    "Reference": "One way to ensure this is to always call {@link #declareLabel} before\ncalling this method.",
    "HebCup": "One way to ensure this is to always call\n{@link #declareLabel declared} before calling this method."
}
{
    "Origin": "Felix constructor documentation for more information on\nframework configuration options.",
    "Reference": "Refer to the  Felix\n constructor documentation for more information on framework\nconfiguration options.",
    "HebCup": "Felix constructor documentation for more information on\nframework configuration options."
}
{
    "Origin": "The choices are: 1 = top, 2 = vertically centered, 3 = aligned at the bottom.",
    "Reference": "The choices are: 1 = aligned at the top, 2 = vertically centered, 3 = aligned at the bottom.",
    "HebCup": "The choices are: 1 = top, 2 = vertically centered, 3 = aligned at the bottom bottom."
}
{
    "Origin": "Verifies that the given {@code emailContent} is the same as\nthe content given in the file at {@code filePathParam}.",
    "Reference": "Verifies that the given {@code emailContent} is the same as\nthe content given in the file at {@code fileName}.",
    "HebCup": "Verifies that the given {@code emailContent} is the same as the content given in the file at {@code fileName}."
}
{
    "Origin": "Returns a better disabled icon than BasicLookAndFeel offers.",
    "Reference": "Returns better disabled icon than {@link BasicLookAndFeel} offers.",
    "HebCup": "Returns a better Image icon than BasicLookAndFeel offers."
}
{
    "Origin": "This will set the margin between the annotations \"outer\" rectangle defined by\n/Rect and the border.",
    "Reference": "This will set the difference between the annotations \"outer\" rectangle defined by\n/Rect and the border.",
    "HebCup": "This will set the difference between the annotations ``outer`` rectangle defined by /Rect and the border."
}
{
    "Origin": "Compute the total number of transferred addresses.",
    "Reference": "Get the total number of addresses in range.",
    "HebCup": "get the total number of transferred addresses."
}
{
    "Origin": "Convenience method for calling {@link #newGenericExecuteException(TemplateCallableModel, boolean, String)}.",
    "Reference": "Convenience method for calling\n{@link #newGenericExecuteException(String, TemplateCallableModel, boolean, Throwable)}",
    "HebCup": "Convenience method for calling {@link #newGenericExecuteException(TemplateCallableModel, boolean, String)}."
}
{
    "Origin": "Backs up all buckets for the device to the given node.",
    "Reference": "Backs up the given flow bucket.",
    "HebCup": "Backs up all buckets for the device to the given >."
}
{
    "Origin": "Make JobDirectoryManifestService beans are configured as expected.",
    "Reference": "Make JobDirectoryManifestService beans is configured as expected.",
    "HebCup": "Make JobDirectoryManifestService Bean are configured as expected."
}
{
    "Origin": "Runs the given {@code runnable} at most {@code retryCount} times until it passes,\nleaving {@code intervalMillis} milliseconds between the invocations.",
    "Reference": "Runs the given {@code runnable} at most {@code attemptsCount} times until it passes,\nleaving {@code intervalMillis} milliseconds between the invocations.",
    "HebCup": "Runs the given {@code runnable} at most {@code retryCount} times until it passes,\nleaving {@code intervalMillis} milliseconds between the invocations."
}
{
    "Origin": "Removes a query focus from the stack.",
    "Reference": "Removes the current query focus from the stack.",
    "HebCup": "pollLast a query focus from the stack."
}
{
    "Origin": "It\nsatisfies the general contract of the {@link Object#hashCode",
    "Reference": "It satisfies the general\ncontract of the {@link Object#hashCode Object.hashCode} method.",
    "HebCup": "It\nsatisfies the general contract of the {@link Object#hashCode"
}
{
    "Origin": "NativeLinkable}.",
    "Reference": "NativeLinkableGroup}.",
    "HebCup": "NativeLinkableGroup}."
}
{
    "Origin": "Returns a new Run with the new status, and with the status of the given, completed step set accordingly.",
    "Reference": "Returns a new Run with the status of the given completed step set accordingly.",
    "HebCup": "Returns a new Run with the new status , and with the status of the given , completed StepInfo set accordingly."
}
{
    "Origin": "Sets the groups used to find an issuer curve.",
    "Reference": "Sets the groups used to find an issuer curve by legal entity.",
    "HebCup": "Sets the groups used to find an issuer curve."
}
{
    "Origin": "Sets the amount of damage caused by the event",
    "Reference": "Sets the raw amount of damage caused by the event",
    "HebCup": "Sets the amount of damage caused by the event"
}
{
    "Origin": "Apply the rotation transformation of the given {@link Quaterniond} to this matrix and store\nthe result in .",
    "Reference": "Apply the rotation transformation of the given {@link Quaterniondc} to this matrix and store\nthe result in .",
    "HebCup": "Apply the rotation transformation of the given {@link Quaterniondc} to this matrix and store the result in ."
}
{
    "Origin": "Gets the {@link EncryptionScope} used to encrypt this blob's content on the server.",
    "Reference": "Gets the {@code encryption scope} used to encrypt this blob's content on the server.",
    "HebCup": "Gets the {@link String} used to encrypt this blob's content on the server."
}
{
    "Origin": "If version is null, \"latest\" or \"$LATEST\",\nthen it returns the highest version available in the system for the package.",
    "Reference": "If version is null, PackageUtils.LATEST or PackagePluginHolder.LATEST,\nthen it returns the highest version available in the system for the package.",
    "HebCup": "If version is null, ``latest`` or ``LATEST``, then it returns the highest version available in the system for the package."
}
{
    "Origin": "Configuration)",
    "Reference": "Dynamic Configuration)",
    "HebCup": "Configuration)"
}
{
    "Origin": "Gets the threshold parameter value.",
    "Reference": "Get the threshold parameter value.",
    "HebCup": "Gets the getThreshold parameter value."
}
{
    "Origin": "Tests the {@link FileSystemMaster#checkConsistency(AlluxioURI, CheckConsistencyOptions)} method\nwhen a file is not the correct size.",
    "Reference": "Tests the {@link FileSystemMaster#checkConsistency(AlluxioURI, CheckConsistencyContext)} method\nwhen a file is not the correct size.",
    "HebCup": "Tests the {@link FileSystemMaster#checkConsistency (AlluxioURI , CheckConsistencyContext)} method when a file is not the correct size."
}
{
    "Origin": "Returns list of nodes matching defined line and column number.",
    "Reference": "Returns list of nodes matching defined line number, column number and token type.",
    "HebCup": "Returns list of nodes matching defined line and column number."
}
{
    "Origin": "Deletes an external ID.",
    "Reference": "Inserts or updates an external ID.",
    "HebCup": "Deletes an external ID."
}
{
    "Origin": "Calls the specified converter function with the current Maybe instance\nduring assembly time and returns its result.",
    "Reference": "Calls the specified converter function during assembly time and returns its resulting value.",
    "HebCup": "Calls the specified converter function with the current MaybeConverter instance during assembly time and returns its result."
}
{
    "Origin": "Get OpenID IDP configurations\n### Functional Description:   Retrieve a list of configured OpenID Connect IDPs.",
    "Reference": "Get list of OpenID Connect IDP configurations\n### Functional Description:   Retrieve a list of configured OpenID Connect IDPs.",
    "HebCup": "Get OpenID IDP configurations\n### Functional Description:   Retrieve a list of configured OpenID Connect IDPs."
}
{
    "Origin": "Reports the percentile value from the given list ordered in a non-descending order.",
    "Reference": "Reports the percentile value from the continuous distribution described by a given list of\nsamples.",
    "HebCup": "Reports the percentile value from the given double ordered in a non-descending order."
}
{
    "Origin": "Marks {@code protoMember}, throwing if it is explicitly excluded, or if its enclosing type is\nalso specifically included.",
    "Reference": "Marks {@code protoMember}, throwing if it is explicitly excluded.",
    "HebCup": "Marks {@code protoMember}, throwing if it is explicitly excluded, or if its enclosing type is\nalso specifically included."
}
{
    "Origin": "This option allows to configure each configuration file based on the  location.",
    "Reference": "This option allows to configure each configuration fille based on the karaf.home location.",
    "HebCup": "This option allows to configure each configuration file based on the  location."
}
{
    "Origin": "Get all the jobs present in the wiki.",
    "Reference": "Get all the intervals/jobs present in the wiki.",
    "HebCup": "Get all the intervals present in the wiki."
}
{
    "Origin": "Return a single {@link ReflectiveMethodResolver}.",
    "Reference": "Return the specified {@link MethodResolver} delegates, if any.",
    "HebCup": "Return a single {@link ReflectiveMethodResolver}."
}
{
    "Origin": "This is useful for typical \nblocks in manual JavaMail code.",
    "Reference": "blocks in manual JavaMail code.",
    "HebCup": "This is useful for typical \nblocks in manual JavaMail code."
}
{
    "Origin": "Two objects are considered different if\n{@code value.compareTo(reference) != 0}",
    "Reference": "Two objects are considered different if\n{@code value.equals(reference) == false}",
    "HebCup": "Two objects are considered different if {@code value.equals (reference) != 0}"
}
{
    "Origin": "Expands all tree nodes in a single call.",
    "Reference": "Expands all tree nodes.",
    "HebCup": "Expands all tree nodes in a single call."
}
{
    "Origin": "Tests for defaults {@link CreateOptions}.",
    "Reference": "Tests for defaults {@link GetWorkerOptions}.",
    "HebCup": "Tests for defaults {@link Createoptions.getBlockInfo}."
}
{
    "Origin": "Modified by user info",
    "Reference": "Modified by user",
    "HebCup": "Modified by user info"
}
{
    "Origin": "Obtains an instance from the specified unique name.",
    "Reference": "Obtains an instance from the specified name.",
    "HebCup": "Obtains an instance from the specified name."
}
{
    "Origin": "The {@link EcKeyCreateOptions#getCurve() key curve} can be\noptionally specified.",
    "Reference": "The {@link CreateEcKeyOptions#getCurveName() key curve} can be\noptionally specified.",
    "HebCup": "The {@link CreateEcKeyOptions#getCurve () key curve} can be optionally specified."
}
{
    "Origin": "Used by track model container (e.g.",
    "Reference": "Only exposed to track model container (e.g.",
    "HebCup": "Used by Builder container (e.g."
}
{
    "Origin": "IMPORTANT: The source DB instance must have backup retention\nenabled.",
    "Reference": "The source DB instance must have backup retention enabled.",
    "HebCup": "IMPORTANT: The source DB instance must have backup retention\nenabled."
}
{
    "Origin": "Requests that the player prefetch the media items for playback.",
    "Reference": "Requests that the player prepare the media items for playback.",
    "HebCup": "Requests that the player prepare the media items for playback."
}
{
    "Origin": "Getting Search Suggestions \nin the Amazon CloudSearch Developer Guide .",
    "Reference": "CloudSearch Developer Guide.",
    "HebCup": "Getting Search Suggestions \nin the Amazon CloudSearch Developer Guide ."
}
{
    "Origin": "Computes the minimum for each pixel across all bands in the {@link Planar} image.",
    "Reference": "Computes the minimum for each pixel across selected bands in the {@link Planar} image.",
    "HebCup": "Computes the minimum for each pixel across all bands in the {@link Planar} image."
}
{
    "Origin": "Sets current date as e-mails sent date.",
    "Reference": "Sets current date as the sent date.",
    "HebCup": "Sets current date as e-mails return."
}
{
    "Origin": "Sets the value of the cryptAlgorithmType property.",
    "Reference": "Sets the value of the algorithmName property.",
    "HebCup": "Sets the value of the AlgorithmName property."
}
{
    "Origin": "In case of\nfailure the {@link Flux} will error.",
    "Reference": "In case of\nfailure the {@link CosmosContinuablePagedFlux} will error.",
    "HebCup": "In case of\nfailure the {@link Flux} will error."
}
{
    "Origin": "Adds a network interface (aka port) into a given bridge of openstack node.",
    "Reference": "Adds or removes a network interface (aka port) into a given bridge of openstack node.",
    "HebCup": "addOrRemove a network interface (aka port) into a given bridge of openstack node."
}
{
    "Origin": "Sets the amount of time, in milliseconds, to wait between\nadjustments in pool sizes for a given host, to allow\nenough time for the adjustments to take effect.",
    "Reference": "Sets the amount of time to wait between adjustments in\npool sizes for a given host, to allow enough time for\nthe adjustments to take effect.",
    "HebCup": "Sets the amount of time, in milliseconds, to wait between\nadjustments in pool sizes for a given host, to allow\nenough time for the adjustments to take effect."
}
{
    "Origin": "Constuct a trace log event.",
    "Reference": "Constuct a fatal log event.",
    "HebCup": "Constuct a trace log event."
}
{
    "Origin": "Returns the QuorumConfig for the given name, creating one\nif necessary and adding it to the collection of known configurations.",
    "Reference": "Returns the {@link SplitBrainProtectionConfig} for the given name, creating one\nif necessary and adding it to the collection of known configurations.",
    "HebCup": "Returns the SplitBrainProtectionConfig for the given name , creating one if necessary and adding it to the collection of known configurations."
}
{
    "Origin": "timed invokeAll(,,null) throws NPE",
    "Reference": "timed invokeAll(,,null) throws NullPointerException",
    "HebCup": "timed invokeAll(,,null) throws NPE"
}
{
    "Origin": "All {@link ForeignKeyIndex} types\n  {@link DomainApplicationIndex}\n  {@link EppResourceIndex}",
    "Reference": "All {@link ForeignKeyIndex} types\n  {@link EppResourceIndex}",
    "HebCup": "All {@link ForeignKeyIndex} types\n  {@link DomainApplicationIndex}\n  {@link EppResourceIndex}"
}
{
    "Origin": "This method checks if the region of {@code path} starting\nat {@code pathOffset} matches the path segments in {@code segments}.",
    "Reference": "This method checks if the region of {@code path} starting\nat {@code pathOffset} matches the path pathSegments in {@code pathSegments}.",
    "HebCup": "This method checks if the region of {@code path} starting at {@code pathOffset} matches the path pathSegments in {@code pathSegments}."
}
{
    "Origin": "Indicates whether this filter needs to use the secondary, non-SQL method getMatchingFiles().",
    "Reference": "Indicates whether this filter needs to use the secondary, non-SQL method applyAlternateFilter().",
    "HebCup": "Indicates whether this filter needs to use the secondary, non-SQL method getMatchingFiles()."
}
{
    "Origin": "This only functions after we have been attached to a hierarchy.",
    "Reference": "This only works after this preference has been attached to a hierarchy.",
    "HebCup": "This only functions after we have been attached to a hierarchy."
}
{
    "Origin": "The {@link RsaKeyCreateOptions#getKeyType() keyType} indicates the type of key to create.",
    "Reference": "The {@link CreateRsaKeyOptions#getKeyType() keyType} indicates the type of key to create.",
    "HebCup": "The {@link CreateRsaKeyOptions#getKeyType () keyType} indicates the type of key to create."
}
{
    "Origin": "Set this {@link AxisAngle4f} to be equivalent to the given\n{@link Quaterniond}.",
    "Reference": "Set this {@link AxisAngle4f} to be equivalent to the given\n{@link Quaterniondc}.",
    "HebCup": "Set this {@link AxisAngle4f} to be equivalent to the given {@link Quaterniondc}."
}
{
    "Origin": "Create or obtain a {@link CallableStatement} from the pool.",
    "Reference": "Creates or obtains a {@link CallableStatement} from the pool.",
    "HebCup": "Create or obtain a {@link CallableStatement} from the pool."
}
{
    "Origin": "If the JAR file has a {@code Main-Class} attribute in its\n    main manifest then its value is the {@link",
    "Reference": "If the JAR file has a {@code Main-Class} attribute in its\n    main manifest then its value is the module {@link",
    "HebCup": "If the JAR file has a {@code Main-Class} attribute in its\n    main manifest then its value is the {@link"
}
{
    "Origin": "It is used for\nadapting this data provider to a filter type provided by a Component such\nas ComboBox.",
    "Reference": "This can be used for adapting this data provider to a filter\ntype provided by a Component such as ComboBox.",
    "HebCup": "It is used for\nadapting this data provider to a filter type provided by a Component such\nas ComboBox."
}
{
    "Origin": "Creates query for the given queryString.",
    "Reference": "Queries this search source for the given queryString.",
    "HebCup": "Creates Source for the given queryString."
}
{
    "Origin": "Create or obtain a {@link PreparedStatement} from the pool.",
    "Reference": "Creates or obtains a {@link PreparedStatement} from the pool.",
    "HebCup": "Create or obtain a {@link PreparedStatement} from the pool."
}
{
    "Origin": "Creates a {@link MetadataCoder}.",
    "Reference": "Returns the singleton {@link MetadataCoder} instance.",
    "HebCup": "Creates a {@link MetadataCoder}."
}
{
    "Origin": "Inserts the node at the tail of the frontier.",
    "Reference": "Primitive operation which inserts the node at the tail of the frontier.",
    "HebCup": "Inserts the node at the tail of the frontier."
}
{
    "Origin": "Returns the codec's supported type for decoding {@code requestedMimeType} on the current\ndevice, or {@code null} if the codec can't be used.",
    "Reference": "Returns the codec's supported MIME type for media of type {@code mimeType}, or {@code null} if\nthe codec can't be used.",
    "HebCup": "Returns the codec's supported type for decoding {@code mimeType} on the current device , or {@code null} if the codec can't be used."
}
{
    "Origin": "Remove all free glyphs that are assigned the provided group.",
    "Reference": "Remove all free glyphs that are only assigned the provided group.",
    "HebCup": "Remove all free glyphs that are assigned the provided Groups."
}
{
    "Origin": "Add insert optimize result uint.",
    "Reference": "Add insert optimize result unit into units.",
    "HebCup": "Add insert optimize insertOptimizeResultUnit uint."
}
{
    "Origin": "Returns the tasks entry with the primary key or throws a {@link com.liferay.tasks.NoSuchTasksEntryException} if it could not be found.",
    "Reference": "Returns the tasks entry with the primary key or throws a {@link NoSuchTasksEntryException} if it could not be found.",
    "HebCup": "Returns the tasks entry with the primary key or throws a {@link com.liferay.tasks.NoSuchTasksEntryException} if it could not be found."
}
{
    "Origin": "If no sld file, throws an exception",
    "Reference": "If no sld file, throws an appropriate exception",
    "HebCup": "If no sld file, throws an exception"
}
{
    "Origin": "Use this method if setting this option is not required and to express that it may be .",
    "Reference": "Builds the option and marks it as not required  Use this method if setting this option is not required and\nto express that it may be .",
    "HebCup": "Use this method if setting this option is not required and to express that it may be ."
}
{
    "Origin": "Gets the value of the descrption property.",
    "Reference": "Gets the value of the description property.",
    "HebCup": "Gets the value of the Description property."
}
{
    "Origin": "Gets the amount of available items in the network of the type passed in, checking NBT or not.",
    "Reference": "Gets the number of available items in the network satisfying the given matcher.",
    "HebCup": "Gets the amount of available Match In the network of the type passed in, checking NBT or not."
}
{
    "Origin": "This makes it\nhard to debug because if task throws an exception, its call stack ends in the execution engine that actually\nstarts a thread that serves the task.",
    "Reference": "This makes it\nhard to debug because if a task throws an exception, its call stack ends in the execution engine that actually\nstarts a thread that serves the task.",
    "HebCup": "This makes it\nhard to debug because if task throws an exception, its call stack ends in the execution engine that actually\nstarts a thread that serves the task."
}
{
    "Origin": "Creates new {@link DayOfMonth} in UTC.",
    "Reference": "Creates new {@link DayOfMonth}.",
    "HebCup": "Creates new {@link DayOfMonth} in UTC."
}
{
    "Origin": "Sets the entities.",
    "Reference": "Set the entities.",
    "HebCup": "Sets the entities."
}
{
    "Origin": "The option is a:\n type.",
    "Reference": "The option is a:",
    "HebCup": "The option is a:\n type."
}
{
    "Origin": "Test of from method, of class Statistics.",
    "Reference": "Test of fromJson method, of class Statistics.",
    "HebCup": "Test of fromJson method , of class Statistics."
}
{
    "Origin": "Infer a {@link Schema} from an AVRO-generated SpecificRecord.",
    "Reference": "Infer a {@link Schema} from either an AVRO-generated SpecificRecord or a POJO.",
    "HebCup": "Infer a toBeamSchema @link Schema} from an AVRO-generated SpecificRecord."
}
{
    "Origin": "Deletes the element at the specified position.",
    "Reference": "Removes the element at the specified position.",
    "HebCup": "Deletes the element at the specified position."
}
{
    "Origin": "Creates an empty object literal, `{}`.",
    "Reference": "Creates an object-literal with zero or more elements, `{}`.",
    "HebCup": "Creates an Object literal, `{}`."
}
{
    "Origin": "Creates an iterable that iterates in parallel over a three iterables.",
    "Reference": "Creates an iterable that iterates in parallel over three iterables.",
    "HebCup": "Creates an iterable that iterates in parallel over a three iterables."
}
{
    "Origin": "Initializes this.audioFormats",
    "Reference": "Initializes audioFormats",
    "HebCup": "Initializes this.audiovoiceRssImpl.getAvailableAudioFormats"
}
{
    "Origin": "Returns a string representation of this object; useful for testing and debugging.",
    "Reference": "Returns a string representation of this object.",
    "HebCup": "Returns a string representation of this object; useful for testing and debugging."
}
{
    "Origin": "Sets the partition storage level.",
    "Reference": "Sets the storage configuration.",
    "HebCup": "Sets the partition storage Config."
}
{
    "Origin": "Testing the isSPD (is symmetric positive definite) method of CholeskyDecomposition class.",
    "Reference": "Testing the isSPD (is symmetric positive definite) method of",
    "HebCup": "Testing the isSPD (is symmetric positive definite) method of assertTrue class."
}
{
    "Origin": "showIndex.",
    "Reference": "showTagArticles.",
    "HebCup": "showTagArticles."
}
{
    "Origin": "Creates an instance of {@link RowFactory} using provided {@link RowTypeFactory}\nand {@link GetterFactory}.",
    "Reference": "Creates an instance of {@link RowFactory} using provided {@link SchemaFactory}\nand {@link GetterFactory}.",
    "HebCup": "Creates an instance of {@link RowFactory} using provided {@link SchemaFactory} and {@link GetterFactory}."
}
{
    "Origin": "Create an {@link RSocketOutboundGatewaySpec} builder for request-reply gateway\nbased on provided {@code route}.",
    "Reference": "Create an {@link RSocketOutboundGatewaySpec} builder for request-reply gateway\nbased on provided {@code route} and optional variables to expand route template.",
    "HebCup": "Create an {@link RSocketOutboundGatewaySpec} builder for request-reply gateway\nbased on provided {@code route}."
}
{
    "Origin": "Apply the rotation transformation of the given {@link Quaterniond} to this matrix and store\nthe result in .",
    "Reference": "Apply the rotation transformation of the given {@link Quaterniondc} to this matrix and store\nthe result in .",
    "HebCup": "Apply the rotation transformation of the given {@link Quaterniondc} to this matrix and store the result in ."
}
{
    "Origin": "Constructs a URL to save the data to",
    "Reference": "Constructs a final path save the data to",
    "HebCup": "Constructs a FinalPath to save the data to"
}
{
    "Origin": "Returns the ratio of stack traces indicating back pressure to total\nnumber of sampled stack traces.",
    "Reference": "Returns the back pressure ratio of the given subtask index.",
    "HebCup": "Returns the Ratios of stack traces indicating back pressure to total number of sampled stack traces."
}
{
    "Origin": "Obtains an instance from the specified unique name.",
    "Reference": "Obtains an instance from the specified name.",
    "HebCup": "Obtains an instance from the specified name."
}
{
    "Origin": "Prints out the created certificate\nissuer details when a response has been received.",
    "Reference": "Subscribes to the call and prints out the\nupdated certificate operation details when a response has been received.",
    "HebCup": "Prints out the created Certificate Operation details when a response has been received."
}
{
    "Origin": "Hack to avoid disappearing footer when changing the predefined styles at runtime in Safari",
    "Reference": "Workaround to avoid disappearing footer when changing the predefined styles at runtime in Safari",
    "HebCup": "Hack to avoid disappearing footer when changing the predefined styles at runtime in Safari"
}
{
    "Origin": "If the offsets list is empty, then an offset of 0 is used for each array.",
    "Reference": "If the offsets list is empty, then an offset of 0 is used for each\nsequence.",
    "HebCup": "If the offsets list is empty, then an offset of 0 is used for each sequence."
}
{
    "Origin": "Indicates if the way is ready to handle new messages.",
    "Reference": "Indicates if the way is available to handle new messages.",
    "HebCup": "Indicates if the way is Available to handle new messages."
}
{
    "Origin": "Handles an iterate commit.",
    "Reference": "Handles an iterator next commit.",
    "HebCup": "Handles an position commit."
}
{
    "Origin": "Add a duration (with the same time unit as the current duration)",
    "Reference": "Add a amount (with the same time unit as the current duration)",
    "HebCup": "Add a amount (with the same time unit as the current amount)"
}
{
    "Origin": "Gets the additional trade information, defaulted to an empty instance.",
    "Reference": "Gets the additional information, defaulted to an empty instance.",
    "HebCup": "Gets the additional PortfolioItem information , defaulted to an empty instance."
}
{
    "Origin": "Returns  if annotation is present on\ngiven accessible object.",
    "Reference": "Returns  if annotation is present on\ngiven annotated element.",
    "HebCup": "Returns if annotation is present on given Annotated Element."
}
{
    "Origin": "Gets the nodeType.",
    "Reference": "Gets the newType.",
    "HebCup": "Gets the newType."
}
{
    "Origin": "Returns the favorite site with the primary key or throws a {@link com.liferay.so.NoSuchFavoriteSiteException} if it could not be found.",
    "Reference": "Returns the favorite site with the primary key or throws a {@link NoSuchFavoriteSiteException} if it could not be found.",
    "HebCup": "Returns the favorite site with the primary key or throws a {@link com.liferay.so.NoSuchFavoriteSiteException} if it could not be found."
}
{
    "Origin": "Create an unnamed, parented {@link InstanceManager}.",
    "Reference": "Create an unnamed, parented {@link InjectionManager}.",
    "HebCup": "Create an unnamed , parented {@link InjectionManager}."
}
{
    "Origin": "Starts continuous task.",
    "Reference": "Starts local continuous task.",
    "HebCup": "Starts Local Continuous Task."
}
{
    "Origin": "Since category uses \"totalPointsPossible\" property instead of\n\"pointsPossible\" property, as in Assignments",
    "Reference": "Fix for Category NPE reported in SAK-14519 Since category uses \"totalPointsPossible\" property instead of \"pointsPossible\" property,\nas in Assignments",
    "HebCup": "Since category uses ``this.totalPointsPossible`` property instead of ``pointsPossible`` property, as in Assignments"
}
{
    "Origin": "They must not be of type {@link KnownAmountPaymentPeriod}.",
    "Reference": "They must not be of type {@link KnownAmountSwapPaymentPeriod}.",
    "HebCup": "They must not be of type {@link KnownAmountSwapPaymentPeriod}."
}
{
    "Origin": "Get the address of the datagram's data field.",
    "Reference": "Get the datagram's data field.",
    "HebCup": "Get the address of the datagram's data field."
}
{
    "Origin": "Temporary method to upgrade from oldStaffBarlines to staffBarlines.",
    "Reference": "Upgrade from oldStaffBarlines to staffBarlines.",
    "HebCup": "Temporary method to upgrade from oldStaffBarlines to staffBarlines."
}
{
    "Origin": "Given a pattern and a string, returns a list with the values of the\ncaptured groups in the pattern.",
    "Reference": "Given a pattern, which contains one or more capturing groups, and a String,\nreturns a list with the values of the\ncaptured groups in the pattern.",
    "HebCup": "Given a pattern and a string, returns a list with the values of the\ncaptured groups in the pattern."
}
{
    "Origin": "The {@link KeyCreateOptions} is required.",
    "Reference": "The {@link CreateKeyOptions} is required.",
    "HebCup": "The {@link CreateKeyOptions} is required."
}
{
    "Origin": "See Immutable Map Static Factory Methods for details.",
    "Reference": "See Unmodifiable Maps for details.",
    "HebCup": "See Unmodifiable Map Static Factory Methods for details."
}
{
    "Origin": "Make sure we can get the {@link GenieHostInfo} instance even if EC2 metadata fails.",
    "Reference": "Make sure we can get the {@link GenieHostInfo}.",
    "HebCup": "Make sure we can get the {@link GenieHostInfo} instance even if EC2 metadata fails."
}
{
    "Origin": "Equivalent to: {@code .weightInit(WeightInit.DISTRIBUTION).dist(distribution)}",
    "Reference": "Equivalent to: {@code .weightInit(new WeightInitDistribution(distribution))}",
    "HebCup": "Equivalent to: {@code .new WeightInitDistribution(new WeightInitDistribution.DISTRIBUTION).dist(distribution)}"
}
{
    "Origin": "Computes the median for each pixel across all bands in the {@link Planar}\nimage.",
    "Reference": "Computes the median for each pixel across selected bands in the {@link Planar} image.",
    "HebCup": "Computes the median for each pixel across all bands in the {@link Planar}\nimage."
}
{
    "Origin": "Converts Hex encoded string to byte[] if necessary.",
    "Reference": "Converts a Hex encoded string to a byte array.",
    "HebCup": "Converts Hex encoded string to byte[] if necessary."
}
{
    "Origin": "Sets the value of the 'BloomFilter' field",
    "Reference": "Sets the value of the 'bloomFilter' field.",
    "HebCup": "Sets the value of the 'bloomFilter' field"
}
{
    "Origin": "Amazon Redshift returns all resources that match any combination of\nthe specified keys and values.",
    "Reference": "Redshift returns all resources that match any combination of the\nspecified keys and values.",
    "HebCup": "Amazon Redshift returns all resources that match any combination of\nthe specified keys and values."
}
{
    "Origin": "Generate a FormType from a string.",
    "Reference": "Generate a FormTypes from a string.",
    "HebCup": "Generate a FormTypes from a string."
}
{
    "Origin": "Append TLVMsg to the TLVList.",
    "Reference": "Append TLVMsg to the TLV list.",
    "HebCup": "Append TLVMsg to the TLVList."
}
{
    "Origin": "Gets the value of the 'KeepDeletedCells' field",
    "Reference": "Gets the value of the 'keepDeletedCells' field.",
    "HebCup": "Gets the value of the 'keepDeletedCells' field"
}
{
    "Origin": "This method sets the value of the database column m_prj_project.projectType",
    "Reference": "This method sets the value of the database column m_prj_project.type",
    "HebCup": "This method sets the value of the database column m_prj_project.projectType"
}
{
    "Origin": "Return type of method signature as a byte value as defined in Constants",
    "Reference": "Return type of method signature as a byte value as defined in",
    "HebCup": "Return type of method signature as a byte value as defined in Constants"
}
{
    "Origin": "Loop over the\n{@link KeyProperties key} and call {@link KeyClient#getKey(KeyProperties key properties)}.",
    "Reference": "Loop over the\n{@link KeyProperties key} and call {@link KeyClient#getKey(String, String)}.",
    "HebCup": "Loop over the {@link KeyProperties PropertiesOfKey} and call {@link KeyClient#getKey (KeyProperties PropertiesOfKey properties)}."
}
{
    "Origin": "Sets the alignment of the items in the list.",
    "Reference": "Sets the horizontal alignment of the list items.",
    "HebCup": "Sets the alignment of the items in the list."
}
{
    "Origin": "Atomize Java items.",
    "Reference": "Return Java items.",
    "HebCup": "Atomize Java items."
}
{
    "Origin": "Constuct a trace log event.",
    "Reference": "Constuct a debug log event.",
    "HebCup": "Constuct a trace log event."
}
{
    "Origin": "Inspects a given {@link Throwable} as well as its nested causes, in order to look\nfor a specific exception class.",
    "Reference": "Inspects a given {@link Throwable} as well as its nested causes, in order to look\nfor a specific set of exception classes.",
    "HebCup": "Inspects a given {@link Throwable} as well as its nested causes, in order to look for a specific exception Classes."
}
{
    "Origin": "Returns an iterator on all registered commands.",
    "Reference": "Returns a sorted collection of all registered commands.",
    "HebCup": "Returns an Collection on all registered commands."
}
{
    "Origin": "Returns the server list for the requested cluster.",
    "Reference": "Returns the configured server list for the requested cluster.",
    "HebCup": "Returns the ConfiguredServers list for the requested cluster."
}
{
    "Origin": "Creates a service name for the deployment unit to define the service.",
    "Reference": "Creates a service name for the batch environment service.",
    "HebCup": "Creates a service name for the Environment unit to define the service."
}
{
    "Origin": "Warning: the conditional comments don't work when injected dynamically\nwith JavaScript (i.e.",
    "Reference": "Warning: the conditional comments don't work when injected dynamically with",
    "HebCup": "Warning: the conditional comments don't work when injected dynamically\nwith JavaScript (i.e."
}
{
    "Origin": "If this node is Object Node and has value for specified property, {@code this} is returned\n to allow chaining; otherwise {@link IllegalArgumentException} is thrown.",
    "Reference": "If this node is Object Node and has value for specified property, {@code this} is returned\n to allow chaining;\n otherwise exception is thrown.",
    "HebCup": "If this node is Object Node and has value for specified property, {@code this} is returned\n to allow chaining; otherwise {@link IllegalArgumentException} is thrown."
}
{
    "Origin": "Returns a copy of this date with the specified field altered.",
    "Reference": "Returns a copy of this date with the specified field set to a new value.",
    "HebCup": "Returns a copy of this date with the specified field altered."
}
{
    "Origin": "Sets the {@link SharedKeyCredential} used to authorize requests sent to the service.",
    "Reference": "Sets the {@link StorageSharedKeyCredential} used to authorize requests sent to the service.",
    "HebCup": "Sets the {@link StorageSharedKeyCredential} used to authorize requests sent to the service."
}
{
    "Origin": "The string \"back\" is special-cased\nto provide Referrer support, when Referrer\nis not present `alt` or \"/\" is used.",
    "Reference": "The string \"back\" is special-cased\nto provide Referrer support, when Referrer\nis not present \"/\" is used.",
    "HebCup": "The string \"back\" is special-cased\nto provide Referrer support, when Referrer\nis not present `alt` or \"/\" is used."
}
{
    "Origin": "Creates all folders at once.",
    "Reference": "Creates all directories at once.",
    "HebCup": "Creates all folders at once."
}
{
    "Origin": "Note that the returned {@link Bits}\ninstance MUST be consumed in order.",
    "Reference": "NOTE: that the returned {@link Bits} instance MUST be consumed in order.",
    "HebCup": "Note that the returned {@link as} instance MUST be consumed in order."
}
{
    "Origin": "This method must only be\nused for type references whose sort is {@link #THROWS THROWS}.",
    "Reference": "This method must only be used for type references whose sort is {@link\n#THROWS}.",
    "HebCup": "This method must only be\nused for type references whose sort is {@link #THROWS THROWS}."
}
{
    "Origin": "Write a Chart series as columns in a CSV file.",
    "Reference": "Export a Chart series in columns in a CSV file.",
    "HebCup": "Write a Chart XYSeries as columns in a CSV file."
}
{
    "Origin": "Determines whether a character is lower case according to\n{@linkplain Character#isLowerCase(char) Java's definition}.",
    "Reference": "Determines whether a BMP character is lower case according to\n{@linkplain Character#isLowerCase(char) Java's definition}.",
    "HebCup": "Determines whether a character is lower case according to\n{@linkplain Character#isLowerCase(char) Java's definition}."
}
{
    "Origin": "Returns the split point number, 1-based.",
    "Reference": "Returns a unique id for each runAsync, 1-based.",
    "HebCup": "Returns the run Async Id number, 1-based."
}
{
    "Origin": "Fails silently if no match found.",
    "Reference": "Fails silently if the student does not exist.",
    "HebCup": "Fails silently if no match found."
}
{
    "Origin": "Objects of the following type(s) are allowed in the list\n{@link CTAbsSizeAnchor }\n{@link CTRelSizeAnchor }",
    "Reference": "Objects of the following type(s) are allowed in the list\n{@link CTRelSizeAnchor }\n{@link CTAbsSizeAnchor }",
    "HebCup": "Objects of the following type(s) are allowed in the list\n{@link CTAbsSizeAnchor }\n{@link CTRelSizeAnchor }"
}
{
    "Origin": "Sets item to self and waiter to null, to avoid garbage\nretention after matching or cancelling.",
    "Reference": "Sets item (of a request node) to self and waiter to null,\nto avoid garbage retention after matching or cancelling.",
    "HebCup": "Sets item to self and waiter to null, to avoid garbage\nretention after matching or cancelling."
}
{
    "Origin": "Create error value with given reason and error details.",
    "Reference": "Create error value with given type, reason and details.",
    "HebCup": "Create error value with given reason and error details."
}
{
    "Origin": "{@code protocol} and {@code proxy} will be non-null and {@code throwable} will be null when\nthe connection is successfully established.",
    "Reference": "{@code protocol} and {@code proxy} will be non-null and {@code ioe} will be null when\nthe connection is successfully established.",
    "HebCup": "{@code protocol} and {@code proxy} will be non-null and {@code IOException} will be null when the connection is successfully established."
}
{
    "Origin": "Get the set of all custom providers registered for the given service provider contract\nin the underlying {@link ServiceLocator HK2 service locator} container.",
    "Reference": "Get the set of all custom providers registered for the given service provider contract\nin the underlying {@link InstanceManager instance manager} container.",
    "HebCup": "Get the set of all custom providers registered for the given service provider contract in the underlying {@link InstanceManager HK2 service locator} container."
}
{
    "Origin": "Basic test of Layer containing automatic modules",
    "Reference": "Basic test of layer containing automatic modules",
    "HebCup": "Basic test of ModuleLayer containing automatic modules"
}
{
    "Origin": "Returns the sync d l object with the primary key or throws a {@link com.liferay.sync.NoSuchDLObjectException} if it could not be found.",
    "Reference": "Returns the sync d l object with the primary key or throws a {@link NoSuchDLObjectException} if it could not be found.",
    "HebCup": "Returns the sync d l object with the primary key or throws a {@link com.liferay.sync.NoSuchDLObjectException} if it could not be found."
}
{
    "Origin": "This factory creates a {@code ZonedDateTime} from a date-time and time-zone.",
    "Reference": "Obtains an instance of {@code ZonedDateTime} from a local date-time.",
    "HebCup": "This factory creates a {@code ZonedlocalDateTime} from a date-time and time-zone."
}
{
    "Origin": "Checks for internet connection and then initializes the recycler view with 25 categories of the searched query",
    "Reference": "Checks for internet connection and then initializes the recycler view with all(max 500) categories of the searched query",
    "HebCup": "Checks for internet connection and then initializes the recycler view with 25 categories of the searched query"
}
{
    "Origin": "Creates CronDefinition instance matching quartz specification;",
    "Reference": "Creates CronDefinition instance matching Quartz specification",
    "HebCup": "Creates CronDefinition instance matching quartz specification;"
}
{
    "Origin": "Returns a string representation of this object; useful for testing and debugging.",
    "Reference": "Returns a string representation of this object.",
    "HebCup": "Returns a string representation of this object; useful for testing and debugging."
}
{
    "Origin": "Remove the {@link Query} at the given position from this playlist",
    "Reference": "Remove the {@link PlaylistEntry} at the given position from this playlist",
    "HebCup": "Remove the {@link Entry} at the given position from this playlist"
}
{
    "Origin": "You are running on JDK6 which comes with JAX-WS {0} API, but this tool requires JAX-WS {1} API.",
    "Reference": "You are running on JDK6 or newer which comes with JAX-WS {0} API, but this tool requires JAX-WS {1} or newer API.",
    "HebCup": "You are running on JDK6 which comes with JAX-WS {0} API, but this tool requires JAX-WS {1} API."
}
{
    "Origin": "Allocate a block of memory of the given size in bytes, and return a pointer to that memory.",
    "Reference": "Allocate a block of memory of the given size in bytes and update memory allocation tracker accordingly.",
    "HebCup": "Allocate a block of memory of the given size in bytes, and return a pointer to that memory."
}
{
    "Origin": "Returns the app with the primary key or throws a {@link com.liferay.marketplace.NoSuchAppException} if it could not be found.",
    "Reference": "Returns the app with the primary key or throws a {@link NoSuchAppException} if it could not be found.",
    "HebCup": "Returns the app with the primary key or throws a {@link com.liferay.marketplace.NoSuchAppException} if it could not be found."
}
{
    "Origin": "Convert to primitive types, returning default value if text is null.",
    "Reference": "Convert to integer, returning default value if text is inconvertible.",
    "HebCup": "Convert to primitive types, returning default value if text is null."
}
{
    "Origin": "caller should not modify leavingEndpoints",
    "Reference": "caller should not modify leavingNodes",
    "HebCup": "caller should not modify leavingNodes"
}
{
    "Origin": "Waits until the given element is either hidden or deleted.",
    "Reference": "Waits until the given locator corresponds to either a hidden or a deleted element.",
    "HebCup": "Waits until the given element is either hidden or deleted."
}
{
    "Origin": "Check that the default base section paint is not null, and that you\ncan never set it to null.",
    "Reference": "Check that the default section paint is not null, and that you\ncan never set it to null.",
    "HebCup": "Check that the default Default Section Paint is not null, and that you can never set it to null."
}
{
    "Origin": "Returns a new fresh folder with the given path under the temporary\nfolder.",
    "Reference": "Returns a new fresh folder with the given paths under the temporary\nfolder.",
    "HebCup": "Returns a new fresh relative with the given path under the temporary folder."
}
{
    "Origin": "Setup starts 4 process instances of oneTaskProcess\nand 1 instance of oneTaskProcess2",
    "Reference": "Setup starts 4 process instances of oneTaskProcess\nand 1 instance of otherOneTaskProcess",
    "HebCup": "Setup starts 4 process instances of oneTaskProcess and 1 instance of otherOneTaskProcess"
}
{
    "Origin": "Applies a list ontology changes to a collection of ontologies.",
    "Reference": "Apply ontology changes.",
    "HebCup": "Applies stream ontology changes to a collection of ontologies."
}
{
    "Origin": "The input file must be a list of whitespace-separated verb-lemma-POS triples, one verb\nform per line.",
    "Reference": "The input file must be a list of tab-separated verb-POS pairs, one verb\nper line.",
    "HebCup": "The input file must be a list of whitespace-separated verb-lemma-POS triples, one verb\nform per line."
}
{
    "Origin": "Using the starting mark found for each alteration item, defines all slices.",
    "Reference": "Using the starting mark found for each alteration item, defines all roi.",
    "HebCup": "Using the starting mark found for each alteration item, defines all roi."
}
{
    "Origin": "It determines time duration that you should wait for permission and reserves it for you,\nif you'll be able to wait long enough.",
    "Reference": "It determines time duration that you should wait for the given number of permits\nand reserves it for you, if you'll be able to wait long enough.",
    "HebCup": "It determines time duration that you should wait for permission and reserves it for you,\nif you'll be able to wait long enough."
}
{
    "Origin": "Pieces a List of CoreMaps back together using\nword and setting a white space between each word\nTODO: remove this (listToString does the same thing)",
    "Reference": "Pieces a List of CoreMaps back together using\nword and setting a white space between each word\nTODO: remove this (SentenceUtils.listToString does the same thing - why 2 separate classes)",
    "HebCup": "Pieces a List of CoreMaps back together using\nword and setting a white space between each word\nTODO: remove this (listToString does the same thing)"
}
{
    "Origin": "Checks whether memory cache key (image URI) for current ImageView is actual",
    "Reference": "Checks whether memory cache key (image URI) for current ImageAware is actual",
    "HebCup": "Checks whether memory cache key (image URI) for current imageAware is actual"
}
{
    "Origin": "Initializes the resource to edit according to the uuid provided via the tag's attribute \"uuid\".",
    "Reference": "Returns the resource to edit according to the uuid provided via the tag's attribute \"uuid\".",
    "HebCup": "Initializes the resource to edit according to the uuid provided via the tag's attribute \"uuid\"."
}
{
    "Origin": "or throws a {@link com.liferay.calendar.NoSuchNotificationTemplateException} if it could not be found.",
    "Reference": "or throws a {@link NoSuchNotificationTemplateException} if it could not be found.",
    "HebCup": "or throws a {@link com.liferay.calendar.NoSuchNotificationTemplateException} if it could not be found."
}
{
    "Origin": "For {@link Type#ERROR} or\n{@link Type#EXIT} actions this can be provided as part of the factory method.",
    "Reference": "For\n{@link ActionType#ERROR} or {@link ActionType#EXIT} actions this can be provided as part of the factory method.",
    "HebCup": "For {@link Type#ERROR} or\n{@link Type#EXIT} actions this can be provided as part of the factory method."
}
{
    "Origin": "Appends a declaration of the given label to {@link #buf buf}.",
    "Reference": "Appends a declaration of the given label to {@link #stringBuilder}.",
    "HebCup": "Appends a declaration of the given label to {@link#stringBuilder stringBuilder}."
}
{
    "Origin": "This method obtains the extension as the textual part of the filename\nafter the last dot.",
    "Reference": "This method obtains the extension as the textual part of the fileName\nafter the last dot.",
    "HebCup": "This method obtains the extension as the textual part of the fileName after the last dot."
}
{
    "Origin": "Implements {@link PacketListener}.",
    "Reference": "Implements {@link StanzaListener}.",
    "HebCup": "Implements {@link StanzaListener}."
}
{
    "Origin": "Returns the authenticating user's retweet of this tweet, or null when the tweet was created\nbefore this feature was enabled.",
    "Reference": "Returns the authenticating user's retweet's id of this tweet, or -1L when the tweet was created\nbefore this feature was enabled.",
    "HebCup": "Returns the authenticating user's retweet of this tweet, or null when the tweet was created\nbefore this feature was enabled."
}
{
    "Origin": "Removes and returns the node at the head of the frontier.",
    "Reference": "Primitive operation which removes and returns the node at the head of the frontier.",
    "HebCup": "Removes and returns the node at the head of the frontier."
}
{
    "Origin": "Queries this contact source for the given queryString.",
    "Reference": "Creates query for the given queryString.",
    "HebCup": "Queries this Contact Query for the given queryString."
}
{
    "Origin": "The {@link KeyCreateOptions#getExpires() expires} and {@link",
    "Reference": "The {@link CreateKeyOptions#getExpiresOn() expires} and {@link",
    "HebCup": "The {@link CreateKeyOptions#getExpires () expires} and {@link"
}
{
    "Origin": "The get key operation is\napplicable to all key types and it requires the {@code keys/get} permission.",
    "Reference": "This operation requires the {@code\nkeys/delete} permission.",
    "HebCup": "The begin Delete Key operation is applicable to all key types and it requires the {@code keys/get} permission."
}
{
    "Origin": "Returns the (unbiased) skew of all the values within a {@link Dataset}",
    "Reference": "Returns the (unbiased) kurtosis of all the values within a {@link Dataset}",
    "HebCup": "Returns the (unbiased) sample of all the values within a {@link Dataset}"
}
{
    "Origin": "Get Payroll movement with concept is paid and is invoiced",
    "Reference": "Get Payroll movement with concept is invoiced",
    "HebCup": "Get Payroll movement with concept Is and is invoiced"
}
{
    "Origin": "Prepare the collection of CLI tasks (inputs, books, scripts, samples).",
    "Reference": "Prepare the collection of CLI tasks (inputs, books, samples).",
    "HebCup": "Prepare the collection of CLI tasks (inputs, books, scripts, samples)."
}
{
    "Origin": "Checks a given class.",
    "Reference": "Checks the given class.",
    "HebCup": "Checks a given class.\\n"
}
{
    "Origin": "Runs the pig script using PigRunner API if version VERSION or above.",
    "Reference": "Runs the pig script using PigRunner.",
    "HebCup": "Runs the pig script using PigRunner API if version VERSION or above."
}
{
    "Origin": "Provides a list of all connection wrappers corresponding to a given environment.",
    "Reference": "Provides a list of all connection configs corresponding to a given environment.",
    "HebCup": "Provides a list of all connection Configs corresponding to a given environment."
}
{
    "Origin": "If this lookup object has private access, then the caller class is the lookupClass.",
    "Reference": "If this lookup object has full privilege access, then the caller class is the lookupClass.",
    "HebCup": "If this lookup object has Full Privilege Access, then the caller class is the lookupClass."
}
{
    "Origin": "The curves themselves are provided in {@link ScenarioMarketData}\nusing {@link CurveId} as the identifier.",
    "Reference": "The curves themselves are provided in {@link ScenarioMarketData}\nusing {@link RatesCurveId} as the identifier.",
    "HebCup": "The curves themselves are provided in {@link ScenarioMarketData} using {@link RatesCurveId} as the identifier."
}
{
    "Origin": "Add a list of documents to the Solr server.",
    "Reference": "Add a list of documents to the Solr client.",
    "HebCup": "Add a list of documents to the Solr Client."
}
{
    "Origin": "Report the pitch position of the nth item, within the given clef.",
    "Reference": "Report the pitch position of the nth item, within the given clef kind.",
    "HebCup": "Report the pitch Pitch of the nth item , within the given clef."
}
{
    "Origin": "Creates a flux of {@link PagedResponse} starting from the first page.",
    "Reference": "Creates a Flux of {@link PagedResponse} starting from the first page.",
    "HebCup": "Creates a flux of {@link PagedResponse} starting from the super."
}
{
    "Origin": "Kafka Consumer properties are generated as follows:",
    "Reference": "Kafka Consumer properties are generated as follows:\n1.",
    "HebCup": "Bootstrap Consumer properties are generated as follows:"
}
{
    "Origin": "Returns the builder for the settings used for calls to labelAudio.",
    "Reference": "Returns the builder for the settings used for calls to listEvaluationJobs.",
    "HebCup": "Returns the builder for the settings used for calls to ListEvaluationJobs."
}
{
    "Origin": "Wraps this Subject and serializes the calls to the onSubscribe, onNext, onError and\nonComplete methods, making them thread-safe.",
    "Reference": "Wraps this FlowableProcessor and serializes the calls to the onSubscribe, onNext, onError and\nonComplete methods, making them thread-safe.",
    "HebCup": "Wraps this Subject and serializes the calls to the onSubscribe, onNext, onError and\nonComplete methods, making them thread-safe."
}
{
    "Origin": "propagate any exception thrown\ndrop events if invocation of {@link #process(BaseEvent)} returns null.",
    "Reference": "propagate any exception thrown\ndrop events if invocation of {@link #process(CoreEvent)} returns null.",
    "HebCup": "propagate any exception thrown drop events if invocation of {@link #process(CoreEvent)} returns null."
}
{
    "Origin": "Complexity: 5 trigonometric functions, 2 sqrt.",
    "Reference": "Complexity: 5 trigonometric functions, 1-2 sqrt.",
    "HebCup": "Complexity: 5 trigonometric functions, 2 sqrt."
}
{
    "Origin": "Returns this {@code Option} if it is nonempty, otherwise return the alternative.",
    "Reference": "Converts this {@code Option} to an {@link Either}.",
    "HebCup": "Returns this {@code Supplier} if it is nonempty , otherwise return the alternative."
}
{
    "Origin": "Convert to object types, returning null if text is null.",
    "Reference": "Convert to object types, returning null if text is null or empty.",
    "HebCup": "Convert to object types, returning null if text is null."
}
{
    "Origin": "Updates Notifications Tab settings switches state based on the master switch state",
    "Reference": "Updates Notifications current settings switches state based on the master switch state",
    "HebCup": "Updates Notifications Tab settings switches state based on the master switch state"
}
{
    "Origin": "checks that no scores or freqs are infinite",
    "Reference": "checks that no scores are infinite",
    "HebCup": "checks that no scores or freqs are infinite"
}
{
    "Origin": "Turn a toX of Eithers into a single Either with Lists of values.",
    "Reference": "Turn an IterableX of Eithers into a single Either with Lists of values.",
    "HebCup": "Turn a toSeq of Eithers into a single Either with Lists of values."
}
{
    "Origin": "anonymous: Cross-origin CORS requests for the element will not have the credentials flag set.",
    "Reference": "ANONYMOUS: Cross-origin CORS requests for the element will not have the credentials flag set.",
    "HebCup": "anonymous: Cross-origin CORS requests for the element will not have the credentials flag set."
}
{
    "Origin": "If not set, a random {@link UUID} is generated with {@link UUID#randomUUID()}.",
    "Reference": "If not set, a random {@link RequestId} is generated with {@link RequestId#random()}.",
    "HebCup": "If not set , a random {@link id} is generated with {@link id#randomUUID ()}."
}
{
    "Origin": "Sets the responseType.",
    "Reference": "Set the responseType.",
    "HebCup": "Sets the responseType."
}
{
    "Origin": "Returns an action to release a the given file descriptor and free the\ngiven native socket address.",
    "Reference": "Returns an action to release the given file descriptor and socket addresses.",
    "HebCup": "Returns an action to release a the given file descriptor and free the\ngiven native socket address."
}
{
    "Origin": "Note that the returned instance must be {@link RequestScope.Instance#release()\nreleased} manually once not needed anymore to prevent memory leaks.",
    "Reference": "Note that the returned context must be {@link RequestContext#release()\nreleased} manually once not needed anymore to prevent memory leaks.",
    "HebCup": "Note that the returned RequestContext must be {@link RequestScope.Instance#release () released} manually once not needed anymore to prevent memory leaks."
}
{
    "Origin": "Nota: the defining points are meant to be the extrema points\ninside the parallelogram.",
    "Reference": "Nota: the defining points are meant to be the extrema points\non the borders of the parallelogram.",
    "HebCup": "Nota: the defining points are meant to be the extrema points\ninside the parallelogram."
}
{
    "Origin": "This increases the likelihood of selecting an instance that is hosted in the same data centre as the process.",
    "Reference": "This increases the likelihood of selecting an instance that is hosted in the same rack as the process.",
    "HebCup": "This increases the likelihood of selecting an instance that is hosted in the same data centre as the process."
}
{
    "Origin": "Check equality between a String and a char[] object, specifying (offset,len) pairs\n  for limiting the fragments to be checked.",
    "Reference": "Check equality between a CharSequence and a char[] object, specifying (offset,len) pairs\n  for limiting the fragments to be checked.",
    "HebCup": "Check equality between a CharSequence and a char[] object , specifying (offset ,len) pairs for limiting the fragments to be checked."
}
{
    "Origin": "You must call the\n{@link #initializeWithoutRunning(SpecialTimestampsSupplier, TimelockService, KeyValueService,",
    "Reference": "You must call the {@link\n#initializeWithoutRunning(SpecialTimestampsSupplier, TimelockService, KeyValueService, TransactionService,",
    "HebCup": "You must call the\n{@link #initializeWithoutRunning(SpecialTimestampsSupplier, TimelockService, KeyValueService,"
}
{
    "Origin": "Returns whether this instance deploys to the given zone, either implicitly or explicitly",
    "Reference": "Returns whether this deployment spec specifies the given zone, either implicitly or explicitly",
    "HebCup": "Returns whether this instance deploys to the given deploys , either implicitly or explicitly"
}
{
    "Origin": "Returns all the push notifications devices where platform = ?.",
    "Reference": "Returns all the push notifications devices where userId = any ?",
    "HebCup": "Returns all the push notifications devices where U_P = ?."
}
{
    "Origin": "Get type of the report.",
    "Reference": "Get delimiter of the report.",
    "HebCup": "Get Delimiter of the report."
}
{
    "Origin": "Get Externer Kunde Nr..",
    "Reference": "Get Memo_Delivery.",
    "HebCup": "Get Externer Kunde Nr.."
}
{
    "Origin": "A utility method to destroy a MockTrezor device.",
    "Reference": "A utility method to destroy the MockTrezor device.",
    "HebCup": "A utility method to destroy a MockhardwareWallet.setInitialised device."
}
{
    "Origin": "insert an async processor (with dedicated thread, multiple subscribers)",
    "Reference": "insert an async processor (with dedicated queue, multiple subscribers)",
    "HebCup": "insert an async processor (with dedicated thread, multiple subscribers)"
}
{
    "Origin": "Should subscriptions be considered part of a group even if using a unicast endpoint, should it be\nconsidered an individual even if using a multicast endpoint, or should the use of a unicast/multicast\nendpoint infer the usage.",
    "Reference": "Should network subscriptions be considered part of a group even if using a unicast endpoint, should it be\nconsidered an individual even if using a multicast endpoint, or should the use of a unicast/multicast\nendpoint infer the usage.",
    "HebCup": "Should subscriptions be considered part of a receiverGroup even if using a unicast endpoint , should it be considered an individual even if using a multicast endpoint , or should the use of a unicast/multicast endpoint infer the usage."
}
{
    "Origin": "Compresses and stores an integer value to the specified byte array.",
    "Reference": "Compresses and stores an integer value at the beginning of the byte array.",
    "HebCup": "Compresses and stores an integer value to the specified byte array."
}
{
    "Origin": "Get the username (email) of the current user.",
    "Reference": "Get the email of the current user.",
    "HebCup": "Get the Email (email) of the current user."
}
{
    "Origin": "For information about computing a\nSHA256 tree hash, see",
    "Reference": "For information about computing a\nSHA256 tree hash, see Computing Checksums.",
    "HebCup": "For information about computing a\nSHA256 tree hash, see"
}
{
    "Origin": "For conceptual information and the underlying REST API, go to",
    "Reference": "For conceptual information and the underlying REST API, go to Initiate a Job and Downloading a Vault Inventory",
    "HebCup": "For conceptual information and the underlying REST API, go to"
}
{
    "Origin": "This method returns a collector allowing streams to be gathered into\nan {@link ImmutableMap}.",
    "Reference": "This method returns a collector allowing streams to be gathered into\nan {@link ImmutableMap}, retaining insertion order.",
    "HebCup": "This method returns a collector allowing streams to be gathered into\nan {@link ImmutableMap}."
}
{
    "Origin": "Fetch metric in {@link org.terasology.telemetry.Metrics} and send to the server.",
    "Reference": "Fetch metric in {@link org.terasology.context.Context} and send to the server.",
    "HebCup": "Fetch metric in {@link org.terasology.telemetry.Context} and send to the server."
}
{
    "Origin": "This method returns the PSK identity as clear text.",
    "Reference": "This method returns the PSK identity as public information.",
    "HebCup": "This method returns the PSK identity as clear text."
}
{
    "Origin": "R is a rotation transformation specified by the given quaternion, S is a scaling transformation\nwhich scales the axes by  and  is an {@link #isAffine() affine} matrix.",
    "Reference": "R is a rotation - and possibly scaling - transformation specified by the given quaternion, S is a scaling transformation\nwhich scales the axes by  and  is an {@link #isAffine() affine} matrix.",
    "HebCup": "R is a rotation transformation specified by the given quaternion, S is a scaling transformation\nwhich scales the axes by  and  is an {@link #isAffine() affine} matrix."
}
{
    "Origin": "Includes iPhone, iPod Touch, Android, Windows Phone 7, Palm WebOS, etc.",
    "Reference": "Includes iPhone, iPod Touch, Android, Windows Phone 7 and 8, BB10, WebOS, Playstation Vita, etc.",
    "HebCup": "Includes detectPhone, detectPod Touch, Android, Windows Phone 7, Palm WebOS, etc."
}
{
    "Origin": "Returns the attachment with the primary key or throws a {@link com.liferay.mail.NoSuchAttachmentException} if it could not be found.",
    "Reference": "Returns the attachment with the primary key or throws a {@link NoSuchAttachmentException} if it could not be found.",
    "HebCup": "Returns the attachment with the primary key or throws a {@link com.liferay.mail.NoSuchAttachmentException} if it could not be found."
}
{
    "Origin": "Returns the destination's {@link Navigator}.",
    "Reference": "Returns the name associated with this destination's {@link Navigator}.",
    "HebCup": "Returns the destination's {@link NavigatorName}."
}
{
    "Origin": "Whenever there is a palindrome, the result increments by 1.",
    "Reference": "Whenever there is a palindrome, the count increments by 1.",
    "HebCup": "Whenever there is a palindrome , the count increments by 1."
}
{
    "Origin": "Checks if the source can be parsed as FpML.",
    "Reference": "Basic check to see if the source can probably be parsed as FpML.",
    "HebCup": "Checks if the 0 can be parsed as FpML."
}
{
    "Origin": "Test of var method, of class Exponential.",
    "Reference": "Test of variance method, of class Exponential.",
    "HebCup": "Test of Variance method , of class Exponential."
}
{
    "Origin": "BatchOptions#getMaximumSizeInBytes()}.",
    "Reference": "CreateBatchOptions#getMaximumSizeInBytes()}.",
    "HebCup": "CreateBatchOptions#getMaximumSizeInBytes ()}."
}
{
    "Origin": "Sets the {@link EncryptionScope encryption scope} that is used to encrypt blob contents on the server.",
    "Reference": "Sets the {@code encryption scope} that is used to encrypt blob contents on the server.",
    "HebCup": "Sets the {@link String encryption scope} that is used to encrypt blob contents on the server."
}
{
    "Origin": "Configure a sslConfig for the http service using the legacy configuration",
    "Reference": "Configure a SSLConfig.Builder for the http service using the legacy configuration",
    "HebCup": "Configure a SSLConfig.Builder for the http service using the legacy configuration"
}
{
    "Origin": "Main method to invoke this demo about how to analyze sentiment of a text input.",
    "Reference": "Main method to invoke this demo about how to analyze the sentiment of an input text.",
    "HebCup": "Main method to invoke this demo about how to analyze sentiment of a text input."
}
{
    "Origin": "Constructs an instance of TableAdminClient with the given instanceName and\nbigtableTableAdminSettings",
    "Reference": "Constructs an instance of TableAdminClient with the given settings.",
    "HebCup": "Constructs an instance of TableAdminClient with the given instanceName and TableAdminSettings"
}
{
    "Origin": "Fourth,\nit is easy to keep a precise record of the number of elements in the stack, since each element has to know\nhow tall the stack is.",
    "Reference": "It is easy to keep a precise record of the number of elements in the stack, since each element has to\n    know how tall the stack is.",
    "HebCup": "Fourth , it is easy to keep a precise record of the number of Factor in the stack , since each element has to know how tall the stack is."
}
{
    "Origin": "If Main Branch = 100 LOCs and the \"largest long-lived branch\" is 120 LOCs, I'm expecting to consider the value 120.",
    "Reference": "If Main Branch = 100 LOCs and the \"largest branch\" is 120 LOCs, I'm expecting to consider the value 120.",
    "HebCup": "If Main Branch = 100 LOCs and the ``largest BRANCH-lived branch`` is 120 LOCs, I'm expecting to consider the value 120."
}
{
    "Origin": "The supplier lookup decides which lookup method is\nthe best given the parent {@link ExecutableNode} or {@link RootNode} and the provided\nlanguageClass.",
    "Reference": "The reference lookup decides which\nlookup method is the best given the parent {@link ExecutableNode} or {@link RootNode} and the\nprovided languageClass.",
    "HebCup": "The LanguageReference lookup decides which lookup method is the best given the parent {@link ExecutableNode} or {@link RootNode} and the provided languageClass."
}
{
    "Origin": "Obtains the type from a unique name.",
    "Reference": "Obtains an instance from the specified name.",
    "HebCup": "Obtains the type from a name."
}
{
    "Origin": "It is assumed that XRY meta key string is recognized.",
    "Reference": "It is assumed that XRY key string is recognized.",
    "HebCup": "It is assumed that name string is recognized."
}
{
    "Origin": "Create or obtain a {@link PreparedStatement} from my pool.",
    "Reference": "Creates or obtains a {@link PreparedStatement} from my pool.",
    "HebCup": "Create or obtain a {@link PreparedStatement} from my pool."
}
{
    "Origin": "Prefer the chest tab as it is the biggest (with default config).",
    "Reference": "Prefer the chest tab (for no reason).",
    "HebCup": "Prefer the chest get as it is the biggest (with default config)."
}
{
    "Origin": "Returns the index of the last entry in the segment.",
    "Reference": "Returns the last index in the segment.",
    "HebCup": "Returns the index of the last entry in the last."
}
{
    "Origin": "Get OpenID Connect authentication resources\n### Functional Description:   Provides information about OpenID Connect authentication options.",
    "Reference": "Get OpenID Connect authentication resources\n## \u26a0 Deprecated since version VERSION  ### Functional Description:   Provides information about OpenID Connect authentication options.",
    "HebCup": "Get OpenID Connect authentication resources\n### Functional Description:   Provides information about OpenID Connect authentication options."
}
{
    "Origin": "If that\nlookup fails as well, it's assumed that the XMPP server lives at the\nhost resolved by a DNS lookup at the specified domain on the specified default port.",
    "Reference": "If that lookup fails as well, it's assumed that the XMPP server lives at\nthe host resolved by a DNS A lookup at the specified domain on the\nspecified default port.",
    "HebCup": "(that lookup fails as well , it's assumed that the XMPP server lives at the host resolved by a DNS lookup at the specified domain on the specified default port."
}
{
    "Origin": "Obtains an instance of {@code Chrono} from a locale.",
    "Reference": "Obtains an instance of {@code Chronology} from a locale.",
    "HebCup": "Obtains an instance of {@code Chrono} from a locale."
}
{
    "Origin": "A call to {@link Map.Entry#setValue} on the returned entry will always\nthrow {@link UnsupportedOperationException}.",
    "Reference": "A call to {@link Map.Entry#setValue} on the returned entry will always throw {@link",
    "HebCup": "A call to {@link Map.Entry#setValue} on the returned entry will always\nthrow {@link UnsupportedOperationException}."
}
{
    "Origin": "Set Menge in Catch Weight Einheit.",
    "Reference": "Set Geliefert Catch.",
    "HebCup": "Set Menge Catch Weight Einheit."
}
{
    "Origin": "Sets split button icon",
    "Reference": "Sets menu icon",
    "HebCup": "Sets Menu button icon"
}
{
    "Origin": "Error responses are never streaming so we always use {@link SyncResponseHandlerAdapter}.",
    "Reference": "Error responses are never streaming so we always use {@link AsyncResponseHandler}.",
    "HebCup": "Error responses are never streaming so we always use {@link AsyncResponseHandler}."
}
{
    "Origin": "Perform a click on a \"content menu\" sub-menu entry.",
    "Reference": "Perform a click on a \"edit menu\" sub-menu entry.",
    "HebCup": "Perform a click on a \"content menu\" sub-menu entry."
}
{
    "Origin": "Gets the {@link Value.Mutable} for the {@link FoxType} of this\n{@link FoxData}.",
    "Reference": "Gets the {@link Value.Mutable} for the {@link FoxType} of this\n{@link Fox}.",
    "HebCup": "this.get the {@link Value.Mutable} for the {@link FoxType} of this {@link FoxData}."
}
{
    "Origin": "Proliferating cell nuclear antigens (1PLR, 3HI8) are structurally\nequivalent C3 homotrimers.",
    "Reference": "Proliferating cell nuclear antigens (3IFV, 3HI8) are structurally\nequivalent C3 homotrimers.",
    "HebCup": "Proliferating cell nuclear antigens (1PLR, 3HI8) are structurally\nequivalent C3 homotrimers."
}
{
    "Origin": "Get the {@link ReferenceType} for a class name.",
    "Reference": "Get the main and nested {@link ReferenceType}s for the sketch.",
    "HebCup": "Get the {@link ReferenceType} for a Classes name."
}
{
    "Origin": "Group: consumer",
    "Reference": "Group: producer",
    "HebCup": "Group: consumer"
}
{
    "Origin": "Queries this contact source for the given searchString.",
    "Reference": "Creates query for the given searchString.",
    "HebCup": "Queries this Contact Query for the given searchString."
}
{
    "Origin": "### Effects: Newly transmitted password is set.",
    "Reference": "### Effects: User's password is resetted to the provided password.",
    "HebCup": "### Effects: Newly transmitted password is set."
}
{
    "Origin": "NOTE: The information you get via notification is same that\nyou get by calling DescribeJob.",
    "Reference": "The information you get via notification is same that you get by calling",
    "HebCup": "NOTE: The information you get via notification is same that\nyou get by calling DescribeJob."
}
{
    "Origin": "Create an instance of {@link JAXBElement }{@code <}{@link CTMarkupRange }{@code >}}",
    "Reference": "Create an instance of {@link JAXBElement }{@code <}{@link CTMoveFromRangeEnd }{@code >}}",
    "HebCup": "Create an instance of {@link JAXBElement} {@code <} {@link CTMoveFromRangeEnd} {@code >}}"
}
{
    "Origin": "Resets the log unit server via the BatchProcessor.",
    "Reference": "Resets the log unit server via the SequentialProcessor.",
    "HebCup": "Resets the log unit server via the sequentialProcessor."
}
{
    "Origin": "this will return a Duration with 2004 {@link TimeUnit#MILLISECONDS}.",
    "Reference": "will return a Duration of 1996 {@link TimeUnit#MILLISECONDS}.",
    "HebCup": "this will return a amount with 2004 {@link TimeUnit#MILLISECONDS}."
}
{
    "Origin": "Returns {@link RDFFormat#NTRIPLES}.",
    "Reference": "Returns {@link RDFFormat#NTRIPLES_RDR}.",
    "HebCup": "Returns {@link ServiceProviderHook#NTRIPLES}."
}
{
    "Origin": "Amazon Redshift returns all snapshots that match any combination of\nthe specified keys and values.",
    "Reference": "Redshift returns all snapshots that match any combination of the\nspecified keys and values.",
    "HebCup": "Amazon Redshift returns all snapshots that match any combination of\nthe specified keys and values."
}
{
    "Origin": "If the last node itself\nis known type then that will be considered as the parent.",
    "Reference": "If the last node itself is known type then that will be considered as nearest known EntityId.",
    "HebCup": "If the last node itself is known type then that will be considered as the Known."
}
{
    "Origin": "This implementation attempts to resolve any session ID that may exist in the context argument by first\npassing it to the {@link #resolveSession(Map)} method.",
    "Reference": "This implementation attempts to resolve any session ID that may exist in the context argument by\npassing it to the {@link #resolveSession(Map)} method.",
    "HebCup": "This implementation attempts to resolve any session ID that may exist in the resolved argument by first passing it to the {@link#resolveSession (Map)} method."
}
{
    "Origin": "Such \"real\" brace is then removed from system groups.",
    "Reference": "Such \"true\" braced group is then removed from system groups.",
    "HebCup": "Such \"real\" brace is then removed from system groups."
}
{
    "Origin": "After install, this function checks whether everything went properly or not.",
    "Reference": "After install, this function checks whether everything went properly.",
    "HebCup": "After install, this function checks whether everything went properly or not."
}
{
    "Origin": "In order to set the matrix to a rotation transformation without post-multiplying,\nuse {@link #rotation(Quaterniond)}.",
    "Reference": "In order to set the matrix to a rotation transformation without post-multiplying,\nuse {@link #rotation(Quaterniondc)}.",
    "HebCup": "In order to set the matrix to a rotation transformation without post-multiplying, use {@link #rotation(Quaterniondc)}."
}
{
    "Origin": "Removes the element at the specified position in the elements array,\nadjusting head and tail as necessary.",
    "Reference": "Removes the element at the specified position in the elements array.",
    "HebCup": "Removes the element at the specified position in the es array , adjusting head and tail as necessary."
}
{
    "Origin": "This method logs a warning if the class\ncannot be registered.",
    "Reference": "This method LOGs a warning if the class\ncannot be registered.",
    "HebCup": "This method LOGs a warning if the class cannot be registered."
}
{
    "Origin": "Obtains an instance from the specified unique name.",
    "Reference": "Obtains an instance from the specified name.",
    "HebCup": "Obtains an instance from the specified name."
}
{
    "Origin": "Setter for {@link #exposeOnlyRequestedHeader}",
    "Reference": "Setter for {@link #allowOnlyRequestedHeader}",
    "HebCup": "Setter for {@link#allowOnlyRequestedHeader}"
}
{
    "Origin": "Receives an {@linkplain XmlTag} and returns the View class that is represented by the tag.",
    "Reference": "Receives an {@link XmlTag} and returns the View class that is represented by the tag.",
    "HebCup": "Receives an {@linkplain XmlTag} and returns the View class that is represented by the tag."
}
{
    "Origin": "Apply a CreateTable change to the model.",
    "Reference": "Apply a CreateIndex change to the model.",
    "HebCup": "Apply a CreateTable change to the model."
}
{
    "Origin": "Creates an entity and populates its state based on the dbObject given.",
    "Reference": "Creates an entity and populates its state based on the document given.",
    "HebCup": "Creates an entity and populates its state based on the Document given."
}
{
    "Origin": "Returns a string representation of this object; useful for testing and debugging.",
    "Reference": "Returns a string representation of this object.",
    "HebCup": "Returns a string representation of this object; useful for testing and debugging."
}
{
    "Origin": "Atomically sets the values to the given updated values\nonly if the current encoded value {@code ==} the expected value.",
    "Reference": "Atomically sets the values to the given updated values only if\nthe current encoded value {@code ==} the expected encoded value.",
    "HebCup": "Atomically sets the values to the given updated values\nonly if the current encoded value {@code ==} the expected value."
}
{
    "Origin": "Returns {@code true} if the specified provider is built by the vendor.",
    "Reference": "Returns {@code true} if the specified factory is built by the vendor.",
    "HebCup": "Returns {@code true} if the specified factory is built by the vendor."
}
{
    "Origin": "A directional arrow is a single arrow drawn in the middle of two points of a polyline to\nprovide a visual cue for direction of movement between the two points.",
    "Reference": "A directional arrow is a single arrow drawn in the middle of two points to\nprovide a visual cue for direction of movement between the two points.",
    "HebCup": "A directional arrow is a single arrow drawn in the middle of two points of a polyline to\nprovide a visual cue for direction of movement between the two points."
}
{
    "Origin": "Returns the current entry's site path.",
    "Reference": "Returns the sitemap entry.",
    "HebCup": "Returns the current entry's Entry Id."
}
{
    "Origin": "Trade attributes, provide the ability to associate arbitrary information\nwith a trade in a key-value map.",
    "Reference": "Trade attributes provide the ability to associate arbitrary information in a key-value map.",
    "HebCup": "Attribute, provide the ability to associate arbitrary information with a trade in a key-value map."
}
{
    "Origin": "PolicyEnforcedException exception, see Error Responses.",
    "Reference": "For more information about\nthe PolicyEnforcedException exception, see Error Responses.",
    "HebCup": "PolicyEnforcedException exception, see Error Responses."
}
{
    "Origin": "Get value of the Cosmos DB resource throughput.",
    "Reference": "Get the resource value.",
    "HebCup": "Get value of the Cosmos DB resource resource."
}
{
    "Origin": "Receives an {@link XmlTag} and returns the View class that is represented by the tag.",
    "Reference": "Receives a {@link ViewIdInfo} and returns the name of the View class that is implied by it.",
    "HebCup": "Receives an {@link ViewIdInfo} and returns the View class that is represented by the tag."
}
{
    "Origin": "Retrieves SoftwareVersion data.",
    "Reference": "Retrieves Software Version data.",
    "HebCup": "Retrieves SoftwareVersion data."
}
{
    "Origin": "Menge in Preiseinheit eff..",
    "Reference": "Get Abzurechnen eff..",
    "HebCup": "Menge in Preiseinheit eff.."
}
{
    "Origin": "Sets the identifier of the transaction.",
    "Reference": "Sets the identifier of the command.",
    "HebCup": "Sets the identifier of the transaction."
}
{
    "Origin": "Create or obtain a {@link PreparedStatement} from my pool.",
    "Reference": "Creates or obtains a {@link PreparedStatement} from my pool.",
    "HebCup": "Create or obtain a {@link PreparedStatement} from my pool."
}
{
    "Origin": "Creates an Android framework resource repository.",
    "Reference": "Creates an Android framework resource repository without using a persistent cache.",
    "HebCup": "Creates an Android res Folder Or."
}
{
    "Origin": "ensure that CTHMerge & CTTcBorders go in poi-ooxml.jar",
    "Reference": "ensure that CTHMerge and CTTcBorders go in poi-ooxml.jar",
    "HebCup": "ensure that CTHMerge & CTTcBorders go in poi-ooxml.jar"
}
{
    "Origin": "Find all the arrays that are members of the SameLen annotation associated with the array\nnamed in arrayExpression along the current path.",
    "Reference": "Find all the sequences that are members of the SameLen annotation associated with the\nsequence named in sequenceExpression along the current path.",
    "HebCup": "Find all the arrays that are members of the SameLen annotation associated with the array named in sequenceExpression along the current path."
}
{
    "Origin": "Helper Method: gets Concept AVG value of a payroll between 2 dates (Old Compatibility)",
    "Reference": "Helper Method: gets Concept AVG value of a payroll between 2 dates",
    "HebCup": "Helper Method: gets Concept AVG value of a payroll between 2 dates (Old Compatibility)"
}
{
    "Origin": "Sets the deployment.",
    "Reference": "Set the deployment.",
    "HebCup": "Sets the deployment."
}
{
    "Origin": "Checks if this factory creates s that simply return the specified column.",
    "Reference": "Checks if this factory creates s that simply return a column value.",
    "HebCup": "Checks if this factory creates s that simply return the specified column."
}
{
    "Origin": "Returns the field component set by {@link #withField(com.haulmont.cuba.gui.components.Component)}.",
    "Reference": "Returns the field component set by {@link #withField(com.haulmont.cuba.gui.components.HasValue)}.",
    "HebCup": "Returns the field component set by {@link #withField(HasValue.haulmont.cuba.gui.components.Component)}."
}
{
    "Origin": "This method tests iteration consistency of a lsinfo {@link PlaylistFileResponse} result\nagainst a known value.",
    "Reference": "This method tests iteration consistency of a playlistinfo {@link PlaylistFileResponse}\nresult against a known value.",
    "HebCup": "This method tests iteration consistency of a lsinfo {@link PlaylistFileResponse} getResult against a known value."
}
{
    "Origin": "Creates a new {@code AtomicTreeMapBuilder}.",
    "Reference": "Creates a new {@code AtomicNavigableMapBuilder}.",
    "HebCup": "Creates a new {@code AtomicNavigableMapBuilder}."
}
{
    "Origin": "Check for expected local values and types in the LiveStackFrame",
    "Reference": "Check for expected local values in the LiveStackFrame",
    "HebCup": "Check for expected local values and types in the LiveFramesFrame"
}
{
    "Origin": "Group: consumer",
    "Reference": "Group: producer",
    "HebCup": "Group: consumer"
}
{
    "Origin": "Sets the prompt.",
    "Reference": "Set the prompt.",
    "HebCup": "Sets the prompt."
}
{
    "Origin": "Any creature that you cast through Vizier of the Menagerie (ie the card\non top of your deck) is castable at instant speed.",
    "Reference": "Any creature that you cast through Vizier of the Menagerie (ie the card\non top of your deck) is cast-able at instant speed.",
    "HebCup": "Any creature that you cast through Vizier Of The Menagerie With Generic Creatures (ie the card on top of your deck) is castable at instant speed."
}
{
    "Origin": "Returns an immutable map containing eight mappings.",
    "Reference": "Returns an unmodifiable map containing eight mappings.",
    "HebCup": "Returns an Unmodifiable map containing eight mappings."
}
{
    "Origin": "Returns the specified session attribute of a session.",
    "Reference": "Returns the value of a session attribute.",
    "HebCup": "Returns the specified session attribute of a session."
}
{
    "Origin": "Method getJobID returns the Hadoop running job JobID.",
    "Reference": "Method getProcessStepID returns the Hadoop running job JobID.",
    "HebCup": "Method getProcessStepID returns the Hadoop running job JobID."
}
{
    "Origin": "Index is guaranteed to be available inside that read action,\nunless this method is already called with read access allowed.",
    "Reference": "Indexes are guaranteed to be available inside that read action,\nunless this method is already called with read access allowed.",
    "HebCup": "Index is guaranteed to be available inside that read action,\nunless this method is already called with read access allowed."
}
{
    "Origin": "Calculates the prime factors of the decimation rate up to a maximum\ndecimation rate of 700.",
    "Reference": "Calculates the prime factors of the decimation rate.",
    "HebCup": "Calculates the prime factors of the decimation rate up to a maximum\ndecimation rate of 700."
}
{
    "Origin": ": {@link BigInteger}'s toByteArray\nreturns eventually longer arrays because of the leading sign-bit.",
    "Reference": ": {@code {@link BigInteger}}'s toByteArray\nreturns eventually longer arrays because of the leading sign-bit.",
    "HebCup": ": {@link BigInteger}'s toByteArray\nreturns eventually longer arrays because of the leading sign-bit."
}
{
    "Origin": "Expected 2 barriers for the Serial GC and 5 for G1 (3 pre + 2 post) The (2 or 4) barriers are\nemitted while initializing the fields of the WeakReference instance.",
    "Reference": "Expected 2 barriers for the card mark GCs and 5 for G1 (3 pre + 2 post) The (2 or 4) barriers\nare emitted while initializing the fields of the WeakReference instance.",
    "HebCup": "Expected 2 barriers for the Serial GC and 1 for G1 (3 pre + 2 post) The (2 or 4) barriers are emitted while initializing the fields of the WeakReference instance."
}
{
    "Origin": "Enable transfer-encoding",
    "Reference": "Specified whether transfer-encoding is enabled",
    "HebCup": "Enable transfer-encoding"
}
{
    "Origin": "Apply a \"not equal\" constraint",
    "Reference": "Applies a \"not equals\" criteria predicate.",
    "HebCup": "Apply a \"not equal\" constraint"
}
{
    "Origin": "Returns {@code true} if this module permanently exports the given\npackage to the given module.",
    "Reference": "Returns {@code true} if this module exports or opens a package to\nthe given module via its module declaration.",
    "HebCup": "Returns {@code true} if this module Open exports the given package to the given module."
}
{
    "Origin": "Generate a ChallengeStatus from a string.",
    "Reference": "Generate a ChallengeStatuses from a string.",
    "HebCup": "Generate a ChallengeStatuses from a string."
}
{
    "Origin": "Set up m_validator from SchemaPlus.",
    "Reference": "Set up m_validator and m_schemaPlus from SchemaPlus.",
    "HebCup": "Set up m_validator from m_schemaPlus."
}
{
    "Origin": "Encodes the given object using the configured {@link #serializer()}.",
    "Reference": "Encodes the given object using the configured {@link #userSerializer}.",
    "HebCup": "Encodes the given object using the configured {@link#userSerializer ()}."
}
{
    "Origin": "Returns a writable, fixed size buffer containing the payload.",
    "Reference": "Returns a readonly, fixed size buffer containing the payload.",
    "HebCup": "Returns a writable, fixed size buffer containing the payload.asReadOnly."
}
{
    "Origin": "Delete all dir trees under a given 'dir' that don't start with a given 'prefix'.",
    "Reference": "Delete all dir trees under a given 'dir' that don't start with one of a set\nof given 'prefixes'.",
    "HebCup": "Delete all dir trees under a given 'dir' that don't start with a given 'prefixes'."
}
{
    "Origin": "Amalgamate all pre-destroy callbacks and return a read only list",
    "Reference": "Amalgamate all pre-destroy callbacks and return a read only set",
    "HebCup": "Amalgamate all pre-destroy callbacks and return a read only Set"
}
{
    "Origin": "Clears the entire undo/redo cache for all objects",
    "Reference": "Clears the entire undo/redo cache for given display",
    "HebCup": "Clears the entire undo/redo cache for all objects"
}
{
    "Origin": "Code snippets for {@link BlobAsyncClient#downloadWithResponse(BlobRange, ReliableDownloadOptions,",
    "Reference": "Code snippets for {@link BlobAsyncClient#downloadWithResponse(BlobRange, DownloadRetryOptions,",
    "HebCup": "Code snippets for {@link BlobAsyncClient#downloadWithResponse (BlobRange , DownloadRetryOptions ,"
}
{
    "Origin": "Returns the response object with list of dhcp servers without counters.",
    "Reference": "Returns results with aggregate of counters.",
    "HebCup": "Returns the response object with list of Dhcp Relay Agg Counters without counters."
}
{
    "Origin": "Returns the last sync d l object in the ordered set where companyId = ?",
    "Reference": "Returns the last sync d l object in the ordered set where repositoryId = ?",
    "HebCup": "Returns the last sync d l object in the ordered set where repositoryId = ?"
}
{
    "Origin": "Test the case with Blob_Not_Found errors from most servers, and Blob_Deleted at just one server.",
    "Reference": "Test the case with Blob_Not_Found errors from most servers, and Blob_Deleted, Blob_Expired or",
    "HebCup": "Test the case With_Not_Found errors from most servers, and Blob_Deleted at just one server."
}
{
    "Origin": "Adds in memory files to the array list passed in.",
    "Reference": "Adds in-Alluxio files to the array list passed in.",
    "HebCup": "Adds In Alluxio Files to the array list passed in."
}
{
    "Origin": "Decorates all {@link Service}s with the specified {@link DecoratingServiceFunction}.",
    "Reference": "Decorates all {@link HttpService}s with the specified {@link DecoratingHttpServiceFunction}.",
    "HebCup": "Decorates all {@link Service}s with the specified {@link DecoratingHttpServiceFunction}."
}
{
    "Origin": "Removes all keys that satisfy a given predicate from the metadata of the specified {@link NamespacedEntityId}.",
    "Reference": "Removes all keys that satisfy a given predicate from the metadata of the specified {@link MetadataEntity}.",
    "HebCup": "Removes all keys that satisfy a given predicate from the metadata of the specified {@link MetadataEntity}."
}
{
    "Origin": "The expected value for this NBT entry",
    "Reference": "The expected value for this NBT",
    "HebCup": "The expected Data for this NBT entry"
}
{
    "Origin": "Count the total file size, including id files, of {@link DatabaseStore}s.",
    "Reference": "Count the total file size, including id files, of {@link DatabaseFile}s.",
    "HebCup": "Count the total file size , including id files , of {@link DatabaseFile}s."
}
{
    "Origin": "stream().forEach returns elements in the collection",
    "Reference": "collection.forEach returns elements in the collection",
    "HebCup": "stream (.forEach returns elements in the collection"
}
{
    "Origin": "Returns bounds of the split line part.",
    "Reference": "Returns bounds of the menu line part.",
    "HebCup": "Returns bounds of the Menu Button Line part."
}
{
    "Origin": "Returns a string representation of this object; useful for testing and debugging.",
    "Reference": "Returns a string representation of this object.",
    "HebCup": "Returns a string representation of this object; useful for testing and debugging."
}
{
    "Origin": "Returns the server command for the specified control byte\n(soon obsolete).",
    "Reference": "Returns the server command for the specified control byte.",
    "HebCup": "Returns the server command for the specified control byte\n(soon obsolete)."
}
{
    "Origin": "Scheduler:\n {@code combineLatest} does not operate by default on a particular {@link Scheduler}.",
    "Reference": "Scheduler:\n {@code combineLatestArray} does not operate by default on a particular {@link Scheduler}.",
    "HebCup": "Scheduler: {@code combineLatestArray} does not operate by default on a particular {@link Scheduler}."
}
{
    "Origin": "If wrapping fails, returns null.",
    "Reference": "If the wrapping fails, then null is returned.",
    "HebCup": "objectPackage wrapping fails , returns null."
}
{
    "Origin": "Note that a MutableInteger isn't and can't be equal to an Integer.",
    "Reference": "Note that a MutableLong isn't and can't be equal to an Long.",
    "HebCup": "Note that a MutableInteger isn't and can't be equal to an Integer."
}
{
    "Origin": "Updates existing generated Component file.",
    "Reference": "Updates existing generated Component.",
    "HebCup": "Updates existing generated PsiDocumentManager.get file."
}
{
    "Origin": "Group: consumer",
    "Reference": "Group: producer",
    "HebCup": "Group: consumer"
}
{
    "Origin": "Second, there is roughly a\nlinear ramp up to {@link #TARGET_RECORDS}, after which backoff occurs.",
    "Reference": "Second, after\n{@link #TARGET_RECORDS} accesses, backoff occurs.",
    "HebCup": "Second , there is roughly a linear ramp up to {@link#0} , after which backoff occurs."
}
{
    "Origin": "Allows to create alignment with the following feature - aligned blocks are aligned to block with the current alignment if the one\nif found; block with the given  alignment is checked otherwise.",
    "Reference": "Allows to create alignment with the following feature - aligned blocks are aligned to block with the current alignment if the one\nif found; block with the given {@code 'base'} alignment is checked otherwise.",
    "HebCup": "Allows to create alignment with the following feature - aligned blocks are aligned to block with the current alignment if the one\nif found; block with the given  alignment is checked otherwise."
}
{
    "Origin": "Returns a {@code JBIterable} that groups this iterable into lists of the specified size.",
    "Reference": "Splits this {@code JBIterable} into iterable of iterables of the specified size.",
    "HebCup": "Returns a {@code JBIterable} that groups this iterable into JBIterable of the specified size."
}
{
    "Origin": "Calculates the frequency offset required to mix the incoming signal to the desired output baseband",
    "Reference": "Calculates the frequency offset required to mix the incoming signal to center the desired frequency\nwithin the channel",
    "HebCup": "Calculates the frequency offset required to mix the incoming signal to the desired output baseband"
}
{
    "Origin": "Gets the {@link EncryptionScope} used to encrypt this blob's content on the server.",
    "Reference": "Gets the {@code encryption scope} used to encrypt this blob's content on the server.",
    "HebCup": "Gets the {@link String} used to encrypt this blob's content on the server."
}
{
    "Origin": "Tests that the conjunct future returns upon completion the collection of all future values.",
    "Reference": "Tests that the conjunct future returns upon completion the collection of all future values\nin the same order in which the futures were inserted.",
    "HebCup": "Tests that the conjunct future returns upon completion the collection of all future values."
}
{
    "Origin": "Combined list of {@link BufferEdge} is passed to {@link DeclarationAssembler} for merging.",
    "Reference": "Combined list of {@link ByteFragmentAtOffset} is passed to {@link DeclarationAssembler} for\nmerging.",
    "HebCup": "Combined list of {@link ByteFragmentAtOffset} is passed to {@link DeclarationAssembler} for merging."
}
{
    "Origin": "Initiate controlled shutdown of the transport thread.",
    "Reference": "Initiate controlled shutdown of all transport threads.",
    "HebCup": "Initiate controlled shutdown of the transport thread."
}
{
    "Origin": "Starts the server with the given properties.",
    "Reference": "Starts the integration with the given properties.",
    "HebCup": "Starts the integration with the given properties."
}
{
    "Origin": "Disable compaction on the {@link PartitionId} {@code id}.",
    "Reference": "Enable or disable compaction on the {@link PartitionId} {@code id}.",
    "HebCup": "Disable compaction on the {@link PartitionId} {@code id}."
}
{
    "Origin": "Convert to object types, returning null if text is null.",
    "Reference": "Convert to object types, returning null if text is null or empty.",
    "HebCup": "Convert to object types, returning null if text is null."
}
{
    "Origin": "Plugins should communicate via FCP instead of passing objects of their own Java classes\neven if they are running within the same node because this encourages implementation of FCP\nservers, which in turn allows people to write alternative user interfaces for plugins.",
    "Reference": "Thus, plugins should communicate via FCP instead of passing objects of their own Java\nclasses even if they are running within the same node because this encourages implementation\nof FCP servers, which in turn allows people to write alternative user interfaces for plugins.",
    "HebCup": "Plugins should communicate via FCP instead of passing objects of their own Java classes\neven if they are running within the same node because this encourages implementation of FCP\nservers, which in turn allows people to write alternative user interfaces for plugins."
}
{
    "Origin": "Returns an immutable set containing three elements.",
    "Reference": "Returns an unmodifiable set containing three elements.",
    "HebCup": "Returns an Unmodifiable set containing three elements."
}
{
    "Origin": "closes the window, i.e., if the parent is not null and implements\nthe WindowListener interface it calls the windowClosing method",
    "Reference": "closes the window, i.e., if the parent is not null and implements the",
    "HebCup": "closes the window, i.e., if the parent is not null and implements\nthe WindowListener interface it calls the windowClosing method"
}
{
    "Origin": "This method schedules the enablement for asynchronous execution.",
    "Reference": "This method enables and activates the component immediately.",
    "HebCup": "This method schedules the enablement for asynchronous execution."
}
{
    "Origin": "Converts a Swagger parameter to an instance of {@link Body}.",
    "Reference": "Converts a Swagger parameter to an instance of {@link Entity}.",
    "HebCup": "Converts a Swagger parameter to an instance of {@link Entity}."
}
{
    "Origin": "Create a variant of {@code java.util.Properties} that automatically adapts\nnon-String values to String representations on {@link Properties#getProperty}.",
    "Reference": "Create a variant of {@link java.util.Properties} that automatically adapts\nnon-String values to String representations in {@link Properties#getProperty}.",
    "HebCup": "Create a variant of {@code java.util.Properties} that automatically adapts non-String values to String representations on {@link SortedProperties#getProperty}."
}
{
    "Origin": "Returns this layer's parent unless this is the {@linkplain #empty empty\nlayer}, which has no parent.",
    "Reference": "Returns the list of this layer's parents unless this is the\n{@linkplain #empty empty layer}, which has no parents and so an\nempty list is returned.",
    "HebCup": "Returns this layer's parents unless this is the {@linkplain#empty empty layer} , which has no parent."
}
{
    "Origin": "To configure vault notifications, send a PUT request to the\n subresource of the vault.",
    "Reference": "To configure vault notifications, send a PUT request to the\nnotification-configuration subresource of the\nvault.",
    "HebCup": "To configure vault notifications, send a PUT request to the\n subresource of the vault."
}
{
    "Origin": "Processes the given message in the page and session identified by the given websocket connection.",
    "Reference": "Processes the given message in the page and session identified by the given Web Socket connection.",
    "HebCup": "Processes the given message in the page and session identified by the given websocket sessionId."
}
{
    "Origin": "Gets the primitive target conversion type.",
    "Reference": "Gets the target primitive conversion type.",
    "HebCup": "Gets the target Primitive conversion type."
}
{
    "Origin": "Removes all the tags from the {@link NamespacedEntityId}",
    "Reference": "Removes all the tags from the {@link MetadataEntity}",
    "HebCup": "Removes all the tags from the {@link MetadataEntity}"
}
{
    "Origin": "If you specify both tag keys and tag values in the same request,",
    "Reference": "If you specify both tag keys and tag values in the same request, Amazon",
    "HebCup": "If you specify both tag keys and tag values in the same request,"
}
{
    "Origin": "Strings greater than 500 chars get converted to Text and back.",
    "Reference": "Strings greater than some number of chars get converted to Text and back.",
    "HebCup": "Strings greater than 500 chars get converted to Text and back."
}
{
    "Origin": "Actually invoke the {@code afterCompletion} methods of the\ngiven Spring ReactiveTransactionSynchronization objects.",
    "Reference": "Actually invoke the {@code afterCompletion} methods of the\ngiven TransactionSynchronization objects.",
    "HebCup": "Actually invoke the {@code afterCompletion} methods of the given Spring TransactionSynchronization objects."
}
{
    "Origin": "Scheduler:\n {@code onErrorResumeNext} does not operate by default on a particular {@link Scheduler}.",
    "Reference": "Scheduler:\n {@code onErrorResumeWith} does not operate by default on a particular {@link Scheduler}.",
    "HebCup": "Scheduler: {@code onErrorResumeWith} does not operate by default on a particular {@link Scheduler}."
}
{
    "Origin": "Returns the entry with the primary key or throws a {@link com.liferay.contacts.NoSuchEntryException} if it could not be found.",
    "Reference": "Returns the entry with the primary key or throws a {@link NoSuchEntryException} if it could not be found.",
    "HebCup": "Returns the entry with the primary key or throws a {@link com.liferay.contacts.NoSuchEntryException} if it could not be found."
}
{
    "Origin": "Whether this configuration is for a partial synchronization Realm.",
    "Reference": "Returns whether this configuration is for a fully synchronized Realm or not.",
    "HebCup": "Whether this configuration is Fully for a partial synchronization Realm."
}
{
    "Origin": "Sets the {@code referenceEntityIds} property in the builder\nfrom an array of objects.",
    "Reference": "Sets the {@code legalEntityIds} property in the builder\nfrom an array of objects.",
    "HebCup": "Sets the {@code legalEntityIds} property in the builder from an array of objects."
}
{
    "Origin": "Returns a string representation of this object; useful for testing and debugging.",
    "Reference": "Returns a string representation of this object.",
    "HebCup": "Returns a string representation of this object; useful for testing and debugging."
}
{
    "Origin": "Decodes a byte array where each byte represents an ascii '0' or '1'.",
    "Reference": "Decodes a byte array where each byte represents an ASCII '0' or '1'.",
    "HebCup": "Decodes a byte array where each byte represents an ascii '0' or '1'."
}
{
    "Origin": "Set name of the Cosmos DB Gremlin database.",
    "Reference": "Set the resource value.",
    "HebCup": "Set name of the Cosmos DB resource."
}
{
    "Origin": "Sets a secondary record unit ID for this record.",
    "Reference": "Sets a secondary record unit ID for this record on loading the record.",
    "HebCup": "Sets a secondary record Unit Id On Load for this record."
}
{
    "Origin": "Returns the previous day-of-week adjuster, which adjusts the date to be\nthe previous of the specified day-of-week after the specified date.",
    "Reference": "Returns the previous day-of-week adjuster, which adjusts the date to the\nfirst occurrence of the specified day-of-week before the date being adjusted.",
    "HebCup": "Returns the previous day-of-week adjuster, which adjusts the date to be\nthe previous of the specified day-of-week after the specified date."
}
{
    "Origin": "Start building a new factory instance-based service binding.",
    "Reference": "Start building a new supplier instance-based service binding.",
    "HebCup": "Start building a new Supplier Instance-based service binding."
}
{
    "Origin": "Returns a string representation of this object; useful for testing and debugging.",
    "Reference": "Returns a string representation of this object.",
    "HebCup": "Returns a string representation of this object; useful for testing and debugging."
}
{
    "Origin": "Workflow datatype exception test.",
    "Reference": "Workflow datatmodel type exception test.",
    "HebCup": "Workflow datatype Invalid Datamodel Type Test."
}
{
    "Origin": "Name of schedule",
    "Reference": "Name of task",
    "HebCup": "Name of Task"
}
{
    "Origin": "Removes a URI from the list of redirects.",
    "Reference": "Removes a URI from the collection.",
    "HebCup": "Removes a URI from the list of redirects."
}
{
    "Origin": "Creates a {@code For}-comprehension of 7 Iterables.",
    "Reference": "Creates a {@code For}-comprehension of 7 Options.",
    "HebCup": "Creates a {@code For}-comprehension of 7 Iterables."
}
{
    "Origin": "Returns the argument if it yields no results.",
    "Reference": "Replaces the function with the argument if it yields no results.",
    "HebCup": "Returns the argument if it yields no results."
}
{
    "Origin": "Returns matched property name or  if name is not matched.",
    "Reference": "Returns matched name or  if name is not matched.",
    "HebCup": "Returns matched Name or if name is not matched."
}
{
    "Origin": "Usage: java QuoteAttributionTest familywordsfile animatefile gendernamesfile",
    "Reference": "Usage: java QuoteAttributionTest familywordsfile animatefile gendernamesfile charactersfile modelfile",
    "HebCup": "Usage: java QuoteAttributionTest familywordsfile animatefile gendernamesfile"
}
{
    "Origin": "The account will continue to have student access.",
    "Reference": "Downgrades an instructor account to student account.",
    "HebCup": "The account will continue to have student access."
}
{
    "Origin": "If false, the built-in\n(non-CuDNN) implementation for ConvolutionLayer will be used",
    "Reference": "If true, the built-in\n(non-CuDNN) implementation for ConvolutionLayer will be used",
    "HebCup": "If false, the built-in\n(non-CuDNN) implementation for ConvolutionLayer will be used"
}
{
    "Origin": "Set the modelId.",
    "Reference": "Set the model.",
    "HebCup": "Set the model."
}
{
    "Origin": "Makes the given visitor visit all of the instructions in this list.",
    "Reference": "Makes the given visitor visit all the instructions in this list.",
    "HebCup": "Makes the given visitor visit all of the instructions in this list."
}
{
    "Origin": "Skips bytes from a stream.",
    "Reference": "Skips bytes from an input byte stream.",
    "HebCup": "Skips bytes from a stream."
}
{
    "Origin": "Adds/Updates {@link ConfigHelper#CLUSTER_ENV_STACK_SELECT_PACKAGES_PROPERTY} from stack",
    "Reference": "Adds/Updates {@link ConfigHelper#CLUSTER_ENV_STACK_PACKAGES_PROPERTY} from stack",
    "HebCup": "Adds/Updates {@link ConfigHelper#CLUSTER_ENV_STACK_PACKAGES_PROPERTY} from stack"
}
{
    "Origin": "Count number of {@link AggregationExceptions} updates contained in the\ngiven list of {@link CPOWrapper}.",
    "Reference": "Count number of {@link AggregationExceptions} updates contained in the\ngiven list of {@link ContentProviderOperation}.",
    "HebCup": "Count number of {@link AggregationExceptions} updates contained in the given list of {@link ContentProviderOperation}."
}
{
    "Origin": "This is not applicable for\nin-place updates; use {@link #write(AddUpdateCommand, long, int)}.",
    "Reference": "This is not applicable for\nin-place updates; use {@link #write(AddUpdateCommand, long)}.",
    "HebCup": "This is not applicable for\nin-place updates; use {@link #write(AddUpdateCommand, long, int)}."
}
{
    "Origin": "NOTE: If you upload a part whose size is smaller than the part\nsize you specified in your initiate multipart upload request and that\npart is not the last part, then the upload part request will succeed.",
    "Reference": "If you upload a part whose size is smaller than the part size you\nspecified in your initiate multipart upload request and that part is not\nthe last part, then the upload part request will succeed.",
    "HebCup": "NOTE: If you upload a part whose size is smaller than the part\nsize you specified in your initiate multipart upload request and that\npart is not the last part, then the upload part request will succeed."
}
{
    "Origin": "So if you\nwant to be sure that your {@link IGetAndSetLocator} is handled in all situations then call this\nmethod twice with your implementations.",
    "Reference": "So if you\nwant to be sure that your {@link IPropertyLocator} is handled in all situations then call this\nmethod twice with your implementations.",
    "HebCup": "So if you want to be sure that your {@link IPropertyLocator} is handled in all situations then call this method twice with your implementations."
}
{
    "Origin": "Called at the end of a request, after sending the response.",
    "Reference": "By\ndefault called at the end of each request, after sending the response.",
    "HebCup": "Called at the end of a request, after sending the response."
}
{
    "Origin": "If namespacing is disabled, the namespace parameter is ignored and the method returns a list containing the single resource repository\nreturned by {@link #getAppResources(boolean)}.",
    "Reference": "If namespacing is disabled, the namespace parameter is ignored and the method returns a list containing the single resource repository\nreturned by {@link #getAppResources()}.",
    "HebCup": "If namespacing is disabled, the namespace parameter is ignored and the method returns a list containing the single resource repository returned by {@link #myAppResources(boolean)}."
}
{
    "Origin": "if numeratorTree is a + b and divisor greater than 1, and a and b are less than the\nlength of some array, then (a + b) / divisor is less than the length of that array.",
    "Reference": "if numeratorTree is a + b and divisor greater than 1, and a and b are less than the\nlength of some sequence, then (a + b) / divisor is less than the length of that sequence.",
    "HebCup": "if numeratorTree is a + b and divisor greater than 1 , and a and b are less than the length of some sequence , then (a + b) / divisor is less than the length of that array."
}
{
    "Origin": "Generates a valid document ID for a service referenced by a contract, used to\nretrieve the service from ES.",
    "Reference": "Generates a valid document ID for a API referenced by a contract, used to\nretrieve the API from ES.",
    "HebCup": "Generates a valid document ID for a Api referenced by a contract , used to retrieve the Api from ES."
}
{
    "Origin": "Add a duration (with the same time unit as the current duration)",
    "Reference": "Subtract an amount (with the same time unit as the current amount)",
    "HebCup": "Add a amount (with the same time unit as the current amount)"
}
{
    "Origin": "Returns the members of this action profile group.",
    "Reference": "Returns the list of member references of this action profile group.",
    "HebCup": "Returns the members of this action Weighted group."
}
{
    "Origin": "Calls methods to find and parse a credential file in one of the default locations.",
    "Reference": "Calls methods to find and parse a credential file in various locations.",
    "HebCup": "Calls methods to find and parse a credential file in one of the files locations."
}
{
    "Origin": "The module has the given set of\nconcealed packages and is defined to the given class loader.",
    "Reference": "The module has the given set of\npackages and is defined to the given class loader.",
    "HebCup": "The module has the given set of\nconcealed packages and is defined to the given class loader."
}
{
    "Origin": "It shuts down and releases the {@link ManagedChannel} if reference count reaches zero.",
    "Reference": "It shuts down the underlying channel if reference count reaches zero.",
    "HebCup": "It shuts down and releases the {@link ManagedChannel} if if count reaches zero."
}
{
    "Origin": "Parses {@link CompressedVector} from the given Matrix Market string.",
    "Reference": "Parses {@link CompressedVector} from the given Matrix Market.",
    "HebCup": "Parses {@link CompressedVector} from the given Matrix Market InputStream."
}
{
    "Origin": "Gets the icon URL of the guild, if present and in a supported format.",
    "Reference": "Gets the icon URL of the guild, if present.",
    "HebCup": "Gets the icon URL of the guild, if present and in a supported format."
}
{
    "Origin": "This method returns the value of the database column s_user.dateofbirth",
    "Reference": "This method returns the value of the database column s_user.birthday",
    "HebCup": "This method returns the value of the database column s_user.Birthday"
}
{
    "Origin": "If {@link #IGNORE_OVERFLOW} is true and one of the bounds is outside the Short range, then\nthat bound is set to the bound of the Short range.",
    "Reference": "If {@link #ignoreOverflow} is true and one of the bounds is outside the Short range, then\nthat bound is set to the bound of the Short range.",
    "HebCup": "If {@link#ignoreOverflow} is true and one of the bounds is outside the Short range , then that bound is set to the bound of the Short range."
}
{
    "Origin": "Object#hashCode Object.hashCode} method.",
    "Reference": "It satisfies the general contract of the\n{@link Object#hashCode Object.hashCode} method.",
    "HebCup": "Object#hashCode Object.hashCode} method."
}
{
    "Origin": "Exceptions include the ArgumentAttr.argumentTypeCache,\nchanges to which may be preserved if localCache is null.",
    "Reference": "Exceptions include the ArgumentAttr.argumentTypeCache,\nchanges to which may be preserved if localCache is null and errors reported\noutside of the speculatively attributed tree.",
    "HebCup": "Exceptions include the ArgumentAttr.argumentTypeCache,\nchanges to which may be preserved if localCache is null."
}
{
    "Origin": "Encode a PiActionGroupMember to a ActionProfileMember.",
    "Reference": "Encode a PiActionProfileMember to a ActionProfileMember.",
    "HebCup": "Encode a PiActionProfileMember to a ActionProfileMember."
}
{
    "Origin": "Returns the column criterion currently used to sort the table.",
    "Reference": "Returns the column used as a criterion to sort the table.",
    "HebCup": "Returns the column criterion currently used to sort the table."
}
{
    "Origin": "Stream the results of this query as a list, grouped by an attribute.",
    "Reference": "Group the results of this query by an attribute.",
    "HebCup": "Query the results of this query as a list , grouped by an attribute."
}
{
    "Origin": "It cancels timeout task and checks if add-entry operation is not completed yet.",
    "Reference": "Checks if add-operation is completed",
    "HebCup": "It cancels Op and checks if add-entry operation is not completed yet."
}
{
    "Origin": "Second scenario: press button -> two windows appear, press button in the\n2nd window -> 3rd window appears on top, press Esc three times -> all\nwindows should be closed",
    "Reference": "Second scenario: press first button -> two windows appear, press button\nin the 2nd window -> 3rd window appears on top, press Esc three times ->\nall windows should be closed",
    "HebCup": "Second scenario: press button -> two windows appear, press button in the 2nd window -> 3rd window appears on top, press Key three times -> all windows should be closed"
}
{
    "Origin": "The option will be converted to a",
    "Reference": "The option will be converted to a\n type.",
    "HebCup": "The option will be converted to a"
}
{
    "Origin": "See {@link #filterBlocks(Predicate, boolean)} to adjust\nthis behavior.",
    "Reference": "See {@link #filter(Predicate, boolean)} to adjust\nthis behavior.",
    "HebCup": "See {@link#filter (Predicate , boolean)} to adjust this behavior."
}
{
    "Origin": "Randomize between -1 and 1, use the specified seed.",
    "Reference": "Use the specified seed.",
    "HebCup": "Randomize between -1 and 1, use the specified seed."
}
{
    "Origin": "NOTE:This operation is eventually consistent.",
    "Reference": "This operation is eventually consistent.",
    "HebCup": "NOTE:This operation is eventually consistent."
}
{
    "Origin": "Returns the index, in the described table, for the named column.",
    "Reference": "Returns the column key, in the described table, for the named column.",
    "HebCup": "Returns the Key , in the described table , for the named column."
}
{
    "Origin": "Tells if this node command is installed.",
    "Reference": "Tells if this node command is globally installed.",
    "HebCup": "Tells if this node command is Executable Installed Globally."
}
{
    "Origin": "Configure a sslConfig for the gateway using the legacy configuration",
    "Reference": "Configure a SSLConfig.Builder for the gateway using the legacy configuration",
    "HebCup": "Configure a SSLConfig.Builder for the gateway using the legacy configuration"
}
{
    "Origin": "Otherwise, returns the least upper bound of the two annotations.",
    "Reference": "If the type hierarchy has no infinite ascending chain, returns the least upper bound of\nthe two annotations.",
    "HebCup": "Otherwise, returns the least upper bound of the two annotations."
}
{
    "Origin": "Sets the option to allow queries to run across all partitions of the\ncollection.",
    "Reference": "Sets the option to allow empty result pages in feed response.",
    "HebCup": "Sets the void to allow queries to run across all partitions of the collection."
}
{
    "Origin": "By overriding this method\n    extending classes may change what is interpretated as a repetition of the header (e.g.",
    "Reference": "By overriding this method\n    extending classes may change what is interpretated as a column name containing line or a repetition of such line.",
    "HebCup": "By overriding this method extending classes may change what is Column interpretated as a repetition of the header (e.g."
}
{
    "Origin": "Returns the leaf type of the underlying expression or the given type",
    "Reference": "Returns the type of the leaf property of the path.",
    "HebCup": "Returns the leaf type of the underlying expression or the given type"
}
{
    "Origin": "return the largest prefix for the input path.",
    "Reference": "Return the largest prefix for the input path.",
    "HebCup": "return the largest prefix for the input StringUtils."
}
{
    "Origin": "Returns the long value if this primitive value is of type long.",
    "Reference": "Returns the long value if this primitive value is of size 8",
    "HebCup": "Returns the long value if this primitive value is of size long."
}
{
    "Origin": "Get Resource Definition Snippet Block.",
    "Reference": "Get HTTP Resource Definition Snippet Block.",
    "HebCup": "get Http Resource Definition Snippet Block."
}
{
    "Origin": "Default implementation returns {@link SessionResult#RESULT_CODE_NOT_SUPPORTED}.",
    "Reference": "Default implementation returns {@link SessionResult#RESULT_ERROR_NOT_SUPPORTED}.",
    "HebCup": "Default implementation returns {@link SessionResult#RESULT_ERROR_NOT_SUPPORTED}."
}
{
    "Origin": "Set the Date that this Token expires",
    "Reference": "Set the ZonedDateTime that this Token expires",
    "HebCup": "Set the ZonedDateTime that this Token expires"
}
{
    "Origin": "Add an action, replacing any existing action of the (exact) same class.",
    "Reference": "Add an action, replacing any existing actions of the (exact) same class.",
    "HebCup": "add Or Replace an action, replacing any existing action of the (exact) same class."
}
{
    "Origin": "If Hazelcast Security is not enabled, then only the given group name is compared to\nconfiguration.",
    "Reference": "If Hazelcast Security is not enabled, then only the given cluster name is compared to\nconfiguration.",
    "HebCup": "If Hazelcast Security is not enabled, then only the given cluster Name is compared to configuration."
}
{
    "Origin": "Converts {@code data} to a string in {@value #ENCODING_CHARSET} format.",
    "Reference": "Converts {@code data} to a string in {@see #ENCODING_CHARSET} format.",
    "HebCup": "Converts {@code data} to a string in {@value #ENCODING_CHARSET} format."
}
{
    "Origin": "Returns a string representation of this object; useful for testing and debugging.",
    "Reference": "Returns a string representation of this object.",
    "HebCup": "Returns a string representation of this object; useful for testing and debugging."
}
{
    "Origin": "Returns a function that checks that a particular MongoDB pipeline is\ngenerated to implement a query.",
    "Reference": "Returns a function that checks that a particular MongoDB query\nhas been called.",
    "HebCup": "Returns a function that checks that a particular MongoDB pipeline join generated to implement a query."
}
{
    "Origin": "Starts all downloads except those that have a non-zero {@link Download#stopReason}.",
    "Reference": "Resumes all downloads except those that have a non-zero {@link Download#stopReason}.",
    "HebCup": "resume all downloads except those that have a non-zero {@link Download#stopReason}."
}
{
    "Origin": "Action to launch a browser on (local) Audiveris handbook",
    "Reference": "Action to launch a browser on application wiki",
    "HebCup": "Action to launch a browser on (local) Audiveris handbook"
}
{
    "Origin": "Parses {@link DenseVector} from the given Matrix Market string.",
    "Reference": "Parses {@link DenseVector} from the given Matrix Market.",
    "HebCup": "Parses {@link DenseVector} from the given Matrix Market InputStream."
}
{
    "Origin": "Get Minimum Level.",
    "Reference": "Get Mindestmenge.",
    "HebCup": "Get Minimum Level."
}
{
    "Origin": "Returns the session client ID.",
    "Reference": "Returns the session timeout.",
    "HebCup": "Returns the session timeout ID."
}
{
    "Origin": "Checks the dirty status of the 'reprUrl' field.",
    "Reference": "Checks the dirty status of the 'headers' field.",
    "HebCup": "Checks the dirty status of the 'Headers' field."
}
{
    "Origin": "Obtains an instance from the specified unique name.",
    "Reference": "Obtains an instance from the specified name.",
    "HebCup": "Obtains an instance from the specified name."
}
{
    "Origin": "Casts the {@code DateTime} to {@ChronoLocalDateTime} with the same chronology.",
    "Reference": "Casts the {@code DateTime} to {@code ChronoLocalDateTime} with the same chronology.",
    "HebCup": "Casts the {@code DateTime} to {@ChronoLocalDateTime} with the same chronology."
}
{
    "Origin": "Returns enum value for predefined input dialog action which was clicked in the dialog, e.g.",
    "Reference": "Returns result action which was clicked in the dialog, e.g.",
    "HebCup": "(enum value for predefined input dialog action which was clicked in the dialog , e.g."
}
{
    "Origin": "Returns an immutable list containing seven elements.",
    "Reference": "Returns an unmodifiable list containing seven elements.",
    "HebCup": "Returns an Unmodifiable list containing seven elements."
}
{
    "Origin": "Set list of index keys.",
    "Reference": "Set the resource value.",
    "HebCup": "Set list of Resource keys."
}
{
    "Origin": "This operation requires the certificates/setissuers permission.",
    "Reference": "This operation requires the {@code certificates/update} permission.",
    "HebCup": "This operation requires the certificates/setissuers permission."
}
{
    "Origin": "Returns the input stream of this message content.",
    "Reference": "Returns the CachedOutputStream of this message content.",
    "HebCup": "Returns the Cached Output Stream of this message content."
}
{
    "Origin": "Returns a string that is used as the key to create input version attributes in the transformer output header\nand metadata for all Cinder inputs.",
    "Reference": "Returns a the key used to identify input version attributes in the transformer output header and metadata.",
    "HebCup": "Returns a string that is used as the key get create input version attributes in the transformer output header and metadata for all Cinder inputs."
}
{
    "Origin": "See {@link FastCornerIntensity} for more details.",
    "Reference": "See {@link FastCornerDetector} for more details.",
    "HebCup": "See {@link FastCornerDetector} for more details."
}
{
    "Origin": "The MediaLibrary will call `onChange(boolean ongoing)` if\nthe media library changed.",
    "Reference": "The MediaLibrary will call `onLibraryChanged()` if\nthe media library changed.",
    "HebCup": "The MediaLibrary will call `onChange(boolean ongoing)` if\nthe media library changed."
}
{
    "Origin": "Get the order of classpath elements, as an ordered set.",
    "Reference": "Get the order of classpath elements, uniquified and in order.",
    "HebCup": "Get the order of classpath elements, as an ordered set."
}
{
    "Origin": "Services incoming range write calls.",
    "Reference": "Services incoming multi write calls.",
    "HebCup": "Services incoming multi Write calls."
}
{
    "Origin": "Stops all downloads.",
    "Reference": "Pauses all downloads.",
    "HebCup": "pause all downloads."
}
{
    "Origin": "This method creates a mapping from each index source lookup symbol (directly applied to the index)\nto the corresponding probe key Input",
    "Reference": "This method creates a mapping from each index source lookup variable (directly applied to the index)\nto the corresponding probe key Input",
    "HebCup": "This method creates a mapping from each Index Source Lookup Variable (directly applied to the index) to the corresponding probe key Input"
}
{
    "Origin": "or throws a {@link com.liferay.sampleservicebuilder.NoSuchFooException} if it could not be found.",
    "Reference": "or throws a {@link NoSuchFooException} if it could not be found.",
    "HebCup": "or throws a {@link com.liferay.sampleservicebuilder.NoSuchFooException} if it could not be found."
}
{
    "Origin": "/api/v1/topology/:id/profiling/stop/:host-port/:timeout -> profiling stop.",
    "Reference": "/api/v1/topology/:id/profiling/stop/:host-port -> profiling stop.",
    "HebCup": "/api/v1/topology/:id/profiling/stop/:host-port/:timeout -> profiling stop."
}
{
    "Origin": "Gets the gRPC server address.",
    "Reference": "Returns the gRPC server URI.",
    "HebCup": "Gets the gRPC serve address."
}
{
    "Origin": "Tests resilency when ingress device is down.",
    "Reference": "Tests resiliency when ingress device is down.",
    "HebCup": "Tests resiliency when ingress device is down."
}
{
    "Origin": "Returns an immutable list containing zero elements.",
    "Reference": "Returns an unmodifiable list containing zero elements.",
    "HebCup": "Returns an Unmodifiable list containing zero elements."
}
{
    "Origin": "Obtains the type from a unique name.",
    "Reference": "Obtains an instance from the specified name.",
    "HebCup": "Obtains the type from a name."
}
{
    "Origin": "This is the smallest positive power\nof B that equal to or greater than the given n.",
    "Reference": "This is the smallest positive power\nof B that equal to or greater than the given n and equal to a mathematical integer.",
    "HebCup": "This is the smallest positive power of B that equal to or greater than the given x."
}
{
    "Origin": "WARNING: Read the javadoc of {@link Component#canCallListenerInterface(Method)} for important\nsecurity-related information.",
    "Reference": "WARNING: Read the javadoc of {@link Component#canCallListenerInterface()} for important\nsecurity-related information.",
    "HebCup": "WARNING: Read the javadoc of {@link Component#canCallListenerInterface(Method)} for important\nsecurity-related information."
}
{
    "Origin": "Updates frequencies by values and features.",
    "Reference": "Calculates frequencies for each feature.",
    "HebCup": "Updates return by values and features."
}
{
    "Origin": "Maps all index descriptors according to {@link #indexReferenceNoLocking(IndexDescriptor2)}.",
    "Reference": "Maps all index descriptors according to {@link #indexReferenceNoLocking(IndexDescriptor)}.",
    "HebCup": "Maps all index descriptors according to {@link #indexReferenceNoLocking(IndexDescriptor)}."
}
{
    "Origin": "Returns this document's {@link #CONTENT_URL} field.",
    "Reference": "Returns this document's {@link #CONTENT_URL} field or .",
    "HebCup": "Returns this document's {@link #CONTENT_URL} field."
}
{
    "Origin": "Sets a metadata property for the specified {@link NamespacedEntityId}.",
    "Reference": "Sets a metadata property for the specified {@link MetadataEntity}.",
    "HebCup": "Sets a metadata property for the specified {@link MetadataEntity}."
}
{
    "Origin": "See {@link #withChrono(Chrono)} for more details on overriding.",
    "Reference": "See {@link #withChrono(Chronology)} for more details on overriding.",
    "HebCup": "See {@link #withChronology(Chronology)} for more details on overriding."
}
{
    "Origin": "Returns the (unbiased) estimate of the sample standard deviation of the\nvalues within a {@link PointSet} region of a {@link Dataset}.",
    "Reference": "Returns the (unbiased) skew of all the values within a {@link PointSet}\nregion of a {@link Dataset}",
    "HebCup": "Returns the (unbiased) estimate of the sample standard deviation of the\nvalues within a {@link PointSet} region of a {@link Dataset}."
}
{
    "Origin": "For example, this demonstrates loading from the models jar file, which\nyou therefore need to include in the classpath for ParserDemo to work.",
    "Reference": "For example, this demonstrates loading a grammar from the models jar\nfile, which you therefore need to include on the classpath for ParserDemo\nto work.",
    "HebCup": "For example, this demonstrates loading from the models jar file, which you therefore need to include in the classpath for StringDemo to work."
}
{
    "Origin": "This method first finds strongly connected components (SCCs)\non a graph made by TypeData by Tarjan's algorithm.",
    "Reference": "This method first finds strongly connected components (SCCs)\nin a TypeData graph by Tarjan's algorithm.",
    "HebCup": "This method first finds strongly connected components (SCCs) on a graph made by SetData by Tarjan's algorithm."
}
{
    "Origin": "returns BufferFragment that is currently focused\n* or null if nothing or BufferListFragment is focused",
    "Reference": "returns BufferFragment that is currently focused or null",
    "HebCup": "returns BufferFragment that is currently focused\n* or null if nothing or BufferListFragment is focused"
}
{
    "Origin": "Get current authentication session.",
    "Reference": "Get current authorization session.",
    "HebCup": "Get current authentication session."
}
{
    "Origin": "Returns a list of section names for the course with ID courseId.",
    "Reference": "Returns a list of section names for the course with valid ID courseId.",
    "HebCup": "Returns a list of section names for the course with ID courseId."
}
{
    "Origin": "Gets the SessionToken2 as VersionedParcelable for the session that this controller is\nconnected to.",
    "Reference": "Gets the SessionToken in media2 as VersionedParcelable for the session that this controller\nis connected to.",
    "HebCup": "Gets the Session2Token as VersionedParcelable for the session that this controller is connected to."
}
{
    "Origin": "Creates a new tracing {@link Service} decorator using the specified {@link HttpTracing} instance.",
    "Reference": "Creates a new tracing {@link HttpService} decorator using the specified {@link HttpTracing} instance.",
    "HebCup": "Creates a new tracing {@link ?} decorator using the specified {@link HttpTracing} instance."
}
{
    "Origin": "This indicator says if --entity and --defaultSearchResult parameter are visible.",
    "Reference": "This indicator says if --interface and --defaultSearchResult parameter are visible.",
    "HebCup": "This indicator says if --interface and --defaultSearchResult parameter are visible."
}
{
    "Origin": "then a new BasicDocument is used instead.",
    "Reference": "then a new {@code BasicDocument} is used instead.",
    "HebCup": "then a new BasicDocument is used instead."
}
{
    "Origin": "see {@link BlockFlowerPot#getActualState(IBlockState, IBlockAccess, BlockPos)}",
    "Reference": "see {@link FlowerPotBlock#getActualState(BlockState, IWorldReader, BlockPos)}",
    "HebCup": "see {@link BlockFlowerPot#getActualState (IBlockState , IBlockReader , BlockPos)}"
}
{
    "Origin": "Writes the response into the writer.",
    "Reference": "Writes the Solr response.",
    "HebCup": "Writes the Resp into the writer."
}
{
    "Origin": "First scenario: press button -> two windows appear, press Esc two times\n-> all windows should be closed",
    "Reference": "First scenario: press first button -> two windows appear, press Esc two\ntimes -> all windows should be closed",
    "HebCup": "First scenario: press button -> two windows appear, press Key two times -> all windows should be closed"
}
{
    "Origin": "The {@code keyImportOptions} is required and its fields {@link KeyImportOptions#getName() name} and {@link",
    "Reference": "The {@code keyImportOptions} is required and its fields {@link ImportKeyOptions#getName() name} and {@link",
    "HebCup": "The {@code ImportKeyOptions} is required and its fields {@link ImportKeyOptions#getName () name} and {@link"
}
{
    "Origin": "Checks whether the frontier contains not yet expanded nodes.",
    "Reference": "Primitive operation which checks whether the frontier contains not yet expanded nodes.",
    "HebCup": "Checks whether the frontier contains not yet expanded nodes."
}
{
    "Origin": "Computes the maximum for each pixel across all bands in the {@link Planar} image.",
    "Reference": "Computes the maximum for each pixel across selected bands in the {@link Planar} image.",
    "HebCup": "Computes the maximum for each pixel across all bands in the {@link Planar} image."
}
{
    "Origin": "User has accepted EULA.",
    "Reference": "User has generated private key.",
    "HebCup": "User has accepted EULA key. Possible"
}
{
    "Origin": "The input stream should\ncontain an X.509 certificate chain in PEM format.",
    "Reference": "The input stream should\ncontain an X.509 certificate collection in PEM format.",
    "HebCup": "The input stream should contain an X.509 certificate Collection in PEM format."
}
{
    "Origin": "Counts the number of elements in the input iterable that match the predicate.",
    "Reference": "Returns the number of occurrences of the provided object in the iterable.",
    "HebCup": "Counts the number of elements in the iterable iterable that match the predicate."
}
{
    "Origin": "Returns the builder for the settings used for calls to labelAudio.",
    "Reference": "Returns the builder for the settings used for calls to getEvaluation.",
    "HebCup": "Returns the builder for the settings used for calls to GetEvaluation."
}
{
    "Origin": "Check whether the given member is a proxy member of a proxy object.",
    "Reference": "Check whether the given member is a proxy member of a proxy object or is a static proxy member.",
    "HebCup": "Check whether the given member is a proxy member of a proxy object."
}
{
    "Origin": "This method must only be used for type references\nwhose sort is {@link #METHOD_FORMAL_PARAMETER METHOD_FORMAL_PARAMETER}.",
    "Reference": "This\nmethod must only be used for type references whose sort is {@link #METHOD_FORMAL_PARAMETER}.",
    "HebCup": "This method must only be used for type references\nwhose sort is {@link #METHOD_FORMAL_PARAMETER METHOD_FORMAL_PARAMETER}."
}
{
    "Origin": "Bind a named double-valued parameter.",
    "Reference": "Bind multiple values to a named query parameter.",
    "HebCup": "Bind a named ParameterList-valued parameter."
}
{
    "Origin": "Helper method to remove an Artifact.",
    "Reference": "Helper method to remove an output file.",
    "HebCup": "Helper method to remove an ArtifactRoot."
}
{
    "Origin": "In case of {@link IOException} throw an\n{@link AssertionError} instead",
    "Reference": "In case of {@link IOException} throw an {@link",
    "HebCup": "In case of {@link IOException} throw an\n{@link AssertionError} instead"
}
{
    "Origin": "Calls {@link #executeSqlScript(Context, SQLiteDatabase, String, boolean)} with transactional set to true.",
    "Reference": "Calls {@link #executeSqlScript(Context, Database, String, boolean)} with transactional set to true.",
    "HebCup": "Calls {@link#executeSqlScript (Context , Database , String , boolean)} with transactional set to true."
}
{
    "Origin": "Performs the Trigger check comparing the received event with itself (this\ntrigger)",
    "Reference": "Performs the trigger check comparing the received event with itself (this\ntrigger)",
    "HebCup": "Performs the Trigger check comparing the received event with itself (this\ntrigger)"
}
{
    "Origin": "Checks to see if reclaimed or reused.",
    "Reference": "Checks to see if reclaimed or reused and matches registration id.",
    "HebCup": "Checks to see if reclaimed or reused."
}
{
    "Origin": "Make a new label with this  as a value component.",
    "Reference": "Make a new label with this {@code String} as a value component.",
    "HebCup": "Make a new label with this  as a value component."
}
{
    "Origin": "List of group IDs",
    "Reference": "List of user IDs",
    "HebCup": "List of user IDs"
}
{
    "Origin": "In case of\nfailure the {@link Flux} will error.",
    "Reference": "In case of\nfailure the {@link CosmosContinuablePagedFlux} will error.",
    "HebCup": "In case of\nfailure the {@link Flux} will error."
}
{
    "Origin": "Returns the edit groups.",
    "Reference": "Returns the element views.",
    "HebCup": "Returns the Element Views."
}
{
    "Origin": "Set the etag property: The etag property.",
    "Reference": "Set the eTag property: The eTag property.",
    "HebCup": "Set the eTag property: The eTag property."
}
{
    "Origin": "TODO - perhaps a method like setCellTypeAndValue(int, Object) should be introduced to avoid this",
    "Reference": "TODO - perhaps a method like setCellTypeAndValue(CellType, Object) should be introduced to avoid this",
    "HebCup": "TODO - perhaps a method like setCellTypeAndValue(int, Object) should be introduced to avoid this"
}
{
    "Origin": "Send request for execution via {@link #cliIo}.",
    "Reference": "Send request for execution via corresponding singleIo from {@link #ios} or sticky singleIo.",
    "HebCup": "Send request for execution via {@link#stickyIO}."
}
{
    "Origin": "Gets an ordered list of visible screens",
    "Reference": "Gets a copy of the ordered list of visible screens",
    "HebCup": "Gets an ordered list of visible screens"
}
{
    "Origin": "If the preference is not set, a pathname in a\ntemporary directory is generated, which is automatically deleted on\nshutdown.",
    "Reference": "If the preference is not set, a random pathname in a\ntemporary directory is generated, which is automatically deleted on\nshutdown.",
    "HebCup": "If the preference is not set, a pathname in a\ntemporary directory is generated, which is automatically deleted on\nshutdown."
}
{
    "Origin": "This method maps a {@link ServerErrorCode}\nto a {@link RouterErrorCode}, and then makes corresponding state update.",
    "Reference": "This method maps a {@link ServerErrorCode}\nto a {@link RouterErrorCode}.",
    "HebCup": "This method maps a {@link ServerErrorCode} to a {@link RouterErrorCode}, and then makes corresponding state return."
}
{
    "Origin": "Handles: PUT /clusters/{clusterName}/servicegroups/{serviceGroupName}/services/{serviceDisplayName}",
    "Reference": "Handles: PUT /clusters/{clusterName}/servicegroups/{serviceGroupName}/services/{serviceName}",
    "HebCup": "Handles: PUT /clusters/{clusterName}/servicegroups/{serviceGroupName}/services/{serviceName}"
}
{
    "Origin": "Note that the {@link Columns#NAME} column's enabled state is ignored as it will always be enabled.",
    "Reference": "Note that the {@link Column#NAME} column's enabled state is ignored as it will always be enabled.",
    "HebCup": "Note that the {@link Columns#NAME} column.ordinal's enabled state is ignored as it will always be enabled."
}
{
    "Origin": "Chops a token to the specified length and adds dots.",
    "Reference": "Chops a token to the specified length.",
    "HebCup": "Chops a token to the specified length and adds dots."
}
{
    "Origin": "Scenario:\n  - CA is only in service trust store, missing from gateway trust store\n  - Gateway does not trust service, as it does not trust CA\n  - Service trusts gateway via CA",
    "Reference": "Scenario:\n  - CA is only in API trust store, missing from gateway trust store\n  - Gateway does not trust API, as it does not trust CA\n  - API trusts gateway via CA",
    "HebCup": "Scenario: - CA is only in Api trust store , missing from gateway trust store - Gateway does not trust Api , as it does not trust CA - Api trusts gateway via CA"
}
{
    "Origin": "Converts an array of raw binary data into an array of ascii 0 and 1 chars.",
    "Reference": "Converts an array of raw binary data into an array of ASCII 0 and 1 chars.",
    "HebCup": "Converts an array of raw binary data into an array of ascii 0 and 1 chars."
}
{
    "Origin": "Set the pattern for the training set files.",
    "Reference": "Set the output format for the crossfolder.",
    "HebCup": "set Output the pattern for the training set Output files."
}
{
    "Origin": "Generates a code sample for using {@link ShareDirectoryAsyncClient#deleteSubDirectory(String)} ()}",
    "Reference": "Generates a code sample for using {@link ShareDirectoryAsyncClient#deleteSubdirectory(String)} ()}",
    "HebCup": "Generates a code sample for using {@link ShareDirectoryAsyncClient#deleteSubdirectory (String)} ()}"
}
{
    "Origin": "Writes an entry to the currently open file, if any.",
    "Reference": "Writes a compilation unit to the currently open file, if any.",
    "HebCup": "Writes an unit to the currently open file , if any."
}
{
    "Origin": "Set the fileContentType property: Sets the MIME content type of the\nfile.",
    "Reference": "Set the contentType property: Sets the MIME content type of the\nfile.",
    "HebCup": "Set the contentType property: Sets the MIME content type of the file."
}
{
    "Origin": "Obtains an instance of {@code OffsetDateTime} from a local date and offset time.",
    "Reference": "Obtains an instance of {@code OffsetDateTime} from a {@code ZonedDateTime}.",
    "HebCup": "Obtains an instance of {@code OffsetDateTime} from a local date and Zoned Date Time."
}
{
    "Origin": "or throws a {@link com.liferay.knowledgebase.NoSuchArticleException} if it could not be found.",
    "Reference": "or throws a {@link NoSuchArticleException} if it could not be found.",
    "HebCup": "or throws a {@link com.liferay.knowledgebase.NoSuchArticleException} if it could not be found."
}
{
    "Origin": "Otherwise, the results returned match the parameters given in {@code options}.",
    "Reference": "Otherwise, the results returned match the parameters given in {@code selector}.",
    "HebCup": "Otherwise, the results returned match the parameters given in {@code options}."
}
{
    "Origin": "Adds a \"LogicalImager\" data source to the case database using a background task in\na separate thread and the given settings instead of those provided by the\nselection and configuration panel.",
    "Reference": "Adds a \"raw\" data source to the case database using a background task in\na separate thread and the given settings instead of those provided by the\nselection and configuration panel.",
    "HebCup": "Adds a \"LogicalImager\" data source to the case database using a background task in\na separate thread and the given settings instead of those provided by the\nselection and configuration panel."
}
{
    "Origin": "This information is useful for implicit and safe casting.",
    "Reference": "This information is useful for optional arguments with default value.",
    "HebCup": "This information is useful for implicit and safe casting."
}
{
    "Origin": "Returns a string representation of this object; useful for testing and debugging.",
    "Reference": "Returns a string representation of this object.",
    "HebCup": "Returns a string representation of this object; useful for testing and debugging."
}
{
    "Origin": "Returns the function that matches the current request or the specified error code.",
    "Reference": "Returns the function that matches the current request or the specified error code best.",
    "HebCup": "Returns the function that matches the current request or the specified error code."
}
{
    "Origin": "This methods checks that this node, and all its nodes recursively, do not\ncontain elements that were introduced in more recent versions of the ASM\nAPI than the given version.",
    "Reference": "This method checks\nthat this node, and all its children recursively, do not contain elements that were introduced\nin more recent versions of the ASM API than the given version.",
    "HebCup": "This methods checks that this node , and all its nodes recursively , do not contain elements that were introduced in more recent versions of the ASM (than the given version."
}
{
    "Origin": "Returns the formatted unique name of the type.",
    "Reference": "Returns the formatted name of the type.",
    "HebCup": "Returns the formatted unique name of the type."
}
{
    "Origin": "Gets a Date value from a WmiResult as a String",
    "Reference": "Gets a Date value from a WmiResult as a String in ISO 8601 format",
    "HebCup": "Gets a Date value from a WmiResult as a OffsetDateTime"
}
{
    "Origin": "Obtains the type from a unique name.",
    "Reference": "Obtains an instance from the specified name.",
    "HebCup": "Obtains the type from a name."
}
{
    "Origin": "Register a known set of audio or video transcoders.",
    "Reference": "Registers a known set transcoding engines.",
    "HebCup": "Register a known set of audio or video transcoders."
}
{
    "Origin": "Returns a boolean indicating whether the session is open.",
    "Reference": "Returns the session timeout.",
    "HebCup": "Returns a boolean indicating whether the session get Session Timeout."
}
{
    "Origin": "Calls {@link Plugin#didDeclareProperty(TypeSpec.Builder, PropertyGenerator, FieldSpec)} on\nall the bundled plugins",
    "Reference": "Calls {@link Plugin#afterDeclareProperty(TypeSpec.Builder, PropertyGenerator, FieldSpec)} on\nall the bundled plugins",
    "HebCup": "Calls {@link Plugin#afterDeclareProperty (TypeSpec.Builder , PropertyGenerator , FieldSpec)} on all the bundled plugins"
}
{
    "Origin": "Access Control Using AWS Identity and Access Management (IAM) \n.",
    "Reference": "For more information, see Access Control Using AWS Identity and Access Management (IAM).",
    "HebCup": "Access Control Using AWS Identity and Access Management (IAM) \n."
}
{
    "Origin": "Extract the result of given method invocation from the array's elements under test into a new array, this new array\nbecoming the array under test.",
    "Reference": "Extract the result of given method invocation from the array's elements under test into a list, this list becoming\nthe object under test.",
    "HebCup": "Extract the result of given method invocation from the array's elements under test into a newListAssertInstance array , this newListAssertInstance array becoming the array under test."
}
{
    "Origin": "Returns the required Java version of this plugin.",
    "Reference": "Returns the minimumJava version of this plugin.",
    "HebCup": "Returns the Minimum Java Version of this plugin."
}
{
    "Origin": "Remove every generated files corresponding to a wiki.",
    "Reference": "Remove every generated files corresponding to a color theme.",
    "HebCup": "Remove every generated files corresponding to a color."
}
{
    "Origin": "Get the VM URL for the embedded ActiveMQ Broker",
    "Reference": "Get the failover VM URL for the embedded ActiveMQ Broker",
    "HebCup": "Get the VM URL for the embedded ActiveMQ Broker"
}
{
    "Origin": "Code snippets for {@link LeaseClientBuilder#buildClient()}.",
    "Reference": "Code snippets for {@link BlobLeaseClientBuilder#buildClient()}.",
    "HebCup": "Code snippets for {@link BlobLeaseClientBuilder#buildClient ()}."
}
{
    "Origin": "Alias for {@link Future#of(ExecutorService, CheckedFunction0)}",
    "Reference": "Alias for {@link Future#of(Executor, CheckedFunction0)}",
    "HebCup": "Alias for {@link Future#of(Executor, CheckedFunction0)}"
}
{
    "Origin": "Unsafe version of: {@link #shaderc_spvc_compile_into_hlsl compile_into_hlsl}",
    "Reference": "Unsafe version of: {@link #shaderc_spvc_initialize_for_hlsl initialize_for_hlsl}",
    "HebCup": "Unsafe version of: {@link #shaderc_spvc_initialize_for_hlsl compile_into_hlsl}"
}
{
    "Origin": "Resolves a collection of root modules to create a configuration.",
    "Reference": "Resolves a collection of root modules, with service binding, to create\nconfiguration.",
    "HebCup": "resolve And a collection of root modules to create a configuration."
}
{
    "Origin": "What we need to do here is to\nrelease this PooledConnection from our pool...",
    "Reference": "PooledConnection from our pool...",
    "HebCup": "What we need to do here is to\nrelease this PooledConnection from our pool..."
}
{
    "Origin": "Checks whether the extension of the filename is one of those specified.",
    "Reference": "Checks whether the extension of the fileName is one of those specified.",
    "HebCup": "Checks whether the extension of the fileName is one of those specified."
}
{
    "Origin": "Adds a list of Strings as the payloads of the request.",
    "Reference": "Adds a single byte array to the payload of the request.",
    "HebCup": "Adds a list of Strings as the Payload of the request."
}
{
    "Origin": "This can result in motion of\nelements backwards or forwards in the array.",
    "Reference": "This can result in forward or backwards motion of array elements.",
    "HebCup": "This can result in motion of es backwards or forwards in the array."
}
{
    "Origin": "Depending on what fields\neach label has, other things will be .",
    "Reference": "Depending on what fields\neach label has, other things will be {@code null}.",
    "HebCup": "Depending on what fields\neach label has, other things will be ."
}
{
    "Origin": "This operation DOES NOT have a side\neffect on the position, limit or mark for the buffer.",
    "Reference": "Note: This operation DOES NOT have a side effect on the position, limit\nor mark for the buffer.",
    "HebCup": "This operation DOES NOT have a side\neffect on the position, limit or mark for the buffer."
}
{
    "Origin": "Returns a string representation of this object; useful for testing and debugging.",
    "Reference": "Returns a string representation of this object.",
    "HebCup": "Returns a string representation of this object; useful for testing and debugging."
}
{
    "Origin": "May return empty if this call is not qualified (no \".",
    "Reference": "May return null if this call is not qualified (no \".",
    "HebCup": "May return empty if this call is not qualified (no \"."
}
{
    "Origin": "ControllerInfo, String, int, Bundle)}\nwhen the parent is changed.",
    "Reference": "ControllerInfo, String, int, LibraryParams)} when the parent is changed until it's\nunsubscribed.",
    "HebCup": "ControllerInfo , String , int , LibraryParams)} when the parent is changed."
}
{
    "Origin": "NOTE:You cannot delete a cache subnet group if it is\nassociated with any cache clusters.",
    "Reference": "You cannot delete a cache subnet group if it is associated with any\ncache clusters.",
    "HebCup": "NOTE:You cannot delete a cache subnet group if it is\nassociated with any cache clusters."
}
{
    "Origin": "Decorates and binds the specified {@link ServiceWithRoutes} at multiple {@link Route}s\nof the default {@link VirtualHost}.",
    "Reference": "Decorates and binds the specified {@link HttpServiceWithRoutes} at multiple {@link Route}s\nof the default {@link VirtualHost}.",
    "HebCup": "Decorates and binds the specified {@link HttpServiceWithRoutes} at multiple {@link Route}s of the default {@link VirtualHost}."
}
{
    "Origin": "Setter for {@link #allowOnlyRequestedMethod}",
    "Reference": "Setter for {@link #allowAllRequestedHeaders}",
    "HebCup": "Setter for {@link#allowAllRequestedHeaders}"
}
{
    "Origin": "Iterate over all the\n{@link SecretProperties secret} by each page and call {@link SecretClient#getSecret(SecretProperties)} .",
    "Reference": "Iterate over all the\n{@link SecretProperties secret} by each page and call {@link SecretClient#getSecret(String, String)}.",
    "HebCup": "Iterate over all the {@link SecretProperties PropertiesOfSecret} by each page and call {@link SecretClient#getSecret (SecretProperties)} ."
}
{
    "Origin": "Use the {@link #add(EntityStructure)} method, this method throws an exception.",
    "Reference": "Use the {@link #add(EntityStructure)} method!",
    "HebCup": "Use the {@link #add(EntityStructure)} method, this method throws an exception."
}
{
    "Origin": "In case of\nfailure the {@link Flux} will error.",
    "Reference": "In case of\nfailure the {@link CosmosContinuablePagedFlux} will error.",
    "HebCup": "In case of\nfailure the {@link Flux} will error."
}
{
    "Origin": "Decorates {@link Service}s under the specified directory.",
    "Reference": "Decorates {@link HttpService}s under the specified directory.",
    "HebCup": "Decorates {@link HttpService}s under the specified directory."
}
{
    "Origin": "Returns a string representation of this object; useful for testing and debugging.",
    "Reference": "Returns a string representation of this object.",
    "HebCup": "Returns a string representation of this object; useful for testing and debugging."
}
{
    "Origin": "Any function operating on a {@code *_compiler_t} must offer the basic thread-safety guarantee.",
    "Reference": "Any function operating on a {@code *_context_t} must offer the basic thread-safety guarantee.",
    "HebCup": "Any function operating on a {@code *_context_t} must offer the basic thread-safety guarantee."
}
{
    "Origin": "Prepends the stringly representation of byte value into buffer,\ngiven the coder and final index.",
    "Reference": "Prepends constant and the stringly representation of value into buffer,\ngiven the coder and final index.",
    "HebCup": "Prepends the stringly representation of boolean value into buffer , given the coder and final index."
}
{
    "Origin": "Get authentication resources\n### Functional Description:   Provides information about authentication options.",
    "Reference": "Get authentication resources\n## \u26a0 Deprecated since version VERSION  ### Functional Description:   Provides information about authentication options.",
    "HebCup": "Get authentication resources\n### Functional Description:   Provides information about authentication options."
}
{
    "Origin": "Set Exclude of Total Calculation.",
    "Reference": "Set Hide Grand Total.",
    "HebCup": "Set Hide Grand Total Calculation."
}
{
    "Origin": "Unregister the MBean located under the given {@link ObjectName}",
    "Reference": "Unregisters the MBean located under the given {@link ObjectName}, if it exists.",
    "HebCup": "Unregister the MBean located under the given {@link ObjectName}"
}
{
    "Origin": "Resolves a collection of root modules to create a configuration.",
    "Reference": "Resolves a collection of root modules, with service binding, to create\nconfiguration.",
    "HebCup": "resolve And a collection of root modules to create a configuration."
}
{
    "Origin": "Atomically sets the hi int value to the given updated value\nonly if the current value {@code ==} the expected value.",
    "Reference": "Atomically sets the hi value to the given updated value\nonly if the current value {@code ==} the expected value.",
    "HebCup": "Atomically sets the hi int value to the given updated value\nonly if the current value {@code ==} the expected value."
}
{
    "Origin": "Also, puts the new names->nodes map in the TsurgeonPattern that called copy.",
    "Reference": "Also, puts the new names->nodes map in the TsurgeonMatcher that called copy.",
    "HebCup": "Also , puts the new names->nodes map in the TsurgeonMatcher that called copy."
}
{
    "Origin": "Connects the channel to a group.",
    "Reference": "Connects the channel to a cluster.",
    "HebCup": "Connects the channel to a group."
}
{
    "Origin": "Sets the credentials.",
    "Reference": "Set the credentials.",
    "HebCup": "Sets the credentials."
}
{
    "Origin": "*, and END as siblings, so they can all be indented relative to the parent unmatched call\nfrom {@link #buildUnmatchedCallChildren()}",
    "Reference": "*, and END as siblings, so they can all be indented relative to the parent unmatched call\nfrom {@link #buildUnmatchedCallChildren(ASTNode, Alignment)}",
    "HebCup": "*, and END as siblings, so they can all be indented relative to the parent unmatched call\nfrom {@link #buildUnmatchedCallChildren()}"
}
{
    "Origin": "For each ChildGlideModule, write an Indexer with an Annotation with the class name.",
    "Reference": "For each LibraryGlideModule, write an Indexer with an Annotation with the class name.",
    "HebCup": "For each libraryGlideModule, write an Indexer with an Annotation with the class name."
}
{
    "Origin": "Remove query at given position from current playlist",
    "Reference": "Remove entry at given position from current playlist",
    "HebCup": "Remove PlaylistEntry at given position from current playlist"
}
{
    "Origin": "Unbinds the currently bound bean if any.",
    "Reference": "Removes the currently set bean, if any.",
    "HebCup": "Beans the currently bound bean if any."
}
{
    "Origin": "Assigns the current checkbox value to the option specified in the constructor.",
    "Reference": "Assigns the current value.",
    "HebCup": "Assigns the current checkbox value to the true specified in the constructor."
}
{
    "Origin": "This method is currently only used for root-level serializer\nhandling to allow for simpler caching.",
    "Reference": "This method is mostly used for root-level serializer\nhandling to allow for simpler caching.",
    "HebCup": "This method is currently only used for root-level serializer\nhandling to allow for simpler caching."
}
{
    "Origin": "Create sections out of the foreground pixels found in a provided buffer and\ncontained in the specified region of interest.",
    "Reference": "Create sections out of the foreground pixels found in the specified region of\ninterest of a provided buffer.",
    "HebCup": "Create offset out of the foreground pixels found in a provided buffer and contained in the specified region of interest."
}
{
    "Origin": "Returns unmodifiable map of module name to hash string.",
    "Reference": "Returns unmodifiable map of module name to hash",
    "HebCup": "Returns unmodifiable map of module name to hash byte."
}
{
    "Origin": "Get customer keypair\n### Functional Description:   Retrieve the customer resque keypair.",
    "Reference": "Get customer's key pair\n### Functional Description:   Retrieve the customer rescue key pair.",
    "HebCup": "Get customer keypair\n### Functional Description:   Retrieve the customer resque keypair."
}
{
    "Origin": "or throws a {@link com.liferay.pushnotifications.NoSuchDeviceException} if it could not be found.",
    "Reference": "or throws a {@link NoSuchDeviceException} if it could not be found.",
    "HebCup": "or throws a {@link com.liferay.pushnotifications.NoSuchDeviceException} if it could not be found."
}
{
    "Origin": "more complete search to see if this is a valid package name",
    "Reference": "More complete search to see if this is a valid package name.",
    "HebCup": "more complete search to see if this is a valid package name"
}
{
    "Origin": "Obtains an instance from the specified unique name.",
    "Reference": "Obtains an instance from the specified name.",
    "HebCup": "Obtains an instance from the specified name."
}
{
    "Origin": "Parses the timestamp from the collection list and returns them in reverse sorted order (most recent 1st)",
    "Reference": "Result is returned them in sorted order (most recent 1st)",
    "HebCup": "Parses the timestamp from the collection list and returns them in reverse sorted order (most recent 1st)"
}
{
    "Origin": "Set up m_validator from SchemaPlus.",
    "Reference": "Set up m_validator and m_schemaPlus from SchemaPlus.",
    "HebCup": "Set up m_validator from m_schemaPlus."
}
{
    "Origin": "Used to store a few UI related settings for the current session only.",
    "Reference": "Used to store a few UI related settings in the PreferencesService (serialized to db)",
    "HebCup": "Used to store a few UI related settings for the current session only."
}
{
    "Origin": "Tests the {@link FileSystemMaster#checkConsistency(AlluxioURI, CheckConsistencyOptions)} method\nwhen no files are consistent.",
    "Reference": "Tests the {@link FileSystemMaster#checkConsistency(AlluxioURI, CheckConsistencyContext)} method\nwhen no files are consistent.",
    "HebCup": "Tests the {@link FileSystemMaster#checkConsistency (AlluxioURI , CheckConsistencyContext)} method when no files are consistent."
}
{
    "Origin": "Tests the text index.",
    "Reference": "Tests the attribute index.",
    "HebCup": "Tests the text index."
}
{
    "Origin": "Get one time download id for zipped images (media)",
    "Reference": "Get one time download id for an image (media)",
    "HebCup": "Get one time Boolean id for zipped images (media)"
}
{
    "Origin": "Sets the intent.",
    "Reference": "Set the intent.",
    "HebCup": "Sets the intent."
}
{
    "Origin": "The {@link Flux} will\ncontain one or several feed response of the obtained items.",
    "Reference": "The {@link CosmosContinuablePagedFlux} will\ncontain one or several feed response of the obtained items.",
    "HebCup": "The {@link Flux} will contain one or several Cosmos Continuable Paged Flux of the obtained items."
}
{
    "Origin": "As service binding involves resolution then it may fail with {@link",
    "Reference": "Post-resolution consistency checks may fail with {@code",
    "HebCup": "As service binding involves resolution then it may fail with {@link"
}
{
    "Origin": "This makes it\nhard to debug because if task throws an exception, its call stack ends in the execution engine that actually\nstarts a thread that serves the task.",
    "Reference": "This makes it\nhard to debug because if a task throws an exception, its call stack ends in the execution engine that actually\nstarts a thread that serves the task.",
    "HebCup": "This makes it\nhard to debug because if task throws an exception, its call stack ends in the execution engine that actually\nstarts a thread that serves the task."
}
{
    "Origin": "Code for reading alt site records from a table *",
    "Reference": "Code for reading sample name and alt site records from a table *",
    "HebCup": "Code for reading alt site records from a table *"
}
{
    "Origin": "Stub of {@link Plugin#didDeclareGetter(TypeSpec.Builder, PropertyGenerator, MethodSpec)} for subclasses\nto override",
    "Reference": "Stub of {@link Plugin#afterDeclareGetter(TypeSpec.Builder, PropertyGenerator, MethodSpec)} for subclasses\nto override",
    "HebCup": "Stub of {@link Plugin#afterDeclareGetter (TypeSpec.Builder , PropertyGenerator , MethodSpec)} for subclasses to override"
}
{
    "Origin": "Get the fileContentEncoding property: Specifies which content encodings\nhave been applied to the file.",
    "Reference": "Get the contentEncoding property: Specifies which content encodings\nhave been applied to the file.",
    "HebCup": "Get the ContentEncoding property: Specifies which content encodings have been applied to the file."
}
{
    "Origin": "Make sure to\n{@link #releaseParser(SAXParser)} in\na  block every time you call this.",
    "Reference": "Make sure to\n{@link #releaseDOMBuilder(PoolDOMBuilder)} in\na  block every time you call this.",
    "HebCup": "Make sure to\n{@link #releaseParser(SAXParser)} in\na  block every time you call this."
}
{
    "Origin": "Test of parseSuppressionRules method, of class SuppressionParser.",
    "Reference": "Test of parseSuppressionRules method, of class SuppressionParser for the v1.0 suppressions XML Schema.",
    "HebCup": "Test of ParseSuppressionRulesV1_0 method , of class SuppressionParser."
}
{
    "Origin": "Sets the {@link MediaSource}s to be used by the test runner.",
    "Reference": "Sets a {@link MediaSource} to be used by the test runner.",
    "HebCup": "Sets the {@link Medi}s to be used by the test runner."
}
{
    "Origin": "Tests the ability to register, invoke and auto-unregister {@link CacheUtilizationProvider.CleanupListener} instances.",
    "Reference": "Tests the ability to register, invoke and auto-unregister {@link ThrottleSourceListener} instances.",
    "HebCup": "Tests the ability to register, invoke and auto-unregister {@link CacheUtilizationProvider.CleanupListener} instances."
}
{
    "Origin": "Group: producer",
    "Reference": "Group: consumer",
    "HebCup": "Group: producer"
}
{
    "Origin": "Sets new {@link ISeedingStrategy}.",
    "Reference": "Sets new {@link SeedingStrategy}.",
    "HebCup": "Sets new {@link SeedingStrategy}."
}
{
    "Origin": "Returns an immutable list containing five elements.",
    "Reference": "Returns an unmodifiable list containing five elements.",
    "HebCup": "Returns an Unmodifiable list containing five elements."
}
{
    "Origin": "Obtains the provider of the class {@code clazz} and name {@code bindingName}\nthat is scoped in the current scope, if any.",
    "Reference": "Obtains the provider of the class {@code clazz} and name {@code bindingName}.",
    "HebCup": "Obtains the provider of the class {@code clazz} and name {@code bindingName} that is Bound in the current scope, if any."
}
{
    "Origin": "Tests the {@link AlluxioURI#AlluxioURI(String, String, String)} constructor to build a URI\nfrom its different components.",
    "Reference": "Tests the {@link AlluxioURI#AlluxioURI(String, Authority, String)} constructor to build a URI\nfrom its different components.",
    "HebCup": "Tests the {@link AlluxioURI#AlluxioURI(String, String, String)} constructor to build a URI\nfrom its different components."
}
{
    "Origin": "Get the identifier representing the exception thrown",
    "Reference": "Get the binding pattern representing the exception thrown",
    "HebCup": "Get the identifier representing the exception thrown"
}
{
    "Origin": "The cleanup should be registered after the fd is set in the FileDescriptor.",
    "Reference": "The cleanup should be registered after the handle is set in the FileDescriptor.",
    "HebCup": "The cleanup should be registered after the fd is set in the FileDescriptor."
}
{
    "Origin": "This is a place holder in case in the future we wish to be able to\nreload aggregates.",
    "Reference": "Place holder in case in the future we wish to be able to\nreload aggregates.",
    "HebCup": "This is a place holder in case in the future we wish to be able to\nreload aggregates."
}
{
    "Origin": "gets all actors from database.",
    "Reference": "Gets all actors from database.",
    "HebCup": "gets all actors from database."
}
{
    "Origin": "Logs collection, string\nand throws {@link java.lang.AssertionError}, if contains.",
    "Reference": "Logs collection, element\nand throws {@link java.lang.AssertionError}, if contains.",
    "HebCup": "Logs collection , T and throws {@link java.lang.AssertionError} , if contains."
}
{
    "Origin": "Sets the label.",
    "Reference": "Set the label.",
    "HebCup": "Sets the label."
}
{
    "Origin": "Returns a task manager services configuration for the tests",
    "Reference": "Returns a configuration for the tests.",
    "HebCup": "Returns a Configuration for the tests"
}
{
    "Origin": "Generates random transaction trits with the provided trytes, trunk and hash.",
    "Reference": "Generates transaction trits with the provided trytes, trunk and hash.",
    "HebCup": "Generates Transaction Trits With the provided trytes, trunk and hash."
}
{
    "Origin": "Scheduler:\n {@code combineLatest} does not operate by default on a particular {@link Scheduler}.",
    "Reference": "Scheduler:\n {@code combineLatestArray} does not operate by default on a particular {@link Scheduler}.",
    "HebCup": "Scheduler: {@code combineLatestArray} does not operate by default on a particular {@link Scheduler}."
}
{
    "Origin": "A\n is built when the JAR is created.",
    "Reference": "A\n class is built when the JAR is\ncreated.",
    "HebCup": "A\n is built when the JAR is created."
}
{
    "Origin": "Gets the name of the associated quorum if any.",
    "Reference": "Gets the name of the associated split brain protection if any.",
    "HebCup": "Gets the name of the associated SplitBrainProtection if any."
}
{
    "Origin": "-\njava.lang.StringUTF16.compress([CI[BII)I",
    "Reference": "Intrinsic for {@code java.lang.StringUTF16.compress([CI[BII)I}.",
    "HebCup": "-\njava.lang.StringUTF16.compress([CI[BII)I"
}
{
    "Origin": "Sets decryption as succeeded",
    "Reference": "Sets crypto job as succeeded",
    "HebCup": "Sets CryptoJob as succeeded"
}
{
    "Origin": "Queries this search source for the given searchPattern.",
    "Reference": "Creates query for the given searchPattern.",
    "HebCup": "Queries this search Query for the given searchPattern."
}
{
    "Origin": "Test for [JACKSON-328], precedence of \"getter-as-setter\" (for Lists) versus\nfield for same property.",
    "Reference": "Test precedence of \"getter-as-setter\" (for Lists) versus\nfield for same property.",
    "HebCup": "Test for [JACKSON-328], precedence of \"getter-as-setter\" (for Lists) versus\nfield for same property."
}
{
    "Origin": "If the divider character isn't found\nin the word, then the whole string becomes the word, and lemma and tag\nare .",
    "Reference": "If the divider character isn't found\nin the word, then the whole string becomes the word, and lemma and tag\nare {@code null}.",
    "HebCup": "If the divider character isn't found\nin the word, then the whole string becomes the word, and lemma and tag\nare ."
}
{
    "Origin": "{@codesnippet com.azure.storage.blob.specialized.BlobClientBase.startCopyFromURL#String}",
    "Reference": "{@codesnippet com.azure.storage.blob.specialized.BlobClientBase.beginCopy#String-Duration}",
    "HebCup": "{@codesnippet com.azure.storage.blob.specialized.BlobClientBase.beginCopy#String}"
}
{
    "Origin": "The configuration is saved under the config name defined by\n{@link QuorumConfig#getName()}.",
    "Reference": "The configuration is saved under the config name defined by\n{@link SplitBrainProtectionConfig#getName()}.",
    "HebCup": "The configuration is saved under the config name defined by {@link SplitBrainProtectionConfig#getName ()}."
}
{
    "Origin": "Checks if a CatalogResolver is available.",
    "Reference": "Checks if the catalog manager is available.",
    "HebCup": "Checks if a CatalogResolver is available."
}
{
    "Origin": "A candidate package name\n    is derived from an entry using the characters up to, but not\n    including, the last forward slash.",
    "Reference": "A candidate package name is derived from the name\n    using the characters up to, but not including, the last forward slash.",
    "HebCup": "A candidate package name\n    is derived from an entry using the characters up to, but not\n    including, the last forward slash."
}
{
    "Origin": "Indicates whether this charset is known to be registered in the IANA",
    "Reference": "Tells whether or not this charset is registered in the IANA Charset",
    "HebCup": "Indicates whether this charset is known to be registered in the IANA"
}
{
    "Origin": "This call prevents automatic\n{@link RequestScope.Instance#release() release} of the scope instance\nonce the task that runs in the scope has finished.",
    "Reference": "This call prevents automatic\n{@link RequestContext#release() release} of the scope context\nonce the task that runs in the scope has finished.",
    "HebCup": "This call prevents automatic {@link RequestScope.Instance#release() release} of the context once the task that runs in the scope has finished."
}
{
    "Origin": "Sets the {@link Service} and returns the {@link ServerBuilder} that this\n{@link ServiceBindingBuilder} was created from.",
    "Reference": "Sets the {@link HttpService} and returns the {@link ServerBuilder} that this\n{@link ServiceBindingBuilder} was created from.",
    "HebCup": "Sets the {@link HttpService} and returns the {@link ServerBuilder} that this {@link ServiceBindingBuilder} was created from."
}
{
    "Origin": "Aggregate given void publishers into a new {@literal Mono} that will be fulfilled\nwhen all of the given {@literal sources} have been fulfilled.",
    "Reference": "Aggregate given publishers into a new {@literal Mono} that will be fulfilled\nwhen all of the given {@literal sources} have been fulfilled.",
    "HebCup": "Aggregate given ? publishers into a new {@literal Mono} that will be fulfilled when all of the given {@literal sources} have been fulfilled."
}
{
    "Origin": "Withings API into a list of {@link CaloriesBurned} {@link DataPoint} objects.",
    "Reference": "Withings API into a list of {@link CaloriesBurned1} {@link DataPoint} objects.",
    "HebCup": "Withings API into a list of {@link CaloriesBurned1} {@link DataPoint} objects."
}
{
    "Origin": "Target {@link #on(Class) method} has\nto be {@link #to() called} before it can return its reference.",
    "Reference": "Target {@link #of(Class) method} has\nto be {@link #get() called} before it can return its reference.",
    "HebCup": "Target {@link #on(Class) method} has\nto be {@link #to() called} before it can return its reference."
}
{
    "Origin": "Code snippets for {@link DataLakePathClient#setAccessControl(PathAccessControl)}",
    "Reference": "Code snippets for {@link DataLakePathClient#setAccessControlList(List, String, String)}",
    "HebCup": "Code snippets for {@link DataLakePathClient#setAccessControlList (PathAccessControl)}"
}
{
    "Origin": "Bugsnag.onBreadcrumb(new OnBreadcrumb() {\npublic boolean run(Breadcrumb breadcrumb) {\nreturn false;  ignore the breadcrumb\n}\n})",
    "Reference": "Bugsnag.onBreadcrumb(new OnBreadcrumbCallback() {\npublic boolean run(Breadcrumb breadcrumb) {\nreturn false;  ignore the breadcrumb\n}\n})",
    "HebCup": "Bugsnag.onBreadcrumb (new OnBreadcrumbCallback () {public boolean run (Breadcrumb breadcrumb) {return false; ignore the breadcrumb}})"
}
{
    "Origin": "Get all Pinot realtime table names.",
    "Reference": "Get all realtime table names.",
    "HebCup": "new Pinot realtime table names."
}
{
    "Origin": "RAF is more robust,\nbut does not allow concurrent access (parallel read and writes).",
    "Reference": "but does not allow concurrent access (parallel read and writes).",
    "HebCup": "fileChannel is more robust , but does not allow concurrent access (parallel read and writes)."
}
{
    "Origin": "query by given selectBuilder",
    "Reference": "Query by given selectBuilder",
    "HebCup": "query by given selectBuilder"
}
{
    "Origin": "Removes all the sync d l objects where companyId = ?",
    "Reference": "Removes all the sync d l objects where repositoryId = ?",
    "HebCup": "Removes all the sync d l objects where companyId = ?"
}
{
    "Origin": "when add/rm/mv element",
    "Reference": "when add/rm element",
    "HebCup": "when add/rm/mv element"
}
{
    "Origin": "Whether or not this is a visible gas.",
    "Reference": "Whether or not this gas is hidden.",
    "HebCup": "Whether or not this is a Hidden gas."
}
{
    "Origin": "Sets the right border for a region of cells by manipulating the cell style of the individual\ncells on the right",
    "Reference": "Sets the right border style for a region of cells by manipulating the cell style of the individual\ncells on the right",
    "HebCup": "Sets the right border for a region of cells by manipulating the cell style of the individual\ncells on the right"
}
{
    "Origin": "Creates the jdeps file artifact if needed.",
    "Reference": "Creates the jdeps file path if needed.",
    "HebCup": "Creates the jdeps file PathFragment if needed."
}
{
    "Origin": "Returns the configured CSS head include resources.",
    "Reference": "Returns the schema configured CSS head include resources.",
    "HebCup": "Returns the configured CSS head include resources."
}
{
    "Origin": "Convert to object types, returning null if text is null.",
    "Reference": "Convert to object types, returning null if text is null or empty.",
    "HebCup": "Convert to object types, returning null if text is null."
}
{
    "Origin": "Download or stream an image (media) from an shared album.",
    "Reference": "Download or stream an image (media) from an shared album              HEAD only returns headers, no data",
    "HebCup": "Download or stream an image (media) from an shared album."
}
{
    "Origin": "Tests assert that the setting can be deleted after unlock the setting.",
    "Reference": "Tests assert that the setting can be deleted after clear read-only of the setting.",
    "HebCup": "Tests assert that the SettingWithResponse can be deleted after unlock the setting."
}
{
    "Origin": "Tests for pattern = { stringScalar } intSequence.",
    "Reference": "Tests for pattern = { scalar } intSequence { scalar }.",
    "HebCup": "Tests for pattern = { stringScalar } intSequence."
}
{
    "Origin": "Configures SSL/TLS for HTTPS Jetty Server / Client",
    "Reference": "Configures SSL/TLS for HTTPS Jetty Server",
    "HebCup": "Configures ServerSideSsl/TLS for HTTPS Jetty Server / Client"
}
{
    "Origin": "Called by {@link MediaSession2Stub#getItem(IMediaController2, String)}.",
    "Reference": "Called by {@link MediaSession2Stub#getItem(IMediaController2, int, String)}.",
    "HebCup": "Called by {@link LibrarySession2Stub#getItem(ILibraryController2, String)}."
}
{
    "Origin": "See comment in DirectoryTaxonomyWriter.addToCache(CategoryPath, int) for an\nexplanation why we clean 2/3rds of the cache, and not just one entry.",
    "Reference": "See comment in DirectoryTaxonomyWriter.addToCache(CategoryPath, int) for an\nexplanation why we clean 1/3rd of the cache, and not just one entry.",
    "HebCup": "See comment in DirectoryTaxonomyWriter.addToCache(CategoryPath, int) for an explanation why we clean 2L/3rds of the cache, and not just one entry."
}
{
    "Origin": "Compares if the file md5 matches a given md5 hash",
    "Reference": "Compares if the file hash matches a given hash",
    "HebCup": "Compares if the file md5 matches a given hash"
}
{
    "Origin": "Returns the k b comment with the primary key or throws a {@link com.liferay.knowledgebase.NoSuchCommentException} if it could not be found.",
    "Reference": "Returns the k b comment with the primary key or throws a {@link NoSuchCommentException} if it could not be found.",
    "HebCup": "Returns the k b comment with the primary key or throws a {@link com.liferay.knowledgebase.NoSuchCommentException} if it could not be found."
}
{
    "Origin": "Registers implementing class of the Transform algorithm with algorithmURI",
    "Reference": "Registers implementing class of the SignatureAlgorithm with algorithmURI",
    "HebCup": "Registers implementing class of the Transform algorithm with algorithmURI"
}
{
    "Origin": "If several time values are inferred, pick up the highest one and reject the mappings\nthat led to other values.",
    "Reference": "If several time values are inferred, pick up the lowest one and reject the mappings\nthat led to other values.",
    "HebCup": "If several time values are inferred, pick up the highest one and reject the mappings\nthat led to other values."
}
{
    "Origin": "This method can be overridden by Realm\nimplementations, but the default is adequate when an instance of\n is used to represent authenticated",
    "Reference": "String)} can be overridden by Realm implementations, but the default is\nadequate when an instance of  is used to\nrepresent authenticated Principals from this Realm.",
    "HebCup": "This method can be overridden by Realm\nimplementations, but the default is adequate when an instance of\n is used to represent authenticated"
}
{
    "Origin": "Determines whether a character is a letter or digit according to\n{@linkplain Character#isLetterOrDigit(char) Java's definition}.",
    "Reference": "Determines whether a character is a BMP letter or digit according to\n{@linkplain Character#isLetterOrDigit(char) Java's definition}.",
    "HebCup": "Determines whether a character is a letter or digit according to\n{@linkplain Character#isLetterOrDigit(char) Java's definition}."
}
{
    "Origin": "Call back after receiving FileMessageHeader.",
    "Reference": "Call back after receiving a streamed file.",
    "HebCup": "Call back after receiving FileMessageHeader."
}
{
    "Origin": "We must access\nthis directly rather than via method Thread.getId() because\ngetId() is not final, and has been known to be overridden in\nways that do not preserve unique mappings.",
    "Reference": "We must access\nthis directly rather than via method Thread.getId() because\ngetId() has been known to be overridden in ways that do not\npreserve unique mappings.",
    "HebCup": "We must access\nthis directly rather than via method Thread.getId() because\ngetId() is not final, and has been known to be overridden in\nways that do not preserve unique mappings."
}
{
    "Origin": "Returns all the sync d l objects where companyId = ?",
    "Reference": "Returns all the sync d l objects where repositoryId = ?",
    "HebCup": "Returns all the sync d l objects where companyId = ?"
}
{
    "Origin": "Send a message from this node to all nodes (including self)",
    "Reference": "Send a message from this node to all nodes in serial (including self), and receive it back",
    "HebCup": "Send a message from this node to all nodes (including self)"
}
{
    "Origin": "Returns an immutable map containing nine mappings.",
    "Reference": "Returns an unmodifiable map containing nine mappings.",
    "HebCup": "Returns an Unmodifiable map containing nine mappings."
}
{
    "Origin": "The expected format is:\n  --add-exports /=(,)*",
    "Reference": "{@code\n  --add-exports /=(,)*\n}",
    "HebCup": "The expected format Add: --add-exports /=(,)*"
}
{
    "Origin": "Execute http request and produce a response.",
    "Reference": "Execute http response.",
    "HebCup": "Execute http null and produce a response."
}
{
    "Origin": "Add entity value synonym.",
    "Reference": "Create entity value synonym.",
    "HebCup": "Add entity value json."
}
{
    "Origin": "Store the specified Realm properties and child (Realm)",
    "Reference": "Store the specified CredentialHandler properties and child (CredentialHandler)",
    "HebCup": "Store the specified CredentialHandler properties and child (Realm)"
}
{
    "Origin": "Sets the dialogNode.",
    "Reference": "Set the dialogNode.",
    "HebCup": "Sets the dialogNode."
}
{
    "Origin": "Get the value of a property in a specific buck rule body.",
    "Reference": "Get the value of a named property in a specific buck rule body.",
    "HebCup": "or the value of a property in a specific buck rule body."
}
{
    "Origin": "For\nmore information about the vault locking process,",
    "Reference": "For more information about the vault locking process, Amazon Glacier Vault Lock.",
    "HebCup": "For\nmore information about the vault locking process,"
}
{
    "Origin": "Set Repeated type.",
    "Reference": "Set Time Unit.",
    "HebCup": "set Time Unit."
}
{
    "Origin": "Gets the value of the 'RowKey' field",
    "Reference": "Gets the value of the 'rowKey' field.",
    "HebCup": "Gets the value of the 'rowKey' field"
}
{
    "Origin": "When a term is reactivated, it's invoice candidate needs to be deleted.",
    "Reference": "When a term is reactivated, its invoice candidate needs to be deleted.",
    "HebCup": "When a term is reactivated, it's invoice candidate needs to be deleted."
}
{
    "Origin": "Deletes the feedback question and the responses associated to it.",
    "Reference": "Deletes a feedback question cascade its responses and comments.",
    "HebCup": "Deletes the Feedback Question Cascade and the responses associated to it."
}
{
    "Origin": "Returns the host address associated with this exception.",
    "Reference": "Returns the host associated with this exception.",
    "HebCup": "Returns the Host associated with this exception."
}
{
    "Origin": "See {@link #begin(TxnMode)} for more details an options.",
    "Reference": "See {@link #begin(TxnType)} for more details an options.",
    "HebCup": "See {@link #begin(TxnType)} for more details an options."
}
{
    "Origin": "Helper method to register wiki components from a given document.",
    "Reference": "Register wiki components from a given document.",
    "HebCup": "Helper method to register this.wiki components from a given document."
}
{
    "Origin": "Encode {@link DataMap} as a ByteString using {@link ByteString} unsafeWrap.",
    "Reference": "Encode {@link DataMap} as a JSON ByteString using {@link ByteString} unsafeWrap.",
    "HebCup": "Encode {@link DataMap} as a ByteString using {@link ByteString} unsafeWrap."
}
{
    "Origin": "Sets the space between children.",
    "Reference": "Sets the horizontal space between children.",
    "HebCup": "Sets the space between children."
}
{
    "Origin": "Getting Search Suggestions \nin the Amazon CloudSearch Developer Guide .",
    "Reference": "CloudSearch Developer Guide.",
    "HebCup": "Getting Search Suggestions \nin the Amazon CloudSearch Developer Guide ."
}
{
    "Origin": "Returns the list of available devices for the current platform, if any",
    "Reference": "Returns the list of available devices for the current platform and any custom user devices, if any",
    "HebCup": "Returns the ImmutableList of available devices for the current platform , if any"
}
{
    "Origin": "If there is no separate publisher ID property defined, this group name\nwill also be used as a WAN publisher ID.",
    "Reference": "If there is no separate publisher ID property defined, this cluster name\nwill also be used as a WAN publisher ID.",
    "HebCup": "If there is no separate publisher ID property defined, this cluster Name will also be used as a WAN publisher ID."
}
{
    "Origin": "Returns a string representation of this object; useful for testing and debugging.",
    "Reference": "Returns a string representation of this object.",
    "HebCup": "Returns a string representation of this object; useful for testing and debugging."
}
{
    "Origin": "Creates an instance of {@code TokenVerifier} from the given string on a JWT of the given class.",
    "Reference": "Creates an instance of {@code TokenVerifier} for the given token.",
    "HebCup": "Creates an instance of {@code TokenVerifier} from the given string on a JWT of the given class."
}
{
    "Origin": "Retrieves the uid and primary gid of the user running Alluxio-FUSE.",
    "Reference": "Retrieves the uid of the given user.",
    "HebCup": "Retrieves the - u \" primary gid of the user running Alluxio-FUSE."
}
{
    "Origin": "Test an {@link Array} used as a FIFO queue.",
    "Reference": "Test an {@link XQArray} used as a FIFO queue.",
    "HebCup": "Test an {@link XQArray} used as a FIFO queue."
}
{
    "Origin": "Set Maximum Level.",
    "Reference": "Set Maximalmenge.",
    "HebCup": "Set Maximum Level."
}
{
    "Origin": "Get the storage blocks map.",
    "Reference": "Get the buffer blocks map.",
    "HebCup": "Get the buffer Blocks map."
}
{
    "Origin": "All descendants, in the top-down order.",
    "Reference": "All descendants, in any order.",
    "HebCup": "All descendants, in the top-down order."
}
{
    "Origin": "Extract the values of given fields/properties from the object under test into an array, this new array becoming\nthe object under test.",
    "Reference": "Extract the values of given fields/properties from the object under test into a list, this new list becoming\nthe object under test.",
    "HebCup": "Extract the values of given fields/properties from the List under test into an array , this new array becoming the List under test."
}
{
    "Origin": "If arrayLengthAccess node is an array length field access and the other node is less than or\nequal to that array length, then refine the other nodes type to less than the array length.",
    "Reference": "If lengthAccess node is an sequence length field or method access and the other node is less\nthan or equal to that sequence length, then refine the other nodes type to less than the\nsequence length.",
    "HebCup": "If lengthAccess node is an array length field access and the other node is less than or equal to that array length , then refine the other nodes type to less than the array length."
}
{
    "Origin": "Notify this object that it has been registered as a listener with\na source for receiving events described by the named event",
    "Reference": "Notify this object that it has been registered as a listener with a source\nfor receiving events described by the named event This object is\nresponsible for recording this fact.",
    "HebCup": "Notify this object that it has been registered as a listener with\na source for receiving events described by the named event"
}
{
    "Origin": "Returns a string representation of this object; useful for testing and debugging.",
    "Reference": "Returns a string representation of this object.",
    "HebCup": "Returns a string representation of this object; useful for testing and debugging."
}
{
    "Origin": "Returns the identifier of this action profile group.",
    "Reference": "Returns the ID of this action profile group.",
    "HebCup": "Returns the identifier of this action profile group."
}
{
    "Origin": "Then pick the second highest from the array and insert to result according to k.",
    "Reference": "Insert the person to result according to k.",
    "HebCup": "Then pick the second highest from the array and insert to result according to k."
}
{
    "Origin": "Returns true to indicate that we can paint a representation of the",
    "Reference": "Returns true to indicate that we can paint a representation of the Object.",
    "HebCup": "Returns true to indicate that we can paint a representation of the"
}
{
    "Origin": "Gets information about the certificate which represents the {@link CertificateProperties} from the key vault.",
    "Reference": "Gets a pending {@link CertificateOperation} from the key vault.",
    "HebCup": "Gets information about the certificate which represents the {@link String} from the key vault."
}
{
    "Origin": "Returns whether or not this qualifier has sequence with offset of -1.",
    "Reference": "Returns whether or not this qualifier has sequence with the specified offset.",
    "HebCup": "Returns whether or not this qualifier has sequence with offset of -1."
}
{
    "Origin": "Allows to capture and then assert on a {@link Throwable} more easily when used with Java 8 lambdas.",
    "Reference": "Allows to capture and then assert on a {@link Throwable} (easier done with lambdas).",
    "HebCup": "Allows to capture and then assert on a {@link Throwable} more easily when used with Java 8 lambdas."
}
{
    "Origin": "The return map keys are index, type, field (as specified in the request).",
    "Reference": "The return map keys are index, field (as specified in the request).",
    "HebCup": "The return map keys are index, type, field (as specified in the request)."
}
{
    "Origin": "Run 4F with fixed parameters and compare the result to a golden standard.",
    "Reference": "Run LMCLUS with fixed parameters and compare the result to a golden standard.",
    "HebCup": "Run 4F with fixed parameters and compare the result to a golden standard."
}
{
    "Origin": "Redirects the {@link AarConfiguration} inherited from another repository to point to this one, so that\nthe other repository can be garbage collected.",
    "Reference": "Redirects the {@link RepositoryConfiguration} inherited from another repository to point to this one, so that\nthe other repository can be garbage collected.",
    "HebCup": "Redirects the {@link RepositoryConfiguration} inherited from another repository to point to this one , so that the other repository can be garbage collected."
}
{
    "Origin": "This merges the two objects - {@code this} and the specified time -\nto form an instance of {@code OffsetDateTime}.",
    "Reference": "This merges the two objects - {@code this} and the specified time -\nto form an instance of {@code ZonedDateTime}.",
    "HebCup": "This merges the two objects - {@code this} and the specified time - to form an instance of {@code ZonedDateTime}."
}
{
    "Origin": "The input file must be a list of tab-separated verb-POS pairs, one verb\nper line.",
    "Reference": "The input file must be a list of whitespace-separated verb-lemma-POS triples, one verb\nform per line.",
    "HebCup": "The input file must be a list of tab-separated verb-POS pairs, one verb per line: ."
}
{
    "Origin": "List of certificates used to verify signed tokens",
    "Reference": "Used to verify access tokens",
    "HebCup": "List of certificates used to verify signed tokens"
}
{
    "Origin": "Attempts to add an endpoint to the replicas for this datacenter, adding to the endpoints set if successful.",
    "Reference": "Attempts to add an endpoint to the replicas for this datacenter, adding to the replicas set if successful.",
    "HebCup": "Attempts to add an endpoint to the replicas for this datacenter , adding to the replicas set if successful."
}
{
    "Origin": "Return all keys matching the search query, without pagination nor facets",
    "Reference": "Return all rule ids matching the search query, without pagination nor facets",
    "HebCup": "Return all Integer matching the search query, without pagination nor facets"
}
{
    "Origin": "If Servlet VERSION is\nused, the cookie will be marked as HttpOnly.",
    "Reference": "By default the cookie\nwill be marked as HttpOnly.",
    "HebCup": "cookie.setHttpOnly Servlet VERSION is used , the cookie will be marked as HttpOnly."
}
{
    "Origin": "Adds libraries from the given {@link NativeLinkable}.",
    "Reference": "Adds libraries from the given {@link NativeLinkableGroup}.",
    "HebCup": "Adds libraries from the given {@link NativeLinkableGroup}."
}
{
    "Origin": "See {@link Args#getBlockingExecutor}.",
    "Reference": "See {@link Args#getOffloadExecutor}.",
    "HebCup": "See {@link Args#getOffloadExecutor}."
}
{
    "Origin": "Returns the (biased) estimate of the sample standard deviation of the\nvalues within a {@link Dataset}.",
    "Reference": "Returns the (unbiased) kurtosis excess of all the values within a\n{@link Dataset}",
    "HebCup": "Returns the (Excess) estimate of the sample standard deviation of the values within a {@link Dataset}."
}
{
    "Origin": "Note: This API uses {@link Class} instead of {@link Module} to provide backwards\ncompatibility for JVMCI clients compiled against a JDK release earlier than 9.",
    "Reference": "Note: This API uses {@link Class} instead of {@code Module} to provide backwards\ncompatibility for JVMCI clients compiled against a JDK release earlier than 9.",
    "HebCup": "Note: This API uses {@link Class} instead of {@link Object} to provide backwards compatibility for JVMCI clients compiled against a JDK release earlier than 9."
}
{
    "Origin": "Tokenize a CharSequence based on the given CharSequence delimiter.",
    "Reference": "Tokenize a CharSequence based on the given CharSequence.",
    "HebCup": "Tokenize a CharSequence based on the given CharSequence delimiter."
}
{
    "Origin": "does NOT escape character data in val, must already be valid XML",
    "Reference": "does NOT escape character data in val; it must already be valid XML.",
    "HebCup": "does NOT escape character data in val, must already be valid XML"
}
{
    "Origin": "Returns a string representation of this object; useful for testing and debugging.",
    "Reference": "Returns a string representation of this object.",
    "HebCup": "Returns a string representation of this object; useful for testing and debugging."
}
{
    "Origin": "Associates this cache configuration to a quorum.",
    "Reference": "Associates this cache configuration to a split brain protection.",
    "HebCup": "Associates this cache configuration to a SplitBrainProtection."
}
{
    "Origin": "Access Control Using AWS Identity and Access Management (IAM) \n.",
    "Reference": "For more information, see Access Control Using AWS Identity and Access Management (IAM).",
    "HebCup": "Access Control Using AWS Identity and Access Management (IAM) \n."
}
{
    "Origin": "Returns the formatted date in UTC zone of the signing date.",
    "Reference": "Returns the formatted date in UTC zone of the signing date for the\nrequest.",
    "HebCup": "Returns the formatted date in UTC zone of the Request Signing Date."
}
{
    "Origin": "When a class B inherits from A and A is annotated as a dict, then B automatically gets the\nannotation, even if B's constructor is not explicitly annotated.",
    "Reference": "When a class B inherits from A and A is annotated as a dict, then B automatically gets the\nannotation, if B's constructor is not explicitly annotated.",
    "HebCup": "When a class B inherits from A and A is annotated as a dict, then B automatically gets the\nannotation, even if B's constructor is not explicitly annotated."
}
{
    "Origin": "For information about computing a SHA256 tree hash, see",
    "Reference": "For\ninformation about computing a SHA256 tree hash, see Computing Checksums.",
    "HebCup": "For information about computing a SHA256 tree hash, see"
}
{
    "Origin": "Obtains an instance of {@code ZoneId} from an identifier ensuring that the\nidentifier is valid and available for use.",
    "Reference": "Obtains an instance of {@code ZoneId} from an ID ensuring that the\nID is valid and available for use.",
    "HebCup": "Obtains an instance of {@code zoneId.length} from an identifier ensuring that the identifier is valid and available for use."
}
{
    "Origin": "Create new note.",
    "Reference": "Creating new note.",
    "HebCup": "Create new note."
}
{
    "Origin": "Build a lazy resolution message from the given supplier.",
    "Reference": "Build a lazily resolving message from the given supplier.",
    "HebCup": "Build a of resolution message from the given supplier."
}
{
    "Origin": "Sets each pixel in the output image to sgn*log( 1 + sgn*input(x,y)) of the input image.",
    "Reference": "Sets each pixel in the output image to sgn*log( val + sgn*input(x,y)) of the input image.",
    "HebCup": "Sets each pixel in the output image to sgn*log( 1 + sgn*input(x,y)) of the input image."
}
{
    "Origin": "Gets the value of the cycle property.",
    "Reference": "Gets the value of the cycleOption property.",
    "HebCup": "Gets the value of the cycleOption property."
}
{
    "Origin": "Gets the value of default user (login or username).",
    "Reference": "Gets the value of default user (login or user name).",
    "HebCup": "Gets the value of default userName (login or username)."
}
{
    "Origin": "Non-null password.",
    "Reference": "Non-empty password.",
    "HebCup": "Non-null password."
}
{
    "Origin": "If {@code options} is {@code null}, then all\nthe {@link ConfigurationSetting configuration settings} are fetched with their current values.",
    "Reference": "If {@code selector} is {@code null}, then all\nthe {@link ConfigurationSetting configuration settings} are fetched with their current values.",
    "HebCup": "If {@code options} is {@code null} , then all the {@link ConfigurationSetting configuration ConfigurationSettings} are fetched with their current values."
}
{
    "Origin": "This will return the {@link Key key} with key material\nincluded of its latest version.",
    "Reference": "This will return the {@link KeyVaultKey key} with key material\nincluded of its latest version.",
    "HebCup": "This will return the {@link Propertie key} with key material included of its latest version."
}
{
    "Origin": "Sets the behavior.",
    "Reference": "Set the behavior.",
    "HebCup": "Sets the behavior."
}
{
    "Origin": "Set Global ID.",
    "Reference": "Set Data import.",
    "HebCup": "set C _ Data Import _ ID."
}
{
    "Origin": "Convert to primitive types, returning default value if text is null.",
    "Reference": "Convert to double, returning default value if text is inconvertible.",
    "HebCup": "Convert to primitive types, returning default value if text is null."
}
{
    "Origin": "Validates whether the character is possible in the context of the set of possible base 64 values.",
    "Reference": "Validates whether decoding the final trailing character is possible in the context\nof the set of possible base 64 values.",
    "HebCup": "Validates whether the character is possible in the context of the set of possible base 64 value.."
}
{
    "Origin": "If {@code labels = \"abc1234\"}, settings with a label equal to \"abc1234\" are returned.",
    "Reference": "If {@code labelFilter = \"abc1234\"}, settings with a label equal to \"abc1234\" are returned.",
    "HebCup": "If {@code LabelFilter = ``abc1234``} , settings with a label equal to ``abc1234`` are returned."
}
{
    "Origin": "Can be called from any move thread.",
    "Reference": "It can be called from any move thread.",
    "HebCup": "Can be called from any move thread."
}
{
    "Origin": "| lhsPatternBind consequenceInvocation?\n          )",
    "Reference": "| lhsPatternBind consequenceInvocation*\n          )\n          SEMICOLON?",
    "HebCup": "| lhsPatternBind consequenceInvocation?\n          )"
}
{
    "Origin": "Group: producer",
    "Reference": "Group: consumer",
    "HebCup": "Group: producer"
}
{
    "Origin": "Gets policy for resource set.",
    "Reference": "Delete policy for resource set.",
    "HebCup": "Gets policy for saved."
}
{
    "Origin": "Sets the {@link jodd.madvoc.ActionRequest#nextActionPath(String) next action request} for the chain.",
    "Reference": "Sets the {@link jodd.madvoc.ActionRequest#setNextActionPath(String) next action request} for the chain.",
    "HebCup": "Sets the {@link jodd.madvoc.ActionRequest#setNextActionPath (String) next action request} for the chain."
}
{
    "Origin": "web applications), consider using a\ncontroller with component pooling and/or caching.",
    "Reference": "web applications), consider using a\ncontroller with component pooling.",
    "HebCup": "web applications), consider using a\ncontroller with component pooling and/or caching."
}
{
    "Origin": "Gets the list of {@link CertificateContact contacts} on this page.",
    "Reference": "Gets the iterable stream of {@link CertificateContact contacts} on this page.",
    "HebCup": "Gets the IterableStream of {@link CertificateContact contacts} on this page."
}
{
    "Origin": "Close the {@link Closeable} as a null-safety.",
    "Reference": "Attempt to close the supplied {@link Closeable}, silently swallowing any\nexceptions.",
    "HebCup": "Close the {@link Closeable} as a null-safety."
}
{
    "Origin": "SETTER: Is this table a stream type?",
    "Reference": "SETTER: Is this table a Stream table?",
    "HebCup": "SETTER: Is this table a Isstream type?"
}
{
    "Origin": "Fires {@link FocusTracker#focusChanged(boolean)} event for involved components.",
    "Reference": "Fires {@link GlobalFocusListener#focusChanged(Component, Component)} event.",
    "HebCup": "Fires {@link FocusTracker#focusChanged (boolean Nullable} event for involved components."
}
{
    "Origin": "According the the spec the key is the \"first keySize characters of chromosome name, padded with zeroes if needed.",
    "Reference": "According the the spec the key is the \"first keySize characters of chromosome name\"",
    "HebCup": "According the the spec the key is the \"first keySize characters of chromosome name, padded with zeroes if needed."
}
{
    "Origin": "Appends an internal name, a type descriptor or a type signature to\n{@link #buf buf}.",
    "Reference": "Appends an internal name, a type descriptor or a type signature to {@link #stringBuilder}.",
    "HebCup": "Appends an internal name , a type descriptor or a type signature to {@link#stringBuilder stringBuilder}."
}
{
    "Origin": "Construct BlobDataSource from the underneath byte channel which is associated with the entity struct.",
    "Reference": "Construct BlobDataSource from the underneath byte channel which is associated with the entity object.",
    "HebCup": "Construct BlobDataSource from the underneath byte channel which is associated with the entity Obj."
}
{
    "Origin": "Uses the\n{@link HandlerMapping#BEST_MATCHING_PATTERN_ATTRIBUTE} best matching pattern.",
    "Reference": "Uses the\n{@link HandlerMapping#BEST_MATCHING_PATTERN_ATTRIBUTE} best matching pattern if\navailable.",
    "HebCup": "Uses the\n{@link HandlerMapping#BEST_MATCHING_PATTERN_ATTRIBUTE} best matching pattern."
}
{
    "Origin": "As per the JLS, {@code Value} is a sub-type of of the raw type\n{@code Value}.",
    "Reference": "As per the JLS, {@code Value} is a sub-type of the raw type\n{@code Value}.",
    "HebCup": "As per the JLS, {@code Value} is a sub-type of of the raw type\n{@code Value}."
}
{
    "Origin": "TODO: Change this into deselectTrack(TrackInfo)",
    "Reference": "TODO: Change this into deselectTrack(TrackInfo) (b/132928418)",
    "HebCup": "TODO: Change this into deselectTrack(TrackInfo)"
}
{
    "Origin": "Tests that an MqttConnack packet can be encoded successfully\nwithout throwing any exceptions.",
    "Reference": "Tests that an MqttConnAck packet can be encoded successfully\nwithout throwing any exceptions.",
    "HebCup": "Tests that an mqttConnAck packet can be encoded successfully without throwing any exceptions."
}
{
    "Origin": "If an event\nlistener is assignable to {@link EventListener} it will registered as is.",
    "Reference": "If an event\nhandler is assignable to {@link EventMessageHandler} it will registered as is.",
    "HebCup": "If an EventMessageHandler is assignable to {@link EventListener} it will registered as is."
}
{
    "Origin": "The {@link Flux} will\ncontain one or several feed response of the read cosmos items.",
    "Reference": "The {@link CosmosContinuablePagedFlux} will\ncontain one or several feed response of the read cosmos items.",
    "HebCup": "The {@link Flux} will contain one or several Cosmos Continuable Paged Flux of the read cosmos items."
}
{
    "Origin": "The Struct\ncomplies with the {@link #SCHEMA} for the MySQL connector.",
    "Reference": "The Struct\ncomplies with the versioned source schema for the MySQL connector.",
    "HebCup": "The Struct\ncomplies with the {@link #SCHEMA} for the MySQL connector."
}
{
    "Origin": "Returns true if field jvmType is set (has been assigned a value) and false otherwise",
    "Reference": "Returns true if field type is set (has been assigned a value) and false otherwise",
    "HebCup": "Returns true if field Type is set (has been assigned a value) and false otherwise"
}
{
    "Origin": "Installs split button mouseover listener.",
    "Reference": "Installs menu button mouseover listener.",
    "HebCup": "Installs menu Button mouseover listener."
}
{
    "Origin": "Call from main thread.",
    "Reference": "Call from main thread or camera thread.",
    "HebCup": "Call from main thread."
}
{
    "Origin": "MessageSourceContact in the supplied list.",
    "Reference": "ComparableEvtObj in the supplied list.",
    "HebCup": "ComparableEvtObj in the supplied list."
}
{
    "Origin": "Return the {@code HttpClient} used for\n{@linkplain #createAsyncRequest(URI, HttpMethod) asynchronous execution}.",
    "Reference": "Return the {@code CloseableHttpAsyncClient} used for\n{@linkplain #createAsyncRequest(URI, HttpMethod) asynchronous execution}.",
    "HebCup": "Assert.state the {@code HttpClient} used for {@linkplain#createAsyncRequest (URI , HttpMethod) asynchronous execution}."
}
{
    "Origin": "Returns a string representation of this object; useful for testing and debugging.",
    "Reference": "Returns a string representation of this object.",
    "HebCup": "Returns a string representation of this object; useful for testing and debugging."
}
{
    "Origin": "Get an enumeration of the keys of the JSONObject.",
    "Reference": "The order of the keys is undefined.",
    "HebCup": "Get an enumeration of the keys of the JSONObject."
}
{
    "Origin": "Creates new {@link AggregationExpression} that returns the year number in ISO 8601-2018 format in the factory\ntimezone (default UTC).",
    "Reference": "Creates new {@link AggregationExpression} that returns the year number in ISO 8601-2018 format.",
    "HebCup": "Creates new {@link AggregationExpression} that returns the year number in IsoWeekYear.iso 8601-2018 format in the factory timezone (default UTC)."
}
{
    "Origin": "Once the prefetch is done, the session will change its playback state to\n{@link SessionPlayer2#PLAYER_STATE_PAUSED}.",
    "Reference": "Once the prepare is done, the session will change its playback state to\n{@link SessionPlayer2#PLAYER_STATE_PAUSED}.",
    "HebCup": "Once the prepare is done , the session will change its playback state to {@link SessionPlayer2#PLAYER_STATE_PAUSED}."
}
{
    "Origin": "Test processing of nested objects, see bug 36384.",
    "Reference": "Tests processing of nested objects, see bug 36384.",
    "HebCup": "Test processing of nested objects, see bug 36384."
}
{
    "Origin": "Finds the resource with the given name on the class path of this class\nloader.",
    "Reference": "Finds a resource with the given name in the modules defined to this\nclass loader or its class path.",
    "HebCup": "Finds the resource with the given name on the class path of this class\nloader."
}
{
    "Origin": "FilterEvaluator should return {@link Optional#absent()} when the link doesn't match any filters",
    "Reference": "FilterEvaluator should return {@link Optional.empty()} when the link doesn't match any filters",
    "HebCup": "FilterEvaluator should return {@link Optional#empty ()} when the link doesn't match any filters"
}
{
    "Origin": "Access Control Using AWS Identity and Access Management (IAM) \n.",
    "Reference": "For more information, see Access Control Using AWS Identity and Access Management (IAM).",
    "HebCup": "Access Control Using AWS Identity and Access Management (IAM) \n."
}
{
    "Origin": "config LoadBalancer factory.",
    "Reference": "config load balancer policy.",
    "HebCup": "config LoadBalancer Policy."
}
{
    "Origin": "The process method which take a MaryData object in parameter, compute the\nfeatures of the utterance referenced in the parameter and return a new",
    "Reference": "The process method which take a Utterance object in parameter, compute the\nfeatures of the utterance referenced in the parameter and return a new",
    "HebCup": "The process method which take a return object in parameter , compute the features of the utterance referenced in the parameter and return a new"
}
{
    "Origin": "Returns an Observable that emits the results of a specified combiner function applied to combinations of\nn items emitted, in sequence, by the n ObservableSources emitted by a specified ObservableSource.",
    "Reference": "Returns an Observable that emits the results of a specified combiner function applied to combinations of\nitems emitted, in sequence, by an Iterable of other ObservableSources.",
    "HebCup": "Returns an Observable that emits the results of a specified combiner function applied to combinations of n items emitted, in sequence, by the n ObservableSources emitted by a specified Iterable."
}
{
    "Origin": "Wrap an object, if necessary.",
    "Reference": "Wraps the given object if necessary.",
    "HebCup": "Wrap an o.equals , if necessary."
}
{
    "Origin": "Returns an immutable set containing nine elements.",
    "Reference": "Returns an unmodifiable set containing nine elements.",
    "HebCup": "Returns an Unmodifiable set containing nine elements."
}
{
    "Origin": "Reset the value given the timestamp, value and reals.",
    "Reference": "Reset the value given the timestamp and value.",
    "HebCup": "Reset the value given the timestamp, value and reals."
}
{
    "Origin": "{@codesnippet com.azure.data.applicationconfig.configurationclient.getSetting#string-string}",
    "Reference": "{@codesnippet com.azure.data.applicationconfig.configurationclient.getConfigurationSetting#string-string}",
    "HebCup": "{@codesnippet com.azure.data.applicationconfig.configurationclient.getConfigurationSetting#string-string}"
}
{
    "Origin": "If {@code useIndex} is true, the join scans polygons and uses an index of geometries\nbuilt prior to invoking the join to lookup matches.",
    "Reference": "If {@code useIndex} is true, the join scans query windows and uses an index of geometries\nbuilt prior to invoking the join to lookup matches.",
    "HebCup": "If {@code useIndex} is true, the join scans U and uses an index of geometries built prior to invoking the join to lookup matches."
}
{
    "Origin": "IMPORTANT: After you modify a DB parameter group, you should\nwait at least 5 minutes before creating your first DB instance that\nuses that DB parameter group as the default parameter group.",
    "Reference": "After you modify a DB parameter group, you should wait at least 5 minutes\nbefore creating your first DB instance that uses that DB parameter group\nas the default parameter group.",
    "HebCup": "IMPORTANT: After you modify a DB parameter group, you should\nwait at least 5 minutes before creating your first DB instance that\nuses that DB parameter group as the default parameter group."
}
{
    "Origin": "Reads the MainClass attribute",
    "Reference": "Reads the ModuleMainClass attribute",
    "HebCup": "Reads the ModuleMainClass attribute"
}
{
    "Origin": "Create a new detached JDOQuery instance with the given projection",
    "Reference": "Create a new detached {@link JDOQuery} instance with the given projection",
    "HebCup": "Create a new detached JDOQuery instance with the given projection"
}
{
    "Origin": "The number of transports active within the image liveness timeout.",
    "Reference": "Count of observed active transports within the image liveness timeout.",
    "HebCup": "The active Transport transports active within the image liveness timeout."
}
{
    "Origin": "It is upto to caller of this method to close the stream.",
    "Reference": "It is up to to caller of this method to close the stream.",
    "HebCup": "It is upto to caller of this method to close the stream."
}
{
    "Origin": "Callback when created ledger.",
    "Reference": "Callback when metadata store has responded.",
    "HebCup": "Callback when created ledger."
}
{
    "Origin": "Returns the sync d l objects before and after the current sync d l object in the ordered set where companyId = ?",
    "Reference": "Returns the sync d l objects before and after the current sync d l object in the ordered set where modifiedTime > ?",
    "HebCup": "Returns the sync d l objects before and after the current sync d l object in the ordered set where companyId = ?"
}
{
    "Origin": "The negative of {@code endsNotWith} is {@link #endsWith}.",
    "Reference": "The negative of {@code endsNotWith} is {@link #endingWith}.",
    "HebCup": "The negative of {@code endsNotWith} is {@link#endingWith}."
}
{
    "Origin": "Returns an java.time.Instant object that is offset by a number of milliseconds from now.",
    "Reference": "Returns an java.time.Instant object that is offset by a number of hours from now.",
    "HebCup": "Returns an java.time.Instant object that is offset by a number of milliseconds from now."
}
{
    "Origin": "returns true when data migration is complete and all v2 metrics tables have been deleted; false otherwise",
    "Reference": "returns true when data migration is complete and\nall v2 metrics tables data has been migrated for configured resolutions ; false otherwise",
    "HebCup": "returns true when data migration is complete and all is Old Metrics tables have been deleted; false otherwise"
}
{
    "Origin": "If it runs in a transaction, then the transaction has to be empty (no operations executed yet)\nand after the execution you will be in a new transaction.",
    "Reference": "If the DB has an active transaction, then the transaction has to be empty (no operations executed yet)\nand after the execution you will be in a new transaction.",
    "HebCup": "If it runs in a transaction, then the transaction has to be empty (no operations executed yet)\nand after the execution you will be in a new transaction."
}
{
    "Origin": "Returns a string representation of this object; useful for testing and debugging.",
    "Reference": "Returns a string representation of this object.",
    "HebCup": "Returns a string representation of this object; useful for testing and debugging."
}
{
    "Origin": "Checks that collection {@param col} contains string {@param str}.",
    "Reference": "Checks that collection {@param col} contains element {@param elem}.",
    "HebCup": "Checks that collection {@param col} contains T {@param str}."
}
{
    "Origin": "Checks if an WebSocket request matches this Annotation and Path.",
    "Reference": "Checks if an WebSocket request matches this annotation and path.",
    "HebCup": "Checks if an WebSocket request matches this ann and Path."
}
{
    "Origin": "See Immutable Map Static Factory Methods for details.",
    "Reference": "See Unmodifiable Maps for details.",
    "HebCup": "See Unmodifiable Map Static Factory Methods for details."
}
{
    "Origin": "Finds a resolved module in this configuration, or if not in this\nconfiguration, the {@linkplain #parent parent} configurations.",
    "Reference": "Finds a resolved module in this configuration, or if not in this\nconfiguration, the {@linkplain #parents parent} configurations.",
    "HebCup": "Finds a resolved module in this configuration , or if not in this configuration , the {@linkplain#configurations configurations} configurations."
}
{
    "Origin": "Return {@link SessionResult#RESULT_CODE_SUCCESS} to proceed the command.",
    "Reference": "Return {@link SessionResult#RESULT_SUCCESS} to proceed the command.",
    "HebCup": "Return {@link SessionResult#RESULT_SUCCESS} to proceed the command."
}
{
    "Origin": "Returns the {@link NativeBleDescriptor} for the given UUID in case you need lower-level access.",
    "Reference": "Returns the {@link BleDescriptorWrapper} for the given UUID in case you need lower-level access.",
    "HebCup": "Returns the {@link BleDescriptorWrapper} for the given UUID in case you need lower-level access."
}
{
    "Origin": "Handles the patch operations, delegating actions to sub-class implementations.",
    "Reference": "Handles the patch operations.",
    "HebCup": "Handles the patch operations, delegating actions to sub-class implementations."
}
{
    "Origin": "the name will normally start with the prefix\n\"trace\" followed by a 9 digit number followed by a \".log\" suffix.",
    "Reference": "the name will start with the prefix \"trace\"\nfollowed by a 9 digit number followed by a \".log\" suffix.",
    "HebCup": "the name will normally start with the prefix\n\"trace\" followed by a 9 digit number followed by a \".log\" suffix."
}
{
    "Origin": "Implementation attempts to locate the redirect uri from request and\ncheck with service registry to find a matching oauth service.",
    "Reference": "Implementation attempts to locate the client id from request and\ncheck with service registry to find a matching oauth service.",
    "HebCup": "Implementation attempts to locate the redirect uri from request and\ncheck with service registry to find a matching oauth service."
}
{
    "Origin": "Get methods from all interfaces.",
    "Reference": "Gets methods from all interfaces.",
    "HebCup": "methods methods from all interfaces."
}
{
    "Origin": "Returns a copy of this runtime, with the given authenticator.",
    "Reference": "Returns a copy of this runtime, with the given endpoint authenticator.",
    "HebCup": "Returns a copy of this runtime, with the given EndpointAuthenticator."
}
{
    "Origin": "Sets the {@link Scheduler} used to process API responses.",
    "Reference": "Set the token to authenticate a {@link Router} to the Discord REST API.",
    "HebCup": "Sets the {@link Token} used to process API responses."
}
{
    "Origin": "Setter for {@link #exposeOnlyRequestedHeader}",
    "Reference": "Setter for {@link #allowOnlyRequestedHeader}",
    "HebCup": "Setter for {@link#allowOnlyRequestedHeader}"
}
{
    "Origin": "Invoke Builder.provides(String service, Set providers)",
    "Reference": "Builder.provides(Provides[] provides)",
    "HebCup": "Invoke Builder.provides(Collection service, Set providers)"
}
{
    "Origin": "testFinishBeforeOthers",
    "Reference": "testInitializeTxnBeforeOthers",
    "HebCup": "testInitializeTxnBeforeOthers"
}
{
    "Origin": "an ascii string; non-ascii data is escaped with hex notation\nNB: not always uniquely reversible",
    "Reference": "An ascii string; non-ascii data is escaped with hex notation.",
    "HebCup": "an ascii string; non-ascii data is escaped with hex notation\nNB: not always uniquely reversible"
}
{
    "Origin": "Get the {@linkplain ExecutionEvent execution events} as a {@link List}.",
    "Reference": "Get the {@linkplain Event events} as a {@link List}.",
    "HebCup": "Get the {@linkplain Event execution events} as a {@link List}."
}
{
    "Origin": "Includes fields from the given annotation maps.",
    "Reference": "Includes fields from the manual annotation maps.",
    "HebCup": "Includes fields from the given annotation maps."
}
{
    "Origin": "Once you've created a DB cluster\nparameter group, you need to associate it with your DB cluster using",
    "Reference": "Once\nyou've created a DB cluster parameter group, you need to associate it\nwith your DB cluster using ModifyDBCluster.",
    "HebCup": "Once you've created a DB cluster\nparameter group, you need to associate it with your DB cluster using"
}
{
    "Origin": "Returns the text displayed by the button.",
    "Reference": "Returns the text displayed by the %type%.",
    "HebCup": "Returns the text displayed by the %type%."
}
{
    "Origin": "Tests the {@link FileSystemMaster#mount(AlluxioURI, AlluxioURI, MountOptions)} method.",
    "Reference": "Tests the {@link FileSystemMaster#mount(AlluxioURI, AlluxioURI, MountContext)} method.",
    "HebCup": "Tests the {@link FileSystemMaster#mount (AlluxioURI , AlluxioURI , MountContext)} method."
}
{
    "Origin": "Unregisters all the MBeans registered through {@link #registerMBeans()}.",
    "Reference": "Unregisters all the MBeans registered through {@link #registerMBeans(Collection)}.",
    "HebCup": "Unregisters all the MBeans registered through {@link #registerMBeans()}."
}
{
    "Origin": "Configures the {@link MessagingExceptionHandler} that should be used to handle any errors that occur in this scope.",
    "Reference": "Configures the {@link FlowExceptionHandler} that should be used to handle any errors that occur in this scope.",
    "HebCup": "Configures the {@link FlowExceptionHandler} that should be used to handle any errors that occur in this scope."
}
{
    "Origin": "Enqueue given object (append after tail).",
    "Reference": "Append given object to the tail.",
    "HebCup": "Enqueue given object (append after tail)."
}
{
    "Origin": "The option will be converted to a",
    "Reference": "The option will be converted to a\n type.",
    "HebCup": "The option will be converted to a"
}
{
    "Origin": "Returns the sync d l objects before and after the current sync d l object in the ordered set where parentFolderId = ?.",
    "Reference": "Returns the sync d l objects before and after the current sync d l object in the ordered set where modifiedTime > ?",
    "HebCup": "Returns the sync d l objects before and after the current sync d l object in the ordered set where repositoryId = ?."
}
{
    "Origin": "Creates a new unformatted {@link TranslatableText} with the given\n{@link Translation} and arguments.",
    "Reference": "Creates a new unformatted {@link TranslatableText} with the given\n{@link Translation}.",
    "HebCup": "Creates a new unformatted {@link TranslatableText} with the given {@link Nameable} and arguments."
}
{
    "Origin": "Places elements into order by ascending {@link #rawScore}.",
    "Reference": "Places elements into order by increasing normalized {@link #getScore()}.",
    "HebCup": "Places elements into order by ascending {@link#score}."
}
{
    "Origin": "Returns a string representation of this object; useful for testing and debugging.",
    "Reference": "Returns a string representation of this object.",
    "HebCup": "Returns a string representation of this object; useful for testing and debugging."
}
{
    "Origin": "This method allows you to specify IterationListeners for this model.",
    "Reference": "This method allows you to specify trainingListeners for this model.",
    "HebCup": "This method allows you to specify TrainingListeners for this model."
}
{
    "Origin": "Returns the selection listener that will be notified.",
    "Reference": "Returns the wakeup listener that will be notified.",
    "HebCup": "Returns the Wakeup Listener that will be notified."
}
{
    "Origin": "Sets the value.",
    "Reference": "Set the value.",
    "HebCup": "Sets the value."
}
{
    "Origin": "If not, then this method adds a\n{@link ExtendedThrowableProxyConverter} instance to the end of the chain.",
    "Reference": "If not, then this method adds a\n{@link ThrowableProxyConverter} instance to the end of the chain.",
    "HebCup": "If not , then this method adds a {@link ThrowableProxyConverter} instance to the end of the chain."
}
{
    "Origin": "Encodes the commit time into a key.",
    "Reference": "Encodes the txId into a key.",
    "HebCup": "Encodes the start Time into a key."
}
{
    "Origin": "Returns a string representation of this object; useful for testing and debugging.",
    "Reference": "Returns a string representation of this object.",
    "HebCup": "Returns a string representation of this object; useful for testing and debugging."
}
{
    "Origin": "Test of npara method, of class BernoulliDistribution.",
    "Reference": "Test of length method, of class BernoulliDistribution.",
    "HebCup": "Test of Length method , of class BernoulliDistribution."
}
{
    "Origin": "Calls\n{@link #getBlockDefinitionsJsonPaths()} and {@link #getBlockExtensions()}.",
    "Reference": "Calls\n{@link #getBlockDefinitionsJsonPaths()} and {@link #configureBlockExtensions()}.",
    "HebCup": "Calls {@link#getBlockDefinitionsJsonPaths ()} and {@link#configureBlockExtensions ()}."
}
{
    "Origin": "Each {@link ExpressionId} should be unique.",
    "Reference": "Each {@link NameId} should be unique.",
    "HebCup": "Each {@link NameId} should be unique."
}
{
    "Origin": "Assert or condition.",
    "Reference": "Assert conditions.",
    "HebCup": "Assert Conditions."
}
{
    "Origin": "LabelNode if necessary.",
    "Reference": "Creates a new LabelNode if necessary.",
    "HebCup": "LabelNode if necessary."
}
{
    "Origin": "Creates a new {@link CreateIndexRequestBuilder} with the settings obtained from {@link #indexSettings()}, augmented\nby the given builder",
    "Reference": "Creates a new {@link CreateIndexRequestBuilder} with the settings obtained from {@link #indexSettings()}.",
    "HebCup": "Creates a new {@link CreateIndexRequestBuilder} with the settings obtained from {@link#indexSettings ()} , augmented by the given builder"
}
{
    "Origin": "Resolves a collection of root modules, with service binding, and with\nthis configuration as its parent, to create a new configuration.",
    "Reference": "Resolves a collection of root modules, with this configuration as its\nparent, to create a new configuration.",
    "HebCup": "Resolves a collection of root modules, with service binding, and with\nthis configuration as its parent, to create a new configuration."
}
{
    "Origin": "Returns whether the given site path points to a sub sitemap folder.",
    "Reference": "Returns whether the given resource is a sub sitemap folder.",
    "HebCup": "Returns whether the given resource points to a sub sitemap folder."
}
{
    "Origin": "Repeatedly subscribe to the source {@literal numRepeat} times.",
    "Reference": "Repeatedly subscribe to the source {@code numRepeat} times.",
    "HebCup": "Repeatedly subscribe to the source {@literal numRepeat} times."
}
{
    "Origin": "Finds all constraint annotations defined for the given member and returns them in a list of\nconstraint descriptors.",
    "Reference": "Finds all constraint annotations defined for the given constrainable and returns them in a list of\nconstraint descriptors.",
    "HebCup": "Finds all Constraints defined for the given member and returns them in a list of constraint descriptors."
}
{
    "Origin": "Returns an offset date-time formed from this date at the specified time.",
    "Reference": "Returns a zoned date-time formed from this date at the specified time.",
    "HebCup": "Returns an Zoned Date-time formed from this date at the specified time."
}
{
    "Origin": "Processes the timestamping of the Signature.",
    "Reference": "Processes the time-stamping of the Signature.",
    "HebCup": "Processes the timestamping of the Signature."
}
{
    "Origin": "A convenient blocking call that can be used, typically during table\ndeletion, to wait for the table to become deleted by polling the table\nevery 5 seconds.",
    "Reference": "A convenient blocking call that can be used, typically during table\ndeletion, to wait for the table to become deleted.",
    "HebCup": "A convenient blocking call that can be used , typically during table deletion , to wait = the table to become deleted by polling the table every 5 seconds."
}
{
    "Origin": "get the preference key which stores the number of times the feature associated with the smart toast type has\nbeen used",
    "Reference": "returns the preference key which stores the number of times the feature associated with the smart toast\ntype has been used",
    "HebCup": "get the preference key which stores the number of times the feature associated with the smart toast type has been Usage"
}
{
    "Origin": "Put all the DynamoDB annotations.",
    "Reference": "Put all the DynamoDB annotations present on the annotated element.",
    "HebCup": "Put all the DynamoDB annotated.getAnnotations."
}
{
    "Origin": "Adds the address of a Gremlin Server to the list of servers a {@link Client} will try to contact to send\nrequests to.",
    "Reference": "Adds an address representing a group of Gremlin Servers, which will be added to the list of servers a\n{@link Client} will try to contact to send requests to.",
    "HebCup": "addAll the address of a Gremlin Server to the list of servers a {@link Client} will try to contact to send requests to."
}
{
    "Origin": "Obtains an instance from the specified unique name.",
    "Reference": "Obtains an instance from the specified name.",
    "HebCup": "Obtains an instance from the specified name."
}
{
    "Origin": "Try to find class source via getResourceAsStream().",
    "Reference": "Try to find class source using the internal repository instance.",
    "HebCup": "ClassNotFoundException to find class source via getResourceAsStream ()."
}
{
    "Origin": "If more messages are sent or received, theses messages are\ndropped.",
    "Reference": "If\nmore messages are sent, these messages are dropped.",
    "HebCup": "If more messages are sent or received, theses messages are\ndropped."
}
{
    "Origin": "Each returned attribute will be prefixed\nwith value provided in the prefix.",
    "Reference": "Each returned attribute will be prefixed with the string value provided\nin the prefix.",
    "HebCup": "Each returned canonicalize will be prefixed with value provided in the prefix."
}
{
    "Origin": "Returns the {@link logger} object used by the default implementation of\nthe {@code Injector}.",
    "Reference": "Returns the {@link Logger} object used by the default implementation of\nthe {@code Injector}.",
    "HebCup": "Returns the {@link LOGGER_INSTANCE} object used by the default implementation of the {@code Injector}."
}
{
    "Origin": "or throws a {@link com.liferay.calendar.NoSuchNotificationTemplateException} if it could not be found.",
    "Reference": "or throws a {@link NoSuchNotificationTemplateException} if it could not be found.",
    "HebCup": "or throws a {@link com.liferay.calendar.NoSuchNotificationTemplateException} if it could not be found."
}
{
    "Origin": "Get the estimate for a preference.",
    "Reference": "Get the estimate for a getEntry.",
    "HebCup": "Get the estimate for a Entry."
}
{
    "Origin": "New attribute statement.",
    "Reference": "New attribute statement attribute statement.",
    "HebCup": "New attribute statement."
}
{
    "Origin": "Set the index of the referenced table to use for this constraint.",
    "Reference": "Set the unique constraint of the referenced table to use for this\nconstraint.",
    "HebCup": "Set the Constraint of the referenced table to use for this constraint."
}
{
    "Origin": "Structural Specification for more details.",
    "Reference": "The\nOWL 2 Structural Specification for more details.",
    "HebCup": "Structural Specification for more details."
}
{
    "Origin": "Apply {@link #coerce(String, Type, CNode, DataContext)} method to a collection item.",
    "Reference": "Apply {@link #coerce(String, Type, TreeNode, DataContext)} method to a collection item.",
    "HebCup": "Apply {@link#coerce (String , Type , TreeNode , DataContext)} method to a collection item."
}
{
    "Origin": "See {@link #setPadding(int, int, int, int)}",
    "Reference": "See {@link #setPadding(float, float, float, float)}",
    "HebCup": "See {@link#setPadding (int , float , float , float)}"
}
{
    "Origin": "Gets Java types from Soy type.",
    "Reference": "Gets Java type from Soy type.",
    "HebCup": "Gets Java Type from Soy type."
}
{
    "Origin": "This method get the storeQuery and return the corresponding output and its types.",
    "Reference": "This method get the onDemandQuery and return the corresponding output and its types.",
    "HebCup": "This method get the OnDemandQuery and return the corresponding output and its types."
}
{
    "Origin": "Create error value with given type, reason and details.",
    "Reference": "Create error value with given reason and error details.",
    "HebCup": "Create error value with given (, reason and details."
}
{
    "Origin": "Returns the resource types.",
    "Reference": "Returns the resourceTypes.",
    "HebCup": "Returns the resource types."
}
{
    "Origin": "Second, the very last access will always be\nrecorded.",
    "Reference": "The very last access will always be recorded.",
    "HebCup": "Second, the very last access will always be\nrecorded."
}
{
    "Origin": "Properties in those configs (e.g.",
    "Reference": "Properties in those XML configs (e.g.",
    "HebCup": "Properties in those configs (e.g."
}
{
    "Origin": "Adds a control metadata.",
    "Reference": "Adds a packet metadata.",
    "HebCup": "Adds a Packet Metadata."
}
{
    "Origin": "Submits a Runnable task for execution and returns a Future representing that task.",
    "Reference": "Submits a {@link RepeatedTask} for execution and returns a Future representing that task.",
    "HebCup": "Submits a RepeatedTask task for execution and returns a Future representing that task."
}
{
    "Origin": "stores that the list of permissions has been asked",
    "Reference": "remember that the list of permissions has been asked",
    "HebCup": "stores that the list of permissions has been asked"
}
{
    "Origin": "The {@link EcKeyCreateOptions#getCurve() key curve} can be\noptionally specified.",
    "Reference": "The {@link CreateEcKeyOptions#getCurveName() key curve} can be\noptionally specified.",
    "HebCup": "The {@link CreateEcKeyOptions#getCurve () key curve} can be optionally specified."
}
{
    "Origin": "Sets the value of the 'KeepDeletedCells' field.",
    "Reference": "Sets the value of the 'keepDeletedCells' field.",
    "HebCup": "Sets the value of the 'keepDeletedCells' field."
}
{
    "Origin": "Any data that overlaps existing data from the {@link DataHolder} will\ntake priority and be overwritten from the pre-existing data from the\n{@link DataHolder}.",
    "Reference": "Any data that overlaps existing data from the {@link ValueContainer} will\ntake priority and be overwritten from the pre-existing data from the\n{@link ValueContainer}.",
    "HebCup": "Any data that overlaps existing data from the {@link Key} will take priority and be overwritten from the pre-existing data from the {@link Key}."
}
{
    "Origin": "Loads the list of {@link BlockExtension}s that support the block definitions in this\nactivity.",
    "Reference": "Sets up the list of {@link BlockExtension}s that support the block definitions in this\nactivity.",
    "HebCup": "Loads the list of {@link BlockExtension}s that support the block definitions in this\nactivity."
}
{
    "Origin": "Decode dashes (encoded in {@link CamelMessagingHeadersInjectAdapter}",
    "Reference": "Decode dashes (encoded in {@link CamelMessagingHeadersInjectAdapter} Dash\nencoding and decoding is required by JMS.",
    "HebCup": "Decode dashes (encoded in {@link CamelMessagingHeadersInjectAdapter}"
}
{
    "Origin": "Returns the account with the primary key or throws a {@link com.liferay.mail.NoSuchAccountException} if it could not be found.",
    "Reference": "Returns the account with the primary key or throws a {@link NoSuchAccountException} if it could not be found.",
    "HebCup": "Returns the account with the primary key or throws a {@link com.liferay.mail.NoSuchAccountException} if it could not be found."
}
{
    "Origin": "Checks for internet connection and then initializes the recycler view with all(max 500) categories of the searched query",
    "Reference": "Checks for internet connection and then initializes the recycler view with 25 categories of the searched query",
    "HebCup": "Checks for internet connection and then initializes the recycler view with all (max 500) Observable of the searched query"
}
{
    "Origin": "Also noteworthy is that no clean up is performed if an error\noccurs in the midst of a transfer: files that have been copied (even partially) are left in the destination.",
    "Reference": "In that case, no clean up is performed if an error occurs in the midst of a transfer: files that have been copied\n(even partially) are left in the destination.",
    "HebCup": "Also noteworthy is that no clean up is performed if an error occurs in the midst of a transfer: IO that have been copied (even partially) are left in the destination."
}
{
    "Origin": "Logs collection, string\nand throws {@link java.lang.AssertionError}, if not.",
    "Reference": "Logs collection, element\nand throws {@link java.lang.AssertionError}, if not.",
    "HebCup": "Logs collection , T and throws {@link java.lang.AssertionError} , if not."
}
{
    "Origin": "Add the argument to the value of this integer.",
    "Reference": "Add the argument to the value of this long.",
    "HebCup": "Add the argument to the value of this integer."
}
{
    "Origin": "Returns a string representation of this object; useful for testing and debugging.",
    "Reference": "Returns a string representation of this object.",
    "HebCup": "Returns a string representation of this object; useful for testing and debugging."
}
{
    "Origin": "First, try to find the exact identical instance of the tile object, if not found,\nthen try to find a tile has the same title.",
    "Reference": "First, try to find the exact identical instance of the tile object, if not found,\nthen try to find a tile has the same id.",
    "HebCup": "First, try to find the exact identical instance of the tile object, if not found, then try to find a tile has the same getId."
}
{
    "Origin": "Closes the current writer",
    "Reference": "Closes and removes the current writer",
    "HebCup": "Closes the current writer"
}
{
    "Origin": "Method is able to create form incoming class and {@link Descriptor jersey descriptor} a {@link ForeignDescriptor} which is\nprovided by underlying DI provider.",
    "Reference": "Method is able to create form incoming class and {@link Binding jersey descriptor} a {@link ForeignDescriptor} which is\nprovided by underlying DI provider.",
    "HebCup": "Method is able to create form incoming class and {@link Binding jersey descriptor} a {@link ForeignDescriptor} which is provided by underlying DI provider."
}
{
    "Origin": "To return a list of vaults that begins at\na specific vault, set the  request parameter to the\nvault ARN you obtained from a previous List Vaults request.",
    "Reference": "To return a list of vaults that begins at a specific vault, set the\nmarker request parameter to the vault ARN you\nobtained from a previous List Vaults request.",
    "HebCup": "To return a list of vaults that begins at\na specific vault, set the  request parameter to the\nvault ARN you obtained from a previous List Vaults request."
}
{
    "Origin": "Optimizes a function, which may return an empty sequence if the first argument yields nothing.",
    "Reference": "Optimizes a function that returns an empty sequence when the first argument is empty as well.",
    "HebCup": "Optimizes a function, which may return an empty sequence if the first argument yields nothing."
}
{
    "Origin": "Compares that two secrets are equal.",
    "Reference": "Compares that two secrets are equal and not null.",
    "HebCup": "Compares that two secrets are equal."
}
{
    "Origin": "1. a conventional compass needle pointing north/south (false, default)\n2. a pointer arrow that indicates the device's real world orientation on the map (true)",
    "Reference": "false - a conventional compass needle pointing north/south (false, default)\ntrue - a pointer arrow that indicates the device's real world orientation on the map (true)",
    "HebCup": "1. a conventional compass needle pointing north/south (false, default)\n2. a pointer arrow that indicates the device's real world orientation on the map (true)"
}
{
    "Origin": "Read the blob metadata document in the CosmosDB collection, retrying as necessary.",
    "Reference": "Read the blob metadata document in the CosmosDB collection.",
    "HebCup": "Read the blob metadata asyncDocument in the CosmosDB collection , retrying as necessary."
}
{
    "Origin": "The address should be parseable by {@link InetAddress#getByName(String)}.",
    "Reference": "The address should be parseable by\n{@link InetAddress#getAllByName(String)}.",
    "HebCup": "The address should be parseable by {@link InetAddress#getAllByName (String)}."
}
{
    "Origin": "The user who created the comment.",
    "Reference": "The user uuid who created the comment.",
    "HebCup": "The user who created the comment."
}
{
    "Origin": "Iterate over all the {@link KeyProperties\nkey} by page and call {@link KeyClient#getKey(KeyProperties key properties)}.",
    "Reference": "Iterate over all the {@link KeyProperties\nkey} by page and call {@link KeyClient#getKey(String, String)}.",
    "HebCup": "Iterate over all the {@link KeyProperties PropertiesOfKeys} by page and call {@link KeyClient#getKey(KeyProperties PropertiesOfKeys properties)}."
}
{
    "Origin": "whether it gives you labeled or unlabeled bracketings depends on the value of the {@code labelConstituents}\nparameter",
    "Reference": "whether it gives you labeled or unlabeled bracketings depends on the value of the \nparameter",
    "HebCup": "whether it gives you labeled or unlabeled bracketings depends on the value of the {@code labelConstituents}\nparameter"
}
{
    "Origin": "If {@code keys = \"abc*\"}, settings with a key starting with \"abc\" are returned.",
    "Reference": "If {@code keyFilter = \"abc*\"}, settings with a key starting with \"abc\" are returned.",
    "HebCup": "If {@code KeyFilter = ``abc*``} , settings with a key starting with ``abc`` are returned."
}
{
    "Origin": "Sets the units of this drug order",
    "Reference": "Sets the doseUnits of this drug order",
    "HebCup": "Sets the doseUnits of this drug order"
}
{
    "Origin": "This method logs a warning if the class cannot be registered.",
    "Reference": "This method LOGs a warning if the class cannot be registered.",
    "HebCup": "This method logs a warning if the ClassLoaderUtils cannot be registered."
}
{
    "Origin": "Handles an iterate commit.",
    "Reference": "Handles an iterator next commit.",
    "HebCup": "Handles an position commit."
}
{
    "Origin": "Updates the feedback response identified by {@code newAttributes.getId()}.",
    "Reference": "Updates a feedback response with {@link FeedbackResponseAttributes.UpdateOptions}.",
    "HebCup": "Updates the feedback response identified by {@code recreatedResponseEntity.getId()}."
}
{
    "Origin": "The option is a:",
    "Reference": "The option is a:\n type.",
    "HebCup": "The option is a:"
}
{
    "Origin": "Set this matrix to the rotation transformation of the given {@link Quaterniond}.",
    "Reference": "Set this matrix to the rotation transformation of the given {@link Quaterniondc}.",
    "HebCup": "Set this matrix to the rotation transformation of the given {@link Quaterniondc}."
}
{
    "Origin": "Reset all labels in the instruction list.",
    "Reference": "Resets all the labels in the instruction list.",
    "HebCup": "Reset all labels in the instruction list."
}
{
    "Origin": "Attempt to get a user by EID or ID (if that fails)",
    "Reference": "Attempt to get a user by AID, EID or ID",
    "HebCup": "Attempt to get a User By Aid or ID (if that fails)"
}
{
    "Origin": "Executes a long work instances on a single node and verifies that it took enough time and executed on the\nexpected node (the other one since Policy.ALWAYS)",
    "Reference": "Executes a long work instances on a single node and verifies that it took enough time and executed on the\nexpected node.",
    "HebCup": "Executes a long work instances on a single node and verifies that it took enough time and executed on the\nexpected node (the other one since Policy.ALWAYS)"
}
{
    "Origin": "escapes character data in val",
    "Reference": "escapes character data in val and attributes",
    "HebCup": "escapes character data in val"
}
{
    "Origin": "Tests for the {@link BaseFileSystem#mount(AlluxioURI, AlluxioURI, MountOptions)} method.",
    "Reference": "Tests for the {@link BaseFileSystem#mount(AlluxioURI, AlluxioURI, MountPOptions)} method.",
    "HebCup": "Tests for the {@link BaseFileSystem#mount (AlluxioURI , AlluxioURI , MountPOptions.getDefault)} method."
}
{
    "Origin": "For transforms returned via GET\ndata_frame/transforms, see the @link{TransportGetTransformAction}",
    "Reference": "For transforms returned via GET\n_transform, see the @link{TransportGetTransformAction}",
    "HebCup": "For transforms returned via GET\ndata_frame/transforms, see the @link{TransportGetTransformAction}"
}
{
    "Origin": "Based on vmchk/checkinterntable.c r1.3",
    "Reference": "Based on runtime/vmchk/checkinterntable.c",
    "HebCup": "Based on vmchk/checkinterntable.c r1.3"
}
{
    "Origin": "Sets the inetAddress from where the authentication attempt occurs.",
    "Reference": "Sets the host name or IP string from where the authentication attempt occurs.",
    "HebCup": "Sets the String from where the authentication attempt occurs."
}
{
    "Origin": "Shuts down the managed channel.",
    "Reference": "Tries to gracefully shut down the managed channel.",
    "HebCup": "Shuts down the managed channel."
}
{
    "Origin": "Sequences an event.",
    "Reference": "Sequences the given event.",
    "HebCup": "Sequences an context."
}
{
    "Origin": "Convert to object types, returning null if text is null.",
    "Reference": "Convert to object types, returning null if text is null or empty.",
    "HebCup": "Convert to object types, returning null if text is null."
}
{
    "Origin": "Asserts that all channels of the processor channel combination, processed the correct number of messages",
    "Reference": "Asserts that source channel, processed the correct number of messages",
    "HebCup": "Asserts that all channels of the processor channel combination, processed the correct number of messages"
}
{
    "Origin": "Returns the list of unique classpath element paths as URLs, in classloader resolution order.",
    "Reference": "Returns an ordered list of unique classpath element and module URLs.",
    "HebCup": "Returns the list of unique classpath element paths as URLs, in classloader resolution order."
}
{
    "Origin": "This exist for backward compatibility and\nexist for internal usage only (do not call this method explicitly).",
    "Reference": "This exist for backward compatibility and\nfor internal usage only (do not call this method explicitly).",
    "HebCup": "This exist for backward compatibility and\nexist for internal usage only (do not call this method explicitly)."
}
{
    "Origin": "If set to false, an exception in CuDNN will be propagated back to the user.",
    "Reference": "If set to false, an exception in the helper will be propagated back to the user.",
    "HebCup": "If set to false, an exception in CuDNN will be propagated back to the user."
}
{
    "Origin": "This method allows you to specify IterationListeners for this model.",
    "Reference": "This method allows you to specify trainingListeners for this model.",
    "HebCup": "This method allows you to specify TrainingListeners for this model."
}
{
    "Origin": "If no such module has been set, or if something wrong occurred, null will be returned.",
    "Reference": "If no valid module has been set null will be returned.",
    "HebCup": "If no such module has been set, or if something wrong occurred, null will be returned."
}
{
    "Origin": "Tries to refine the compile-time type of this variable through the type of the bound\nexpression.",
    "Reference": "Tries to refine the type of this variable through the type of the bound expression.",
    "HebCup": "Tries to refine the compile-time type of cc variable through the type of the bound expression."
}
{
    "Origin": "sort a list object: {@code List>}",
    "Reference": "sort a list of objects: {@code List>}",
    "HebCup": "sort a list object: {@code Listvoid}"
}
{
    "Origin": "Better way to change consumers are use {@link DataCarrier#consume}",
    "Reference": "Better way to change consumeDriver are use {@link DataCarrier#consume}",
    "HebCup": "Better way to change drivers are use {@link DataCarrier#consume}"
}
{
    "Origin": "Defaults to {@link DefaultInstructionAckSource}.",
    "Reference": "DefaultInstructionAckSource}.",
    "HebCup": "Defaults to {@link DefaultInstructionAckSource}."
}
{
    "Origin": "It is just the\nlogging that guava tries to do that may disrupt thing when initializing the logging infrastructure.",
    "Reference": "It is just the\nlogging that Guava tries to do that may disrupt thing when initializing the logging infrastructure.",
    "HebCup": "It is just the\nlogging that guava tries to do that may disrupt thing when initializing the logging infrastructure."
}
{
    "Origin": "Upcalled from embedded mode to (really) commit suicide.",
    "Reference": "Upcalled from embedded mode via JNI to (really) commit suicide.",
    "HebCup": "Upcalled from embedded mode to (really) commit suicide."
}
{
    "Origin": "Calculate the area of all and blocks",
    "Reference": "Calculate the area of:",
    "HebCup": "Calculate the area of total and blocks"
}
{
    "Origin": "Sets the {@link UUID} of the request.",
    "Reference": "Sets the {@link RequestId}.",
    "HebCup": "Sets the {@link id} of the request."
}
{
    "Origin": "Selects the option(s) with the given text.",
    "Reference": "Selects the option with the given text.",
    "HebCup": "Selects the option(s) with the given text."
}
{
    "Origin": "Provide a {@link Mutate} {@link PTransform} to write data to a Cassandra database.",
    "Reference": "Provide a {@link Write} {@link PTransform} to write data to a Cassandra database.",
    "HebCup": "Provide a {@link Write} {@link PTransform} to write data to a Cassandra database."
}
{
    "Origin": "or throws a {@link com.liferay.knowledgebase.NoSuchTemplateException} if it could not be found.",
    "Reference": "or throws a {@link NoSuchTemplateException} if it could not be found.",
    "HebCup": "or throws a {@link com.liferay.knowledgebase.NoSuchTemplateException} if it could not be found."
}
{
    "Origin": "The {@link RequestScope.Instance\nscope instance} is NOT released by the method (this must be done explicitly).",
    "Reference": "The {@link RequestContext\nscope context} is NOT released by the method (this must be done explicitly).",
    "HebCup": "The {@link RequestScope.Instance context} is NOT released by the method (this must be done explicitly)."
}
{
    "Origin": "When an interceptor throws an unexpected exception, asynchronous callers are left hanging.",
    "Reference": "When an interceptor throws an unexpected exception, asynchronous calls are canceled.",
    "HebCup": "When an interceptor throws an unexpected exception, asynchronous callers are left hanging."
}
{
    "Origin": "Return the {@link SharedMemory} channel that the Plugin and its\nrelated classes use for outgoing messages to the upstream service.",
    "Reference": "Return the {@link InterProcessCommunication} channel that the Plugin\nand its related classes use for outgoing messages to the upstream\nservice.",
    "HebCup": "Return the {@link InterProcessCommunication} channel that the Plugin and its related classes use for outgoing messages to the upstream service."
}
{
    "Origin": "Returns a {@link Function} which produces a {@link Service} wrapped with an\n{@link ExceptionFilteredHttpResponseDecorator}.",
    "Reference": "Returns a {@link Function} which produces an {@link HttpService} wrapped with an\n{@link ExceptionFilteredHttpResponseDecorator}.",
    "HebCup": "Returns a {@link Function} which produces a {@link HttpService} wrapped with an {@link ExceptionFilteredHttpResponseDecorator}."
}
{
    "Origin": "Set the peer address only if the previous peer address that had the same peer ID.",
    "Reference": "Sets a new PeerAddress, but only if the previous had the same peer ID.",
    "HebCup": "Set the peer ID. only if the previous peer ID. that had the same peer ID."
}
{
    "Origin": "When using CuDNN and an error is encountered, should fallback to the non-CuDNN implementatation be allowed?",
    "Reference": "When using CuDNN or MKLDNN and an error is encountered, should fallback to the non-helper implementation be allowed?",
    "HebCup": "When using CuDNN and an error is encountered, should fallback to the non-CuDNN implementatation be allowed?"
}
{
    "Origin": "Assign a voice to this chord, and to the related ones.",
    "Reference": "Assign a voice to this chord, and recursively propagate to the following chords\nrelated by beam or tie.",
    "HebCup": "Assign a voice to this chord, and to the related ones."
}
{
    "Origin": "Add insert optimize result unit into units.",
    "Reference": "Add optimized insert value.",
    "HebCup": "Add Optimized Insert Value into units."
}
{
    "Origin": "Creates a default DBScan",
    "Reference": "Creates a default DBSCAN",
    "HebCup": "Creates a default DBSCAN"
}
{
    "Origin": "BytesRef: int[] floats encoded as integers values, 2 bytes for each dimension",
    "Reference": "BytesRef: int[] floats encoded as integers values, 2 bytes for each dimension, length of vector",
    "HebCup": "BytesRef: vectorMagnitude[] floats encoded as integers values, 2 bytes for each dimension"
}
{
    "Origin": "The factory itself is bound in a per-lookup scope.",
    "Reference": "The supplier itself is bound in a per-lookup scope.",
    "HebCup": "The Supplier itself is bound in a per-lookup scope."
}
{
    "Origin": "Creates a jar file from the resources and given dex file array.",
    "Reference": "Creates a jar file from the resources (including dex file arrays).",
    "HebCup": "Creates a jar file from the resources and given dex file array."
}
{
    "Origin": "We defer initialization of this member until after the atomic\nbucket creation phase is over.",
    "Reference": "Overridden to defer initialization of this member until after the atomic bucket creation phase\nis over.",
    "HebCup": "We defer initialization of this member until after the atomic\nbucket creation phase is over."
}
{
    "Origin": "Returns a {@link PointerBuffer} view of the {@code data.l} field.",
    "Reference": "Returns a {@link CLongBuffer} view of the {@code data.l} field.",
    "HebCup": "Returns a {@link CLongBuffer} view of the {@code data.l} field."
}
{
    "Origin": "See Immutable List Static Factory Methods for details.",
    "Reference": "See Unmodifiable Lists for details.",
    "HebCup": "See Unmodifiable List Static Factory Methods for details."
}
{
    "Origin": "returns the \"me\" fragment from the sites tab",
    "Reference": "returns the \"me\" fragment from the sites page",
    "HebCup": "returns the ``me`` fragment from the sites Nav"
}
{
    "Origin": "Get the value of reportFormat.",
    "Reference": "Get the value of junitFailOnCVSS.",
    "HebCup": "Get the value of junitFailOnCVSS."
}
{
    "Origin": "Helper to get a list of user eids in a group",
    "Reference": "Helper to get a list of user display ids in a group",
    "HebCup": "Helper to get a list of UserDisplay eids in a group"
}
{
    "Origin": "The node type(s) that are implicitly allocated to this",
    "Reference": "The node type that is implicitly allocated to this",
    "HebCup": "The node Type(s) that are implicitly allocated to this"
}
{
    "Origin": "The default value of this attribute is {@code 40}.",
    "Reference": "The default value of this attribute is {@code VERSION}.",
    "HebCup": "The default value of this attribute is {@code 40}."
}
{
    "Origin": "The return value indicates\nwhether a frame could be skipped.",
    "Reference": "The return value indicates\nwhether the full frame could be skipped.",
    "HebCup": "The return value indicates\nwhether a frame could be skipped."
}
{
    "Origin": "Gets the resolution of the bitstream that this instance represents.",
    "Reference": "Gets the height of the bitstream that this instance represents.",
    "HebCup": "Gets the Height of the bitstream that this instance represents."
}
{
    "Origin": "Stub of {@link Plugin#didDeclareProperty(TypeSpec.Builder, PropertyGenerator, FieldSpec)} for subclasses to\noverride",
    "Reference": "Stub of {@link Plugin#afterDeclareProperty(TypeSpec.Builder, PropertyGenerator, FieldSpec)} for subclasses to\noverride",
    "HebCup": "Stub of {@link Plugin#afterDeclareProperty (TypeSpec.Builder , PropertyGenerator , FieldSpec)} for subclasses to override"
}
{
    "Origin": "Removes the given {@code key} from the local entity map,\nand then broadcasts the removal to all nodes in the cluster.",
    "Reference": "Removes the given {@code key} from the local entity map,\nand broadcasts the operation to all nodes in the cluster.",
    "HebCup": "Removes the given {@code key} from the local entity map,\nand then broadcasts the removal to all nodes in the cluster."
}
{
    "Origin": "The entity is validated such that the account is allowed to log in before returning.",
    "Reference": "Validates the user account such that the user is allowed to log in.",
    "HebCup": "The entity is validated such that the account is allowed to log in before returning."
}
{
    "Origin": "Creates a new {@link MetadataEntity} which consists of the given key and values following the key and values of\nthis {@link MetadataEntity}",
    "Reference": "Creates a new {@link MetadataEntity} which consists of the given key and values following the key and values of\nthis {@link MetadataEntity} and is of type of the given key.",
    "HebCup": "Creates a metadataEntity {@link MetadataEntity} which consists of the given key and values following the key and values of this {@link MetadataEntity}"
}
{
    "Origin": "This is a mutually exclusive option to {@link #samlServiceProvider(ServiceProviderResolver)}",
    "Reference": "This is a mutually exclusive option to {@link #saml2Login(ServiceProviderResolver)}",
    "HebCup": "This is a mutually exclusive option to {@link#saml2Login (ServiceProviderResolver)}"
}
{
    "Origin": "Return the response body as a string.",
    "Reference": "Return the response body converted to String.",
    "HebCup": "Return the response body as a string."
}
{
    "Origin": "{@value #getExtension()}}",
    "Reference": "{@value #getExtensions()}}",
    "HebCup": "{@value#getExtensions ()}}"
}
{
    "Origin": "Stub of {@link Plugin#willDeclareGetter(TypeSpec.Builder, PropertyGenerator, MethodSpec.Builder)} for subclasses\nto override",
    "Reference": "Stub of {@link Plugin#beforeDeclareGetter(TypeSpec.Builder, PropertyGenerator, MethodSpec.Builder)} for subclasses\nto override",
    "HebCup": "Stub of {@link Plugin#beforeDeclareGetter (TypeSpec.Builder , PropertyGenerator , MethodSpec.Builder)} for subclasses to override"
}
{
    "Origin": "Returns the length of this path.",
    "Reference": "its number of steps.",
    "HebCup": "Returns the length of this path."
}
{
    "Origin": "Position attributes, provide the ability to associate arbitrary information\nwith a position in a key-value map.",
    "Reference": "Position attributes provide the ability to associate arbitrary information in a key-value map.",
    "HebCup": "Attribute, provide the ability to associate arbitrary information with a position in a key-value map."
}
{
    "Origin": "Returns a new Coord4D from a ByteBuf.",
    "Reference": "Returns a new Coord4D from a PacketBuffer.",
    "HebCup": "Returns a new Coord4D from a PacketBuffer."
}
{
    "Origin": "Sets the list of package groups and the order they should occur in the\nfile.",
    "Reference": "Sets the list of package groups for type imports and the order they should occur in the\nfile.",
    "HebCup": "Sets the list of package groups and the order they should occur in the\nfile."
}
{
    "Origin": "Can be used to get the Mimetype",
    "Reference": "Can be used to get the MimeType",
    "HebCup": "Can be used to get the MimeType"
}
{
    "Origin": "Gets a localized message string based on the locale determined by the",
    "Reference": "Gets a localized message string based on the locale determined by the FacesContext.",
    "HebCup": "Gets a localized message string based on the locale determined by the"
}
{
    "Origin": "Wrap this {@link ClassPathLoader} with a {@link ClassLoader} facade.",
    "Reference": "Wrap this {@code ClassPathLoader} with a {@code ClassLoader} facade.",
    "HebCup": "Wrap this {@link ClassPathLoader} with a {@link ClassLoader} facade."
}
{
    "Origin": "Returns the {@link ImageCapture.CaptureMode}.",
    "Reference": "Returns the {@link CaptureMode}.",
    "HebCup": "Returns the {@link CaptureMode}."
}
{
    "Origin": "However, the problem with exposing the\ninformation is that people running from an IDE can observe stale\ndata from old  class files left from a\nprevious build of a JAR.",
    "Reference": "However, people running from an IDE will\nobserve stale data from old \nclass files left from a previous build of a JAR.",
    "HebCup": "However, the problem with exposing the\ninformation is that people running from an IDE can observe stale\ndata from old  class files left from a\nprevious build of a JAR."
}
{
    "Origin": "Quotes can be used to include spaces.",
    "Reference": "The input can be wrapped with quotes.",
    "HebCup": "Quotes can be used to include spaces."
}
{
    "Origin": "To build the logical StaffBarline's, PartBarline's and Measures, the strategy is:",
    "Reference": "To build the logical StaffBarlineInter's, PartBarline's and Measures, the strategy is:",
    "HebCup": "To build the logical StaffBarline's, PartBarline's and Measures, the strategy is:"
}
{
    "Origin": "Returns a string representation of this object; useful for testing and debugging.",
    "Reference": "Returns a string representation of this object.",
    "HebCup": "Returns a string representation of this object; useful for testing and debugging."
}
{
    "Origin": "If an element has many classes then\nthis will match against each of them.",
    "Reference": "If an element has multiple classes, then\nthis will match against each of them.",
    "HebCup": "If an element has many classes then\nthis will match against each of them."
}
{
    "Origin": "Saves the last gallery.",
    "Reference": "Saves the last gallery for a given key.",
    "HebCup": "Saves the last gallery."
}
{
    "Origin": "Invalidates are not allowed more frequently than {@link ControllerLeaderLocator::MILLIS_BETWEEN_INVALIDATE} millis.",
    "Reference": "Invalidates are not allowed more frequently than {@link ControllerLeaderLocator::MIN_INVALIDATE_INTERVAL_MS} millis.",
    "HebCup": "Invalidates are not allowed more frequently than {@link ControllerLeaderLocator::MIN_INVALIDATE_INTERVAL_MS} millis."
}
{
    "Origin": "Retrieves the genre name for this track.",
    "Reference": "Retrieves the genres for this track.",
    "HebCup": "Retrieves the Genres for this track."
}
{
    "Origin": "Get the application-configured HK2 service locator.",
    "Reference": "Get the application-configured instance manager.",
    "HebCup": "Get the application-configured HK2 Instance Manager."
}
{
    "Origin": "Returns the singleton component database instance.",
    "Reference": "Returns the component database for the current project",
    "HebCup": "Returns the singleton component get instance."
}
{
    "Origin": "Adds an address representing a group of Gremlin Servers, which will be added to the list of servers a\n{@link Client} will try to contact to send requests to.",
    "Reference": "Adds the address of a Gremlin Server to the list of servers a {@link Client} will try to contact to send\nrequests to.",
    "HebCup": "Adds an address representing a group of Gremlin Servers, which will be added to the list of servers a\n{@link Client} will try to contact to send requests to."
}
{
    "Origin": "The meta-property for the {@code price} property.",
    "Reference": "The meta-property for the {@code tradedPrice} property.",
    "HebCup": "The meta-property for the {@code tradedPrice} property."
}
{
    "Origin": "In case the {@code parent} instance manager\nis not specified, the locator will not be parented.",
    "Reference": "In case the {@code parent} injection manager\nis not specified, the locator will not be parented.",
    "HebCup": "In case the {@code parent} Injection Manager is not specified, the locator will not be parented."
}
{
    "Origin": "Returns {@link SessionToken2} so that developers create their own\n{@link androidx.media2.MediaController2} instance.",
    "Reference": "Returns {@link SessionToken} so that developers create their own\n{@link androidx.media2.MediaController} instance.",
    "HebCup": "Returns {@link SessionToken} so that developers create their own {@link androidx.media2.MediaController2} instance."
}
{
    "Origin": "Note that the returned {@link Bits}\ninstance MUST be consumed in order.",
    "Reference": "NOTE: that the returned {@link Bits} instance MUST be consumed in order.",
    "HebCup": "Note that the returned {@link as} instance MUST be consumed in order."
}
{
    "Origin": "Use reflection to discover and report on the bigdata build information.",
    "Reference": "Method used to discover and report on the bigdata build information.",
    "HebCup": "Use reflection to discover and report on the bigdata build information."
}
{
    "Origin": "You can restore\nto any point in time before the time identified by the",
    "Reference": "You can restore to\nany point in time before the time identified by the LatestRestorableTime\nproperty.",
    "HebCup": "You can restore\nto any point in time before the time identified by the"
}
{
    "Origin": "This method sets the value of the database column m_prj_risk.probalitity",
    "Reference": "This method sets the value of the database column m_prj_risk.probability",
    "HebCup": "This method sets the value of the database column m_prj_risk.Probability"
}
{
    "Origin": "One way to ensure this is to always call\n{@link #declareLabel declared} before calling this method.",
    "Reference": "One way to ensure this is to always call {@link #declareLabel} before\ncalling this method.",
    "HebCup": "One way to ensure this is to always call\n{@link #declareLabel declared} before calling this method."
}
{
    "Origin": "Attempt to transform this Monad to the same type as the supplied Monoid (using mapToType on the monoid interface)",
    "Reference": "Attempt to transform this Stream to the same type as the supplied Monoid (using mapToType on the monoid interface)",
    "HebCup": "Attempt to transform this Monad to the same type as the supplied Monoid (using foldToType on the monoid interface)"
}
{
    "Origin": "Test for bug described in {@link URL}.",
    "Reference": "Test for bug described in URL",
    "HebCup": "Test for bug described in {@link URL}."
}
{
    "Origin": "write the list produced by calling extractResourcesToFolder to the given file with system line separator\ncompact sikulixcontent format",
    "Reference": "write the list as it is produced by calling extractResourcesToFolder to the given file with system line\nseparator\ncompact sikulixcontent format",
    "HebCup": "write the list produced by calling extractResourcesToFolder to the given file with system line separator\ncompact sikulixcontent format"
}
{
    "Origin": "Resolves all keys within the given chain.",
    "Reference": "Resolves all keys within the given chain to their equivalent put operations.",
    "HebCup": "Resolves all keys within the given All."
}
{
    "Origin": "Unless overridden by the {@link #setCipher} method, the default instance is a {@link BlowfishCipher}.",
    "Reference": "Unless overridden by the {@link #setCipherService} method, the default instance is an {@link AesCipherService}.",
    "HebCup": "Unless overridden by the {@link #setCipherService} method, the default instance is a {@link BlowfishCipherService}."
}
{
    "Origin": "Get Quantity Invoiced.",
    "Reference": "Get Berechn.",
    "HebCup": "Get Quantity Invoiced."
}
{
    "Origin": "Method handles the case where there are downstream operators awaiting\nlast pass evaluation is not re-triggered by the last\n{@link IChunkMessage} output from an upstream operator.",
    "Reference": "Method handles the case where there are downstream operators awaiting\nlast pass evaluation or at-once evaluation is not re-triggered by the last\n{@link IChunkMessage} output from an upstream operator.",
    "HebCup": "Method handles the case where there are downstream operators awaiting\nlast pass evaluation is not re-triggered by the last\n{@link IChunkMessage} output from an upstream operator."
}
{
    "Origin": "Returns a string representation of this object; useful for testing and debugging.",
    "Reference": "Returns a string representation of this object.",
    "HebCup": "Returns a string representation of this object; useful for testing and debugging."
}
{
    "Origin": "Get the {@link TransportAction} for an {@link Action}, throwing exceptions if the action isn't available.",
    "Reference": "Get the {@link TransportAction} for an {@link ActionType}, throwing exceptions if the action isn't available.",
    "HebCup": "Get the {@link TransportAction} for an {@link ActionType} , throwing exceptions if the ActionType isn't available."
}
{
    "Origin": "However, since we\ninject the ConstantAnnotationMarker the Annotation proxy types for ahead-of-time allocated\nannotations implement two interfaces.",
    "Reference": "However, since we\ninject the constant-annotation-marker interface the Annotation proxy types for ahead-of-time\nallocated annotations implement two interfaces.",
    "HebCup": "However , since we inject the constantAnnotationMarkerInterface the Annotation proxy types for ahead-of-time allocated annotations implement two interfaces."
}
{
    "Origin": "Configure a {@code Function} to evaluate a {@link RSocketOutboundGateway.Command}\nfor RSocket request type at runtime against a request message.",
    "Reference": "Configure a {@link Function} to evaluate an {@link RSocketOutboundGateway.Command}\nfor the RSocket request type at runtime against a request message.",
    "HebCup": "Configure a {@code Function} to evaluate a {@link RSocketOutboundGateway.interactionModel} for RSocket request type at runtime against a request message."
}
{
    "Origin": "see {@link InstanceInfo#getDefaultAddress()} for explanation on why the hostname is used as the default address",
    "Reference": "see {@link InstanceInfo#getHostName()} for explanation on why the hostname is used as the default address",
    "HebCup": "see {@link InstanceInfo#getHostName ()} for explanation on why the hostname is used as the default address"
}
{
    "Origin": "Test that a JAR file with a Main-Class attribute that is not a valid",
    "Reference": "Test that a JAR file with a Main-Class attribute that is not a qualified\ntype name.",
    "HebCup": "Test that a JAR file with a Main-Class attribute that is not a valid"
}
{
    "Origin": "This factory converts the arbitrary date-time object to an instance of {@code LocalTime}.",
    "Reference": "This factory converts the arbitrary temporal object to an instance of {@code LocalTime}.",
    "HebCup": "This factory converts the arbitrary date-time object to an instance of {@code LocalTime}."
}
{
    "Origin": "It can be configured by adjusting\nthe aeron.client.liveness.timeout property on the media driver.",
    "Reference": "It can be configured by adjusting\nthe {@code aeron.client.liveness.timeout} property on the media driver.",
    "HebCup": "It can be configured by adjusting the aeron.client.liveness.TimeoutNs property on the media driver."
}
{
    "Origin": "A convenient blocking call that can be used, typically during table\ncreation, to wait for the table to become active by polling the table\nevery 5 seconds.",
    "Reference": "A convenient blocking call that can be used, typically during table\ncreation, to wait for the table to become active.",
    "HebCup": "A convenient blocking call that can be used , typically during table creation , to wait Waiter the table to become active by polling the table every 5 seconds."
}
{
    "Origin": "The reconnectionDelay property takes a positive integer representing\nthe number of milliseconds to wait between each failed connection attempt\nto the server.",
    "Reference": "The reconnectionDelay property takes a positive {@link Duration} value\nrepresenting the time to wait between each failed connection attempt\nto the server.",
    "HebCup": "The reconnectionDelay property takes a positive integer representing\nthe number of milliseconds to wait between each failed connection attempt\nto the server."
}
{
    "Origin": "Returns the content for the specified pre value.",
    "Reference": "Returns textual contents for a rectangle.",
    "HebCup": "Returns the text for the specified pre value."
}
{
    "Origin": "The {@link KeyCreateOptions#isEnabled() enabled} field\nis set to true by Azure Key Vault, if not specified.",
    "Reference": "The {@link CreateKeyOptions#isEnabled() enabled} field\nis set to true by Azure Key Vault, if not specified.",
    "HebCup": "The {@link CreateKeyOptions#isEnabled () enabled} field is set to true by Azure Key Vault , if not specified."
}
{
    "Origin": "Amazon SimpleDB to optimize requests and generally produce better\nthroughput.",
    "Reference": "SimpleDB to optimize requests and generally produce better throughput.",
    "HebCup": "Amazon SimpleDB to optimize Batch and generally produce better throughput."
}
{
    "Origin": "This operation retrieves the \nsubresource of the specified vault.",
    "Reference": "This operation retrieves the\nnotification-configuration subresource of the\nspecified vault.",
    "HebCup": "This operation retrieves the \nsubresource of the specified vault."
}
{
    "Origin": "Returns JSON value with the specified content.",
    "Reference": "Returns JSON value with the specified string content.",
    "HebCup": "Returns JSON value with the specified content."
}
{
    "Origin": "Converts a BucketOptions to a DBObject for use by the Java driver.",
    "Reference": "Converts a BucketOptions to a Document for use by the Java driver.",
    "HebCup": "Converts a BucketOptions to a Document for use by the Java driver."
}
{
    "Origin": "Appends the name of the given label to {@link #buf buf}.",
    "Reference": "Appends the name of the given label to {@link #stringBuilder}.",
    "HebCup": "Appends the name of the given label to {@link#stringBuilder stringBuilder}."
}
{
    "Origin": "If available, the value is returned,\notherwise a new uid is generated and placed within the {@link Map}.",
    "Reference": "If available, the value is returned,\notherwise a new name is generated and returned.",
    "HebCup": "If available , the value is returned , otherwise a new Name is generated and placed within the {@link Map}."
}
{
    "Origin": "This year-month will be passed to the formatter\n{@link DateTimeFormatter#print(TemporalAccessor) print method}.",
    "Reference": "This year-month will be passed to the formatter\n{@link DateTimeFormatter#format(TemporalAccessor) print method}.",
    "HebCup": "This year-month will be passed to the formatter {@link DateTimeFormatter#format (TemporalAccessor) format method}."
}
{
    "Origin": "Returns a value with the given element type containing the items in this list.",
    "Reference": "Returns a value with the type of the given expression.",
    "HebCup": "Returns a Item with the given element type containing the items in this list."
}
{
    "Origin": "Returns the global {@link MeterRegistry} to which components are registered.",
    "Reference": "Returns the global {@link MetricRegistry} to which components are registered.",
    "HebCup": "Returns the global {@link MetricRegistry} to which components are registered."
}
{
    "Origin": "Sets the bottom border for a region of cells by manipulating the cell style of the individual\ncells on the bottom",
    "Reference": "Sets the bottom border style for a region of cells by manipulating the cell style of the individual\ncells on the bottom",
    "HebCup": "Sets the bottom border for a region of cells by manipulating the cell style of the individual\ncells on the bottom"
}
{
    "Origin": "Send request to the server with early blockwise negociation through block2 option.",
    "Reference": "Send request to the server with early blockwise negotiation through block2 option.",
    "HebCup": "Send request to the server with early blockwise Negotiation through block2 option."
}
{
    "Origin": "Removes a job.",
    "Reference": "Unregisters a job.",
    "HebCup": "unregister a job."
}
{
    "Origin": "Convert to primitive types, returning default value if text is null.",
    "Reference": "Convert to boolean, returning default value if text is inconvertible.",
    "HebCup": "Convert to primitive types, returning default value if text is null."
}
{
    "Origin": "Returns a string representation of this object; useful for testing and debugging.",
    "Reference": "Returns a string representation of this object.",
    "HebCup": "Returns a string representation of this object; useful for testing and debugging."
}
{
    "Origin": "Converts an int array to an Integer {@link List}.",
    "Reference": "Adapts an int array to an Integer {@link List}.",
    "HebCup": "Converts an int array as an Integer {@link List}."
}
{
    "Origin": "Create a QuickConnection object from a GuacamoleConfiguration\nand get an ID and place it on the tree, returning the new\nconnection identifier value.",
    "Reference": "Create a SimpleConnection object from a GuacamoleConfiguration\nand get an ID and place it on the tree, returning the new\nconnection identifier value.",
    "HebCup": "Create a SimpleConnection object from a GuacamoleConfiguration and get an ID and place it on the tree , returning the new connection identifier value."
}
{
    "Origin": "{@code EPOCH_MONTH} -",
    "Reference": "{@code PROLEPTIC_MONTH} -",
    "HebCup": "{@code PROLEPTIC_MONTH} -"
}
{
    "Origin": "This defines the bond group that the discount factors are for.",
    "Reference": "This defines the group that the discount factors are for.",
    "HebCup": "This defines the Repo Group that the discount factors are for."
}
{
    "Origin": "The {@link Flux} will\ncontain one or several feed response of the obtained users.",
    "Reference": "The {@link CosmosContinuablePagedFlux} will\ncontain one or several feed response of the obtained users.",
    "HebCup": "The {@link Flux} will contain one or several Cosmos Continuable Paged Flux of the obtained users."
}
{
    "Origin": "Sets the value of the 'InMemory' field.",
    "Reference": "Sets the value of the 'inMemory' field.",
    "HebCup": "Sets the value of the 'inMemory' field."
}
{
    "Origin": "Get the instance of Smack interoperation layer implementation class",
    "Reference": "Get the instance of Smack interoperability layer implementation class",
    "HebCup": "Get the instance of Smack interoperation layer implementation class"
}
{
    "Origin": "Set the {@code HttpClient} used for\n{@linkplain #createAsyncRequest(URI, HttpMethod) asynchronous execution}.",
    "Reference": "Set the {@code CloseableHttpAsyncClient} used for\n{@linkplain #createAsyncRequest(URI, HttpMethod) asynchronous execution}.",
    "HebCup": "Set the {@code HttpClient} used for {@linkplain #createasyncRequest(URI, HttpMethod) asynchronous execution}."
}
{
    "Origin": "Handle Coin IQ.",
    "Reference": "CallPeer.",
    "HebCup": "Handle Coin IQ."
}
{
    "Origin": "This needs to\nbe done in any case, whetere FutureChannelCreator return failed or\nsuccess!",
    "Reference": "This needs to\nbe done in any case, whether FutureChannelCreator returns failed or\nsuccess!",
    "HebCup": "This needs to\nbe done in any case, whetere FutureChannelCreator return failed or\nsuccess!"
}
{
    "Origin": "Returns an immutable set containing six elements.",
    "Reference": "Returns an unmodifiable set containing six elements.",
    "HebCup": "Returns an Unmodifiable set containing six elements."
}
{
    "Origin": "NOTE: This operation is eventually consistent.",
    "Reference": "This operation is eventually consistent.",
    "HebCup": "NOTE: This operation is eventually consistent."
}
{
    "Origin": "You can make this request at any time\nduring an in-progress multipart upload before you complete the upload\n(see CompleteMultipartUpload.",
    "Reference": "You can make this request at any time during\nan in-progress multipart upload before you complete the upload (see",
    "HebCup": "You can make this request at any time\nduring an in-progress multipart upload before you complete the upload\n(see CompleteMultipartUpload."
}
{
    "Origin": "Set the non-stroking color in the DeviceRGB color space.",
    "Reference": "Set the non-stroking color in the DeviceCMYK color space.",
    "HebCup": "Set the non-stroking color in the DeviceRGB color space."
}
{
    "Origin": "Returns the Java type corresponding to the return type of the given\nmethod descriptor.",
    "Reference": "Returns the {@link Type} corresponding to the return type of the given method descriptor.",
    "HebCup": "Returns the Java type corresponding to the while type of the given method descriptor."
}
{
    "Origin": "Creates new {@link DayOfMonth} in UTC.",
    "Reference": "Creates new {@link DayOfMonth}.",
    "HebCup": "Creates new {@link DayOfMonth} in UTC."
}
{
    "Origin": "Maven coordinates: org.apache.camel:camel-spark",
    "Reference": "Maven coordinates: org.apache.camel:camel-spark-rest",
    "HebCup": "Maven coordinates: org.apache.camel:camel-spark-rest"
}
{
    "Origin": "Removing fields from a POJO as operator state should require a state migration.",
    "Reference": "Removing fields from a POJO as operator state should succeed.",
    "HebCup": "Removing fields from a POJO as operator state should require a state migration."
}
{
    "Origin": "Send request to the server with early blockwise negociation through block2 option.",
    "Reference": "Send request to the server with early blockwise negotiation through block2 option.",
    "HebCup": "Send request to the server with early blockwise Negotiation through block2 option."
}
{
    "Origin": "Returns an immutable {@link Map} that is backed by the given {@link CConfiguration}.",
    "Reference": "Returns a {@link Map} that is backed by the given {@link CConfiguration}.",
    "HebCup": "Returns an immutable {@link Map} that is backed by the given {@link >Configuration}."
}
{
    "Origin": "NOTE: You cannot authorize ingress from an EC2 security group\nin one region to an Amazon RDS DB instance in another.",
    "Reference": "You cannot authorize ingress from an EC2 security group in one region to\nan Amazon RDS DB instance in another.",
    "HebCup": "NOTE: You cannot authorize ingress from an EC2 security group\nin one region to an Amazon RDS DB instance in another."
}
{
    "Origin": "This method maps a {@link ServerErrorCode}\nto a {@link RouterErrorCode}, and then makes corresponding state update.",
    "Reference": "This method maps a {@link ServerErrorCode}\nto a {@link RouterErrorCode}",
    "HebCup": "This method maps a {@link ServerErrorCode} to a {@link RouterErrorCode}, and then makes corresponding state return."
}
{
    "Origin": "Loop over the {@link SecretProperties secret}\nand call {@link SecretClient#getSecret(SecretProperties baseSecret)} .",
    "Reference": "Loop over the {@link SecretProperties secret}\nand call {@link SecretClient#getSecret(String, String)}.",
    "HebCup": "Loop over the {@link SecretProperties PropertiesOfSecrets} and call {@link SecretClient#getSecret(SecretProperties baseSecret)} ."
}
{
    "Origin": "Tries to receive up to max_num_msgs_to_receive messages in one go",
    "Reference": "Tries to receive up to max_msgs_to_receive messages in one go",
    "HebCup": "Tries to receive up to max_msgs_to_receive messages in one go"
}
{
    "Origin": "Adds a new tag for the specified {@link NamespacedEntityId}.",
    "Reference": "Adds a new tag for the specified {@link MetadataEntity}.",
    "HebCup": "Adds a new tag for the specified {@link MetadataEntity}."
}
{
    "Origin": "After that, this method does not set the lease as active, but instead reserves that IP\nfor only the MAC provided.",
    "Reference": "After that, this method does not set the lease as leased, but instead reserves that IP\nfor only the MAC provided.",
    "HebCup": "After that, this method does not set the lease as active, but instead reserves that IP\nfor only the MAC provided."
}
{
    "Origin": "Returns the built-in service account's credential for the application if running on",
    "Reference": "This is the built-in service account if running on Google",
    "HebCup": "Returns the built-in service account's credential for the application if running on"
}
{
    "Origin": "Fetch the given user's list of starred artists",
    "Reference": "Fetch the given user's list of loved artists",
    "HebCup": "Fetch the given user's list of Loved Artists"
}
{
    "Origin": "Action triggered when the execution of this Node has finished.",
    "Reference": "Callback invoked when the execution of this node has finished.",
    "HebCup": "Action triggered when the execution of this Node has finished."
}
{
    "Origin": "Receives a PendingEvent and add it as a RecordedEvent in the EventStorage if it is an event type that should be\nrecorded.",
    "Reference": "Receives a PendingEvent and add it as a RecordedEvent in the RecordedEventStore if it is an event type that should be\nrecorded.",
    "HebCup": "Receives a PendingEvent and add it as a RecordedEvent in the RecordedEventStore if it is an event type that should be recorded."
}
{
    "Origin": "FtBasic can consume twice the input stream.",
    "Reference": "FtBasic can consume twice the input stream in case of a RsText.",
    "HebCup": "FtBasic can consume twice the Input Stream With Rs Text."
}
{
    "Origin": "Kept for compatibility with NativeScript.",
    "Reference": "Kept for source-level compatibility with NativeScript.",
    "HebCup": "Kept for compatibility with NativeScript."
}
{
    "Origin": "For each array in the intersection, get the offsets for this and other.",
    "Reference": "For each sequence in the intersection, get the offsets for this and other.",
    "HebCup": "For each sequence in the intersection , get the offsets for this and other."
}
{
    "Origin": "Removes virtual port.",
    "Reference": "Removes virtual port related flow rules.",
    "HebCup": "Removes virtual port."
}
{
    "Origin": "{@codesnippet com.azure.data.appconfiguration.configurationasyncclient.setSettingWithResponse#ConfigurationSetting-boolean}",
    "Reference": "{@codesnippet com.azure.data.appconfiguration.configurationasyncclient.setConfigurationSettingWithResponse#ConfigurationSetting-boolean}",
    "HebCup": "{@codesnippet com.azure.data.appconfiguration.configurationasyncclient.setConfigurationSettingWithResponse#ConfigurationSetting-boolean}"
}
{
    "Origin": "Method is used for appending the given Fields instance to this instance, into a new Fields instance.",
    "Reference": "Method is used for appending the given Fields instance to this instance, into a new Fields instance suitable\nfor use as a field declaration.",
    "HebCup": "Method is used for appending the given Fields instance to this instance, into a new Fields instance."
}
{
    "Origin": "Creates a ModuleReference to an exploded module.",
    "Reference": "Creates a ModuleReference to a possibly-patched exploded module.",
    "HebCup": "Creates a ModuleReference to an exploded module."
}
{
    "Origin": "Find RAS_Node for specified node id.",
    "Reference": "Find RASNode for specified node id.",
    "HebCup": "Find RasNode for specified node id."
}
{
    "Origin": "Create or obtain a {@link PreparedStatement} from the pool.",
    "Reference": "Creates or obtains a {@link PreparedStatement} from the pool.",
    "HebCup": "Create or obtain a {@link PreparedStatement} from the pool."
}
{
    "Origin": "Get the names of any classes referenced in the type descriptors of annotation parameters.",
    "Reference": "Find the names of any classes referenced in the type descriptors of annotation parameters.",
    "HebCup": "find the names of any classes referenced in the type descriptors of annotation parameters."
}
{
    "Origin": "However, it is strongly recommended that you set up an Amazon SNS\ntopic and specify it in your initiate job request so that Amazon",
    "Reference": "However, it\nis strongly recommended that you set up an Amazon SNS topic and specify\nit in your initiate job request so that Amazon Glacier can notify the\ntopic after it completes the job.",
    "HebCup": "However, it is strongly recommended that you set up an Amazon SNS\ntopic and specify it in your initiate job request so that Amazon"
}
{
    "Origin": "Setter for {@link #exposeHeaders}",
    "Reference": "Setter for {@link #exposedHeaders}",
    "HebCup": "Setter for {@link#exposedHeaders}"
}
{
    "Origin": "Set Catch Weight Menge in Preiseinheit.",
    "Reference": "Set Abgerechnet.",
    "HebCup": "Set Catch Weight Menge in Preiseinheit."
}
{
    "Origin": "If such value node exists {@code this} is returned\n to allow chaining; otherwise {@link IllegalArgumentException} is thrown.",
    "Reference": "If such value node exists {@code this} is returned\n to allow chaining;\n otherwise exception is thrown.",
    "HebCup": "If such value node exists {@code this} is returned\n to allow chaining; otherwise {@link IllegalArgumentException} is thrown."
}
{
    "Origin": "If no class with the given name exists, null is returned",
    "Reference": "If no class with the\ngiven name exists, null is returned unless phantom refs are allowed.",
    "HebCup": "If no class with the given name exists, null is returned"
}
{
    "Origin": "Note that new constant types may be added in\nfuture versions of the Java Virtual Machine.",
    "Reference": "Note that new constant types may be added in future versions of the",
    "HebCup": "Note that new constant types may be added in\nfuture versions of the Java Virtual Machine."
}
{
    "Origin": "{@codesnippet com.azure.data.appconfiguration.configurationasyncclient.addSetting#string-string-string}",
    "Reference": "{@codesnippet com.azure.data.appconfiguration.configurationasyncclient.addConfigurationSetting#string-string-string}",
    "HebCup": "{@codesnippet com.azure.data.appconfiguration.configurationasyncclient.addConfigurationSetting#string-string-string}"
}
{
    "Origin": "Setter for {@link #allowOrigins}",
    "Reference": "Setter for {@link #allowedOrigins}",
    "HebCup": "Setter for {@link#allowedOrigins}"
}
{
    "Origin": "Test ModuleModule with a JAR file containing a .class file in the top\nlevel directory.",
    "Reference": "Test ModuleFinder with a JAR file containing a .class file in the top\nlevel directory.",
    "HebCup": "Test ModuleModule with a JAR file containing a .class file in the top\nlevel directory."
}
{
    "Origin": "Iterate over all\nthe {@link KeyProperties key} by page and call {@link KeyClient#getKey(KeyProperties key properties)}.",
    "Reference": "Iterate over all\nthe {@link KeyProperties key} by page and call {@link KeyClient#getKey(String, String)}.",
    "HebCup": "Iterate over all the {@link KeyProperties PropertiesOfKey} by page and call {@link KeyClient#getKey (KeyProperties PropertiesOfKey properties)}."
}
{
    "Origin": "Returns the (unbiased) kurtosis excess of all the values within a\n{@link Dataset}",
    "Reference": "Returns the (biased) estimate of the sample standard deviation of the\nvalues within a {@link Dataset}.",
    "HebCup": "Returns the (unbiased) population Std of all the values within a {@link Dataset}"
}
{
    "Origin": "Main method to invoke this demo about how to recognize entities of a text input.",
    "Reference": "Main method to invoke this demo about how to recognize the entities of an input text.",
    "HebCup": "Main method to invoke this demo about how to recognize entity of a text input."
}
{
    "Origin": "Submits a notification for drawing.",
    "Reference": "Submits a bubble notification for drawing.",
    "HebCup": "Submits a BubbleNotification for drawing."
}
{
    "Origin": "Creates single folders.",
    "Reference": "Creates single directory.",
    "HebCup": "Creates single folders."
}
{
    "Origin": "Makes the recent (sort by create time) articles with the specified fetch size.",
    "Reference": "Makes the recent (sort by create time desc) articles with the specified fetch size.",
    "HebCup": "Makes the RecentDefault (sort by create time) articles with the specified fetch size."
}
{
    "Origin": "Check if CertConstraintParameters has a trusted match, if it does\ncall next() for any following constraints.",
    "Reference": "Check if ConstraintsParameters has a trusted match, if it does\ncall next() for any following constraints.",
    "HebCup": "Check if ConstraintsParameters has a trusted match , if it does call next () for any following constraints."
}
{
    "Origin": "Returns an instance of a GLSL data type for the given {@link DataType}.",
    "Reference": "Returns an instance of a GLSL data type for the given {@link ShaderVariable}.",
    "HebCup": "Returns an instance of a GLSL data type for the given {@link ShaderVariable}."
}
{
    "Origin": "Handles: DELETE /clusters/{clusterName}/servicegroups/{serviceGroupName}/services/{serviceDisplayName}",
    "Reference": "Handles: DELETE /clusters/{clusterName}/servicegroups/{serviceGroupName}/services/{serviceName}",
    "HebCup": "Handles: DELETE /clusters/{clusterName}/servicegroups/{serviceGroupName}/services/{serviceName}"
}
{
    "Origin": "The {@link EcKeyCreateOptions} parameter is required.",
    "Reference": "The {@link CreateEcKeyOptions} parameter is required.",
    "HebCup": "The {@link CreateEcKeyOptions} parameter is required."
}
{
    "Origin": "Skip until the given string is matched in the stream, but ignoring\nchars initially escaped by a '\\'.",
    "Reference": "Skip until the given string is matched in the stream, but ignoring\nchars initially escaped by a '\\' and any EL expressions.",
    "HebCup": "Skip until the given string is matched in the stream, but ignoring\nchars initially escaped by a '\\'."
}
{
    "Origin": "Returns null.",
    "Reference": "Returns empty string.",
    "HebCup": "Returns \"."
}
{
    "Origin": "The list of arrays may not\nbe empty.",
    "Reference": "The list of sequences\nmay not be empty.",
    "HebCup": "The list of sequences may not be empty."
}
{
    "Origin": "Get the Biome for a specified id.",
    "Reference": "Get the GlowBiome for a specified id.",
    "HebCup": "Get the GlowBiome for a specified id."
}
{
    "Origin": "Return a string suitable for sending in a \"Cookie\" header\nas defined in RFC 2109 for backward compatibility with cookie version 0",
    "Reference": "Return a string suitable for sending in a {@code \"Cookie\"} header\nas defined in RFC 2109 for backward compatibility with cookie version 0",
    "HebCup": "Return a string suitable for sending in a \"Cookie\" header\nas defined in RFC 2109 for backward compatibility with cookie version 0"
}
{
    "Origin": "Use the\n{@linkplain #addDelivery(Delivery, TimeWindow)} instead.",
    "Reference": "Use the\n{@linkplain #addDelivery(DeliveryJob, TimeWindow)} instead.",
    "HebCup": "Use the {@linkplain #addDeliveryJob(DeliveryJob, TimeWindow)} instead."
}
{
    "Origin": "Run an MRTask Job to add up sums in @_sums",
    "Reference": "Run an MRTask Job to add up sums.",
    "HebCup": "Run an MRTask Job to add up sums in @_sums"
}
{
    "Origin": "Return the number of tasks that are pending for processing.",
    "Reference": "Return the number of tasks that are pending for processing (excluding the scheduled tasks).",
    "HebCup": "Return the number of tasks that are pending for processing."
}
{
    "Origin": "Returns the clusters that have been created during processing or \nif none were created.",
    "Reference": "Returns the clusters that have been created during processing or an empty list\nif no documents were present.",
    "HebCup": "List the clusters that have been created during processing or if none were created."
}
{
    "Origin": "Set Externer Kunde Nr..",
    "Reference": "Set Memo_Delivery.",
    "HebCup": "Set Externer Kunde Nr.."
}
{
    "Origin": "Heap.",
    "Reference": "Update heap.",
    "HebCup": "Heap."
}
{
    "Origin": "Sets the cluster name.",
    "Reference": "Sets the cluster identifier.",
    "HebCup": "Sets the cluster Id."
}
{
    "Origin": "Access Control Using AWS Identity and Access Management (IAM) \n.",
    "Reference": "For more information, see Access Control Using AWS Identity and Access Management (IAM).",
    "HebCup": "Access Control Using AWS Identity and Access Management (IAM) \n."
}
{
    "Origin": "Set Import Account.",
    "Reference": "Set Import - Kontendefinition.",
    "HebCup": "Set Import Account."
}
{
    "Origin": "Returns the (biased) skew of all the values within a {@link PointSet}\nregion of a {@link Dataset}",
    "Reference": "Returns the (biased) estimate of the sample variance of the values within\na {@link PointSet} region of a {@link Dataset}.",
    "HebCup": "Returns the (biased) population of all the values within a {@link PointSet} region of a {@link Dataset}"
}
{
    "Origin": "Make sure all resolved targets are instances of {@link NativeLinkable}.",
    "Reference": "Make sure all resolved targets are instances of {@link NativeLinkableGroup}.",
    "HebCup": "Make sure all resolved targets are instances of {@link NativeLinkableGroup}."
}
{
    "Origin": "The detailed format of the region ID depends on the group.",
    "Reference": "The detailed format of the region ID depends on the group supplying the data.",
    "HebCup": "The detailed format ZoneRegion.of the region ID depends on the group."
}
{
    "Origin": "Test the NGramFilterFactory",
    "Reference": "Test the NGramFilterFactory with old defaults",
    "HebCup": "Test the NGramFilterFactory"
}
{
    "Origin": "Sends a request to write a list of addresses.",
    "Reference": "Sends a request to write a list of entries.",
    "HebCup": "Sends a request to write a list of addresses."
}
{
    "Origin": "set consumers to this Carrier.",
    "Reference": "set consumeDriver to this Carrier.",
    "HebCup": "set drivers to this Carrier."
}
{
    "Origin": "Creates index in elastic search given mapping.",
    "Reference": "Creates index in elastic search given a mapping.",
    "HebCup": "Creates index in elastic search given mapping."
}
{
    "Origin": "Create an instance of {@link JAXBElement }{@code <}{@link CTMarkupRange }{@code >}}",
    "Reference": "Create an instance of {@link JAXBElement }{@code <}{@link CTMoveFromRangeEnd }{@code >}}",
    "HebCup": "Create an instance of {@link JAXBElement} {@code <} {@link CTMoveFromRangeEnd} {@code >}}"
}
{
    "Origin": "Obtains an instance from the specified unique name.",
    "Reference": "Obtains an instance from the specified name.",
    "HebCup": "Obtains an instance from the specified name."
}
{
    "Origin": "Returns the query string.",
    "Reference": "Returns the Ickle query string.",
    "HebCup": "Returns the query string."
}
{
    "Origin": "Returns the program opcodes as a string, for example \"[1234] DUP HASH160\"",
    "Reference": "Returns the program opcodes as a string, for example \"[1234] DUP HASH160\", or \"\".",
    "HebCup": "Returns the program opcodes as a string, for example \"[1234] DUP HASH160\""
}
{
    "Origin": "when its\nposition becomes known.",
    "Reference": "when its bytecode offset becomes known.",
    "HebCup": "when its bytecodeOffset becomes known."
}
{
    "Origin": "Set Application Registration.",
    "Reference": "Set File Handler.",
    "HebCup": "Set Application Handler."
}
{
    "Origin": "The default value of this option is 30000 which corresponds\nto 30 seconds.",
    "Reference": "The default value of this option is to 30 seconds.",
    "HebCup": "The default value of this option is 30000 which corresponds\nto 30 seconds."
}
{
    "Origin": "Executes the console script.",
    "Reference": "Executes the webserver script.",
    "HebCup": "Executes the WEBSERVER script."
}
{
    "Origin": "The supported fields are Year, DayOfYear and MillisOfDay.",
    "Reference": "The supported fields are Year, MonthOfDay, DayOfMonth and MillisOfDay.",
    "HebCup": "The supported fields are Year , monthOfYear and MillisOfDay."
}
{
    "Origin": "Enables or disables this action based on the currently active folder's\nhas a parent, this action will be enabled, if not it will be disabled.",
    "Reference": "Enables or disables this action based on the currently active folder's\nhas a parent and current tab is not locked, this action will be enabled,\nif not it will be disabled.",
    "HebCup": "Enables or disables this action based on the currently active folder's\nhas a parent, this action will be enabled, if not it will be disabled."
}
{
    "Origin": "The {@link RsaKeyCreateOptions} is required.",
    "Reference": "The {@link CreateRsaKeyOptions} is required.",
    "HebCup": "The {@link CreateRsaKeyOptions} is required."
}
{
    "Origin": "Initialized adjacency list for graph with n nodes.",
    "Reference": "Initialized adjacency list for graph with numberOfNodes nodes.",
    "HebCup": "Initialized adjacency list for graph with numberOfNodes nodes."
}
{
    "Origin": "Calls {@link #setQuery(Query, QueryListenOptions, Class)} with the default {@link",
    "Reference": "Calls {@link #setQuery(Query, MetadataChanges, Class)} with metadata changes excluded.",
    "HebCup": "Calls {@link #setQueryEXCLUDEQuery, QueryListenOptions, Class)} with the default {@link"
}
{
    "Origin": "Checks whether this option has deprecated keys.",
    "Reference": "Checks whether this option has fallback keys.",
    "HebCup": "Checks whether this option has Fallback Keys."
}
{
    "Origin": "Register a cleanup for the current raw fd.",
    "Reference": "Register a cleanup for the current handle.",
    "HebCup": "Register a cleanup for the current raw fd."
}
{
    "Origin": "Computes the median for each pixel across all bands in the {@link Planar} image.",
    "Reference": "Computes the median for each pixel across selected bands in the {@link Planar} image.",
    "HebCup": "Computes the median for each pixel across all bands in the {@link Planar} image."
}
{
    "Origin": "Obtains an immutable pair of two objects inferring the generic types.",
    "Reference": "Creates an immutable pair of two objects inferring the generic types.",
    "HebCup": "Obtains an immutable pair of two objects inferring the generic types."
}
{
    "Origin": "Checks the dirty status of the 'reprUrl' field.",
    "Reference": "Checks the dirty status of the 'headers' field.",
    "HebCup": "Checks the dirty status of the 'Headers' field."
}
{
    "Origin": "Serializes the contextNode into the OutputStream, but\nsuppresses all Exceptions.",
    "Reference": "Serializes the {@code contextNode} into the OutputStream, but\nsuppresses all Exceptions.",
    "HebCup": "Serializes the contextNode into the OutputStream, but\nsuppresses all Exceptions."
}
{
    "Origin": "Test method for {@link org.infinispan.spring.provider.SpringRemoteCacheManager#start()}.",
    "Reference": "Test method for {@link org.infinispan.spring.remote.provider.SpringRemoteCacheManager#start()}.",
    "HebCup": "Test method for {@link org.infinispan.spring.provider.SpringRemoteCacheManager#start()}."
}
{
    "Origin": "Delete user keypair\n### Functional Description:   Delete the user's keypair.",
    "Reference": "Delete user's key pair\n### Functional Description:   Delete the user's key pair.",
    "HebCup": "Delete user keypair\n### Functional Description:   Delete the user's keypair."
}
{
    "Origin": "Record an {@link ExecutionEvent} for a dynamically registered container\nor test.",
    "Reference": "Record an {@link Event} for a dynamically registered container\nor test.",
    "HebCup": "Record an {@link Event} for a dynamically registered container or test."
}
{
    "Origin": "Obtain a {@link RemoteRepository} for a data set managed by the remote\nservice.",
    "Reference": "Obtain a flyweight {@link RemoteRepository} for a data set managed by the remote\nservice.",
    "HebCup": "Obtain a {@link RemoteRepository} for a data set managed by the remote\nservice."
}
{
    "Origin": "Returns a {@link Single} which contains an instance of {@link RxBleDevice}.",
    "Reference": "Returns an instance of {@link RxBleDevice}.",
    "HebCup": "Returns a {@link Single} which contains an instance of {@link RxBleDevice}."
}
{
    "Origin": "Invoked by selection operations to process the cancelled-key set",
    "Reference": "Invoked by selection operations to process the cancelled keys",
    "HebCup": "Invoked by selection operations to process the cancelled-key set"
}
{
    "Origin": "Returns the gadget with the primary key or throws a {@link com.liferay.opensocial.NoSuchGadgetException} if it could not be found.",
    "Reference": "Returns the gadget with the primary key or throws a {@link NoSuchGadgetException} if it could not be found.",
    "HebCup": "Returns the gadget with the primary key or throws a {@link com.liferay.opensocial.NoSuchGadgetException} if it could not be found."
}
{
    "Origin": "Returns {@link RDFFormat#NTRIPLES}.",
    "Reference": "Returns {@link RDFFormat#NTRIPLES_RDR}.",
    "HebCup": "Returns {@link ServiceProviderHook#NTRIPLES}."
}
{
    "Origin": "Returns all the sync d l objects where parentFolderId = ?.",
    "Reference": "Returns all the sync d l objects where modifiedTime > ?",
    "HebCup": "Returns all the sync d l objects where repositoryId = ?."
}
{
    "Origin": "Override to control whether {@link CamelContext} should be setup per test\nor per class.",
    "Reference": "Tells whether {@link CamelContext} should be setup per test or per class.",
    "HebCup": "Override to control whether {@link CamelContext} should be setup per test\nor per class."
}
{
    "Origin": "Sends a request and returns immediately without getting a response.",
    "Reference": "Sends a request and waits until the request is flushed to network.",
    "HebCup": "Sends a request and returns immediately And getting a response."
}
{
    "Origin": "Returns the {@link Service}.",
    "Reference": "Returns the {@link HttpService}.",
    "HebCup": "Returns the {@link Service}."
}
{
    "Origin": "If {@code keys = \"*\"}, settings with any key are returned.",
    "Reference": "If {@code keyFilter = \"*\"}, settings with any key are returned.",
    "HebCup": "If {@code KeyFilter = ``*``} , settings with any key are returned."
}
{
    "Origin": "Compare the contents of two files to determine if they are equal or\nnot.",
    "Reference": "Compare the contents of two {@link File}s to determine if they are equal or\nnot.",
    "HebCup": "Compare the contents of two getFile to determine if they are equal or not."
}
{
    "Origin": "Returns the next {@link Query} but does not update the internal {@link Query} iterator.",
    "Reference": "Returns the next {@link PlaylistEntry} but does not update the internal {@link PlaylistEntry}\niterator.",
    "HebCup": "Returns the next {@link PlaylistEntry} but does not update the internal {@link PlaylistEntry} iterator."
}
{
    "Origin": "Returns whether or not an empty oauth token should be used for oauth1.",
    "Reference": "Returns whether or not add an empty oauth token for oauth1 while generating Base string.",
    "HebCup": "Returns whether or not an empty TokenTo token should be used for oauth1."
}
{
    "Origin": "Convert Tinkerpop's comparison operators to Titan's",
    "Reference": "Convert Tinkerpop's comparison operators to JanusGraph's",
    "HebCup": "Convert Tinkerpop's comparison operators to JanusGraph's"
}
{
    "Origin": "Optionally replace the outer most component with a new component.",
    "Reference": "Optionally replace the head component with a new component.",
    "HebCup": "Optionally replace the head most component with a new component."
}
{
    "Origin": "return the child of a node mapping\nto the input childname",
    "Reference": "Return the child of a node mapping to the input child name.",
    "HebCup": "return the child of a node mapping\nto the input childname"
}
{
    "Origin": "Returns a container with the service type corresponding to the name of\na services configuration file.",
    "Reference": "Returns the service type corresponding to the name of a services\nconfiguration file if it is a valid Java identifier.",
    "HebCup": "Returns a container with the service type corresponding to the name of\na services configuration file."
}
{
    "Origin": "Returns an immutable list containing an arbitrary number of elements.",
    "Reference": "Returns an unmodifiable list containing an arbitrary number of elements.",
    "HebCup": "Returns an Unmodifiable list containing an arbitrary number of elements."
}
{
    "Origin": "Return a {@link InetSocketAddress} for the remote socket.",
    "Reference": "Return a {@link SocketAddress} for the remote socket.",
    "HebCup": "Return a {@link SocketAddress} for the remote socket."
}
{
    "Origin": "returns the my site fragment from the sites tab",
    "Reference": "returns the my site fragment from the sites page",
    "HebCup": "returns the my site fragment from the sites Nav"
}
{
    "Origin": "Returns a string describing module export.",
    "Reference": "Returns a string describing module opens.",
    "HebCup": "Returns a string describing module export."
}
{
    "Origin": "Map package name to the new name.",
    "Reference": "Maps a package name to its new name.",
    "HebCup": "Map package name to the new name."
}
{
    "Origin": "Get Is Reversed with original Accounting.",
    "Reference": "Get Document Type for Payment.",
    "HebCup": "Get get C _ Doc Accounting."
}
{
    "Origin": "The {@link RsaKeyCreateOptions#getKeyType() keyType} indicates the type of key to create.",
    "Reference": "The {@link CreateRsaKeyOptions#getKeyType() keyType} indicates the type of key to create.",
    "HebCup": "The {@link CreateRsaKeyOptions#getKeyType () keyType} indicates the type of key to create."
}
{
    "Origin": "See {@link Args#getBlockingExecutor}.",
    "Reference": "See {@link Args#getOffloadExecutor}.",
    "HebCup": "See {@link Args#getOffloadExecutor}."
}
{
    "Origin": "Add a duration with the given time unit.",
    "Reference": "Subtract an amount with the given time unit.",
    "HebCup": "Add a amount with the given time unit."
}
{
    "Origin": "Also noteworthy is that no clean up is performed if an error\noccurs in the midst of a transfer: files that have been copied (even partially) are left in the destination.",
    "Reference": "No clean up is performed if an error occurs in the midst of a transfer: files that have been copied\n(even partially) are left in the destination.",
    "HebCup": "Also noteworthy is that no clean up is performed if an error occurs in the midst of a transfer: IO that have been copied (even partially) are left in the destination."
}
{
    "Origin": "This method wraps raw in the character provided by {@link #getNameEscape()}.",
    "Reference": "This method escapes raw using method {@link #escapeName(String)}.",
    "HebCup": "This method wraps raw in the character provided by {@link#getNameEscape (escape}."
}
{
    "Origin": "Use pipelined hash join for SERVICE node.",
    "Reference": "Use pipelined hash join for inlined VALUES node.",
    "HebCup": "Use pipelined hash join for SERVICE node."
}
{
    "Origin": "Issue a request with the given {@link Method} to the provided resource URI.",
    "Reference": "Issue a request with the given {@link HttpMethod} to the provided resource URI.",
    "HebCup": "Issue a request with the given {@link HttpMethod} to the provided resource URI."
}
{
    "Origin": "Authenticate by session.",
    "Reference": "Authenticate by session and ignite security.",
    "HebCup": "Authenticate by session."
}
{
    "Origin": "Create an unnamed, parented {@link ServiceLocator}.",
    "Reference": "Create a {@link InstanceManager}.",
    "HebCup": "Create an unnamed , parented {@link InstanceManager}."
}
{
    "Origin": "and repositoryId = ?.",
    "Reference": "and parentFolderId = ?.",
    "HebCup": "and parentFolderId = ?."
}
{
    "Origin": "create new Mbean and when set from ClassLoader Objectname",
    "Reference": "Create new Mbean and when set from ClassLoader Objectname.",
    "HebCup": "create new Mbean and when set from ClassLoader Objectname"
}
{
    "Origin": "The detailed format of the region ID depends on the group.",
    "Reference": "The detailed format of the region ID depends on the group supplying the data.",
    "HebCup": "The detailed format ZoneRegion.of the region ID depends on the group."
}
{
    "Origin": "reduce a structure to a single-atom representation (e.g.",
    "Reference": "Reduce a structure to a single-atom representation (e.g.",
    "HebCup": "reduce a structure to a single-atom representation (e.g."
}
{
    "Origin": "Go through the list of available clients\nin the queue and call {@link HThriftClient#close()} on each.",
    "Reference": "Go through the list of available clients\nin the queue and call {@link HClient#close()} on each.",
    "HebCup": "Go through the list of available clients in the queue and call {@link HClient#close ()} on each."
}
{
    "Origin": "Warn the events stream that there was a GCM status update.",
    "Reference": "Warn the events stream that there was a push status update.",
    "HebCup": "Warn the events stream that there was a Push status update."
}
{
    "Origin": "Get thread pool used for multi-project searches.",
    "Reference": "Gets the thread pool used for multi-project searches.",
    "HebCup": "Get thread pool used for multi-project searches."
}
{
    "Origin": "Assigns a native mirror object to the given RObject object.",
    "Reference": "Assigns a native mirror object to the given RBaseObject object.",
    "HebCup": "Assigns a native mirror object to the given RBaseObject object."
}
{
    "Origin": "Returns the adapter, which allows to inflate the child views of tabs.",
    "Reference": "Returns the adapter, which allows to inflate the views, which are associated with tabs.",
    "HebCup": "Returns the adapter , which allows to inflate the Content views of tabs."
}
{
    "Origin": "For example, consider a zone with a cutover\nfrom 01:00 to 01:59:",
    "Reference": "For example, consider a zone with a gap from 01:00 to 01:59:",
    "HebCup": "For example, consider a zone with a cutover\nfrom 01:00 to 01:59:"
}
{
    "Origin": "{@link Keys#SKIN_MOISTURE}",
    "Reference": "{@link Keys#DOLPHIN_SKIN_MOISTURE}",
    "HebCup": "{@link Keys#DOLPHIN_SKIN_MOISTURE}"
}
{
    "Origin": "GETTER: Is this table a stream type?",
    "Reference": "GETTER: Is this table a Stream table?",
    "HebCup": "GETTER: Is this table a Isstream type?"
}
{
    "Origin": "Get the graph node at the file location ptr.",
    "Reference": "Get the graph node.",
    "HebCup": "Get the graph node at the file location ptr."
}
{
    "Origin": "Calling this operation sends a handshake to\nevery account in the organization.",
    "Reference": "Calling this\noperation sends a handshake to every invited account in the organization.",
    "HebCup": "Calling this operation sends a handshake to\nevery account in the organization."
}
{
    "Origin": "Returns the current widget that has focus.",
    "Reference": "Returns the focused widget.",
    "HebCup": "Returns the current widgets that has focus."
}
{
    "Origin": "Builds a {@link DiffList} based on the differences appended to this\nbuilder.",
    "Reference": "Builds a {@link DiffResult} based on the differences appended to this\nbuilder.",
    "HebCup": "Builds a {@link DiffResult} based on the differences appended to this builder."
}
{
    "Origin": "Removes elements from a collection, as in {@code SET l-=[1,2,3]}.",
    "Reference": "Removes elements from a collection, as in {@code SET l=l-[1,2,3]}.",
    "HebCup": "Removes elements from a collection, as in {@code SET l-=[1,2,3]}."
}
{
    "Origin": "Sets the state of the loaded and prints some debug information",
    "Reference": "Sets the error message and print debug information",
    "HebCup": "Sets the state of the loaded and prints some debug information"
}
{
    "Origin": "Configuring Availability Options \nin the Amazon CloudSearch Developer Guide .",
    "Reference": "CloudSearch Developer Guide.",
    "HebCup": "Configuring Availability Options \nin the Amazon CloudSearch Developer Guide ."
}
{
    "Origin": "Get cache affinity awareness group which is compatible with the mapping.",
    "Reference": "Get cache Partition Awareness group which is compatible with the mapping.",
    "HebCup": "Get Cache Partition Awareness Group which is compatible with the mapping."
}
{
    "Origin": "Tests the behaviour of the various section related methods.",
    "Reference": "Tests various section related method.",
    "HebCup": "Tests the behaviour of the various section.addSection related methods."
}
{
    "Origin": "Test of npara method, of class FDistribution.",
    "Reference": "Test of length method, of class FDistribution.",
    "HebCup": "Test of Length method , of class FDistribution."
}
{
    "Origin": "whether it gives you labeled or unlabeled bracketings depends on the value of the \nparameter",
    "Reference": "whether it gives you labeled or unlabeled bracketings depends on the value of the {@code labelConstituents}\nparameter",
    "HebCup": "whether it gives you labeled or unlabeled bracketings depends on the value of the \nparameter"
}
{
    "Origin": "Tests that a put operation blocks if the queue is full.",
    "Reference": "Tests that a put operation fails if the queue is full.",
    "HebCup": "Tests that a Full operation blocks if the queue is full."
}
{
    "Origin": "Returns true if the {@code typeClass} has already been registered/mapped.",
    "Reference": "Returns true if the {@code typeClass} was not lazily created.",
    "HebCup": "Returns true if the {@code typeClass} has already been registered/mapped."
}
{
    "Origin": "1.\n  mock.foo();\n  verify(mock, after(1000)).foo();\n  waits 1 second and succeeds",
    "Reference": "1.\n  mock.foo();\n  verify(mock, after(1000)).foo();\n  waits 1000 millis and succeeds",
    "HebCup": "1. mock.foo (); verify (mock , new (1000)).foo (); waits 1 second and succeeds"
}
{
    "Origin": "NOTE:This operation is eventually consistent.",
    "Reference": "This operation is eventually consistent.",
    "HebCup": "NOTE:This operation is eventually consistent."
}
{
    "Origin": "Copied from org.mortbay.log.StdErrLog.",
    "Reference": "Copied from org.eclipse.log.StdErrLog.",
    "HebCup": "Copied from org.mortbay.log.StdErrLog."
}
{
    "Origin": "Getter for {@link #exposeHeaders}",
    "Reference": "Getter for {@link #exposedHeaders}",
    "HebCup": "Getter for {@link#exposedHeaders}"
}
{
    "Origin": "Enables or disables service config look-up from the naming system.",
    "Reference": "Disables service config look-up from the naming system, which is enabled by default.",
    "HebCup": "Enables or disables Config Look look-up from the naming system."
}
{
    "Origin": "Returns a string representation of this object; useful for testing and debugging.",
    "Reference": "Returns a string representation of this object.",
    "HebCup": "Returns a string representation of this object; useful for testing and debugging."
}
{
    "Origin": "Returns the first sync d l object in the ordered set where parentFolderId = ?.",
    "Reference": "Returns the first sync d l object in the ordered set where modifiedTime > ?",
    "HebCup": "Returns the first sync d l object in the ordered set where repositoryId = ?."
}
{
    "Origin": "If it is expected that the observable only emits one element, it is typically more convenient to use {@link #promiseSingle(Observable)}.",
    "Reference": "If it is expected that the observable only emits one element, it is typically more convenient to use {@link #promise(Single)}.",
    "HebCup": "If it is expected that the observable only emits one element, it is typically more convenient to use {@link #promiseAllSingle(Observable)}."
}
{
    "Origin": "Returns a string representation of this object; useful for testing and debugging.",
    "Reference": "Returns a string representation of this object.",
    "HebCup": "Returns a string representation of this object; useful for testing and debugging."
}
{
    "Origin": "Added per PR comment:",
    "Reference": "PR comment:",
    "HebCup": "Added per PR comment:"
}
{
    "Origin": "Get branding info\n### Functional Description:   Public branding information.",
    "Reference": "Get branding information\n## \u26a0 Deprecated since version VERSION  ### Functional Description:   Public branding information.",
    "HebCup": "Get branding info\n### Functional Description:   Public branding information."
}
{
    "Origin": "Checks expressions with the pragma for enforcing index rewritings.",
    "Reference": "Checks if expressions are rewritten for enforced index access.",
    "HebCup": "Checks expressions with the pragma for enforcing index rewritings."
}
{
    "Origin": "The max idle time is applied to a HTTP request for IO operations and\ndelayed dispatch.",
    "Reference": "The max idle time is applied to an HTTP request for IO operations and\ndelayed dispatch.",
    "HebCup": "The max idle time is applied to an HTTP request for IO operations and delayed dispatch."
}
{
    "Origin": "If no Gradle user home is specified then this method returns {@code null}.",
    "Reference": "If no Gradle user home is specified then this method returns {@link Optional#empty()} .",
    "HebCup": "If no Gradle user home is specified then this method returns {@code null}."
}
{
    "Origin": "If no\nauthority is found {@code null} is returned.",
    "Reference": "If no Network is found {@code null} is returned.",
    "HebCup": "If no NetworkForLine is found {@code null} is returned."
}
{
    "Origin": "If {@code labels = null}, settings without any label are returned.",
    "Reference": "If {@code labelFilter = null}, settings without any label are returned.",
    "HebCup": "If {@code LabelFilter = null} , settings without any label are returned."
}
{
    "Origin": "Decode an action profile member to PI action group member.",
    "Reference": "Decode an action profile member to PI action profile member.",
    "HebCup": "Decode an action profile member to Pi Action Profile Member."
}
{
    "Origin": "Note that the returned instance must be {@link RequestScope.Instance#release()\nreleased} manually once not needed anymore to prevent memory leaks.",
    "Reference": "Note that the returned context must be {@link RequestContext#release()\nreleased} manually once not needed anymore to prevent memory leaks.",
    "HebCup": "Note that the returned RequestContext must be {@link RequestScope.Instance#release () released} manually once not needed anymore to prevent memory leaks."
}
{
    "Origin": "Drops the temporary database instance.",
    "Reference": "Drops a temporary database instance.",
    "HebCup": "Drops the temporary database instance."
}
{
    "Origin": "Returns the inverse of the given Matrix.",
    "Reference": "Returns the inverse of the given matrix.",
    "HebCup": "Returns the inverse of the given Matrix."
}
{
    "Origin": "Returns a string representation of this object; useful for testing and debugging.",
    "Reference": "Returns a string representation of this object.",
    "HebCup": "Returns a string representation of this object; useful for testing and debugging."
}
{
    "Origin": "It divides the sum of\nsquared deviations from the mean by N (N == number of samples).",
    "Reference": "It divides the sum of\nsquared deviations from the mean by N-1 (N == number of samples).",
    "HebCup": "It divides the sum of\nsquared deviations from the mean by N (N == number of samples)."
}
{
    "Origin": "Only if the most recently added callback returns\n from its {@link OnBackPressedCallback#handleOnBackPressed()}\nwill any previously added callback be called.",
    "Reference": "Only if the most recently added callback is not\n{@link OnBackPressedCallback#isEnabled() enabled}\nwill any previously added callback be called.",
    "HebCup": "Only OnBackPressedCallback the most recently added callback returns from its {@link OnBackPressedCallback#handleOnBackPressed ()} will any previously added callback be called."
}
{
    "Origin": "Get differences between doms.",
    "Reference": "Get differences between DOMs.",
    "HebCup": "Get differences between doms."
}
{
    "Origin": "Creates a {@link PropertyMatcher} to match against a\nslot position.",
    "Reference": "Creates a {@link KeyValueMatcher} to match against a\nslot position.",
    "HebCup": "Creates a {@link KeyValueMatcher} to match against a slot position."
}
{
    "Origin": "Sets the conditions.",
    "Reference": "Set the conditions.",
    "HebCup": "Sets the conditions."
}
{
    "Origin": "and repositoryId = ?.",
    "Reference": "and parentFolderId = ?.",
    "HebCup": "and parentFolderId = ?."
}
{
    "Origin": "See Immutable Set Static Factory Methods for details.",
    "Reference": "See Unmodifiable Sets for details.",
    "HebCup": "See Unmodifiable Set Static Factory Methods for details."
}
{
    "Origin": "Sets useIndex parameter and returns trainer instance.",
    "Reference": "Sets usingIdx parameter and returns trainer instance.",
    "HebCup": "Sets usingIdx parameter and returns trainer instance."
}
{
    "Origin": "Sets the {@link DrmProvider} to use when handling DRM for media.",
    "Reference": "Sets the {@link MediaDrmCallback} to use when handling DRM for media.",
    "HebCup": "Sets the {@link MediaDrmCallback} to use when handling DRM for media."
}
{
    "Origin": "Sets the value.",
    "Reference": "Set the entity.",
    "HebCup": "Sets the entity."
}
{
    "Origin": "The generated HotStream is not pausable, for a pausable HotStream @see {@link ReactiveSeq#pausableHotStream(Executor)}.",
    "Reference": "The generated Connectable is not pausable, for a pausable Connectable @see {@link ReactiveSeq#pausableHotStream(Executor)}.",
    "HebCup": "The generated Connectable is not pausable , for a pausable Connectable @see {@link ReactiveSeq#pausableHotStream (Executor)}."
}
{
    "Origin": "If {@code labels = \"*abc*\"}, settings with a label containing \"abc\" are returned.",
    "Reference": "If {@code labelFilter = \"*abc*\"}, settings with a label containing \"abc\" are returned.",
    "HebCup": "If {@code LabelFilter = ``*abc*``} , settings with a label containing ``abc`` are returned."
}
{
    "Origin": "Creates a controller with no processing component pooling and no results caching.",
    "Reference": "Creates a controller with no processing component pooling.",
    "HebCup": "Creates a controller with no processing component pooling and no results caching."
}
{
    "Origin": "Returns true if the resource is a simple resource that can\nnever be encapsulated.",
    "Reference": "Returns true if the resource is a simple resource.",
    "HebCup": "Returns true if the resource is a simple resource that can\nnever be encapsulated."
}
{
    "Origin": "Checks if a group is allowed in a container with the given type.",
    "Reference": "Checks if a group element is allowed in a container with a given type.",
    "HebCup": "Checks if a group is allowed in a container with the given Container."
}
{
    "Origin": "The elements will be delivered on the context to the handler.",
    "Reference": "Pending elements in the buffer will be delivered asynchronously on the context to the handler.",
    "HebCup": "The elements will be delivered on the context to the handler."
}
{
    "Origin": "Adds the parameters into context's ParameterMap",
    "Reference": "Adds the parameters into the current ActionContext's parameter map.",
    "HebCup": "Adds the parameters into context's ParameterMap"
}
{
    "Origin": "This method returns the value of the database column m_prj_risk.probalitity",
    "Reference": "This method returns the value of the database column m_prj_risk.probability",
    "HebCup": "This method returns the value of the database column m_prj_risk.Probability"
}
{
    "Origin": "Called when a controller requested to prefetch for playing a specific mediaId through\n{@link MediaController2#prefetchFromMediaId(String, Bundle)}.",
    "Reference": "Called when a controller requested to prepare for playing a specific mediaId through\n{@link MediaController2#prepareFromMediaId(String, Bundle)}.",
    "HebCup": "Called when a controller requested to prefetch for playing a specific mediaId through {@link MediaController2#PrepareFromMediaId (String , Bundle)}."
}
{
    "Origin": "Records the addition of an element of the given size to the given generation.",
    "Reference": "Records the addition of an element to the given generation.",
    "HebCup": "Records the addition of an element of the given size to the given generation."
}
{
    "Origin": "Returns a range of all the sync d l objects where companyId = ?",
    "Reference": "Returns a range of all the sync d l objects where repositoryId = ?",
    "HebCup": "Returns a range of all the sync d l objects where companyId = ?"
}
{
    "Origin": "Map module name to the new name.",
    "Reference": "Maps a module name to its new name.",
    "HebCup": "Map module name to the new name."
}
{
    "Origin": "Performs the check of the {@code Origin} header that is targeted at the {@code page}.",
    "Reference": "Performs the check of the {@code Origin} or {@code Referer} header that is targeted at the\n{@code page}.",
    "HebCup": "Performs the check of the {@code Host} header that is targeted at the {@code page}."
}
{
    "Origin": "This is important to understand the changing nature of the",
    "Reference": "This is important to understand the changing nature of the WebPage.",
    "HebCup": "This is important to understand the changing nature of the"
}
{
    "Origin": "Returns the ExecutableElement for a method declaration of methodName, in class typeName, with\nparams parameters.",
    "Reference": "Returns the ExecutableElement for the method declaration of methodName, in class typeName,\nwith params formal parameters.",
    "HebCup": "Returns the ExecutableElement for a method declaration of methodName, in class MethodName, with params parameters."
}
{
    "Origin": "Tells if the join / leave membership events must be hidden in the messages list.",
    "Reference": "Tells if the join and leave membership events should be shown in the messages list.",
    "HebCup": "Tells if the join / leave membership events must be hidden in the messages list."
}
{
    "Origin": "Add {@link PathAlterationDetector}s for the given\nroot directory and any nested subdirectories under the root directory to the given\n{@link PathAlterationDetector}.",
    "Reference": "Add {@link PathAlterationObserverScheduler}s for the given\nroot directory and any nested subdirectories under the root directory to the given\n{@link PathAlterationObserverScheduler}.",
    "HebCup": "Add {@link PathAlterationObserverScheduler}s for the given root directory and any nested subdirectories under the root directory to the given {@link PathAlterationObserverScheduler}."
}
{
    "Origin": "Returns a non-empty array of ModuleDescriptors in the run-time image.",
    "Reference": "Returns a non-empty array of ModuleResolutions in the run-time image.",
    "HebCup": "Returns a non-empty array of Modules in the run-time image."
}
{
    "Origin": "Produces a CCProcessed SemanticGraph with no extras.",
    "Reference": "Produces a CCProcessed SemanticGraph.",
    "HebCup": "Produces a CCProcessed SemanticGraph with no extras."
}
{
    "Origin": "The {@link EcKeyCreateOptions#isEnabled()} enabled} field is set to true by Azure Key Vault, if\nnot specified.",
    "Reference": "The {@link CreateEcKeyOptions#isEnabled()} enabled} field is set to true by Azure Key Vault, if\nnot specified.",
    "HebCup": "The {@link CreateEcKeyOptions#isEnabled ()} enabled} field is set to true by Azure Key Vault , if not specified."
}
{
    "Origin": "Returns an empty iterator if the argument is ,\nor returns {@code iterable.iterator()} otherwise.",
    "Reference": "Returns an empty iterator if the argument is ,\nor {@code iterable.iterator()} otherwise.",
    "HebCup": "Returns an empty iterator if the argument is ,\nor returns {@code iterable.iterator()} otherwise."
}
{
    "Origin": "Parses latitude out of a given string.",
    "Reference": "Parses latitude out of the given string.",
    "HebCup": "Parses latitude out of a given string."
}
{
    "Origin": "They are immutable.",
    "Reference": "They are unmodifiable.",
    "HebCup": "They are immutable."
}
{
    "Origin": "Set TU-UPC.",
    "Reference": "Set UPC.",
    "HebCup": "Set TU-UPC."
}
{
    "Origin": "The semantics is the sames as {@link java.net.URL#openStream()}.",
    "Reference": "The semantics is the sames as {@link URL#openStream()}.",
    "HebCup": "The semantics is the sames as {@link java.net.URL#openStream()}."
}
{
    "Origin": "Check nullability of the class persister properties",
    "Reference": "Check nullability of the class entityDescriptor properties",
    "HebCup": "Check nullability of the class TypeDescriptor properties"
}
{
    "Origin": "The prefix includes the first slash in the full filename where applicable.",
    "Reference": "The prefix includes the first slash in the full fileName where applicable.",
    "HebCup": "The prefix includes the first slash in the full fileName where applicable."
}
{
    "Origin": "In order to prevent this, if both types passed to lub include all the same arrays with\nthe same non-constant value offsets and if the constant value offsets are different then\nremove that array-offset pair from lub.",
    "Reference": "In order to prevent this, if both types passed to lub include all the same sequences\nwith the same non-constant value offsets and if the constant value offsets are different\nthen remove that sequence-offset pair from lub.",
    "HebCup": "In order to prevent this, if both types passed to lub include all the same arrays with the same non-constant value offsets and if the constant value offsets are different then remove that sequence-offset pair from lub."
}
{
    "Origin": "Warning: the conditional comments don't work when injected dynamically\nwith JavaScript (i.e.",
    "Reference": "Warning: the conditional comments don't work when injected dynamically with",
    "HebCup": "Warning: the conditional comments don't work when injected dynamically\nwith JavaScript (i.e."
}
{
    "Origin": "Get data source bean.",
    "Reference": "Get data source bean from registry center.",
    "HebCup": "Get data source bean."
}
{
    "Origin": "Getter for {@link #allowOrigins}",
    "Reference": "Getter for {@link #allowedOrigins}",
    "HebCup": "Getter for {@link#allowedOrigins}"
}
{
    "Origin": "Create an instance of {@link JAXBElement }{@code <}{@link CTMarkupRange }{@code >}}",
    "Reference": "Create an instance of {@link JAXBElement }{@code <}{@link CTMoveFromRangeEnd }{@code >}}",
    "HebCup": "Create an instance of {@link JAXBElement} {@code <} {@link CTMoveFromRangeEnd} {@code >}}"
}
{
    "Origin": "FixtureDef if you need to set parameters like friction, restitution, user data, or filtering.",
    "Reference": "Use FixtureDef if you need to set parameters like friction, restitution, user data, or filtering.",
    "HebCup": "FixtureDef if you need to set parameters like friction, restitution, user data, or filtering."
}
{
    "Origin": "Returns an intent to launch QR code generator or scanner according to the Wi-Fi network\nsecurity.",
    "Reference": "Returns an intent to launch QR code scanner.",
    "HebCup": "Returns an QrCodeScannerIntent to launch QR code generator or scanner according to the Wi-Fi network security."
}
{
    "Origin": "For further\ninformation please read the javadoc on {@link Component#canCallListenerInterface(Method)},\nthis method has the same semantics.",
    "Reference": "For further\ninformation please read the javadoc on {@link Component#canCallListenerInterface()},\nthis method has the same semantics.",
    "HebCup": "For further\ninformation please read the javadoc on {@link Component#canCallListenerInterface(Method)},\nthis method has the same semantics."
}
{
    "Origin": "List Job operation returns a list of these jobs sorted by job\ninitiation time.",
    "Reference": "The List Job operation\nreturns a list of these jobs sorted by job initiation time.",
    "HebCup": "List Job operation returns a list of these jobs sorted by job\ninitiation time."
}
{
    "Origin": "This is most useful for beams.",
    "Reference": "This is most useful for beams and ledgers.",
    "HebCup": "This is most useful for beams."
}
{
    "Origin": "Code snippets for {@link BlobClient#setHTTPHeadersWithResponse(BlobHttpHeaders, BlobAccessConditions, Duration,",
    "Reference": "Code snippets for {@link BlobClient#setHttpHeadersWithResponse(BlobHttpHeaders, BlobAccessConditions, Duration,",
    "HebCup": "Code snippets for {@link BlobClient#setHttpHeadersWithResponse (BlobHttpHeaders , BlobAccessConditions , Duration ,"
}
{
    "Origin": "Convert this MapX to a PersistentSetX via the provided transformation function",
    "Reference": "Convert this MapX to a LazySeq via the provided transformation function",
    "HebCup": "Convert this MapX to a LazySeq via the provided transformation function"
}
{
    "Origin": "Should be called when the {@link MediaSession2#pause()} is called.",
    "Reference": "Called when the {@link XMediaPlayer#pause()} is called.",
    "HebCup": "Should be called when the {@link MediaSession2#pause()} is called."
}
{
    "Origin": "If there is no record for that media,\nit's assumed to be a completed upload (returned progress is 1).",
    "Reference": "If there is no record for that media,\nit's assumed to be a completed upload.",
    "HebCup": "If there is no record for that media , it's assumed to be a completed upload (returned progress is 1)."
}
{
    "Origin": "Sets the ratings entry persistence.",
    "Reference": "Sets the asset entry set like persistence.",
    "HebCup": "Sets the Asset Entry Set Like Persistence."
}
{
    "Origin": "By constrast with {@link Optionals#sequence(CollectionX)} Optional#zero types are\ntolerated and ignored.",
    "Reference": "By constrast with {@link Optionals#sequence(IterableX)} Optional#zero types are\ntolerated and ignored.",
    "HebCup": "By constrast with {@link Optionals#sequence(IterableX)} Optional#zero types are tolerated and ignored."
}
{
    "Origin": "The returned era will be a singleton capable of being compared with the constants\nin {@link ISOChronology} using the {@code ==} operator.",
    "Reference": "The returned era will be a singleton capable of being compared with the constants\nin {@link ISOChrono} using the {@code ==} operator.",
    "HebCup": "The returned era will be a singleton capable of being compared with the constants in {@link ISOChrono} using the {@code ==} operator."
}
{
    "Origin": "Returns the unmodifieable List of configured {@link CmsSearchFieldConfiguration} entries.",
    "Reference": "Returns the unmodifieable List of configured {@link I_CmsSearchFieldConfiguration} entries.",
    "HebCup": "Returns the unmodifieable List of configured {@link I_CmsSearchFieldConfiguration} entries."
}
{
    "Origin": "If the other module is {@code EVERYONE_MODULE} then\nthis method tests if the package is exported unconditionally.",
    "Reference": "If the other module is {@code EVERYONE_MODULE} then\nthis method tests if the package is exported or opened unconditionally.",
    "HebCup": "If the other module is {@code EVERYONE_MODULE} then this method tests if the package is Statically Exported Or unconditionally."
}
{
    "Origin": "Method to help in setting passwords.",
    "Reference": "crypt - method to help in setting passwords.",
    "HebCup": "Method generate help in setting passwords."
}
{
    "Origin": "Returns a string representation of this object; useful for testing and debugging.",
    "Reference": "Returns a string representation of this object.",
    "HebCup": "Returns a string representation of this object; useful for testing and debugging."
}
{
    "Origin": "Set the maximum initialization depth for objects tree.",
    "Reference": "Set the maximum randomization depth for objects tree.",
    "HebCup": "Set the maximum Randomization Depth for objects tree."
}
{
    "Origin": "Returns the annotation mirror as specified by the \"qualifier\" value in metaAnno.",
    "Reference": "Returns the annotation mirror as specified by the \"qualifier\" element in {@code\nqualifierAnno}.",
    "HebCup": "Returns the annotation mirror as specified by the ``qualifier`` value in qualifierAnno."
}
{
    "Origin": "See\n{@link #DEFAULT_PING_BEFORE_ACTIVATE_CONNECTION}.",
    "Reference": "See {@link #DEFAULT_PROTOCOL_VERSION}.",
    "HebCup": "See {@link #DEFAULT_protocol_BEFORE_ACTIVATE_CONNECTION}."
}
{
    "Origin": "Converts a DBObject back to a type-safe java object (POJO)",
    "Reference": "Converts a Document back to a type-safe java object (POJO)",
    "HebCup": "Converts a Document back to a type-safe java object (POJO)"
}
{
    "Origin": "Parse a string representation of a zoned temporal value.",
    "Reference": "Parse a string representation of a temporal value applicable to the specified timezone.",
    "HebCup": "Parse a string representation of a zoned CalendarDateFormat.FLOATING_DATE_TIME_FORMAT.parse value."
}
{
    "Origin": "Convert to object types, returning null if text is null.",
    "Reference": "Convert to object types, returning null if text is null or empty.",
    "HebCup": "Convert to object types, returning null if text is null."
}
{
    "Origin": "Default implementation returns:",
    "Reference": "The default implementation returns:",
    "HebCup": "Default implementation if:"
}
{
    "Origin": "Obtain the default query timeout that will be used for {@link Statement}s\ncreated from this connection.",
    "Reference": "Gets the default query timeout that will be used for {@link Statement}s created from this connection.",
    "HebCup": "Obtain the default Query Timeout Seconds that will be used for {@link Statement}s created from this connection."
}
{
    "Origin": "Changes health by a given percentage, modified by drainRate.",
    "Reference": "Changes health by a raw value.",
    "HebCup": "Changes value by a given percentage , modified by drainRate."
}
{
    "Origin": "Compute the standard mean pitch position of the provided key",
    "Reference": "Compute the standard (TREBLE) mean pitch position of the provided key",
    "HebCup": "Compute the standard mean pitches position of the provided key"
}
{
    "Origin": "Send request for execution via {@link #cliIo}.",
    "Reference": "Send request for execution via corresponding singleIo from {@link #ios}.",
    "HebCup": "Send request for execution via {@link #cliIo}."
}
{
    "Origin": "Create an unnamed {@link ServiceLocator}.",
    "Reference": "Create an unnamed, parented {@link InstanceManager}.",
    "HebCup": "Create an unnamed {@link InstanceManager}."
}
{
    "Origin": "Sets the value of the source property.",
    "Reference": "Sets the value of the parameter property.",
    "HebCup": "Sets the value of the Parameter property."
}
{
    "Origin": "Returns a string representation of this object; useful for testing and debugging.",
    "Reference": "Returns a string representation of this object.",
    "HebCup": "Returns a string representation of this object; useful for testing and debugging."
}
{
    "Origin": "Removes a {@link SurfaceConfiguration} from the combination.",
    "Reference": "Removes a {@link SurfaceConfig} from the combination.",
    "HebCup": "Removes a {@link SurfaceConfig} from the combination."
}
{
    "Origin": "The {@link RsaKeyCreateOptions#getKeySize() keySize} can be\noptionally specified.",
    "Reference": "The {@link CreateRsaKeyOptions#getKeySize() keySize} can be\noptionally specified.",
    "HebCup": "The {@link CreateRsaKeyOptions#getKeySize () keySize} can be optionally specified."
}
{
    "Origin": "Returns the verb for the access token endpoint (defaults to GET)",
    "Reference": "Returns the verb for the access token endpoint (defaults to POST)",
    "HebCup": "Returns the verb for the access token endpoint (defaults to POST)"
}
{
    "Origin": "or throws a {@link com.liferay.marketplace.NoSuchModuleException} if it could not be found.",
    "Reference": "or throws a {@link NoSuchModuleException} if it could not be found.",
    "HebCup": "or throws a {@link com.liferay.marketplace.NoSuchModuleException} if it could not be found."
}
{
    "Origin": "Parses an option string and sets the options accordingly.",
    "Reference": "Parses and assigns options string from the specified string.",
    "HebCup": "Parses an option string and sets the options accordingly."
}
{
    "Origin": "Returns the rootest flow's name for the module chain that will be macro expanded.",
    "Reference": "'s name for the module chain that will be macro expanded.",
    "HebCup": "Returns the rootest Root's name for the module chain that will be macro expanded."
}
{
    "Origin": "Returns the type of the output parameter.",
    "Reference": "Returns the types of the output parameters.",
    "HebCup": "Returns the Types of the output parameter."
}
{
    "Origin": "Returns a newly-created {@link SimpleCompositeService} based on the {@link Service}s added to this\nbuilder.",
    "Reference": "Returns a newly-created {@link SimpleCompositeService} based on the {@link HttpService}s added to this\nbuilder.",
    "HebCup": "Returns a newly-created {@link SimpleCompositeService} based on the {@link Service}s added to this\nbuilder."
}
{
    "Origin": "Removes a package from the package repository.",
    "Reference": "Removes a package from the repository.",
    "HebCup": "Removes a package from the package repository."
}
{
    "Origin": "Gets connection ID length.",
    "Reference": "Gets connection ID generator.",
    "HebCup": "Gets connection Id Generator."
}
{
    "Origin": "You can rescan the input bucket to check for new documents or\ncancel a request.",
    "Reference": "You can rescan the input bucket to check for new documents or\ncancel a job.",
    "HebCup": "You can rescan the input bucket to check for new documents or\ncancel a request."
}
{
    "Origin": "Sets the groups.",
    "Reference": "Set the groups.",
    "HebCup": "Sets the groups."
}
{
    "Origin": "Returns time interval between vacuum runs.",
    "Reference": "Returns time interval between MVCC vacuum runs in milliseconds.",
    "HebCup": "Returns time interval between vacuum runs."
}
{
    "Origin": "Convert to primitive types, returning default value if text is null.",
    "Reference": "Convert to time, returning default value if text is inconvertible.",
    "HebCup": "Convert to primitive types, returning default value if text is null."
}
{
    "Origin": "Prepends the stringly representation of short value into buffer,\ngiven the coder and final index.",
    "Reference": "Prepends constant and the stringly representation of value into buffer,\ngiven the coder and final index.",
    "HebCup": "Prepends the stringly representation of String value into buffer , given the coder and final index."
}
{
    "Origin": "Creates an {@link ImmutableContextSet} from an existing {@link Multimap}.",
    "Reference": "Creates an {@link ImmutableContextSet} from a context pair.",
    "HebCup": "Creates an {@link ImmutableContextSet} of an existing {@link Multimap}."
}
{
    "Origin": "The returned {@link RxTransaction} allows using DB transactions using Rx Observables.",
    "Reference": "The returned {@link RxTransaction} allows using DB transactions using Rx Observables using RX's IO scheduler for\nsubscribeOn.",
    "HebCup": "The returned {@link RxTransaction} allows using DB transactions using Rx Observables."
}
{
    "Origin": "Returns a new instance of {@link TurtleParser}.",
    "Reference": "Returns a new instance of {@link SPARQLResultsJSONParser}.",
    "HebCup": "Returns a new instance of {@link TurtleParser}."
}
{
    "Origin": "Code snippets for {@link BlobClient#downloadWithResponse(OutputStream, BlobRange, ReliableDownloadOptions,",
    "Reference": "Code snippets for {@link BlobClient#downloadWithResponse(OutputStream, BlobRange, DownloadRetryOptions,",
    "HebCup": "Code snippets for {@link BlobClient#downloadWithResponse (OutputStream , BlobRange , DownloadRetryOptions ,"
}
{
    "Origin": "Object updates will continually be emitted as the RealmObject is updated -\n{@code onComplete} will never be called.",
    "Reference": "The RealmObject will continually be emitted as it is updated - {@code onComplete} will never be called.",
    "HebCup": "Object updates will continually be emitted as Changeset the RealmObject is updated - {@code onComplete} will never be called."
}
{
    "Origin": "This is the price agreed when the trade occurred.",
    "Reference": "This is the price agreed when the trade occurred, in decimal form.",
    "HebCup": "This is the Optional.ofNullable agreed when the trade occurred."
}
{
    "Origin": "Finds Component Class from the given Spec name.",
    "Reference": "Finds Generated Class from the given Spec name.",
    "HebCup": "Finds GeneratedClass Class from the given Spec name."
}
{
    "Origin": "Set Natural Account.",
    "Reference": "Set Basiskonto.",
    "HebCup": "Set Natural Account."
}
{
    "Origin": "Retrieve the {@link MetadataEntry} corresponding to the specified key for the {@link NamespacedEntityId}.",
    "Reference": "Retrieve the {@link MetadataEntry} corresponding to the specified key for the {@link MetadataEntity}.",
    "HebCup": "Retrieve the {@link MetadataEntry} corresponding to the specified key for the {@link MetadataEntity}."
}
{
    "Origin": "If present this schedule is part of the catalog but not executed",
    "Reference": "If present this task is part of the catalog but not executed",
    "HebCup": "If present this Task is part of the catalog but not executed"
}
{
    "Origin": "This uses {@link ISODateTimeFormat#dateParser()}.",
    "Reference": "This uses {@link ISODateTimeFormat#dateTimeParser()}.",
    "HebCup": "This uses {@link ISODateTimeFormat#dateTimeParser ()}."
}
{
    "Origin": "Returned {@link BrowserResult} will only tell whether the attemp to search was successful.",
    "Reference": "Returned {@link LibraryResult} will only tell whether the attemp to search was successful.",
    "HebCup": "Returned {@link LibraryResult} will only tell whether the attemp to search was successful."
}
{
    "Origin": "The meta-property for the {@code upFrontFee} property.",
    "Reference": "The meta-property for the {@code upfrontFee} property.",
    "HebCup": "The meta-property for the {@code upfrontFee} property."
}
{
    "Origin": "Loads properties from resource.",
    "Reference": "Loads properties from a resource.",
    "HebCup": "Loads loadProperties from resource."
}
{
    "Origin": "This is the id of the root {@link BlockContainer} where this event occurred.",
    "Reference": "This is the id of the \"workspace\", or similar container.",
    "HebCup": "This is the id of the root {@link BlockWorkspace} where this event occurred."
}
{
    "Origin": "Returns a string representation of this object; useful for testing and debugging.",
    "Reference": "Returns a string representation of this object.",
    "HebCup": "Returns a string representation of this object; useful for testing and debugging."
}
{
    "Origin": "Returns an {@link Operator} that flattens a sequence of\n{@link Observable} into a flat sequence of the items from the",
    "Reference": "Returns an {@link Transformer} that flattens a sequence of\n{@link Observable} into a flat sequence of the items from the",
    "HebCup": "Returns an {@link Transformer} that flattens a sequence of {@link Observable} into a flat sequence of the items from the"
}
{
    "Origin": "Clears the given persisted files stored in {@link #mPersistedFilesInfo}.",
    "Reference": "Clears the given persisted files stored in {@link #mPersistedUfsFingerprints}.",
    "HebCup": "Clears the given persisted files stored in {@link#mPersistedUfsFingerprints}."
}
{
    "Origin": "However, token range searches will be routed to all the partitions, with a\nslightly lower performance.",
    "Reference": "However,unfiltered token range searches will be routed to all the\npartitions, with a slightly lower performance.",
    "HebCup": "However, token range searches will be routed to all the partitions, with a\nslightly lower performance."
}
{
    "Origin": "Checks a given class.",
    "Reference": "Checks the given class.",
    "HebCup": "Checks analyzer given class."
}
{
    "Origin": "Creates a {@link NonNullList} of {@link ItemStack}'s with the elements given in the order that they are given.",
    "Reference": "Creates a {@link List} of {@link ItemStack}'s with the elements given in the order that they are given.",
    "HebCup": "Creates a {@link Lists} of {@link ItemStack}'s with the elements given in the order that they are given."
}
{
    "Origin": "Verify the validity of an 'RSA_SIGN_PSS_2048_SHA256' signature for the\nspecified message",
    "Reference": "Verify the validity of an 'RSA_SIGN_PKCS1_2048_SHA256' signature for the\nspecified message",
    "HebCup": "Verify the validity of an 'RSA_SIGN_PSS_2048_SHA256' keyName for the specified message"
}
{
    "Origin": "Returns a rule that restricts access to the given set of IP addresses.",
    "Reference": "Adds a rule that restricts access to the given set of IP addresses.",
    "HebCup": "Returns a Utils that restricts access to the given set of IP addresses."
}
{
    "Origin": "Use {@link #EMPTY_CONTEXT} if possible.",
    "Reference": "Use {@link #EMPTY_CONTEXT} to reference the instance.",
    "HebCup": "Use {@link #EMPTY_CONTEXT} if possible."
}
{
    "Origin": "Decorates {@link Service}s under the specified directory.",
    "Reference": "Decorates {@link HttpService}s under the specified directory.",
    "HebCup": "Decorates {@link HttpService}s under the specified directory."
}
{
    "Origin": "Set maximum number of deferred processed application data messages.",
    "Reference": "Set maximum number of deferred processed outgoing application data\nmessages.",
    "HebCup": "Set maximum number of Deferred Processed Outgoing Application Data Messages."
}
{
    "Origin": "Add a citation to the citations map.",
    "Reference": "Add a citation to the citations multimap.",
    "HebCup": "Add a citation to the citations map."
}
{
    "Origin": "For more\ninformation, see SetVaultNotifications.",
    "Reference": "SetVaultNotifications.",
    "HebCup": "For more\ninformation, see SetVaultNotifications."
}
{
    "Origin": "Produce the {@link ScriptLoadBalancer} instance to use for this Genie node if it was configured by the user.",
    "Reference": "Produce the {@link ScriptClusterSelector} instance to use for this Genie node if it was configured by the user.",
    "HebCup": "Produce the {@link ScriptClusterSelector} instance to use for this Genie node if it was configured by the user."
}
{
    "Origin": "Return the incoming binding sets associated with the optimized\nquery plan (after running the optimizers).",
    "Reference": "Return the incoming binding sets associated with the optimized AST.",
    "HebCup": "Return the incoming binding sets associated with the optimized Optimized AST Binding (after running the optimizers)."
}
{
    "Origin": "The {@link EcKeyCreateOptions#isEnabled() enabled} field is set to true by Azure Key Vault, if\nnot specified.",
    "Reference": "The {@link CreateEcKeyOptions#isEnabled() enabled} field is set to true by Azure Key Vault, if\nnot specified.",
    "HebCup": "The {@link CreateEcKeyOptions#isEnabled () enabled} field is set to true by Azure Key Vault , if not specified."
}
{
    "Origin": "Get this object as a DateTime using the default zone.",
    "Reference": "Converts this object to a DateTime using the default zone.",
    "HebCup": "Get this object as a DateTime using the default zone."
}
{
    "Origin": "Get the set of default providers registered for the given service provider contract\nin the underlying {@link InstanceManager instance manager} container.",
    "Reference": "Get the set of default providers registered for the given service provider contract\nin the underlying {@link InjectionManager injection manager} container.",
    "HebCup": "Get the set of default providers registered for the given service provider contract in the underlying {@link InjectionManager instance manager} container."
}
{
    "Origin": "Create an instance of {@link JAXBElement }{@code <}{@link CTMarkupRange }{@code >}}",
    "Reference": "Create an instance of {@link JAXBElement }{@code <}{@link CTMoveToRangeEnd }{@code >}}",
    "HebCup": "Create an instance of {@link JAXBElement} {@code <} {@link CTMoveToRangeEnd} {@code >}}"
}
{
    "Origin": "Returns the default set of root modules for the unnamed module computed from\nthe system modules observable with the given module finder.",
    "Reference": "Returns the default set of root modules for the unnamed module from the\nmodules observable with the intersection of two module finders.",
    "HebCup": "Returns the default set of root modules for the unnamed module computed from the system modules observable with the given module descriptor."
}
{
    "Origin": "Clears the value of the 'publicPort' field",
    "Reference": "Clears the value of the 'publicPorts' field",
    "HebCup": "Clears the value of the 'PublicPorts' field"
}
{
    "Origin": "Create introspection invalid response.",
    "Reference": "Build unauthorized response entity.",
    "HebCup": "build Unauthorized Response Entity."
}
{
    "Origin": "closure/lambda",
    "Reference": "closure or lambda.",
    "HebCup": "closure/lambda"
}
{
    "Origin": "Send request for execution via {@link #cliIo}.",
    "Reference": "Send request for execution via corresponding singleIo from {@link #ios} or sticky singleIo.",
    "HebCup": "Send request for execution via {@link #cliIo}."
}
{
    "Origin": "Staff key signature is dynamically computed using the keyShape and the count of\nalteration slices.",
    "Reference": "Staff key signature is dynamically computed using the keyShape and the count of\nalteration roi.",
    "HebCup": "Staff key signature is dynamically computed using the keyShape and the count of alteration roi."
}
{
    "Origin": "Helper method to compute column indices from selection columns and the data schema for selection queries with\n.",
    "Reference": "Helper method to compute column indices from selection columns and the data schema for selection queries",
    "HebCup": "Helper method to compute column indices from selection columns and the data schema for selection queries with\n."
}
{
    "Origin": "Configures SSL/TLS for HTTPS Jetty Server / Client",
    "Reference": "Configures SSL/TLS for HTTPS Jetty Client",
    "HebCup": "Configures ClientSideSsl/TLS for HTTPS Jetty Server / Client"
}
{
    "Origin": "Constructs an instance of BigtableTableAdminClient, using the given settings.",
    "Reference": "Constructs an instance of BigtableTableAdminClient with the given settings.",
    "HebCup": "Constructs an instance of create , using the given settings."
}
{
    "Origin": "Get the {@link uk.gov.gchq.gaffer.data.elementdefinition.view.NamedView} related to the specified name from cache",
    "Reference": "Get the {@link uk.gov.gchq.gaffer.data.elementdefinition.view.NamedViewDetail} related to the specified name from cache",
    "HebCup": "Get the {@link uk.gov.gchq.gaffer.data.elementdefinition.view.NamedViewDetailView} related to the specified name from cache"
}
{
    "Origin": "Determines whether a character is a digit according to",
    "Reference": "Determines whether a character is a BMP digit according to",
    "HebCup": "Determines whether a character is a digit according to"
}
{
    "Origin": "NOTE:  The option is precreate=false option is appended to the URL to avoid the automatic creation of brokers\nand the resulting duplicate broker errors",
    "Reference": "NOTE:  The create=false option is appended to the URL to avoid the automatic creation of brokers\nand the resulting duplicate broker errors",
    "HebCup": "NOTE:  The option is precreate=false option is appended to the URL to avoid the automatic creation of brokers\nand the resulting duplicate broker errors"
}
{
    "Origin": "Cancels the current transition animation",
    "Reference": "Cancels the current Launcher transition animation",
    "HebCup": "Cancels the current transition LauncherAnimation"
}
{
    "Origin": "Scenario:\n  - no CA inherited trust\n  - gateway does trust the service\n  - service does not trust gateway",
    "Reference": "Scenario:\n  - no CA inherited trust\n  - gateway does trust the API\n  - API does not trust gateway",
    "HebCup": "Scenario: - no CA inherited trust - gateway does trust the service - Api Does Not Trust Gateway"
}
{
    "Origin": "Searches in file using {@link Scanner} instance for given pattern.",
    "Reference": "Searches in given content for given pattern.",
    "HebCup": "Searches in file using {@link String} instance for given pattern."
}
{
    "Origin": "Returns the {@link Type} corresponding to the given protocol and number of hosts, if any.",
    "Reference": "Returns the {@link Type} corresponding to the given scheme and number of hosts, if any.",
    "HebCup": "Returns the {@link Type} corresponding to the given scheme and number of hosts , if any."
}
{
    "Origin": "Manipulate the zoom level of the application and centers it",
    "Reference": "Manipulate the zoom level of the application",
    "HebCup": "Manipulate the zoom level of the application and centers it"
}
{
    "Origin": "Returns a copy of this CacheSpan with a new file and last access timestamp.",
    "Reference": "Returns a copy of this CacheSpan with a new file and last touch timestamp.",
    "HebCup": "Returns a copy of this CacheSpan with a new File And Last Touch Timestamp."
}
{
    "Origin": "Fast loop for computing {@code Math.pow(x, p)} for p >= 0 integer and x\ninteger.",
    "Reference": "Fast loop for computing {@code pow(x, p)} for p >= 0 integer and x\ninteger.",
    "HebCup": "Fast loop for computing {@code FastMath.powFast (x , p)} for p >= 0 integer and x integer."
}
{
    "Origin": "Note: this method resolves custom data locations for the shard.",
    "Reference": "Note: this method resolves custom data locations for the shard if such a custom data path is provided.",
    "HebCup": "Note: this method resolves custom data locations for the shard."
}
{
    "Origin": "Sets the name.",
    "Reference": "Set the name.",
    "HebCup": "Sets the name."
}
{
    "Origin": "Exercise Layer defineModules with a configuration that contains a module\nthat has a concealed package that is the same name as a non-exported\npackage in a parent layer.",
    "Reference": "Exercise Layer defineModules with a configuration with a module that\ncontains a package that is the same name as a non-exported package in\na parent layer.",
    "HebCup": "Exercise Layer defineModules with a configuration that contains a module\nthat has a concealed package that is the same name as a non-exported\npackage in a parent layer."
}
{
    "Origin": "Attaches type information to the specified element.",
    "Reference": "Attaches input information to the specified element.",
    "HebCup": "Attaches type information to the specified element."
}
{
    "Origin": "Returns the input stream of this message content.",
    "Reference": "Returns the CachedOutputStream of this message content.",
    "HebCup": "Returns the Cached Output Stream of this message content."
}
{
    "Origin": "Creates a new {@code ListenableFuture} whose result is set from the supplied future when it\ncompletes.",
    "Reference": "Returns a {@code ListenableFuture} whose result is set from the supplied future when it\ncompletes.",
    "HebCup": "Creates a new {@code ListenableFuture} whose result is set from the supplied future when it\ncompletes."
}
{
    "Origin": "Obtain a DelegationToken from Accumulo in a backwards compatible manner.",
    "Reference": "Obtain a DelegationToken from Accumulo.",
    "HebCup": "Obtain a DelegationToken from Accumulo in a backwards compatible manner."
}
{
    "Origin": "Return the data center for which an endpoint resides in",
    "Reference": "Return the data center for which an node resides in",
    "HebCup": "Return the data center for which an Node resides in"
}
{
    "Origin": "Gets the valueText.",
    "Reference": "Gets the value.",
    "HebCup": "Gets the value."
}
{
    "Origin": "Returns the push notifications device with the primary key or throws a {@link com.liferay.pushnotifications.NoSuchDeviceException} if it could not be found.",
    "Reference": "Returns the push notifications device with the primary key or throws a {@link NoSuchDeviceException} if it could not be found.",
    "HebCup": "Returns the push notifications device with the primary key or throws a {@link com.liferay.pushnotifications.NoSuchDeviceException} if it could not be found."
}
{
    "Origin": "A variation on {@link #getForLookupPath(String)} that accepts a full request\nURL path and returns the full request URL path to expose for public use.",
    "Reference": "A variation on {@link #getForLookupPath(PathContainer)} that accepts a\nfull request URL path and returns the full request URL path to expose\nfor public use.",
    "HebCup": "A variation on {@link #getForparsedLookupPath(String)} that accepts a full request URL path and returns the full request URL path to expose for public use."
}
{
    "Origin": "Create a new builder preconfigured to connect to the Bigtable emulator.",
    "Reference": "Create a new builder preconfigured to connect to the Bigtable emulator with port number.",
    "HebCup": "Create a new Builder For Emulator preconfigured to connect to the Bigtable emulator."
}
{
    "Origin": "Set non-incremental state values (ex.",
    "Reference": "Set non-incremental state values from an existing state.",
    "HebCup": "Set non-incremental state values (ex."
}
{
    "Origin": "A semigroup for unary products.",
    "Reference": "A lazy semigroup for unary products.",
    "HebCup": "A < for unary products."
}
{
    "Origin": "This method should be called after acquiring the retention lock; See {@link #acquireRetentionLock()}",
    "Reference": "This method should be called after acquiring the retention lock; See {@link #acquireHistoryRetentionLock(Engine.HistorySource)}",
    "HebCup": "This method should be called after acquiring the retention lock; See {@link #acquireRetentionLock()}"
}
{
    "Origin": "Aurora on Amazon RDS \nin the Amazon RDS User Guide.",
    "Reference": "Aurora, see Aurora on Amazon RDS in the Amazon RDS User Guide.",
    "HebCup": "Aurora on Amazon RDS \nin the Amazon RDS User Guide."
}
{
    "Origin": "Creates a controller with processing component pooling but with no results caching.",
    "Reference": "Creates a controller with processing component pooling and a fixed pool size.",
    "HebCup": "Creates a controller with processing component pooling but with no results caching."
}
{
    "Origin": "Wrapper for updateRemoteStoreDefList : update this for all the nodes",
    "Reference": "Wrapper for updateRemoteStoreDefList : update this for all nodes",
    "HebCup": "Wrapper for updateRemoteStoreDefDefs : update this for all the nodes"
}
{
    "Origin": "Creates a controller with processing component pooling but with no results caching.",
    "Reference": "Creates a controller with processing component pooling\n.",
    "HebCup": "Creates a controller with processing component pooling but with no results caching."
}
{
    "Origin": "Match the beginning of the given path and return the remaining portion of\nthe path not covered by this pattern.",
    "Reference": "Match the beginning of the given path and return the remaining portion\nnot covered by this pattern.",
    "HebCup": "Match the beginning of the given path and return the remaining portion of\nthe path not covered by this pattern."
}
{
    "Origin": "What about\n{@code ImmutableSet ImmutableSet.copyOf(E[])}?",
    "Reference": "ImmutableSet ImmutableSet.copyOf(E[])}?",
    "HebCup": "What about\n{@code ImmutableSet ImmutableSet.copyOf(E[])}?"
}
{
    "Origin": "Default value is {@code Integer.MAX_VALUE}, meaning that it's non-ordered.",
    "Reference": "The default value is {@code Ordered.LOWEST_PRECEDENCE}, meaning non-ordered.",
    "HebCup": "Default value is {@code Integer.MAX_VALUE}, meaning that it's non-ordered."
}
{
    "Origin": "EventHubAsyncProducer EventHubProducers} created with this instance will have their connections closed.",
    "Reference": "EventHubProducerAsyncClient EventHubProducers} created with this instance will have their connections closed.",
    "HebCup": "EventHubAsyncProducer EventHubProducers} created with this instance will have their links closed."
}
{
    "Origin": "This is used across all activities/dialogs but can be overridden\nlocally via {@link #setLocalNightMode(int)}.",
    "Reference": "This is the default value used for all components, but can\nbe overridden locally via {@link #setLocalNightMode(int)}.",
    "HebCup": "This is used across all activities/dialogs but can be overridden\nlocally via {@link #setLocalNightMode(int)}."
}
{
    "Origin": "Cleans the procedures in this schema.",
    "Reference": "Cleans the triggers in this schema.",
    "HebCup": "Cleans the triggerNames in this schema."
}
{
    "Origin": "Cancel the task of loading and displaying image for passed {@link ImageView}.",
    "Reference": "Cancel the task of loading and displaying image for passed\n{@link android.widget.ImageView ImageView}.",
    "HebCup": "Cancel the task of loading and displaying image for passed {@link ImageView}."
}
{
    "Origin": "Sets the value of the 'InMemory' field",
    "Reference": "Sets the value of the 'inMemory' field.",
    "HebCup": "Sets the value of the 'inMemory' field"
}
{
    "Origin": "Creates and returns an animation listener, which allows to adapt the pivot of a specific\nview, when an animation, which reverted an overshoot, has been ended.",
    "Reference": "Creates and returns an animation listener, which allows to adapt the pivot of a specific\ntab, when an animation, which reverted an overshoot, has been ended.",
    "HebCup": "Creates and returns an animation listener , which allows to adapt the pivot of a specific AbstractItem , when an animation , which reverted an overshoot , has been ended."
}
{
    "Origin": "Appends a quoted string to a given buffer.",
    "Reference": "Appends a quoted string to the given string buffer.",
    "HebCup": "Appends a quoted string to a given buffer."
}
{
    "Origin": "Returns a string representation of this object; useful for testing and debugging.",
    "Reference": "Returns a string representation of this object.",
    "HebCup": "Returns a string representation of this object; useful for testing and debugging."
}
{
    "Origin": "Thus, you are encouraged to keep the returned {@link FCPPluginClient} it in memory and use it\nfor as long as you need it.",
    "Reference": "Thus, you are encouraged to keep the returned {@link FCPPluginConnection} in memory and use\nit for as long as you need it.",
    "HebCup": "Thus , you are encouraged to keep the returned {@link FCPPluginConnection} it in memory and use it for as long as you need it."
}
{
    "Origin": "Create an instance of {@link JAXBElement }{@code <}{@link CTMarkupRange }{@code >}}",
    "Reference": "Create an instance of {@link JAXBElement }{@code <}{@link CTMoveToRangeEnd }{@code >}}",
    "HebCup": "Create an instance of {@link JAXBElement} {@code <} {@link CTMoveToRangeEnd} {@code >}}"
}
{
    "Origin": "Logs in the user to the GAE simulation environment as an instructor\n(without admin rights).",
    "Reference": "Logs in the user to the GAE simulation environment as an instructor\n(without admin rights or student rights).",
    "HebCup": "Logs in the user to the GAE simulation environment as an instructor\n(without admin rights)."
}
{
    "Origin": "Returns a copy of this ZonedDateTime changing the zone offset to the\nearlier of the two valid offsets at a local time-line overlap.",
    "Reference": "Returns a copy of this date-time changing the zone offset to the\nearlier of the two valid offsets at a local time-line overlap.",
    "HebCup": "Returns a copy of this ZoneddateTime changing the zone offset to the earlier of the two valid offsets at a local time-line overlap."
}
{
    "Origin": "This factory converts the arbitrary date-time object to an instance of {@code OffsetTime}.",
    "Reference": "This factory converts the arbitrary temporal object to an instance of {@code OffsetTime}.",
    "HebCup": "This factory converts the arbitrary date-time object to an instance of {@code OffsetTime}."
}
{
    "Origin": "Computes the offset of the layout selected by a given layout path, where the path is considered rooted in this\nlayout.",
    "Reference": "Computes the offset, in bits, of the layout selected by a given layout path, where the path is considered rooted in this\nlayout.",
    "HebCup": "Computes the offset of the layout selected by a given return, where the path is considered rooted in this layout."
}
{
    "Origin": "Returns the base section paint.",
    "Reference": "Returns the default section paint.",
    "HebCup": "Returns the Default Section Paint."
}
{
    "Origin": "Returns the key matcher which chooses which keys the listener should be notified of.",
    "Reference": "Returns the binding matcher which chooses which bindings the listener should be notified of.",
    "HebCup": "Returns the binding Matcher which chooses which keys the listener should be notified of."
}
{
    "Origin": "Sets the price that was traded, in decimal form.",
    "Reference": "Sets the price that was traded, together with the trade date, optional.",
    "HebCup": "Sets the tradedPrice that was traded , in decimal form."
}
{
    "Origin": "Waits during {@code timeout} until master pod has a specified {@code expectedRevision}.",
    "Reference": "Waits during {@code timeoutInSec} until master pod has a specified {@code expectedRevision}.",
    "HebCup": "Waits during {@code timeoutInSec} until master pod has a specified {@code expectedRevision}."
}
{
    "Origin": "Update current starting address in the data store.",
    "Reference": "Update current head segment in the data store.",
    "HebCup": "Update current HEAD _ SEGMENT _ RECORD in the data store."
}
{
    "Origin": "Runtime.NONE with default values.",
    "Reference": "Starlark.NONE with default values.",
    "HebCup": "Starlark.NONE with default values."
}
{
    "Origin": "Returns Object deserialized from XML text.",
    "Reference": "Returns Object deserialized from XML content.",
    "HebCup": "Returns Object deserialized from XML text."
}
{
    "Origin": "Register sub-objects such as caches",
    "Reference": "Register sub-objects such as caches and our own metrics",
    "HebCup": "Register sub-objects such as caches"
}
{
    "Origin": "Calls {@link Plugin#willDeclareGetter(TypeSpec.Builder, PropertyGenerator, MethodSpec.Builder)}\non all the bundled plugins",
    "Reference": "Calls {@link Plugin#beforeDeclareGetter(TypeSpec.Builder, PropertyGenerator, MethodSpec.Builder)}\non all the bundled plugins",
    "HebCup": "Calls {@link Plugin#beforeDeclareGetter (TypeSpec.Builder , PropertyGenerator , MethodSpec.Builder)} on all the bundled plugins"
}
{
    "Origin": "You will need to {@link #unregisterScreenOffReceiver() unregister} it\nlater.",
    "Reference": "You will need to\n{@link #unregisterScreenEventsReceiver() unregister} it later.",
    "HebCup": "You will need to {@link #unregisterScreenEventsReceiver() unregister} it later."
}
{
    "Origin": "{@codesnippet com.azure.storage.file.datalake.DataLakeDirectoryAsyncClient.createSubDirectory#String}",
    "Reference": "{@codesnippet com.azure.storage.file.datalake.DataLakeDirectoryAsyncClient.createSubdirectory#String}",
    "HebCup": "{@codesnippet com.azure.storage.file.datalake.DataLakeDirectoryAsyncClient.createSubdirectory#String}"
}
{
    "Origin": "Traverse all nodes of a PrefsTab and return a\nmapping from PrefsTab to all its Labeled type nodes.",
    "Reference": "Traverse all nodes of a PreferencesTab and return a\nmapping from PreferencesTab to all its Labeled type nodes.",
    "HebCup": "Traverse all nodes of a PreferencesTab and return a mapping from PreferencesTab to all its Labeled type nodes."
}
{
    "Origin": "Invokes {@link HTTPSamplerBase#readResponse(SampleResult, InputStream, int)}",
    "Reference": "Invokes {@link HTTPSamplerBase#readResponse(SampleResult, InputStream, long)}",
    "HebCup": "Invokes {@link HTTPSamplerBase#readResponse(SampleResult, InputStream, int)}"
}
{
    "Origin": "Implements Operator.PIPE.",
    "Reference": "Implements 'x | y'.",
    "HebCup": "Implements TokenKind.PIPE."
}
{
    "Origin": "Parses the \"ParenthesizedExpr\" rule without the opening parenthesis.",
    "Reference": "Parses the \"ParenthesizedExpr\" rule.",
    "HebCup": "Parses the \"ParenthesizedExpr\" rule without the opening parenthesis."
}
{
    "Origin": "filters a list of method for MOP methods.",
    "Reference": "Filters a list of method for MOP methods.",
    "HebCup": "filters a list of method for MOP methods."
}
{
    "Origin": "Gets the mount point information from a mount information.",
    "Reference": "Gets the mount point information for display from a mount information.",
    "HebCup": "Gets the mount point information from a mount information."
}
{
    "Origin": "Don't report the passed metrics types for all metrics (e.g.",
    "Reference": "Don't report the passed metric attributes for all metrics (e.g.",
    "HebCup": "Don't report the passed metrics Attributes for all metrics (e.g."
}
{
    "Origin": "Set a global \"subscription\" hook to intercept signals produced by the passed\nterminal {@link Subscriber}.",
    "Reference": "Set a global \"subscription\" hook to intercept signals produced by the passed\nterminal {@link CoreSubscriber}.",
    "HebCup": "Set a global ``subscription`` hook to intercept signals produced by the passed terminal {@link CoreSubscriber}."
}
{
    "Origin": "If false, the built-in\n(non-CuDNN) implementation for ConvolutionLayer will be used",
    "Reference": "If true, the built-in\n(non-MKL/CuDNN) implementation for ConvolutionLayer will be used",
    "HebCup": "If false, the built-in\n(non-CuDNN) implementation for ConvolutionLayer will be used"
}
{
    "Origin": "Provides a {@link GoogleCredential} from the service account's JSON key file.",
    "Reference": "Provides a {@link GoogleCredentialsBundle} from the service account's JSON key file.",
    "HebCup": "Provides a {@link GoogleCredentialsBundle} from the service account's JSON key file."
}
{
    "Origin": "log of n choose k",
    "Reference": "The log of n choose k.",
    "HebCup": "log of n lchoose k"
}
{
    "Origin": "Deserializes the previously serialized TokenStream using the provided AttributeSerializer(s).",
    "Reference": "Deserializes the previously serialized TwitterTokenStream using the provided AttributeSerializer(s).",
    "HebCup": "Deserializes the previously serialized TwitterTokenStream using the provided AttributeSerializer (s)."
}
{
    "Origin": "Helper that allows to create {@link LikeNode} without having to instantiate new objects.",
    "Reference": "Helper that allows to create {@link StartsWith} without having to instantiate new objects.",
    "HebCup": "Helper that allows to create {@link StartsWith} without having to instantiate new objects."
}
{
    "Origin": "Checks a name to ensure that it's a legal type name.",
    "Reference": "Checks a name to ensure that it's a legal qualified class name.",
    "HebCup": "Checks a name to ensure that it's a legal type name."
}
{
    "Origin": "Automatically triggers stack trace sampling\nif statistics are not available or outdated.",
    "Reference": "Automatically triggers task back pressure\nsampling if statistics are not available or outdated.",
    "HebCup": "Automatically triggers Back Pressure sampling if statistics are not available or outdated."
}
{
    "Origin": "This test will be called by {@link AxisPath#index} if the context\nvalue only consists of database nodes.",
    "Reference": "This test will only be called by {@link AxisPath#index}\nif the root is no value, or if it only contains database nodes.",
    "HebCup": "This test will be called by {@link AxisPath#index} if the context Expr only consists of database nodes."
}
{
    "Origin": "Sets the value of the securityDescriptor property.",
    "Reference": "Sets the value of the securityDescriptorAttr property.",
    "HebCup": "Sets the value of the SecurityDescriptorAttr property."
}
{
    "Origin": "See Immutable List Static Factory Methods for details.",
    "Reference": "See Unmodifiable Lists for details.",
    "HebCup": "See Unmodifiable List Static Factory Methods for details."
}
{
    "Origin": "Convert to primitive types, returning default value if text is null.",
    "Reference": "Convert to double, returning default value if text is inconvertible.",
    "HebCup": "Convert to primitive types, returning default value if text is null."
}
{
    "Origin": "If a value is specified for linkPrefix, then a link is generated with linkPrefix + prettyName of the property\nfrom the configuration class.",
    "Reference": "Verify that if a value is specified for the {@code linkPrefix} xproperty, then a link is generated with\nlinkPrefix + prettyName of the property from the configuration class.",
    "HebCup": "If a value is specified for linkPrefix, then a link is generated with linkPrefix + prettyName of the property\nfrom the configuration class."
}
{
    "Origin": "Registers a receiver to finish activity when screen goes off.",
    "Reference": "Registers a receiver to finish activity when screen goes off and to\nrefresh window flags on screen on.",
    "HebCup": "Registers a receiver to finish activity when screen goes Events."
}
{
    "Origin": "Sets the global index.",
    "Reference": "Returns the server log writer.",
    "HebCup": "Sets the Log Writer."
}
{
    "Origin": "NOTE: Changes to dynamic parameters are applied immediately.",
    "Reference": "Changes to dynamic parameters are applied immediately.",
    "HebCup": "NOTE: Changes to dynamic parameters are applied immediately."
}
{
    "Origin": "Set name of the Cosmos DB MongoDB database.",
    "Reference": "Set the resource value.",
    "HebCup": "Set name of the Cosmos DB resource database."
}
{
    "Origin": "File format of the scored parses\n<# of parses>\\t",
    "Reference": "File format of the scored parses:",
    "HebCup": "File format of the scored parses\n<# of parses>\\t"
}
{
    "Origin": "Returns the ratings entry persistence.",
    "Reference": "Returns the asset entry set like persistence.",
    "HebCup": "Returns the Asset Entry Set Like Persistence."
}
{
    "Origin": "ResolutionException} for exactly the same reasons specified in\n{@code resolveRequires}.",
    "Reference": "ResolutionException} for exactly the same reasons specified in\n{@code resolve}.",
    "HebCup": "ResolutionException} for exactly the same reasons specified in {@code resolve}."
}
{
    "Origin": "Any error can be retrieved by calling {@link\n#getErrors(UUID)}.",
    "Reference": "Any error can be retrieved by using the\nreturned {@link ScriptMailResult}.",
    "HebCup": "Any error can be retrieved by calling {@link #getErrors(ScriptMailResult)}."
}
{
    "Origin": "Gets the amount of the notional exchange.",
    "Reference": "Gets the payment amount.",
    "HebCup": "Gets the get of the notional exchange."
}
{
    "Origin": "Gets the value of the any property.",
    "Reference": "Gets the value of the schemaLanguage property.",
    "HebCup": "Gets the value of the SchemaLanguage property."
}
{
    "Origin": "Apply {@link #coerce(String, Type, Object, ReadDataContext)} method to a collection item.",
    "Reference": "Apply {@link #coerce(String, Type, CNode, DataContext)} method to a collection item.",
    "HebCup": "Apply {@link#coerce (String , Type , Object , DataContext)} method to a collection item."
}
{
    "Origin": "bulk insert the buffered data into the store.",
    "Reference": "bulk insert the buffered data into the store iff",
    "HebCup": "bulk insert the buffered data into the store."
}
{
    "Origin": "And verify that the allocation should finish soon after the maxBlockTimeMs.",
    "Reference": "And verify that the allocation attempt finishes soon after the maxBlockTimeMs.",
    "HebCup": "And verify that the TimeoutException should finish soon after the maxBlockTimeMs."
}
{
    "Origin": "ID of the OAuth client",
    "Reference": "ID of the OpenID client",
    "HebCup": "ID of the OpenID client"
}
{
    "Origin": "When the returned value is not null use Cookie methods getName() and getValue()\nto set the Cookie header on an HTTP request with header value of",
    "Reference": "If the returned value is not null, use Cookie methods getName() and getValue()\nto set the Cookie header on an HTTP request with header value of",
    "HebCup": "When the returned value is not null use Cookie methods getName() and getValue()\nto set the Cookie header on an HTTP request with header value of"
}
{
    "Origin": "Creates needed cross-reference entries between the given primary (pk) and natural (naturalIdValues) key values\nfor the given persister.",
    "Reference": "Creates needed cross-reference entries between the given primary (pk) and natural (naturalIdValues) key values\nfor the given descriptor.",
    "HebCup": "Creates needed cross-reference entries between the given primary (pk) and natural (naturalIdValues) key values for the given TypeDescriptor."
}
{
    "Origin": "Verifies the status message in the page is same as the one specified.",
    "Reference": "Verifies that the texts of user status messages in the page are equal to the expected texts.",
    "HebCup": "Verifies the TextsForAllStatusMessagesToUser message in the page is same as the one specified."
}
{
    "Origin": "Create an instance of {@link JAXBElement }{@code <}{@link CTMarkupRange }{@code >}}",
    "Reference": "Create an instance of {@link JAXBElement }{@code <}{@link CTMoveToRangeEnd }{@code >}}",
    "HebCup": "Create an instance of {@link JAXBElement} {@code <} {@link CTMoveToRangeEnd} {@code >}}"
}
{
    "Origin": "To create a {@link DatabaseId} from known name and UUID.",
    "Reference": "To create a {@link NamedDatabaseId} from known name and UUID.",
    "HebCup": "To create a {@link NamedDatabaseId} from known name and UUID."
}
{
    "Origin": "Processes an invalid character.",
    "Reference": "Processes an invalid codepoint.",
    "HebCup": "Processes an invalid character."
}
{
    "Origin": "Sets the event index.",
    "Reference": "Sets the event indexes.",
    "HebCup": "Sets the event Indexes."
}
{
    "Origin": "Parses an RFC3339 date/time value with millisecond precision and returns this as a {@link",
    "Reference": "Parses an RFC3339 date/time value with nanosecond precision and returns this as a {@link",
    "HebCup": "Parses an RFC3339 Seconds/time value with millisecond precision and returns this as a {@link"
}
{
    "Origin": "Execute and passed template.",
    "Reference": "Execute the passed template.",
    "HebCup": "Execute and passed template."
}
{
    "Origin": "Returns an adjusted time based on this time.",
    "Reference": "Returns an adjusted copy of this time.",
    "HebCup": "Returns an adjusted time based on this time."
}
{
    "Origin": "Sets the occurrence indicator to 1 if the first expression returns at least one non-array item,\nor if it refers to the context item.",
    "Reference": "Sets the occurrence indicator to 1 if the first expression returns at least one non-array item.",
    "HebCup": "Sets the occurrence indicator to 1 if the first expression returns at least one non-array item,\nor if it refers to the context item."
}
{
    "Origin": "If circular initialization of the system class loader is detected then\nan unspecified error or exception is thrown.",
    "Reference": "If circular initialization of the system class loader is detected then\nan {@code IllegalStateException} is thrown.",
    "HebCup": "If circular initialization of the system class loader is detected then an unspecified Exception or exception is thrown."
}
{
    "Origin": "This uses the default project ID configured see {@link ServiceOptions#getDefaultProjectId}.",
    "Reference": "See {@link ServiceOptions#getDefaultProjectId}.",
    "HebCup": "This uses the default project ID configured see {@link ServiceOptions#getDefaultProjectId}."
}
{
    "Origin": "If the setting is locked, then no modifications can be\nmade to this setting.",
    "Reference": "If it is, then no modifications can be\nmade to this setting.",
    "HebCup": "If the setting is Read Only, then no modifications can be made to this setting."
}
{
    "Origin": "Delete nodes from Recycle Bin\n### Functional Description: Permanently remove a list of nodes from the Recycle Bin.",
    "Reference": "Delete nodes from recycle bin\n### Functional Description: Permanently remove a list of nodes from the recycle bin.",
    "HebCup": "Auth nodes from Recycle Bin###Functional Description: Permanently remove a list of nodes from the Recycle Bin."
}
{
    "Origin": "Returns the result of interpreting the object as an instance of 'Plugin Bundle Update Information'.",
    "Reference": "Returns the result of interpreting the object as an instance of 'Plugin Bundle'.",
    "HebCup": "Returns the result of interpreting the object as an instance of 'Plugin Bundle'."
}
{
    "Origin": "Obtains an instance from zero rate sensitivity and bond group.",
    "Reference": "Obtains an instance from zero rate sensitivity and group.",
    "HebCup": "Obtains an instance from zero rate sensitivity and Repo Group."
}
{
    "Origin": "Update the data source which ingest jobs are being displayed for",
    "Reference": "Changes the data source for which ingest jobs are being displayed.",
    "HebCup": "set the data source which ingest jobs are being displayed for"
}
{
    "Origin": "Converts a Raml documentation to a Restlet definition.",
    "Reference": "Translates a Raml documentation to a Restlet definition.",
    "HebCup": "translate a Raml documentation to a Restlet definition."
}
{
    "Origin": "Return a scalar {@code Codec} for the given range.",
    "Reference": "Return a scalar {@code Encodec} for the given range.",
    "HebCup": "Return a scalar {@code Encodec} for the given range."
}
{
    "Origin": "The {@link RsaKeyCreateOptions#getKeySize() keySize} can be\noptionally specified.",
    "Reference": "The {@link CreateRsaKeyOptions#getKeySize() keySize} can be\noptionally specified.",
    "HebCup": "The {@link CreateRsaKeyOptions#getKeySize () keySize} can be optionally specified."
}
{
    "Origin": "Register a handler method and its unique mapping, on startup.",
    "Reference": "Register a handler method and its unique mapping.",
    "HebCup": "Register a handler method and its unique mapping, on startup."
}
{
    "Origin": "Adds a new job to the job queue to remove the specified extension from the specified namespace.",
    "Reference": "Adds a new job to the job queue to perform the given uninstall request.",
    "HebCup": "Adds a new job to the job queue to remove the specified Uninstall from the specified namespace."
}
{
    "Origin": "Write a line of the CoNLL output.",
    "Reference": "Produce a line of the CoNLL output.",
    "HebCup": "Write a line of the CoNLL output."
}
{
    "Origin": "Returns the list of IDs of all the {@link CpuProfiler.TraceInfo} created in the current session, ordered by \"from\" timestamp.",
    "Reference": "Returns the list of IDs of all the {@link Cpu.CpuTraceInfo} created in the current session, ordered by \"from\" timestamp.",
    "HebCup": "Returns the list of IDs of all the {@link Cpu.CpuTraceInfo} created in the current session , ordered by ``from`` timestamp."
}
{
    "Origin": "If there is no separate publisher ID property defined, this group name\nwill also be used as a WAN publisher ID.",
    "Reference": "If there is no separate publisher ID property defined, this cluster name\nwill also be used as a WAN publisher ID.",
    "HebCup": "If there is no separate publisher ID property defined, this cluster Name will also be used as a WAN publisher ID."
}
{
    "Origin": "{@code protocol} and {@code proxy} will be null and {@code throwable} will be non-null in\nthe case of a failed connection attempt.",
    "Reference": "{@code protocol} and {@code proxy} will be null and {@code ioe} will be non-null in\nthe case of a failed connection attempt.",
    "HebCup": "{@code protocol} and {@code proxy} will be null and {@code IOException} will be non-null in the case of a failed connection attempt."
}
{
    "Origin": "It will provide temporary loader component in place of final component until its data is fully loaded.",
    "Reference": "It will also provide temporary loader component in place of final component until its data is fully loaded.",
    "HebCup": "It will provide temporary loader component in place of show component until its data is fully loaded."
}
{
    "Origin": "Returns the selected remote file",
    "Reference": "Returns the selected remote resource",
    "HebCup": "Returns the Selected Remote Resource"
}
{
    "Origin": "Returns the {@link CaptureRequestConfig} for the {@link CaptureStage} object.",
    "Reference": "Returns the {@link CaptureConfig} for the {@link CaptureStage} object.",
    "HebCup": "Returns the {@link CaptureConfig} for the {@link CaptureStage} object."
}
{
    "Origin": "Set the values for some metadata keys on a collection alias.",
    "Reference": "Set the values for some properties keys on a collection alias.",
    "HebCup": "Set the values for some Properties keys on a collection alias."
}
{
    "Origin": "When no time zone is specified at all, UTC is presumed.",
    "Reference": "When no time zone is specified at all, we use the default.",
    "HebCup": "When no time zone is specified at all , getDefault is presumed."
}
{
    "Origin": "Prints the providers that are used by the services specified in\nthe given modules.",
    "Reference": "Prints the providers that are used by the specified services.",
    "HebCup": "Prints the providers that are used by the services specified in\nthe given modules."
}
{
    "Origin": "Set read only mode.",
    "Reference": "Toggle read only mode.",
    "HebCup": "Set toggle mode."
}
{
    "Origin": "Conversion to a InstructionHandle\nis done in InstructionList(byte[]).",
    "Reference": "InstructionHandle is done in InstructionList(byte[]).",
    "HebCup": "Conversion to a InstructionHandle\nis done in InstructionList(byte[])."
}
{
    "Origin": "It is a wrapper of readNative to handle InterruptedException.",
    "Reference": "It is a wrapper of readInner to handle InterruptedException.",
    "HebCup": "It is a wrapper of readInner to handle InterruptedException."
}
{
    "Origin": "The writes are done across 2 different instantiations of the same SMRMap.",
    "Reference": "The writes are done across 2 different instantiations of the same CorfuTable.",
    "HebCup": "The writes are done across 2 different instantiations of the same CorfuTable."
}
{
    "Origin": "Saves changes from the bound fields to the given bean if all validators\n(binding and bean level) pass.",
    "Reference": "Writes changes from the bound fields to the given bean if all validators\n(binding and bean level) pass.",
    "HebCup": "Writes changes from the bound fields to the given bean if all validators (binding and bean level) pass."
}
{
    "Origin": "Creates an audit entry for the 'service published' event.",
    "Reference": "Creates an audit entry for the 'API published' event.",
    "HebCup": "Creates an audit entry for the 'api Published' event."
}
{
    "Origin": "Opens the specified query file.",
    "Reference": "Opens and focuses the specified query file.",
    "HebCup": "Opens the specified query file."
}
{
    "Origin": "Optimization does *not* apply to pattern:",
    "Reference": "Optimization applies to pattern:",
    "HebCup": "Optimization does *not* apply to pattern:"
}
{
    "Origin": "Returns the base section stroke.",
    "Reference": "Returns the default section stroke.",
    "HebCup": "Returns the Default Section stroke."
}
{
    "Origin": "Given a pattern, which contains one or more capturing groups, and a String,\nreturns a list with the values of the\ncaptured groups in the pattern.",
    "Reference": "Given a pattern and a string, returns a list with the values of the\ncaptured groups in the pattern.",
    "HebCup": "Given a pattern, which contains one or more capturing groups, and a String,\nreturns a list with the values of the\ncaptured groups in the pattern."
}
{
    "Origin": "Constructs the metric object from the thrift format.",
    "Reference": "Constructs the metric object from the proto format.",
    "HebCup": "Constructs the metric object fromProto the thrift format."
}
{
    "Origin": "The default implementation in this class returns \nif the version matches, and creates a new {@link ProtocolVersion}\notherwise.",
    "Reference": "The default implementation in this class returns {@code this}\nif the version matches, and creates a new {@link ProtocolVersion}\notherwise.",
    "HebCup": "The default implementation in this class returns \nif the version matches, and creates a new {@link ProtocolVersion}\notherwise."
}
{
    "Origin": "Stopping of FluentCucumberTestAdapter",
    "Reference": "Stopping of FluentCucumberTest adapter",
    "HebCup": "Stopping of FluentCucumberTestAdapter"
}
{
    "Origin": "Changes the default factory.",
    "Reference": "Set the default factory.",
    "HebCup": "Changes the default factory."
}
{
    "Origin": "The function should return a value in the same currency for any rates provider of CreditRatesProvider.",
    "Reference": "The function should return a value in the same currency for any rates provider of {@code CreditRatesProvider}.",
    "HebCup": "The function should return a value in the same currency for any rates provider of CreditRatesProvider."
}
{
    "Origin": "Returns a list of allowed keys.",
    "Reference": "Returns a message with allowed keys.",
    "HebCup": "Returns a list of allowed keys."
}
{
    "Origin": "If\n{@code replaceWithByteArrayCoder} is set, then replace that unknown coder with a\n{@link ByteArrayCoder}.",
    "Reference": "If\n{@code replaceWithByteArrayCoder} is set, then replace that unknown coder with a {@link",
    "HebCup": "newCoder {@code replaceWithByteArrayCoder} is set , then replace that unknown coder with a {@link ByteArrayCoder}."
}
{
    "Origin": "If propogate is true, the wrapped\nstream will also be flushed.",
    "Reference": "If propagate is true, the wrapped\nstream will also be flushed.",
    "HebCup": "If propagate is true , the wrapped stream will also be flushed."
}
{
    "Origin": "Checks if the given name is a legal binary name.",
    "Reference": "Checks if the given name is a legal type name.",
    "HebCup": "Checks if the given name is a legal Type Name."
}
{
    "Origin": "Returns the default SelectorProvider.",
    "Reference": "Returns the default SelectorProvider implementation.",
    "HebCup": "Returns the default SelectorProviderImpl."
}
{
    "Origin": "Creates a new SchemaInfoLevel builder with settings for minimum\nschema information.",
    "Reference": "Creates a new SchemaInfoLevel with settings for minimum schema\ninformation.",
    "HebCup": "Creates a new).withbuilder with settings for minimum schema information."
}
{
    "Origin": "Report all the flocks in the repository.",
    "Reference": "Report all the tribes in the repository.",
    "HebCup": "Report all the Tribes in the repository."
}
{
    "Origin": "Switching off ignoreTermFreq will return a simple averaging over all the terms found in the index",
    "Reference": "Setting ignoreTermFreq = True will return a simple averaging over all the terms in the query",
    "HebCup": "Switching off ignoreTermFreq will return a simple averaging over all the terms found in the index"
}
{
    "Origin": "Get name of the Cosmos DB SQL database.",
    "Reference": "Get the resource value.",
    "HebCup": "Get name of the Cosmos DB resource."
}
{
    "Origin": "Evaluates the {@code buildFileAST} into a {@link Package}.",
    "Reference": "Evaluates the parsed BUILD file {@code file} into a {@link Package}.",
    "HebCup": "Evaluates the {@code file} into a {@link Package}."
}
{
    "Origin": "Creates an UnicastSubject with the given internal buffer capacity hint and a callback for\nthe case when the single Subscriber cancels its subscription.",
    "Reference": "Creates an UnicastSubject with the given internal buffer capacity hint and a callback for\nthe case when the single Subscriber cancels its subscription\nor the subject is terminated.",
    "HebCup": "Creates an UnicastSubject with the given internal buffer capacity hint and a callback for\nthe case when the single Subscriber cancels its subscription."
}
{
    "Origin": "Called when there's change in the search result requested by the previous\n{@link MediaBrowser2#search(String, Bundle)}.",
    "Reference": "Called when there's change in the search result requested by the previous\n{@link MediaBrowser2#search(String, LibraryParams)}.",
    "HebCup": "Called when there's change in the search result requested by the previous {@link MediaBrowser2#search (String , LibraryParams)}."
}
{
    "Origin": "Create an instance of {@link JAXBElement }{@code <}{@link CTMarkupRange }{@code >}}",
    "Reference": "Create an instance of {@link JAXBElement }{@code <}{@link CTMoveFromRangeEnd }{@code >}}",
    "HebCup": "Create an instance of {@link JAXBElement} {@code <} {@link CTMoveFromRangeEnd} {@code >}}"
}
{
    "Origin": "Returns the {@link ColumnInfo} for the passed class name.",
    "Reference": "Returns the {@link ColumnInfo} for the passed class (internal) name.",
    "HebCup": "Returns the {@link ColumnInfo} for the passed class name."
}
{
    "Origin": "Returns an array containing some validators in order to validate the",
    "Reference": "Returns an array containing some validators in order to validate the JimpleBody",
    "HebCup": "Returns an array containing some validators in order to validate the"
}
{
    "Origin": "Sets the member's logical timestamp.",
    "Reference": "Sets the member's incarnation number.",
    "HebCup": "set Incarnation the member's logical timestamp."
}
{
    "Origin": "Delegates to {@link ServerHttpRequest#getContextPath()}.",
    "Reference": "Delegates to {@link ServerHttpRequest#getPath()}.",
    "HebCup": "Delegates to {@link ServerHttpRequest#getPath ()}."
}
{
    "Origin": "Returns an {@link Operator} that performs commit or rollback of a\ntransaction.",
    "Reference": "Returns an {@link Transformer} that performs commit or rollback of a\ntransaction.",
    "HebCup": "Returns an {@link _} that performs commit or rollback of a transaction."
}
{
    "Origin": "Sets a custom ValueFormatter for all DataSets this data object contains.",
    "Reference": "Sets a custom IValueFormatter for all DataSets this data object contains.",
    "HebCup": "Sets a custom IValueFormatter for all DataSets this data object contains."
}
{
    "Origin": "Traverse the OCSP certificate.",
    "Reference": "Traverse a certificate.",
    "HebCup": "Traverse the OCSP certificate."
}
{
    "Origin": "Executes a long work instances on a single node and verifies that it took enough time and executed on the\nexpected node.",
    "Reference": "Executes a long work instances on a single node and verifies that it took enough time and executed on the\nexpected node (the other one since Policy.ALWAYS)",
    "HebCup": "Executes a long work instances on a single node and verifies that it took enough time and executed on the\nexpected node."
}
{
    "Origin": "Gets the Right value or an alternate value, if the projected Either is a Left.",
    "Reference": "Gets the Right value or an alternate value, if the Either is a Left.",
    "HebCup": "Gets the Right value or an alternate value , return the projected Either is a Left."
}
{
    "Origin": "Gets the units of this drug order",
    "Reference": "Gets the dose units of this drug order",
    "HebCup": "Gets the doseUnits of this drug order"
}
{
    "Origin": "Add the argument to the value of this integer.",
    "Reference": "Add the argument to the value of this long.",
    "HebCup": "Add the argument to the value of this integer."
}
{
    "Origin": "Sets data to be parsed by libflac.",
    "Reference": "Sets the data to be parsed.",
    "HebCup": "Sets data to be parsed by libflac."
}
{
    "Origin": "Returns a string representation of this object; useful for testing and debugging.",
    "Reference": "Returns a string representation of this object.",
    "HebCup": "Returns a string representation of this object; useful for testing and debugging."
}
{
    "Origin": "Obtains an instance from the curve currency, date, sensitivity currency,\nbond group and value.",
    "Reference": "Obtains an instance from the curve currency, date, sensitivity currency,\ngroup and value.",
    "HebCup": "Obtains an instance from the curve currency, date, sensitivity currency, Repo Group and value."
}
{
    "Origin": "Runs the {@link Callable task} in the request scope initialized from the\n{@link RequestScope.Instance scope instance}.",
    "Reference": "Runs the {@link Callable task} in the request scope initialized from the\n{@link RequestContext scope context}.",
    "HebCup": "Runs the {@link Callable task} in the request scope initialized from the {@link RequestScope.Instance context}."
}
{
    "Origin": "Sets the price that was traded, in decimal form.",
    "Reference": "Sets the price that was traded, together with the trade date, optional.",
    "HebCup": "Sets the tradedPrice that was traded , in decimal form."
}
{
    "Origin": "Create store lock checker with lock on a provided path if it exists and writable",
    "Reference": "Create store lock checker with lock on a provided store layout if it exists and writable",
    "HebCup": "Create store lock checker with lock on a provided StoreLayout if it exists and writable"
}
{
    "Origin": "The negative of {@code absent} is {@link #contains}.",
    "Reference": "The negative of {@code absent} is {@link #containing}.",
    "HebCup": "The negative of {@code absent} is {@link#containing}."
}
{
    "Origin": "Saves the muCommander configuration.",
    "Reference": "Saves the muCommander CONFIGURATION.",
    "HebCup": "Saves the muCommander CONFIGURATION."
}
{
    "Origin": "Setter for bookModified property",
    "Reference": "Setter for bookModifiedOrUpgraded property",
    "HebCup": "Setter for bookModifiedOrUpgraded property"
}
{
    "Origin": "If the class is unpackaged, return an empty string.",
    "Reference": "If the class is in the default package, return an empty string.",
    "HebCup": "If the class is unpackaged, return an empty string."
}
{
    "Origin": "An {@link ResolvedSwapLeg} represents the same data as this leg, but with\na complete schedule of dates defined using {@link KnownAmountPaymentPeriod}.",
    "Reference": "An {@link ResolvedSwapLeg} represents the same data as this leg, but with\na complete schedule of dates defined using {@link KnownAmountSwapPaymentPeriod}.",
    "HebCup": "An {@link ResolvedSwapLeg} represents the same data as this leg, but with a complete schedule of dates defined using {@link KnownAmountSwapPaymentPeriod}."
}
{
    "Origin": "The meta-property for the {@code index} property.",
    "Reference": "The meta-property for the {@code volatilitiesName} property.",
    "HebCup": "The meta-property for the {@code FutureOptionVolatilitiesName} property."
}
{
    "Origin": "Returns a map of alias -> module for each imported module.",
    "Reference": "Returns a map of module -> alias for each imported module.",
    "HebCup": "Returns a 0 of alias -> module for each imported module."
}
{
    "Origin": "Checks IncrementalCommand cancellation detection",
    "Reference": "Checks IncrementalCommand cancellation",
    "HebCup": "Checks TestIncrementalCommand cancellation detection"
}
{
    "Origin": "Adds an unqualified \"exports dynamic private\" directive to the declaration.",
    "Reference": "Adds an unqualified \"opens\" directive to the declaration.",
    "HebCup": "Adds an unqualified ``opens`` directive to the declaration."
}
{
    "Origin": "Two pointers.",
    "Reference": "Sliding window.",
    "HebCup": "Two pointers."
}
{
    "Origin": "Create and display the picture view.",
    "Reference": "Create and display the initial view.",
    "HebCup": "Create and display the Initial View."
}
{
    "Origin": "Obtain a {@link RemoteRepository} for the data set having the specified\nSPARQL end point.",
    "Reference": "Obtain a flyweight {@link RemoteRepository} for the data set having the specified\nSPARQL end point.",
    "HebCup": "Obtain a {@link RemoteRepository} for the data set having the specified\nSPARQL end point."
}
{
    "Origin": "Set the barline that starts the part.",
    "Reference": "Set the PartBarline that starts the part.",
    "HebCup": "Set the PartBarline that starts the part."
}
{
    "Origin": "Launch the tool.",
    "Reference": "Launch the tool and exit.",
    "HebCup": "Launch the tool."
}
{
    "Origin": "Brings the BIND nodes in a correct order according to the dependencies\nthat they have.",
    "Reference": "Brings the nodes in a correct order according to binding req dependencies\nthat they have.",
    "HebCup": "Brings the nodes in a correct order according to the dependencies that they have."
}
{
    "Origin": "Write the property name and values into a StringBuffer",
    "Reference": "Write the property name and values into a StringBuilder",
    "HebCup": "Write the property name and values into a StringBuilder"
}
{
    "Origin": "Creates an uninitialized {@link HadoopFormatIO.Write}.",
    "Reference": "Creates an {@link Write.Builder} for creation of Write Transformation.",
    "HebCup": "Creates an uninitialized {@link HadoopFormatIO.Write.WriteBuilder}."
}
{
    "Origin": "called from TaskManager - creates a persistent receipt and updates the\npassed one w/ the UUID",
    "Reference": "Called from TaskManager - Creates a persistent receipt",
    "HebCup": "called from TaskManager - creates a persistent receipt and updates the\npassed one w/ the UUID"
}
{
    "Origin": "returns the number of 64 bit words it would take to hold numBits",
    "Reference": "Returns the number of 64 bit words it would take to hold numBits",
    "HebCup": "returns the number of 64 bit words it would take to hold numBits"
}
{
    "Origin": "Get data of type {@code \"text\"} from the client side {@code DataTransfer}\nobject.",
    "Reference": "Get data of type {@code \"text\"} from the {@code DataTransfer} object.",
    "HebCup": "Get data of type {@code ``text``} from the client side {@code data} object."
}
{
    "Origin": "Test that removing a column sets its width to zero.",
    "Reference": "Test that removing a column sets its width to zero and the display to none.",
    "HebCup": "Test that removing a column sets its width to zero."
}
{
    "Origin": "Builds a rollup column qualifier prefix,prepending the appender as a string\nalong with a colon as delimiter",
    "Reference": "Builds a rollup column qualifier, prepending the appender as a string\nalong with a colon as delimiter",
    "HebCup": "Builds a rollup column Rollup Qualifier,prepending the appender as a string along with a colon as delimiter"
}
{
    "Origin": "Getting Domain Information \nin the Amazon CloudSearch Developer Guide .",
    "Reference": "CloudSearch Developer Guide.",
    "HebCup": "Getting Domain Information \nin the Amazon CloudSearch Developer Guide ."
}
{
    "Origin": "Gets the contractType.",
    "Reference": "Gets the contractTypes.",
    "HebCup": "Gets the ContractTypes."
}
{
    "Origin": "Get client socket for connection.",
    "Reference": "Get client endpoints for connection.",
    "HebCup": "Get client socket for connection."
}
{
    "Origin": "First construct a map whose key is the endpoint in the GossipDigest and the value is the",
    "Reference": "First construct a map whose key is the node in the GossipDigest and the value is the",
    "HebCup": "First construct a map whose key is the Node in the GossipDigest and the value is the"
}
{
    "Origin": "Creates a new KeyInter object.",
    "Reference": "Create and add a new KeyInter object.",
    "HebCup": "Creates a new KeyInter object."
}
{
    "Origin": "Get a command locator that uses the {@link Service service locator} mechanism to find providers by their service\nkey.",
    "Reference": "Get a command locator that uses the service loading mechanism to find providers by their service key.",
    "HebCup": "Get a command locator that uses the {@link Services Services locator} mechanism to find providers by their Services key."
}
{
    "Origin": "NOTE:You cannot delete a security group that is associated\nwith any clusters.",
    "Reference": "You cannot delete a security group that is associated with any\nclusters.",
    "HebCup": "NOTE:You cannot delete a security group that is associated\nwith any clusters."
}
{
    "Origin": "Gets a localized message string based on the locale determined by the",
    "Reference": "Gets a localized message string based on the locale determined by the FacesContext.",
    "HebCup": "Gets a localized message string based on the locale determined by the"
}
{
    "Origin": "Reads the specified file and returns the contents as a string.",
    "Reference": "Reads the specified file and returns the contents as a byte array.",
    "HebCup": "Reads file specified file and returns file contents as a string."
}
{
    "Origin": "Returns {@code TokenStream} to tokenize a text.",
    "Reference": "Returns {@code TwitterTokenStream} to tokenize a text.",
    "HebCup": "Returns {@code TwitterTokenStream} to tokenize a text."
}
{
    "Origin": "RFC 2616, section VERSION defines comma as the separator for\n#token sequences.",
    "Reference": "RFC 2616, section VERSION defines comma as the separator for\n{@code #token} sequences.",
    "HebCup": "RFC 2616, section VERSION defines comma as the separator for\n#token sequences."
}
{
    "Origin": "Create an instance of {@link JAXBElement }{@code <}{@link CTMarkupRange }{@code >}}",
    "Reference": "Create an instance of {@link JAXBElement }{@code <}{@link CTMoveToRangeEnd }{@code >}}",
    "HebCup": "Create an instance of {@link JAXBElement} {@code <} {@link CTMoveToRangeEnd} {@code >}}"
}
{
    "Origin": "Split SYSTEM.CATALOG at the given split point",
    "Reference": "Synchronously split table at the given split point",
    "HebCup": "Split SYSTEM.CATALOG at the given split point"
}
{
    "Origin": "It allows to test values from the elements in safer way than by using {@link #extracting(String)}, as it\ndoesn't utilize introspection.",
    "Reference": "It allows to test values from the elements in safer way than by using {@link #extracting(String)}, as it\ndoesn't use introspection.",
    "HebCup": "It allows to test values from the elements in safer way than by using {@link #extracting(String)}, as it\ndoesn't utilize introspection."
}
{
    "Origin": "Sets the class name remote service.",
    "Reference": "Sets the journal article remote service.",
    "HebCup": "Sets the journal Article remote service."
}
{
    "Origin": "Let the ViewGroupHandler handle clearing attributes on a given component",
    "Reference": "Let the ViewGroupHandler handle clearing attributes on the given components.",
    "HebCup": "Let the ViewGroupHandler handle clearing attributes on a given components"
}
{
    "Origin": "User names will always be checked in a\ncase insensitive manner.",
    "Reference": "User names will always be checked in a\ncase insensitive manner using the system default Locale.",
    "HebCup": "User Name.toLowerCase will always be checked in a case insensitive manner."
}
{
    "Origin": "Obtains an instance based on a single mapping from index to volatility identifier.",
    "Reference": "Obtains an instance based on a maps for credit, discount and recovery rate curves.",
    "HebCup": "Obtains an instance based on a single mapping from index to volatility identifier."
}
{
    "Origin": "Receives a problem and a queue implementing the search strategy and\ncomputes a node referencing a goal state, if such a state was found.",
    "Reference": "Template method which receives a problem and a queue implementing the search strategy\nand computes a node referencing a goal state, if such a state was found.",
    "HebCup": "Receives a problem and a queue implementing the search strategy and\ncomputes a node referencing a goal state, if such a state was found."
}
{
    "Origin": "Gets the base name, minus the full path and extension, from a full filename.",
    "Reference": "Gets the base name, minus the full path and extension, from a full fileName.",
    "HebCup": "Gets the base name, minus the full path and extension, from a full fileName."
}
{
    "Origin": "If for a specific event, you add both the notification configuration\non the vault and also specify an SNS topic in your initiate job\nrequest, Amazon Glacier sends both notifications.",
    "Reference": "If for a specific event, you add both the notification configuration on\nthe vault and also specify an SNS topic in your initiate job request,",
    "HebCup": "If for a specific event, you add both the notification configuration\non the vault and also specify an SNS topic in your initiate job\nrequest, Amazon Glacier sends both notifications."
}
{
    "Origin": "a FileChooser for PCSI12 (.p12|.P12) files.",
    "Reference": "a FileChooser for PCSI12 (.p12|.P12) or JKS files.",
    "HebCup": "a OrJKSFileChooser for PCSI12 (.p12|.P12) files."
}
{
    "Origin": "By default, the service\nreturns no processing metrics.",
    "Reference": "By default, the service splits\ntranscripts based solely on the pause interval.",
    "HebCup": "By default, the service returns no split Transcript At Phrase End."
}
{
    "Origin": "If any offset in other is a less than or equal to an offset\nin this, then that offset is an offset for the array in lub.",
    "Reference": "If any offset in other is a less than or equal to an\noffset in this, then that offset is an offset for the sequence in lub.",
    "HebCup": "If any offset in other is a less than or equal to an offset in this , then that offset is an offset for the sequence in lub."
}
{
    "Origin": "Converts an array of raw binary data into an array of ascii 0 and 1 characters.",
    "Reference": "Converts an array of raw binary data into an array of ASCII 0 and 1 characters.",
    "HebCup": "Converts an array of raw binary data into an array of ascii 0 and 1 characters."
}
{
    "Origin": "Indexes in-between the old size and the requested size are left with a\nplaceholder that is replaced with a factory object when requested.",
    "Reference": "Indexes in-between the old size and the requested size\nare left with a placeholder that is replaced with a factory or\ntransformer object when requested.",
    "HebCup": "Indexes in-between the old size and the requested size are left with a\nplaceholder that is replaced with a factory object when requested."
}
{
    "Origin": "Returns a string representation of this object; useful for testing and debugging.",
    "Reference": "Returns a string representation of this object.",
    "HebCup": "Returns a string representation of this object; useful for testing and debugging."
}
{
    "Origin": "Like {@link #defaultFormatRelationshipFileHeader(Supplier)} with UTC as the default time zone.",
    "Reference": "Like {@link #defaultFormatRelationshipFileHeader(boolean)} with no normalization.",
    "HebCup": "Like {@link #defaultFormatRelationshipFileHeader(Supplier)} with UTC as the default time zone."
}
{
    "Origin": "Returns a copy of this qualifier with array-offset pairs where in the original the offset\ncontains an access of an array length in arrays.",
    "Reference": "Returns a copy of this qualifier with sequence-offset pairs where in the original the\noffset contains an access of an sequence length in {@code sequences}.",
    "HebCup": "Returns a copy of this qualifier with array-offset pairs where in the original the offset contains an access of an Sequence Length in arrays."
}
{
    "Origin": "Returns the value of \"serverScheme\" property in latke.properties, returns \"\" if not found.",
    "Reference": "Returns the value of \"serverScheme\" property in latke.properties.",
    "HebCup": "Returns the value of ``throw`` property in latke.properties, returns ```` if not found."
}
{
    "Origin": "Sets the base section stroke.",
    "Reference": "Sets the default section stroke.",
    "HebCup": "Sets the Default Section stroke."
}
{
    "Origin": "To allow getting the item, return the {@link LibraryResult} with the\n{@link LibraryResult#RESULT_CODE_SUCCESS} and the media item.",
    "Reference": "To allow getting the item, return the {@link LibraryResult} with the\n{@link LibraryResult#RESULT_SUCCESS} and the media item.",
    "HebCup": "To allow getting the item, return the {@link LibraryResult} with the {@link LibraryResult#RESULT_ERROR_SUCCESS} and the media item."
}
{
    "Origin": "Returns the DynamicList used by this SortableListPanel.",
    "Reference": "Returns the {@link DynamicList} used by this SortableListPanel.",
    "HebCup": "Returns the DynamicList used by this SortableListPanel."
}
{
    "Origin": "Defaults to {@literal false}.",
    "Reference": "Defaults to {@literal RESP3}.",
    "HebCup": "Defaults to {@literal false}."
}
{
    "Origin": "- Mutual trust exists between gateway and service\n  - We must use the `gateway2` cert NOT `gateway`.",
    "Reference": "- Mutual trust exists between gateway and API\n  - We must use the `gateway2` cert NOT `gateway`.",
    "HebCup": "- Mutual trust exists between gateway and Api - We must use the `gateway2` cert NOT `gateway`."
}
{
    "Origin": "Returns the identifier of this action profile group.",
    "Reference": "Returns the ID of this action profile group.",
    "HebCup": "Returns the identifier of this action profile group."
}
{
    "Origin": "Create a new {@link MergedAnnotation} instance from the specified\nannotation type.",
    "Reference": "Create a new {@link MergedAnnotation} instance of the specified\nannotation type.",
    "HebCup": "Create a new {@link MergedAnnotation} instance of the specified annotation type."
}
{
    "Origin": "Returns true if this TaggedInfo has at least 1 comprises tag.",
    "Reference": "Returns true if this TaggedInfo has a non-null comprises list.",
    "HebCup": "Returns true if this TaggedInfo has at least 1 comprises tag."
}
{
    "Origin": "Configures the wait duration which specifies how long the CircuitBreaker should stay open, before it switches to half open.",
    "Reference": "Configures an interval function with a fixed wait duration which controls how long the CircuitBreaker should stay open, before it switches to half open.",
    "HebCup": "Configures the wait Interval Function which specifies how long the CircuitBreaker should stay open, before it switches to half open."
}
{
    "Origin": "Total runtime size is 1296 bytes",
    "Reference": "Total runtime size is 14048 bytes",
    "HebCup": "Total runtime size is 1296 bytes"
}
{
    "Origin": "Set Stringwert.",
    "Reference": "Set Eingaberegister Name.",
    "HebCup": "Set Stringwert."
}
{
    "Origin": "Caches numeric host names only.",
    "Reference": "Caches numeric IPs only.",
    "HebCup": "Caches numeric host names only."
}
{
    "Origin": "Security attributes, provide the ability to associate arbitrary information\nwith a security in a key-value map.",
    "Reference": "Security attributes provide the ability to associate arbitrary information in a key-value map.",
    "HebCup": "Attribute, provide the ability to associate arbitrary information with a security in a key-value map."
}
{
    "Origin": "On the other hand, in the sentence \"... which Mr. Bush was\nfighting for\", we should have pobj(for, which).",
    "Reference": "On the other hand, in the sentence \"... which Mr. Bush was\nfighting for\", we should have case(which, for).",
    "HebCup": "On the other hand, in the sentence \"... which Mr. Bush was\nfighting for\", we should have pobj(for, which)."
}
{
    "Origin": "Returns a new Task that, when this task completes\nnormally, executes the given action using the supplied Scheduler.",
    "Reference": "Returns a new Task that, when this task completes\nnormally, executes the given action using the supplied Executor.",
    "HebCup": "Returns a new Task that, when this task completes normally, executes the given action using the supplied Executor."
}
{
    "Origin": "If the compatibility is INCOMPATIBLE, returns the first part of the reader schema that failed\ncompatibility check.",
    "Reference": "Returns the fragment of the reader schema that failed compatibility check.",
    "HebCup": "If the compatibility is INCOMPATIBLE, returns the first part of the reader schema that failed\ncompatibility check."
}
{
    "Origin": "returns the my site fragment from the sites tab",
    "Reference": "returns the my site fragment from the sites page",
    "HebCup": "returns the my site fragment from the sites Nav"
}
{
    "Origin": "Return the underlying RabbitTemplate used for sending.",
    "Reference": "Return the underlying {@link RabbitTemplate} used for sending.",
    "HebCup": "Return the underlying Rabbit used for sending."
}
{
    "Origin": "Returns a string representation of this object; useful for testing and debugging.",
    "Reference": "Returns a string representation of this object.",
    "HebCup": "Returns a string representation of this object; useful for testing and debugging."
}
{
    "Origin": "Called by {@link MediaSession2Stub#getLibraryRoot(IMediaController2, Bundle)}.",
    "Reference": "Called by {@link MediaSession2Stub#getLibraryRoot(IMediaController2, int, ParcelImpl)}.",
    "HebCup": "Called by {@link MediaSession2Stub#getLibraryResult(IMediaController2, Bundle)}."
}
{
    "Origin": "NOTE: A data retrieval policy can cause your initiate\nretrieval job request to fail with a PolicyEnforcedException\nexception.",
    "Reference": "A data retrieval policy can cause your initiate retrieval job request to\nfail with a PolicyEnforcedException exception.",
    "HebCup": "NOTE: A data retrieval policy can cause your initiate\nretrieval job request to fail with a PolicyEnforcedException\nexception."
}
{
    "Origin": "Also @see {@link Future#accumulate(CollectionX, Reducer)} if you would like a failure to result in a Future\nwith an error",
    "Reference": "Also @see {@link Future#accumulate(IterableX, Reducer)} if you would like a failure to result in a Future\nwith an error",
    "HebCup": "Also @see {@link Future#accumulate(IterableX, Reducer)} if you would like a failure to result in a Future with an error"
}
{
    "Origin": "Executes all listeners {@linkplain #add added} prior to this call, serially and in order.",
    "Reference": "Dispatches all listeners {@linkplain #enqueue enqueued} prior to this call, serially and in\norder.",
    "HebCup": "Executes all listeners {@linkplain #add added} prior to this call, serially and in order."
}
{
    "Origin": "Adds a new tag for the specified {@link NamespacedEntityId}.",
    "Reference": "Adds a new tag for the specified {@link MetadataEntity}.",
    "HebCup": "Adds a new tag for the specified {@link MetadataEntity}."
}
{
    "Origin": "Determine if the supplied class is an inner class.",
    "Reference": "Determine if the supplied class is an inner class,\ni.e.",
    "HebCup": "Determine if the supplied class is an inner class."
}
{
    "Origin": "Sets a new ShapeRenderer responsible for drawing this DataSet.",
    "Reference": "Sets a new IShapeRenderer responsible for drawing this DataSet.",
    "HebCup": "Sets a new IShapeRenderer responsible for drawing this DataSet."
}
{
    "Origin": "Applies the optimization (main entry point).",
    "Reference": "Applies the optimization to the given query root.",
    "HebCup": "Applies the optimization (main entry point)."
}
{
    "Origin": "Creates query for the given searchPattern.",
    "Reference": "Queries this search source for the given searchPattern.",
    "HebCup": "Creates Source for the given searchPattern."
}
{
    "Origin": "Get Qty Issued.",
    "Reference": "Get Ausgelagerte Menge.",
    "HebCup": "Get Qty Issued."
}
{
    "Origin": "This delegates to {@link #execute(CommandSender, String, String[], ResourceBundle,",
    "Reference": "This delegates to {@link #execute(CommandSender, String, String[], CommandMessages)}.",
    "HebCup": "This delegates to {@link #execute(CommandSender, String, String[], ResourceBundle,"
}
{
    "Origin": "Creates query for the given queryString.",
    "Reference": "Queries this search source for the given queryString.",
    "HebCup": "Creates Source for the given queryString."
}
{
    "Origin": "Returns a list of classes which contain the @Deprecated annotation.",
    "Reference": "Returns a list of class names which contain the @Deprecated annotation.",
    "HebCup": "Returns a list of String which contain the @Deprecated annotation."
}
{
    "Origin": "Returns the border size that defines the attack range for a {@link robocode.SentryRobot SentryRobot}.",
    "Reference": "Returns the border size that defines the attack range for a {@link robocode.BorderSentryRobot SentryRobot}.",
    "HebCup": "Returns the border size that defines the attack range for a {@link robocode.SentryRobot borderSentryRobot}."
}
{
    "Origin": "Aurora on Amazon RDS \nin the Amazon RDS User Guide.",
    "Reference": "Aurora, see Aurora on Amazon RDS in the Amazon RDS User Guide.",
    "HebCup": "Aurora on Amazon RDS \nin the Amazon RDS User Guide."
}
{
    "Origin": "Inserts or updates an external ID.",
    "Reference": "Deletes an external ID.",
    "HebCup": "Inserts or updates an external ID."
}
{
    "Origin": "Trading Strategy - we expect the engine to shutdown.",
    "Reference": "StrategyException from Trading Strategy - we expect the engine to shutdown.",
    "HebCup": "Trading Strategy - we expect the engine to shutdown."
}
{
    "Origin": "If the divider character isn't found\nin the word, then the whole string becomes the word, and lemma and tag\nare .",
    "Reference": "If the divider character isn't found\nin the word, then the whole string becomes the word, and lemma and tag\nare {@code null}.",
    "HebCup": "If the divider character isn't found\nin the word, then the whole string becomes the word, and lemma and tag\nare ."
}
{
    "Origin": "Examines the a file's first bytes and estimates the file's type.",
    "Reference": "Examines the file's bytes and estimates the file's type.",
    "HebCup": "Examines the a file's first offset and estimates the file's type."
}
{
    "Origin": "This information is useful for implicit and safe casting.",
    "Reference": "This information is useful for optional arguments with default value.",
    "HebCup": "This information is useful for implicit and safe casting."
}
{
    "Origin": "Construct a new MemberSummaryBuilder.",
    "Reference": "Construct a new MemberSummaryBuilder for a general type.",
    "HebCup": "Construct a new MemberSummaryBuilder."
}
{
    "Origin": "Foreign call: {@link SnippetRuntime#DEOPTTEST}.",
    "Reference": "Foreign call: {@link #DEOPTTEST}.",
    "HebCup": "Foreign call: {@link SnippetRuntime#DEOPTTEST}."
}
{
    "Origin": "All the arrays must have the same number of elements in each array.",
    "Reference": "All the arrays must have the same number of elements.",
    "HebCup": "All the arrays must have the same number of elements in each array."
}
{
    "Origin": "Creates and starts a Tailer for the given file.",
    "Reference": "Creates and starts a Tailer for the given file with default buffer size.",
    "HebCup": "Creates and starts a create for the given file."
}
{
    "Origin": "Initializing jerseyClient.",
    "Reference": "Initilialization of jersey.",
    "HebCup": "Initializing jerseythis.jersey1xClient."
}
{
    "Origin": "Sets BCC addresses.",
    "Reference": "Appends CC address.",
    "HebCup": "Sets Cc addresses."
}
{
    "Origin": "Returns the object at the specified index, if there is one, or\n.",
    "Reference": "Returns the object at the specified index, if there is one, or\n{@code null}.",
    "HebCup": "Returns the object at the specified index, if there is one, or\n."
}
{
    "Origin": "Returns a string representation of this object; useful for testing and debugging.",
    "Reference": "Returns a string representation of this object.",
    "HebCup": "Returns a string representation of this object; useful for testing and debugging."
}
{
    "Origin": "Creates an {@link ExecutorService} object backed by a thread pool\nwith a fixed number of threads..",
    "Reference": "Creates an {@link ExecutorService} object backed by a thread pool.",
    "HebCup": "Creates an {@link factoryService} object backed by a thread pool with a fixed number of threads.."
}
{
    "Origin": "A candidate package name\n    is derived from an entry using the characters up to, but not\n    including, the last forward slash.",
    "Reference": "A candidate package name is derived from the name\n    using the characters up to, but not including, the last forward slash.",
    "HebCup": "A candidate package name\n    is derived from an entry using the characters up to, but not\n    including, the last forward slash."
}
{
    "Origin": "Calculates the cash flow for a trading record.",
    "Reference": "Calculates the cash flow for the closed trades of a trading record.",
    "HebCup": "Calculates the cash flow for a trading record."
}
{
    "Origin": "If the compatibility is INCOMPATIBLE, returns the first part of the writer schema that failed\ncompatibility check.",
    "Reference": "Returns the fragment of the writer schema that failed compatibility check.",
    "HebCup": "If the compatibility is INCOMPATIBLE, returns the first part of the writer schema that failed\ncompatibility check."
}
{
    "Origin": "Converting {@code http} and  URIs to their WebSocket equivalent",
    "Reference": "Converting {@code http} and {@code https} URIs to their WebSocket equivalent",
    "HebCup": "Converting {@code http} and  URIs to their WebSocket equivalent"
}
{
    "Origin": "If Autopsy is indeed running from command line, then use the command line\nstartup window and kick off command line processing.",
    "Reference": "If Autopsy is indeed running from command line, then use the command line\nstartup window.",
    "HebCup": "If Autopsy is indeed running from command line, then use the command line\nstartup window and kick off command line processing."
}
{
    "Origin": "Return a live {@link ZooKeeper} connection.",
    "Reference": "The {@link ZooKeeper} connection for the client.",
    "HebCup": "Return a live {@link Keeper} connection."
}
{
    "Origin": "Gets the curent contents of this byte stream as a string.",
    "Reference": "Gets the curent contents of this byte stream as a string\nusing the platform default charset.",
    "HebCup": "Gets the curent contents of this byte stream as a string."
}
{
    "Origin": "wrap type in Class<> if usingClass==true",
    "Reference": "Wrap type in Class<> if usingClass==true.",
    "HebCup": "wrap type in Class<> if usingClass==true"
}
{
    "Origin": "Get Project Type Phases",
    "Reference": "get Project Type Tasks",
    "HebCup": "Get Ctx Type Phases"
}
{
    "Origin": "Test for reading paragraphs from Range after replacing some\ntext in this Range.",
    "Reference": "Test for reading paragraphs from Range after replacing some text in this",
    "HebCup": "Test for reading paragraphs from Range after replacing some\ntext in this Range."
}
{
    "Origin": "Returns true if this result represents a malformed-input error.",
    "Reference": "Tells whether or not this object describes a malformed-input error.",
    "HebCup": "Returns true if (result represents a malformed-input error."
}
{
    "Origin": "Receives a {@link ViewIdInfo} and returns the name of the View class that is implied by it.",
    "Reference": "Receives a {@link ViewIdData} and returns the name of the View class that is implied by it.",
    "HebCup": "Receives a {@link ViewIdData} and returns the name of the View class that is implied by it."
}
{
    "Origin": "Returns a string representation of this object; useful for testing and debugging.",
    "Reference": "Returns a string representation of this object.",
    "HebCup": "Returns a string representation of this object; useful for testing and debugging."
}
{
    "Origin": "This test ensures that the {@link KuduIO} correctly respects parallelism by\ndeserializes writers and that each writer is opening and closing Kudu sessions.",
    "Reference": "This test ensures that the {@link KuduIO} correctly respects parallelism by\ndeserializing writers and that each writer is opening and closing Kudu sessions.",
    "HebCup": "This test ensures that the {@link KuduIO} correctly respects parallelism by\ndeserializes writers and that each writer is opening and closing Kudu sessions."
}
{
    "Origin": "Convert to primitive types, returning default value if text is null.",
    "Reference": "Convert to integer, returning default value if text is inconvertible.",
    "HebCup": "Convert to primitive types, returning default value if text is null."
}
{
    "Origin": "Returns a string representation of this object; useful for testing and debugging.",
    "Reference": "Returns a string representation of this object.",
    "HebCup": "Returns a string representation of this object; useful for testing and debugging."
}
{
    "Origin": "Converts an {@link Observable} into a {@link Promise}, for the observable's single item.",
    "Reference": "Converts an {@link SingleOnSubscribe} into a {@link Promise}, for the Single's item.",
    "HebCup": "Converts an {@link Single} into a {@link Promise} , for the observable's single item."
}
{
    "Origin": "Sets the resultVariable.",
    "Reference": "Set the resultVariable.",
    "HebCup": "Sets the resultVariable."
}
{
    "Origin": "Removes all metadata (including properties and tags) for the specified {@link NamespacedEntityId}.",
    "Reference": "Removes all metadata (including properties and tags) for the specified {@link MetadataEntity}.",
    "HebCup": "Removes all metadata (including properties and tags) for the specified {@link MetadataEntity}."
}
{
    "Origin": "Uploads a file to a share using a multipart request containing a metadata part and a filedata part.",
    "Reference": "Upload a file to a share using a multipart request containing first a metadata (see reponse) part and a then the filedata part.",
    "HebCup": "Uploads a file to a share using a multipart request containing a metadata part and a filedata part."
}
{
    "Origin": "This  method is used to add a new resource to the\nsigned info.",
    "Reference": "This {@code addDocument} method is used to add a new resource to the\nsigned info.",
    "HebCup": "getDocument method is used to add a new resource to the signed info."
}
{
    "Origin": "Sets the value of the cryptAlgorithmSid property.",
    "Reference": "Sets the value of the hashValue property.",
    "HebCup": "Sets the value of the HashValue property."
}
{
    "Origin": "Returns {@link InstanceManager} relevant to current application.",
    "Reference": "Returns {@link InjectionManager} relevant to current application.",
    "HebCup": "Returns {@link InjectionManager} relevant to current application."
}
{
    "Origin": "Sets the column criterion currently used to sort the table.",
    "Reference": "Sets the column to be used as a criterion to sort the table.",
    "HebCup": "Sets the column criterion currently used to sort the table."
}
{
    "Origin": "Returns the cluster name uniquely identifying the hazelcast cluster.",
    "Reference": "Returns the client name.",
    "HebCup": "Returns the client Name uniquely identifying the hazelcast cluster."
}
{
    "Origin": "Ensure that {@link #loadSubscriptions(Context)} was called to set up the manager.",
    "Reference": "When first used {@link #checkEnabledExtensions(Context)} is called to set up the manager.",
    "HebCup": "Ensure that {@link #loadSubscriptions(Context)} was called to set up the manager."
}
{
    "Origin": "Returns a string representation of this object; useful for testing and debugging.",
    "Reference": "Returns a string representation of this object.",
    "HebCup": "Returns a string representation of this object; useful for testing and debugging."
}
{
    "Origin": "Gets the value of the sid attribute of the\nconference-info element.",
    "Reference": "Gets the value of the entity attribute of the\nconference-info element.",
    "HebCup": "Gets the value of the Entity attribute of the conference-info element."
}
{
    "Origin": "This GET\nscenario will return a setting when the etag provided does not match the one of the current setting.",
    "Reference": "This GET\nscenario will return a setting when the ETag provided does not match the one of the current setting.",
    "HebCup": "This GET scenario will return a Configuration Setting When the etag provided does not match the one of the current setting."
}
{
    "Origin": "Returns a value of UTC milliseconds representing today for the device's current timezone.",
    "Reference": "Returns the UTC milliseconds representing the first moment of today in local timezone.",
    "HebCup": "Returns a value of UTC milliseconds representing Calendar for the device's current timezone."
}
{
    "Origin": "retrieve / build the crawlspecification for the given arguments.",
    "Reference": "retrieve / build the CrawljaxConfiguration for the given arguments.",
    "HebCup": "retrieve / build the CrawljaxConfiguration for the given arguments."
}
{
    "Origin": "Returns the length of this path.",
    "Reference": "its number of steps.",
    "HebCup": "Returns the length of this path."
}
{
    "Origin": "Register the given dynamic JMX MBean.",
    "Reference": "Registers the JMX MBean.",
    "HebCup": "Register the given dynamic JMX MBean."
}
{
    "Origin": "Verify access to a member, returning {@code false} if no access",
    "Reference": "Verify access to a member and return {@code true} if it is granted.",
    "HebCup": "Verify access to a get , returning {@code false} if no access"
}
{
    "Origin": "Gets the threshold parameter.",
    "Reference": "Get the threshold parameter.",
    "HebCup": "Gets the getThreshold parameter."
}
{
    "Origin": "Returns a lightweight, low-level parent axis iterator.",
    "Reference": "Returns a light-weight, low-level parent axis iterator.",
    "HebCup": "Returns a lightweight, low-level parent axis iterator."
}
{
    "Origin": "Returns a string representation of this object; useful for testing and debugging.",
    "Reference": "Returns a string representation of this object.",
    "HebCup": "Returns a string representation of this object; useful for testing and debugging."
}
{
    "Origin": "{@codesnippet com.azure.storage.blob.specialized.BlobAsyncClientBase.setHTTPHeaders#BlobHttpHeaders}",
    "Reference": "{@codesnippet com.azure.storage.blob.specialized.BlobAsyncClientBase.setHttpHeaders#BlobHttpHeaders}",
    "HebCup": "{@codesnippet com.azure.storage.blob.specialized.BlobAsyncClientBase.setHttpHeaders#BlobHttpHeaders}"
}
{
    "Origin": "This is a helper method intended to be called from {@link\ngetAnnotationMirrorOfContractAnnotation} and {@link getAnnotationMirrorOfMetaAnnotation}.",
    "Reference": "This is a helper method intended to be called from {@link\ngetAnnotationMirrorOfContractAnnotation} and {@link getAnnotationMirrorOfContractAnnotation}.",
    "HebCup": "This is a helper method intended to be called from {@link\ngetAnnotationMirrorOfContractAnnotation} and {@link getAnnotationMirrorOfMetaAnnotation}."
}
{
    "Origin": "Increment the count of all applied state updates by {@param num}.",
    "Reference": "Increment the count of all applied state updates in Litho components by {@param num}.",
    "HebCup": "Increment the count of all Component Applied State Update Count By {@param num}."
}
{
    "Origin": "Convert the attribute if necessary and add it to the profile.",
    "Reference": "Convert a profile attribute, if necessary, and add it to the profile.",
    "HebCup": "Convert the attribute convertAndAdd necessary and add it to the profile."
}
{
    "Origin": "Spark Rest (camel-spark-rest)",
    "Reference": "Apache Spark (camel-spark)",
    "HebCup": "Spark Rest (camel-spark)"
}
{
    "Origin": "Returns a comparator which can compare calendar events.",
    "Reference": "Returns the default comparator which can compare calendar events by\nduration.",
    "HebCup": "Returns a comparator which can compare calendar events."
}
{
    "Origin": "Send request to the server with early blockwise negociation through block2 option.",
    "Reference": "Send request to the server with early blockwise negotiation through block2 option.",
    "HebCup": "Send request to the server with early blockwise Negotiation through block2 option."
}
{
    "Origin": "Add a series for a Bubble type chart using using double arrays",
    "Reference": "Add a series for a Bubble type chart using using Lists",
    "HebCup": "Add a series for a Bubble type chart using using double arrays"
}
{
    "Origin": "Create an instance of {@link JAXBElement }{@code <}{@link CTMarkupRange }{@code >}}",
    "Reference": "Create an instance of {@link JAXBElement }{@code <}{@link CTMoveFromRangeEnd }{@code >}}",
    "HebCup": "Create an instance of {@link JAXBElement} {@code <} {@link CTMoveFromRangeEnd} {@code >}}"
}
{
    "Origin": "Tests that track selector will select audio tracks with higher bit-rate when other factors are\nthe same, and tracks are within renderer's capabilities.",
    "Reference": "Tests that track selector will select audio tracks with higher bit rate when other factors are\nthe same, and tracks are within renderer's capabilities, and have the same language.",
    "HebCup": "Tests that track selector will Audio audio tracks with higher bit-rate when other factors are the same , and tracks are within renderer's capabilities."
}
{
    "Origin": "{@codesnippet com.azure.data.appconfiguration.ConfigurationClient.setSetting#String-String-String}",
    "Reference": "{@codesnippet com.azure.data.appconfiguration.ConfigurationClient.setConfigurationSetting#String-String-String}",
    "HebCup": "{@codesnippet com.azure.data.appconfiguration.ConfigurationClient.setConfigurationSetting#String-String-String}"
}
{
    "Origin": "KeyCreateOptions#getNotBefore() notBefore} values are optional.",
    "Reference": "CreateKeyOptions#getNotBefore() notBefore} values are optional.",
    "HebCup": "CreateKeyOptions#getNotBefore () notBefore} values are optional."
}
{
    "Origin": "Starts a new process tracing span and attached context the EventData object for users.",
    "Reference": "Starts a new process tracing span and attaches the returned context to the EventData object for users.",
    "HebCup": "Starts a new process tracing entity and attached context the EventData object for users."
}
{
    "Origin": "Returns a new TokenStream which provides the same\noutput as the original TokenStream.",
    "Reference": "Returns a new TwitterTokenStream which provides the same\noutput as the original TwitterTokenStream.",
    "HebCup": "Returns a new TwitterTokenStream which provides the same output as the original TokenStream."
}
{
    "Origin": "Returns the source map file from the most recent recompile.",
    "Reference": "Returns the source map file given a strong name.",
    "HebCup": "Returns the ! file from the most recent recompile."
}
{
    "Origin": "Returns an unmodifiable view of the status of all steps in this run.",
    "Reference": "Returns an unmodifiable view of all step information in this run.",
    "HebCup": "Returns an unmodifiable view of the Info of all steps in this run."
}
{
    "Origin": "See Immutable Set Static Factory Methods for details.",
    "Reference": "See Unmodifiable Sets for details.",
    "HebCup": "See Unmodifiable Set Static Factory Methods for details."
}
{
    "Origin": "Get a netty {@link SslContext} instance.",
    "Reference": "Create a Netty {@link SslContext}",
    "HebCup": "Get a netty {@link return} instance."
}
{
    "Origin": "Obtains an instance of {@code OffsetTime} from an {@code Instant}.",
    "Reference": "Obtains an instance of {@code OffsetTime} from an {@code Instant} and zone ID.",
    "HebCup": "Obtains an instance of {@code IdTime} from an {@code Instant}."
}
{
    "Origin": "Creates query for the given queryString.",
    "Reference": "Queries this contact source for the given queryString.",
    "HebCup": "Creates Source for the given queryString."
}
{
    "Origin": "Group: consumer",
    "Reference": "Group: producer",
    "HebCup": "Group: consumer"
}
{
    "Origin": "Flat the linked hashmap of profiles into a list of profiles.",
    "Reference": "Flat the map of profiles into a list of profiles.",
    "HebCup": "Flat the linked hashmap of profiles into a Collections of profiles."
}
{
    "Origin": "Create a new node with the given child node commented.",
    "Reference": "Create a new node with a comment added to the given child.",
    "HebCup": "Create a new node with the given child node commented."
}
{
    "Origin": "DyRepos can add and remove repos.",
    "Reference": "DyTalks can add a talk.",
    "HebCup": "DyTalks can add and remove Talks."
}
{
    "Origin": "Query this inventory for inventories matching the supplied {@link PropertyMatcher}.",
    "Reference": "Query this inventory for inventories matching\nthe supplied {@link KeyValueMatcher}.",
    "HebCup": "Query this inventory for inventories matching the supplied {@link KeyValueMatcher}."
}
{
    "Origin": "Returns the values for the specified parameter expected to be present in the http request.",
    "Reference": "Returns the values for the specified parameter expected to be present in the HTTP request.",
    "HebCup": "Returns the values for the specified parameter expected to be present in the http request."
}
{
    "Origin": "Construct a {@link AggregationExceptions#TYPE_KEEP_SEPARATE} ContentProviderOperation.",
    "Reference": "Construct a {@link AggregationExceptions#TYPE_AUTOMATIC} ContentProviderOperation.",
    "HebCup": "Construct a {@link AggregationExceptions#TYPE_AUTOMATIC} ContentProviderOperation."
}
{
    "Origin": "Configuring Scaling Options \nin the Amazon CloudSearch Developer Guide .",
    "Reference": "CloudSearch Developer Guide.",
    "HebCup": "Configuring Scaling Options \nin the Amazon CloudSearch Developer Guide ."
}
{
    "Origin": "{@link Keys#ARMOR_STAND_MARKER}",
    "Reference": "{@link Keys#ARMOR_STAND_HAS_MARKER}",
    "HebCup": "{@link Keys#ARMOR_STAND_HAS_MARKER}"
}
{
    "Origin": "This helps live testing against specific zones only.",
    "Reference": "This helps live testing against specific regions only.",
    "HebCup": "This helps live testing against specific Regions only."
}
{
    "Origin": "Decode an action profile group with members information to a PI action\ngroup.",
    "Reference": "Decode an action profile group with members information to a PI action\nprofile group.",
    "HebCup": "Decode an action profile group with members information to a Pi Action Profile Group."
}
{
    "Origin": "Main method to invoke this demo about how to detect language of a text input.",
    "Reference": "Main method to invoke this demo about how to detect the language of an input text.",
    "HebCup": "Main method to invoke this demo about how to detect language of a text input."
}
{
    "Origin": "Backup previous streamEnv config and set batch configs.",
    "Reference": "Sets batch configs.",
    "HebCup": "set previous streamEnv config and set batch configs."
}
{
    "Origin": "Returns a string representation of this object; useful for testing and debugging.",
    "Reference": "Returns a string representation of this object.",
    "HebCup": "Returns a string representation of this object; useful for testing and debugging."
}
{
    "Origin": "Extract the first two version numbers from java.version (e.g.",
    "Reference": "Extract the major version number from java.version.",
    "HebCup": "Extract the first two oldVersion numbers from java.version (e.g."
}
{
    "Origin": "The\ncurrent thread might be already in any request scope and in that case the scope\nwill be changed to the scope defined by the {@link RequestScope.Instance scope\ninstance}.",
    "Reference": "The\ncurrent thread might be already in any request scope and in that case the scope\nwill be changed to the scope defined by the {@link RequestContext scope\ninstance}.",
    "HebCup": "The current thread might be already in any request scope and in that case the scope will be changed to the scope defined by the {@link RequestScope.Instance context}."
}
{
    "Origin": "Returns true if the current AlluxioURI is a parent of another AlluxioURI.",
    "Reference": "Returns true if the current AlluxioURI is an ancestor of another AlluxioURI.",
    "HebCup": "Returns true if the current AlluxioURI is a Ancestor Of another AlluxioURI."
}
{
    "Origin": "Generates an instance of {@link OpenedObject} for which the underlying stream may be re-opened and retried\nbased on the exception and retry condition.",
    "Reference": "Generates an instance of {@link OpenObject} for which the underlying stream may be re-opened and retried\nbased on the exception and retry condition.",
    "HebCup": "Generates an instance of {@link OpenObject} for which the underlying stream may be re-opened and retried based on the exception and retry condition."
}
{
    "Origin": "IMPORTANT:If the cancelRequested flag returns true, a\ncancellation is being attempted.",
    "Reference": "If the\n flag returns , a\ncancellation is being attempted.",
    "HebCup": "IMPORTANT:If the cancelRequested flag returns true, a\ncancellation is being attempted."
}
{
    "Origin": "See {@link MetricType}.",
    "Reference": "See {@link MetricAttribute}.",
    "HebCup": "See {@link MetricAttribute}."
}
{
    "Origin": "Get the scrService Object associated with this instance of",
    "Reference": "Get the ServiceComponentRuntime Object associated with this instance of",
    "HebCup": "Get the ServiceComponentRuntime Object associated with this instance of"
}
{
    "Origin": "Comma separated list of parameters to pass to the scheduler",
    "Reference": "Comma separated list of parameters to pass to the scheduler or procedure",
    "HebCup": "Comma separated list of parameters to pass to the scheduler"
}
{
    "Origin": "However if this property is\nused, the auto-detection is turned off.",
    "Reference": "If this property is used,\nauto-detection is turned off.",
    "HebCup": "However if this property is\nused, the auto-detection is turned off."
}
{
    "Origin": "Sets the values.",
    "Reference": "Set the values.",
    "HebCup": "Sets the values."
}
{
    "Origin": "Computes the average for each pixel across all bands in the {@link Planar} image.",
    "Reference": "Computes the average for each pixel across selected bands in the {@link Planar} image.",
    "HebCup": "Computes the average for each pixel across all bands in the {@link Planar} image."
}
{
    "Origin": "Return the length of the quaternion (the norm, the magnitude).",
    "Reference": "Return the euclidean length of the quaternion (the norm, the magnitude).",
    "HebCup": "Return the length of the quaternion (the norm, the magnitude)."
}
{
    "Origin": "Sets the {@link IpRange} which determines the IP ranges that are allowed to use the SAS.",
    "Reference": "Sets the {@link SasIpRange} which determines the IP ranges that are allowed to use the SAS.",
    "HebCup": "Sets the {@link SasIpRange} which determines the IP ranges that are allowed to use the SAS."
}
{
    "Origin": "Configuring Analysis Schemes \nin the Amazon CloudSearch Developer Guide .",
    "Reference": "CloudSearch Developer Guide.",
    "HebCup": "Configuring Analysis Schemes \nin the Amazon CloudSearch Developer Guide ."
}
{
    "Origin": "BufferStrategy} == {@link BufferStrategy#BLOCKING}, shutdown consumers maybe cause blocking when producing.",
    "Reference": "BufferStrategy} == {@link BufferStrategy#BLOCKING}, shutdown consumeDriver maybe cause blocking when producing.",
    "HebCup": "BufferStrategy} == {@link BufferStrategy#BLOCKING} , shutdown drivers maybe cause blocking when producing."
}
{
    "Origin": "Tests the {@link InodeTree#createPath(RpcContext, LockedInodePath, CreatePathOptions)}\nmethod for creating a file.",
    "Reference": "Tests the {@link InodeTree#createPath(RpcContext, LockedInodePath, CreatePathContext)}\nmethod for creating a file.",
    "HebCup": "Tests the {@link InodeTree#createPath(RpcContext, LockedInodePath, CreatePathContext)} method for creating a file."
}
{
    "Origin": "Gets the modelId.",
    "Reference": "Gets the model.",
    "HebCup": "Gets the model."
}
{
    "Origin": "For an overview on tagging an Amazon RDS resource, see",
    "Reference": "For an overview on tagging an Amazon RDS resource, see Tagging Amazon RDS Resources.",
    "HebCup": "For an overview on tagging an Amazon RDS resource, see"
}
{
    "Origin": "Sets the default value for this option that will be used if the option is provided on\ncommand line without an explicit value.",
    "Reference": "Marks value optional and sets the default value for this option that will be used if the option is provided on\ncommand line without an explicit value.",
    "HebCup": "Sets the value Optional With Default for this option that will be used if the option is provided on command line without an explicit value."
}
{
    "Origin": "Helper method: turn an array of strings into a list of CoreLabels\nTODO: move elsewhere?",
    "Reference": "Helper method: turn an array of strings into a list of CoreLabels",
    "HebCup": "Helper method: turn an array of strings into a return of CoreLabels TODO: move elsewhere?"
}
{
    "Origin": "Generates a code sample for using {@link ShareDirectoryClient#deleteSubDirectory(String)}",
    "Reference": "Generates a code sample for using {@link ShareDirectoryClient#deleteSubdirectory(String)}",
    "HebCup": "Generates a code sample for using {@link ShareDirectoryClient#deleteSubdirectory (String)}"
}
{
    "Origin": "To retrieve subsequent\npages, make additional calls to PollForDecisionTask using the\nnextPageToken returned by the initial call.",
    "Reference": "To retrieve subsequent pages, make\nadditional calls to  using the\n returned by the initial call.",
    "HebCup": "To retrieve subsequent\npages, make additional calls to PollForDecisionTask using the\nnextPageToken returned by the initial call."
}
{
    "Origin": "Converts an {@link IntIntOpenHashMap} into a flat int [] array.",
    "Reference": "Converts an {@link IntIntHashMap} into a flat int [] array.",
    "HebCup": "Converts an {@link IntIntHashMap} into a flat int [] array."
}
{
    "Origin": "Returns the specified font, but with the style's bold and\nitalic flags applied.",
    "Reference": "Returns the specified font, but with the style's bold flags applied.",
    "HebCup": "Returns the specified font, but with the style's bold and\nitalic flags applied."
}
{
    "Origin": "Unique metric name is in the format of A.B.C",
    "Reference": "It is in the format of A:B:C, where",
    "HebCup": "Unique metric name is in the format of A.B.C"
}
{
    "Origin": "Registers a new sitemap entry.",
    "Reference": "Creates a sitemap folder.",
    "HebCup": "Registers a new sitemap entry."
}
{
    "Origin": "Returns a string representation of this object; useful for testing and debugging.",
    "Reference": "Returns a string representation of this object.",
    "HebCup": "Returns a string representation of this object; useful for testing and debugging."
}
{
    "Origin": "Return a Protobuf OpenIETriple from a RelationTriple.",
    "Reference": "Return a Protobuf RelationTriple from a RelationTriple.",
    "HebCup": "Return a Protobuf RelationTriple from a RelationTriple."
}
{
    "Origin": "Returns whether this step specifies the given environment.",
    "Reference": "Returns whether this step deploys to the given region",
    "HebCup": "Returns whether this step specifies the given environment."
}
{
    "Origin": "Inserts a new outgoing text message.",
    "Reference": "Inserts a new outgoing location message.",
    "HebCup": "Inserts a new outgoing text message."
}
{
    "Origin": "ExecutableProcessBundleDescriptor#getMultimapSideInputSpecs} for the set of multimap side\ninputs that are contained.",
    "Reference": "ExecutableProcessBundleDescriptor#getSideInputSpecs} for the set of side inputs that are\ncontained.",
    "HebCup": "ExecutableProcessBundleDescriptor#getSideInputSpecs} for the set of multimap side inputs that are contained."
}
{
    "Origin": "Kept for compatibility with NativeScript.",
    "Reference": "Kept for source-level compatibility with NativeScript.",
    "HebCup": "Kept for compatibility with NativeScript."
}
{
    "Origin": "Return a self-configured monitored Resource.",
    "Reference": "Return a self-configured Stackdriver monitored resource.",
    "HebCup": "Return a self-configured monitored GLOBAL."
}
{
    "Origin": "Delete all dir trees under a given 'dir' that don't start with one of a set\nof given 'prefixes'.",
    "Reference": "Delete all dir trees under a given 'dir' that don't start with a given 'prefix'.",
    "HebCup": "Delete all dir trees under a given 'dir' that don't start with one of a set of given 'prefix'."
}
{
    "Origin": "Sets the value of default user (login or username).",
    "Reference": "Sets the value of default user (login or user name).",
    "HebCup": "Sets the value of default userName (login or username)."
}
{
    "Origin": "Handle action events for this component.",
    "Reference": "Handle change events for this component.",
    "HebCup": "Handle state events for this component."
}
{
    "Origin": "Gets the set of successors for this state",
    "Reference": "Gets the successor states for this search graph",
    "HebCup": "Gets the set of successors for this state"
}
{
    "Origin": "decode the {@link com.mongodb.DBObject} and provide the corresponding java (type-safe) object",
    "Reference": "decode the {@link com.mongodb.Document} and provide the corresponding java (type-safe) object",
    "HebCup": "decode the {@link com.mongodb.Document} and provide the corresponding java (type-safe) object"
}
{
    "Origin": "Returns an immutable copy of {@code graph}.",
    "Reference": "Returns an immutable copy of {@code network}.",
    "HebCup": "Returns an immutable copy of {@code network}."
}
{
    "Origin": "Return the current starting address.",
    "Reference": "Return the current head segment.",
    "HebCup": "Return the current head Segment."
}
{
    "Origin": "Get a list of objects being traced by this object.",
    "Reference": "Gets a list of objects being traced by this object.",
    "HebCup": "Get a list of objects being traced by this object."
}
{
    "Origin": "Create an instance of {@link JAXBElement }{@code <}{@link CTMarkupRange }{@code >}}",
    "Reference": "Create an instance of {@link JAXBElement }{@code <}{@link CTMoveFromRangeEnd }{@code >}}",
    "HebCup": "Create an instance of {@link JAXBElement} {@code <} {@link CTMoveFromRangeEnd} {@code >}}"
}
{
    "Origin": "Sets the location provider configuration.",
    "Reference": "Sets the node discovery provider configuration.",
    "HebCup": "Sets the discovery configuration."
}
{
    "Origin": "Adds a value that has been seen n times to the observed values",
    "Reference": "Adds a weighted value to the observed values",
    "HebCup": "Adds a value that has been seen weight times to the observed values"
}
{
    "Origin": "Returns the Lucene document with the given root path from the index.",
    "Reference": "Returns the Lucene document with the given structure id from the index.",
    "HebCup": "Returns the Lucene return with the given root path from the index."
}
{
    "Origin": "IMPORTANT: This operation is vulnerable to exceeding the\nmaximum URL size when making a REST request using the HTTP GET method.",
    "Reference": "This operation is vulnerable to exceeding the maximum URL\nsize when making a REST request using the HTTP GET method.",
    "HebCup": "IMPORTANT: This operation is vulnerable to exceeding the maximum URL size when making a REST Batch using the HTTP GET method."
}
{
    "Origin": "Returns the value of the node as a string, or the specified undefined value if the node is undefined.",
    "Reference": "Returns the value of the node as a string, or the specified default value if the node is undefined.",
    "HebCup": "Returns the value of the node as a string, or the specified default Value if the node is undefined."
}
{
    "Origin": "Edits existing configuration schema.",
    "Reference": "Edits existing notification schema.",
    "HebCup": "Edits existing Notification Schema."
}
{
    "Origin": "Sets content type of HTTP request.",
    "Reference": "Sets the content type of the HTTP request.",
    "HebCup": "Sets content type of HTTP request."
}
{
    "Origin": "Creates a {@code For}-comprehension of one Iterable.",
    "Reference": "Creates a {@code For}-comprehension of one Option.",
    "HebCup": "Creates a {@code For}-comprehension of one Option."
}
{
    "Origin": "Checks if the page {@link matchingPage} needs to be fetched.",
    "Reference": "Checks if the page needs to be fetched.",
    "HebCup": "Checks if the page {@link matchingPage} needs to be fetched."
}
{
    "Origin": "Removes the range between start and end from the given exception\nhandlers.",
    "Reference": "Removes the range between start and end from the Handler list that begins with the given\nelement.",
    "HebCup": "Removes the range between end and end from the given exception handlers."
}
{
    "Origin": "This can be used to change any field, for example to set the hour-of-day.",
    "Reference": "This can be used to change any supported field, such as the hour, minute or second.",
    "HebCup": "This can be used to change any field, for example to set the hour-of-day."
}
{
    "Origin": "The option is a:",
    "Reference": "The option is a:\n type.",
    "HebCup": "The option is a:"
}
{
    "Origin": "Delegates to the handler's {@code toString()}.",
    "Reference": "Delegates to the handler and interceptors' {@code toString()}.",
    "HebCup": "Delegates to the handler's {@code toString !=)}."
}
{
    "Origin": "timed invokeAll(empty collection) returns empty collection",
    "Reference": "timed invokeAll(empty collection) returns empty list",
    "HebCup": "timed invokeAll(empty collection) returns empty collection"
}
{
    "Origin": "This method always returns false if this method has no accelerator.",
    "Reference": "This method always returns  if this method has no accelerator.",
    "HebCup": "This method always returns false if this method has no accelerator."
}
{
    "Origin": "Returns a string representation of this object; useful for testing and debugging.",
    "Reference": "Returns a string representation of this object.",
    "HebCup": "Returns a string representation of this object; useful for testing and debugging."
}
{
    "Origin": "Returns a number that encodes how contents of the arrangement are aligned horizontally.",
    "Reference": "Returns a number that encodes how contents of the %type% are aligned horizontally.",
    "HebCup": "Returns a number that encodes how contents of the %type% are aligned horizontally."
}
{
    "Origin": "Gets the value of the 'ts' field.",
    "Reference": "Gets the value of the 'dec' field.",
    "HebCup": "Gets the value of the 'ts' field."
}
{
    "Origin": "Gets the specified message in the current locale.",
    "Reference": "Gets the data source with the specified id.",
    "HebCup": "Gets the specified Data in the current locale."
}
{
    "Origin": "Return the names of any classes referenced in the methods in this list.",
    "Reference": "Find the names of any classes referenced in the methods in this list.",
    "HebCup": "Return the names of any classes referenced in the methods in this list."
}
{
    "Origin": "Releases a netty channel to the channel pools.",
    "Reference": "Releases a block worker client to the client pools.",
    "HebCup": "Releases a Block Worker Client to the channel pools."
}
{
    "Origin": "Sets the {@link IpRange} which determines the IP ranges that are allowed to use the SAS.",
    "Reference": "Sets the {@link SasIpRange} which determines the IP ranges that are allowed to use the SAS.",
    "HebCup": "Sets the {@link SasIpRange} which determines the IP ranges that are allowed to use the SAS."
}
{
    "Origin": "These deps have already been marked (see {@link SkyframeHybridGlobber}) but we need to properly\nhandle some errors that legacy package loading can't handle gracefully.",
    "Reference": "These deps have already been marked (see {@link SkyframeHybridGlobber}) but we need to properly\nhandle symlink issues that legacy globbing can't handle gracefully.",
    "HebCup": "These deps have already been marked (see {@link SkyframeHybridGlobber}) but we need to properly handle some errors that legacy arbitrary loading can't handle gracefully."
}
{
    "Origin": "A map from names which could be passed to {@link DescribableModel#CLAZZ} to types of allowable nested objects.",
    "Reference": "A map from names which could be passed to {@link ReflectiveDataModel#CLAZZ} to types of allowable nested objects.",
    "HebCup": "A map from names which could be passed to {@link DataModel#CLAZZ} to types of allowable nested objects."
}
{
    "Origin": "Initialized from {@link Command#synopsisSubcommands()}, {@code \"[COMMANDS]\"} by default.",
    "Reference": "Initialized from {@link Command#synopsisSubcommandLabel()}, {@code \"[COMMANDS]\"} by default.",
    "HebCup": "Initialized from {@link Command#synopsisSubcommandLabel()}, {@code ``[COMMANDS]``} by default."
}
{
    "Origin": "Sets the messaging address.",
    "Reference": "Sets the message return address.",
    "HebCup": "Sets the messaging returnAddress."
}
{
    "Origin": "Request sync for Google accounts(not include G+ accounts) in filter.",
    "Reference": "Request sync for Google accounts(not include Google+ accounts) in filter.",
    "HebCup": "Request sync for Google syncableAccounts (not include G+ syncableAccounts) in filter."
}
{
    "Origin": "Creates query for the given searchString.",
    "Reference": "Queries this contact source for the given searchString.",
    "HebCup": "Creates Source for the given searchString."
}
{
    "Origin": "Create client response filtering stage using the service locator.",
    "Reference": "Create client response filtering stage using the instance manager.",
    "HebCup": "Create client response filtering stage using the Instance Manager."
}
{
    "Origin": "Returns a {@link Requires} for a dependence on a module\nwith the given (and possibly empty) set of modifiers.",
    "Reference": "Returns a {@link Requires} for a dependence on a module with the given\n(and possibly empty) set of modifiers, and optionally the version\nrecorded at compile time.",
    "HebCup": "Returns a {@link Requires} for a dependence on a module\nwith the given (and possibly empty) set of modifiers."
}
{
    "Origin": "Generate an angle in the CbCr plane from the input string.",
    "Reference": "Generate an angle in the HSLuv color space from the input string.",
    "HebCup": "Generate an angle in the CbCr plane from the input string."
}
{
    "Origin": "Sets time interval between vacuum runs.",
    "Reference": "Sets time interval between MVCC vacuum runs in milliseconds.",
    "HebCup": "Sets time interval between vacuum runs."
}
{
    "Origin": "Tests {@link NetworkBufferPool#requestMemorySegments(int)}, verifying it may be aborted and\nremains in a defined state even if the waiting is interrupted.",
    "Reference": "Tests {@link NetworkBufferPool#requestMemorySegments()}, verifying it may be aborted and\nremains in a defined state even if the waiting is interrupted.",
    "HebCup": "Tests {@link NetworkBufferPool#requestMemorySegments(int)}, verifying it may be aborted and\nremains in a defined state even if the waiting is interrupted."
}
{
    "Origin": "This sets up a PoolingDataSource.",
    "Reference": "This sets up a PoolingDataSourceWrapper.",
    "HebCup": "This sets up a PoolingDataSourceWrapper."
}
{
    "Origin": "Sets the connection state listener decorator.",
    "Reference": "Sets the connection state listener manager factory.",
    "HebCup": "Sets the connection State Listener Manager Factory."
}
{
    "Origin": "Checks if a a fragment of a NAL unit from a specific FU-A RTP packet\npayload is keyframe or not",
    "Reference": "Checks if a fragment of a NAL unit from a specific FU-A RTP packet\npayload is keyframe or not.",
    "HebCup": "Checks if a a fragment of a NAL unit from a specific FU-A RTP packet\npayload is keyframe or not"
}
{
    "Origin": "This method behaves like {@code createObjectFromNewClassLoader(ClassLoader.getSystemClassLoader())}.",
    "Reference": "This method behaves like {@code createSerializableObjectFromNewClassLoader(ClassLoader.getSystemClassLoader())}.",
    "HebCup": "This method behaves like {@code createSerializableObjectFromNewClassLoader (ClassLoader.getSystemClassLoader ())}."
}
{
    "Origin": "Once the prefetch is done, the session will change its playback state to\n{@link SessionPlayer2#PLAYER_STATE_PAUSED}.",
    "Reference": "Once the prepare is done, the session will change its playback state to\n{@link SessionPlayer2#PLAYER_STATE_PAUSED}.",
    "HebCup": "Once the prepare is done , the session will change its playback state to {@link SessionPlayer2#PLAYER_STATE_PAUSED}."
}
{
    "Origin": "Returns the {@link SpawnActionContext} that should be used to execute the given spawn.",
    "Reference": "Returns the list of {@link SpawnActionContext}s that should be used to execute the given spawn.",
    "HebCup": "Returns the {@link SpawnActionContexts} that should be used to execute the given spawn."
}
{
    "Origin": "Jsonify string.",
    "Reference": "Jsonify.",
    "HebCup": "toJson string."
}
{
    "Origin": "Returns a string representation of this object; useful for testing and debugging.",
    "Reference": "Returns a string representation of this object.",
    "HebCup": "Returns a string representation of this object; useful for testing and debugging."
}
{
    "Origin": "Execute given {@link Sql @Sql} scripts.",
    "Reference": "Execute SQL scripts for the supplied {@link Sql @Sql} annotations.",
    "HebCup": "Execute given {@link Sql @Sql} scripts."
}
{
    "Origin": "This method must only be used for type references\nwhose sort is {@link #CLASS_EXTENDS CLASS_EXTENDS}.",
    "Reference": "This method must only be used for type references whose sort is {@link #CLASS_EXTENDS}.",
    "HebCup": "This method must only be used for type references\nwhose sort is {@link #CLASS_EXTENDS CLASS_EXTENDS}."
}
{
    "Origin": "Sets the description.",
    "Reference": "Set the description.",
    "HebCup": "Sets the description."
}
{
    "Origin": "This test uses some API hidden by the JDK9 module system.",
    "Reference": "This test uses some non-public API.",
    "HebCup": "This test uses some API hidden by the JDK9 module system."
}
{
    "Origin": "The only other valid location for '}' is inside\na StringLiteral.",
    "Reference": "The only other valid location for '}' is inside a",
    "HebCup": "The only other valid location for '}' is inside\na StringLiteral."
}
{
    "Origin": "Permanently deletes the course from the Datastore.",
    "Reference": "Deletes a course.",
    "HebCup": "Permanently deletes the Key from the Datastore."
}
{
    "Origin": "Returns the (unbiased) estimate of the sample variance of the values within\na {@link PointSet} region of a {@link Dataset}.",
    "Reference": "Returns the (unbiased) estimate of the sample standard deviation of the\nvalues within a {@link PointSet} region of a {@link Dataset}.",
    "HebCup": "Returns the (unbiased) estimate of the sample sample of the values within a {@link PointSet} region of a {@link Dataset}."
}
{
    "Origin": "As of Spring Framework VERSION, once the bean instance has been resolved it\nwill be cached, thereby avoiding repeated lookups in the {@code BeanFactory}.",
    "Reference": "As of Spring Framework VERSION, once the bean instance has been resolved it\nwill be cached if it is a singleton, thereby avoiding repeated lookups in\nthe {@code BeanFactory}.",
    "HebCup": "As of Spring Framework VERSION, once the bean instance has been resolved it\nwill be cached, thereby avoiding repeated lookups in the {@code BeanFactory}."
}
{
    "Origin": "If the caller's module is this module then update this module to export\npackage {@code pn} to the given module.",
    "Reference": "If the caller's module is this module then update this module to export\nthe given package to the given module.",
    "HebCup": "If the caller's module is this module then update this module to ExportsOrOpens package {@code pn} to the given module."
}
{
    "Origin": "Returns the categories assigned to the content's VFS resource.",
    "Reference": "Reads and returns the categories assigned to the content's VFS resource.",
    "HebCup": "Returns the ReadCategories assigned to the content's VFS resource."
}
{
    "Origin": "Checks if the given sequence number was marked as completed in this tracker.",
    "Reference": "Checks if the given sequence number was marked as processed in this tracker.",
    "HebCup": "Checks if the given sequence number was marked as completed in this tracker."
}
{
    "Origin": "Default: true",
    "Reference": "Default: false",
    "HebCup": "Default: false"
}
{
    "Origin": "Returns the service type corresponding to the name of a services\nconfiguration file if it is a valid Java identifier.",
    "Reference": "Returns the service type corresponding to the name of a services\nconfiguration file if it is a legal type name.",
    "HebCup": "Returns the service type corresponding to the name of a services configuration file if it is a valid Class Name."
}
{
    "Origin": "Return a HotStream that will skip emitting data when the first connecting Stream connects.",
    "Reference": "Return a Connectable that will skip emitting data when the first connecting Stream connects.",
    "HebCup": "Return a Connectable that will skip emitting data when the first connecting Stream connects."
}
{
    "Origin": "Get a new reference for to currently running request scope instance.",
    "Reference": "Get a new reference for to currently running request scope context.",
    "HebCup": "Get a new reference for to currently running request scope RequestContext."
}
{
    "Origin": "Return the Logger instance that will be used for logging.",
    "Reference": "Return the log4j-Logger instance that will be used for logging.",
    "HebCup": "Return the Logger instance that will be used for logging."
}
{
    "Origin": "List all ${MODEL_TYPE} records.",
    "Reference": "List ${MODEL_TYPE} records, filtered by simple query specifications optionally.",
    "HebCup": "List all ${MODEL_TYPE} records."
}
{
    "Origin": "Returns the complete size of the tree, including all expanded subtrees.",
    "Reference": "Returns the size of the currently expanded hierarchy.",
    "HebCup": "Returns the complete size of the (, including all expanded subtrees."
}
{
    "Origin": "The {@code keyImportOptions} is required and its fields {@link KeyImportOptions#getName() name} and {@link",
    "Reference": "The {@code keyImportOptions} is required and its fields {@link ImportKeyOptions#getName() name} and {@link",
    "HebCup": "The {@code ImportKeyOptions} is required and its fields {@link ImportKeyOptions#getName () name} and {@link"
}
{
    "Origin": "Sets the {@link SharedKeyCredential} used to authorize requests sent to the service.",
    "Reference": "Sets the {@link StorageSharedKeyCredential} used to authorize requests sent to the service.",
    "HebCup": "Sets the {@link StorageSharedKeyCredential} used to authorize requests sent to the service."
}
{
    "Origin": "Inserts the List of ConfigValues\nnote: overrides the existing list",
    "Reference": "Inserts the List of ConfigValues, overriding the existing list.",
    "HebCup": "Inserts the List of ConfigValues\nnote: overrides the existing list"
}
{
    "Origin": "Builds a JFreeChart time series from a Ta4j time series and an indicator.",
    "Reference": "Builds a JFreeChart time series from a Ta4j bar series and an indicator.",
    "HebCup": "Builds a JFreeChart time series from a Ta4j time series and an indicator."
}
{
    "Origin": "Computes the average for each pixel across all bands in the {@link Planar} image.",
    "Reference": "Computes the maximum for each pixel across selected bands in the {@link Planar} image.",
    "HebCup": "Computes the average for each pixel across all bands in the {@link Planar} image."
}
{
    "Origin": "Remove the entity key with the specified {@code id} and {@code persister} from\nthe batch loadable entities {@link BatchFetchQueue}.",
    "Reference": "Remove the entity key with the specified {@code id} and {@code descriptor} from\nthe batch loadable entities {@link BatchFetchQueue}.",
    "HebCup": "Remove the Entity Type key with the specified {@code id} and {@code persister} from the batch loadable entities {@link BatchFetchQueue}."
}
{
    "Origin": "Finds all annotations recusively for a class and its superclasses.",
    "Reference": "Finds all annotations recusively for a class and its superclasses or interfaces.",
    "HebCup": "Finds all annotations recusively for a Name and its superclasses."
}
{
    "Origin": "Returns a Path to access to the given resource.",
    "Reference": "Returns a Path to access the given resource.",
    "HebCup": "Returns a Path to File access to File the given resource."
}
{
    "Origin": "Note that both this, and {@link Polarity#negatesTruth(NaturalLogicRelation)} can be false.",
    "Reference": "Note that both this, and {@link Polarity#maintainsEntailment(NaturalLogicRelation)}} can be false.",
    "HebCup": "Note that both this, and {@link Polarity#negatesNegated(NaturalLogicRelation)} can be false."
}
{
    "Origin": "However, sensitive to the value possibly being a Result\nwrapper, in which case it enqueues the set operation until the loadcontext is done.",
    "Reference": "TODO: Sensitive to the value possibly being a Result wrapper, in which case it enqueues the set operation until the loadcontext is done.",
    "HebCup": "However, sensitive to the value possibly being a Result\nwrapper, in which case it enqueues the set operation until the loadcontext is done."
}
{
    "Origin": "Gets the service synchronously.",
    "Reference": "Gets the api synchronously.",
    "HebCup": "Gets the Api synchronously."
}
{
    "Origin": "Only 1 = high priority, 2 = medium and 3 =\nlow are allowed.",
    "Reference": "Only 1 = high priority to 10 =\nlow are allowed.",
    "HebCup": "Only 1 = high priority , 2 = medium and 10 = low are allowed."
}
{
    "Origin": "Sets the connection ID length.",
    "Reference": "Sets the connection id generator.",
    "HebCup": "Sets the connection Id Generator."
}
{
    "Origin": "TODO: If an input result partition of an involved region is not available, i.e.",
    "Reference": "If an input result partition of an involved region is not available, i.e.",
    "HebCup": "TODO: If an input result partition of an involved region is not available, idataConsumptionException.isedataConsumptionException.is"
}
{
    "Origin": "Adds an actor as a child of this group, immediately before another child actor.",
    "Reference": "If the\nactor is already a child of this group, no changes are made.",
    "HebCup": "Adds an actor as a child of this group, immediately before another child actor."
}
{
    "Origin": "Convert to object types, returning null if text is null.",
    "Reference": "Convert to object types, returning null if text is null or empty.",
    "HebCup": "Convert to object types, returning null if text is null."
}
{
    "Origin": "Overload of {@link #connect(String, ServerStateListener, ServerConnectionFailListener)} with only one listener.",
    "Reference": "Overload of {@link #connect(String, ServerStateListener, ServerReconnectFilter)} with only one listener.",
    "HebCup": "Overload of {@link#connect (String , ServerStateListener , ServerReconnectFilter)} with only one listener."
}
{
    "Origin": "Finds all implemtaions of DataStoreFactory which have registered using the services\nmechanism, and that have the appropriate libraries on the classpath.",
    "Reference": "Finds all implementations of UnWrapper which have registered using the services\nmechanism, and that have the appropriate libraries on the classpath.",
    "HebCup": "Finds all implemtaions of DataStoreFactory which have registered using the services\nmechanism, and that have the appropriate libraries on the classpath."
}
{
    "Origin": "Fails silently if no such account.",
    "Reference": "Fails silently if no such course.",
    "HebCup": "Fails silently if no such account."
}
{
    "Origin": "Provides transitive dependency artifacts only defined types based on {@code types} argument\nor all types if {@code types} argument is empty",
    "Reference": "Provides transitive dependency artifacts having types defined by {@code types} argument\nor all types if {@code types} argument is empty",
    "HebCup": "Provides transitive dependency artifacts only defined types based on {@code types} argument\nor all types if {@code types} argument is empty"
}
{
    "Origin": "Returns the ISO code, except when the alias \"loc\" is used.",
    "Reference": "Returns the code, except when the alias \"{@code loc}\" is used.",
    "HebCup": "String the ISO code , except when the alias ``loc`` is used."
}
{
    "Origin": "Returns the class path URIs specified by the {@code Class-Path} manifest attribute, according\nto \nJAR File Specification.",
    "Reference": "Returns the class path URIs specified by the {@code Class-Path} manifest attribute, according\nto JAR",
    "HebCup": "Returns the class path Malformeds specified by the {@code Class-Path} manifest attribute , according to JAR File Specification."
}
{
    "Origin": "Applications should use the {@code with(WithAdjuster)} method on the\ndate-time object to make the adjustment passing this as the argument.",
    "Reference": "Applications should use the {@code with(TemporalAdjuster)} method on the\ndate-time object to make the adjustment passing this as the argument.",
    "HebCup": "Applications should use the {@code with (WithAdjuster)} method on the date-time object to make the Into passing this as the argument."
}
{
    "Origin": "If no\nJSType value is associated, returns UNKNOWN_TYPE.",
    "Reference": "If no\nJSType value is associated, returns the upper bound for generic, UNKNOWN_TYPE if unspecified.",
    "HebCup": "If no\nJSType value is associated, returns UNKNOWN_TYPE."
}
{
    "Origin": "Returns the Attr[]s to be output for the given element.",
    "Reference": "Output the Attr[]s for the given element.",
    "HebCup": "Returns the Attr[]s to be output for the given element."
}
{
    "Origin": "Apply the rotation transformation of the given {@link Quaterniond} to this matrix.",
    "Reference": "Apply the rotation transformation of the given {@link Quaterniondc} to this matrix.",
    "HebCup": "Apply the rotation transformation of the given {@link Quaterniondc} to this matrix."
}
{
    "Origin": "Extracts the underlying quotes from the {@link CurveInputs} instances and returns them in a map.",
    "Reference": "Extracts the underlying quotes from the {@link RatesCurveInputs} instances and returns them in a map.",
    "HebCup": "Extracts the underlying quotes from the {@link RatesCurveInputs} instances and returns them in a map."
}
{
    "Origin": "Amazon Redshift returns all HSM connections that match any combination\nof the specified keys and values.",
    "Reference": "Redshift returns all HSM connections that match any combination of the\nspecified keys and values.",
    "HebCup": "Amazon Redshift returns all HSM connections that match any combination\nof the specified keys and values."
}
{
    "Origin": "Get Prepayment.",
    "Reference": "Get Vorauszahlung.",
    "HebCup": "Get Prepayment."
}
{
    "Origin": "Returns a string representation of this object; useful for testing and debugging.",
    "Reference": "Returns a string representation of this object.",
    "HebCup": "Returns a string representation of this object; useful for testing and debugging."
}
{
    "Origin": "Unsubscribe from all channel and channel groups.",
    "Reference": "Unsubscribe from all channels and channel groups.",
    "HebCup": "Unsubscribe from all null and null groups."
}
{
    "Origin": "An array containing any patterns for the entity value.",
    "Reference": "An array of patterns for the entity value.",
    "HebCup": "An array containing any patterns for the entity value."
}
{
    "Origin": "Test to make sure can successfully unmarshall a collection.",
    "Reference": "Test to make sure can successfully un-marshall a collection.",
    "HebCup": "Test to make sure can successfully unmarshall a collection."
}
{
    "Origin": "whether it gives you labeled or unlabeled bracketings depends on the value of the \nparameter",
    "Reference": "whether it gives you labeled or unlabeled bracketings depends on the value of the {@code labelConstituents}\nparameter",
    "HebCup": "whether it gives you labeled or unlabeled bracketings depends on the value of the \nparameter"
}
{
    "Origin": "Returns a function with the specified name and number of arguments.",
    "Reference": "Returns a function call with the specified name and number of arguments.",
    "HebCup": "sf a function with the specified name and number of arguments."
}
{
    "Origin": "Configure binders in the instance manager and enable JAX-RS features.",
    "Reference": "Configure binders in the injection manager and enable JAX-RS features.",
    "HebCup": "Configure binders in the Injection Manager and enable JAX-RS features."
}
{
    "Origin": "Compiles the given file.",
    "Reference": "Generates the given file.",
    "HebCup": "Compiles the given file."
}
{
    "Origin": "Report the number of pixels of the interline that corresponds to\nthis font.",
    "Reference": "Report the number of pixels of the interline that corresponds to the staves\nwhere this font is used.",
    "HebCup": "Report the number of pixels of the interline that corresponds to this Staff."
}
{
    "Origin": "Create an instance of {@link JAXBElement }{@code <}{@link CTMarkupRange }{@code >}}",
    "Reference": "Create an instance of {@link JAXBElement }{@code <}{@link CTMoveToRangeEnd }{@code >}}",
    "HebCup": "Create an instance of {@link JAXBElement} {@code <} {@link CTMoveToRangeEnd} {@code >}}"
}
{
    "Origin": "Gets the amount of outer iterations of SGD algorithm.",
    "Reference": "Get the amount of outer iterations of SGD algorithm.",
    "HebCup": "Gets the get Amount Of outer iterations of SGD algorithm."
}
{
    "Origin": "Determines whether the given user can read the permissions currently\ngranted to the given target user.",
    "Reference": "Determines whether the given user can read the permissions currently\ngranted to the given target entity.",
    "HebCup": "Determines whether the given user can read the permissions currently granted to the given target Entity."
}
{
    "Origin": "Normally tasks are executed in different thread from the one creating it and at a different time.",
    "Reference": "Normally tasks are executed in a different thread from the one creating it and at a different time.",
    "HebCup": "Normally tasks are executed in different thread from the one creating it and at a different time."
}
{
    "Origin": "Returns the location provider configuration.",
    "Reference": "Returns the node discovery provider configuration.",
    "HebCup": "Returns the discovery configuration."
}
{
    "Origin": "This indicator says if --interface parameter is visible.",
    "Reference": "This indicator says if --entity parameter is visible.",
    "HebCup": "This indicator says if --entity parameter is visible."
}
{
    "Origin": "Sets the minimum session timeout.",
    "Reference": "Sets the session timeout.",
    "HebCup": "Sets the minimum session timeout."
}
{
    "Origin": "Ensures the {@code Subject} being built will reflect the specified host address as its originating address.",
    "Reference": "Ensures the {@code Subject} being built will reflect the specified host name or IP as its originating\nlocation.",
    "HebCup": "Ensures the {@code Subject} being built will reflect the specified host address as its originating address."
}
{
    "Origin": "Show creator email address.",
    "Reference": "Show creator first and last name.",
    "HebCup": "Show creator email name."
}
{
    "Origin": "Accordingly, it\nshould NOT get the {@link Rule} instance representing the rule whose dependencies are\nbeing calculated as an argument.",
    "Reference": "Accordingly, it\nshould NOT get the {@link Rule} instance representing the rule whose dependencies are\nbeing calculated as an argument or its attributes.",
    "HebCup": "Accordingly, it\nshould NOT get the {@link Rule} instance representing the rule whose dependencies are\nbeing calculated as an argument."
}
{
    "Origin": "Delegates to {@link #handleError(URI, HttpMethod, ClientHttpResponse, HttpStatus)} with the\nresponse status code.",
    "Reference": "Delegates to {@link #handleError(ClientHttpResponse, HttpStatus)} with the\nresponse status code.",
    "HebCup": "Delegates to {@link#HttpStatus.resolve (URI , HttpMethod , ClientHttpResponse , HttpStatus)} with the response status code."
}
{
    "Origin": "Standard setter for the leftwardlabel String in this Relationship",
    "Reference": "Standard setter for the leftwardValue String in this Relationship",
    "HebCup": "Standard setter for the leftwardValue String in this Relationship"
}
{
    "Origin": "In order to set the matrix to a rotation transformation without pre-multiplying,\nuse {@link #rotation(Quaterniond)}.",
    "Reference": "In order to set the matrix to a rotation transformation without pre-multiplying,\nuse {@link #rotation(Quaterniondc)}.",
    "HebCup": "In order to set the matrix to a rotation transformation without pre-multiplying, use {@link #rotation(Quaterniondc)}."
}
{
    "Origin": "Gets the banner URL of the guild, if present and in a supported format.",
    "Reference": "Gets the banner URL of the guild, if present.",
    "HebCup": "Gets the banner URL of the guild, if present and in a supported format."
}
{
    "Origin": "Sets the repository that the services in the upgrade are CURRENT on.",
    "Reference": "Gets the upgrade that the history entry is for.",
    "HebCup": "get the repository that the services in the upgrade are CURRENT on."
}
{
    "Origin": "Setter for the Training Parameters of the Feature Selector.",
    "Reference": "Setter for the Training Parameters of the Feature Selectors.",
    "HebCup": "Setter for the Training Parameters List of the Feature Selector."
}
{
    "Origin": "Collects properties name and values into map if they are present in the given config,\nreturns empty map otherwise.",
    "Reference": "Collects properties name and values into map if they are present in the config,\nreturns empty map otherwise.",
    "HebCup": "Collects properties name and values into map if they are present in the given config,\nreturns empty map otherwise."
}
{
    "Origin": "Gets the object schema",
    "Reference": "Gets the schema",
    "HebCup": "Gets the object org.apache.avro.Schema"
}
{
    "Origin": "Appends a string representation of the given access modifiers to\n{@link #buf buf}.",
    "Reference": "Appends a string representation of the given access flags to {@link #stringBuilder}.",
    "HebCup": "Appends a string representation of the given accessFlags modifiers to {@link#buf buf}."
}
{
    "Origin": "Creates a mutable copy of {@code graph} with the same nodes, edges, and edge values.",
    "Reference": "Creates a mutable copy of {@code graph} with the same nodes and edges.",
    "HebCup": "Creates U mutable copy of {@code graph} with the same nodes , edges , and edge values."
}
{
    "Origin": "This is important to understand the changing nature of the",
    "Reference": "This is important to understand the changing nature of the WebPage.",
    "HebCup": "This is important to understand the changing nature of the"
}
{
    "Origin": "Tests if this string ends with any specified suffixes.",
    "Reference": "Tests if this CharSequence ends with any specified suffixes.",
    "HebCup": "Tests if this CharSequence ends with any specified suffixes."
}
{
    "Origin": "Reverts method {{@link #unsignedToTwosComplement(byte[])}.",
    "Reference": "Reverts method {{@link #padLeadingZero(byte[])}.",
    "HebCup": "Reverts method {{@link #unsignedTounpadLeading(byte[])}."
}
{
    "Origin": "Helper for {@link #remove(long)} that copies all items into a {@link TreeSeq}.",
    "Reference": "Helper for {@link #remove(long, QueryContext)} that copies all items into a {@link TreeSeq}.",
    "HebCup": "Helper for {@link #remove(long)} that copies all items into a {@link TreeSeq}."
}
{
    "Origin": "Get the location of cross reference for given file containing the current\nrevision.",
    "Reference": "Get the location of cross reference for given file containing the given revision.",
    "HebCup": "Get the location of cross reference for given file containing the current\nrevision."
}
{
    "Origin": "The timestamp for creation of the example.",
    "Reference": "The timestamp for creation of the object.",
    "HebCup": "The timestamp for creation of the example."
}
{
    "Origin": "Returns coverage of branches of this instruction.",
    "Reference": "Returns the number of covered branches starting from this instruction.",
    "HebCup": "Returns coverage of Branches.cardinality of this instruction."
}
{
    "Origin": "Create a new word, where the label is formed from\nthe  passed in.",
    "Reference": "Create a new word, where the label is formed from\nthe {@code String} passed in.",
    "HebCup": "Create a new word, where the label is formed from\nthe  passed in."
}
{
    "Origin": "Always returns {@code null}.",
    "Reference": "Always returns {@code DUMMY_TARGET}.",
    "HebCup": "Always returns {@code EMPTY_TARGET}."
}
{
    "Origin": "Sets the given instruction as a predecessor of this instruction.",
    "Reference": "Sets the given instruction as a predecessor of this instruction and adds\nbranch to the predecessor.",
    "HebCup": "Sets the given instruction as a predecessor of this instruction."
}
{
    "Origin": "Creates an audit entry for the 'service retired' event.",
    "Reference": "Creates an audit entry for the 'API retired' event.",
    "HebCup": "Creates an audit entry for the 'api Retired' event."
}
{
    "Origin": "Creates new {@link IsoDayOfWeek} in the UTC timezone.",
    "Reference": "Creates new {@link IsoDayOfWeek}.",
    "HebCup": "Creates new {@link IsoDayOfWeek} in the UTC timezone."
}
{
    "Origin": "If artifact is referenced in reactor, returns path to ${project.build.outputDirectory}.",
    "Reference": "If the artifact is referenced in the reactor, returns path to ${project.build.outputDirectory}.",
    "HebCup": "If Path is referenced in reactor , returns path to $ {project.build.outputDirectory}."
}
{
    "Origin": "Returns an abstract adapter for {@code type}.",
    "Reference": "Returns a standalone adapter for {@code type}.",
    "HebCup": "Returns an Adapter For Custom Type for {@code type}."
}
{
    "Origin": "Execute an {@link Action} locally, returning that {@link Task} used to track it, and linking an {@link ActionListener}.",
    "Reference": "Execute an {@link ActionType} locally, returning that {@link Task} used to track it, and linking an {@link ActionListener}.",
    "HebCup": "Execute an {@link ActionType} locally , returning that {@link Task} used to track it , and linking an {@link ActionListener}."
}
{
    "Origin": "If startIndex < this.seriesBeginIndex the new TimeSeries will start with the first available Bar of this TimeSeries.",
    "Reference": "If startIndex < this.seriesBeginIndex the new BaseBarSeries will start with the first available Bar of this BaseBarSeries.",
    "HebCup": "If startIndex < this.seriesBeginIndex the new TimeSeries will start with the first available BaseBar of this TimeSeries."
}
{
    "Origin": "If only public, module, package, and private access are allowed, the suffix is \"/private\".",
    "Reference": "If public, package, and private access are allowed, the suffix is \"/private\".",
    "HebCup": "If only public, module, package, and private access are allowed, the suffix is \"/private\"."
}
{
    "Origin": "To match the\nnode N the supplier must supply a LabelSchemaDescriptor D, such that N has the label of D, and values for all\nthe properties of D.",
    "Reference": "To match the\nnode N the supplier must supply a LabelSchemaDescriptor D, such that N has values for all the properties of D.",
    "HebCup": "To match the\nnode N the supplier must supply a LabelSchemaDescriptor D, such that N has the label of D, and values for all\nthe properties of D."
}
{
    "Origin": "Gets the classpath component containing the given class.",
    "Reference": "Gets the base location of the given class.",
    "HebCup": "Gets the classpath component containing the given class."
}
{
    "Origin": "TODO: If a region is involved, all of its consumer regions are involved",
    "Reference": "If a region is involved, all of its consumer regions are involved",
    "HebCup": "TODO: If a region is involved , all of its consumer vertexToRegionMap are involved"
}
{
    "Origin": "Computes the weighted covariance matrix of the given data set.",
    "Reference": "Computes the weighted result for the covariance matrix of the given data set.",
    "HebCup": "Computes the weighted covariance matrix of the given data set."
}
{
    "Origin": "This will set an equal offset for all sides",
    "Reference": "This will set an equal difference for all sides",
    "HebCup": "This will set an equal offset for all sides"
}
{
    "Origin": "Group: consumer",
    "Reference": "Group: producer",
    "HebCup": "Group: consumer"
}
{
    "Origin": "Gets the value of the 'BloomFilter' field.",
    "Reference": "Gets the value of the 'bloomFilter' field.",
    "HebCup": "Gets the value of the 'bloomFilter' field."
}
{
    "Origin": "This method is just a wrapper around {@link InternalUtils#symbol(Tree)}, but this class\nmight be the first place someone looks for this functionality.",
    "Reference": "This method is just a wrapper around {@link TreeUtils#symbol(Tree)}, but this class might\nbe the first place someone looks for this functionality.",
    "HebCup": "This method is just a wrapper around {@link TreeUtils#symbol (Tree)} , but this class might be the first place someone looks for this functionality."
}
{
    "Origin": "Add behavior triggered after the {@link Mono} terminates, either by completing downstream successfully or with an error.",
    "Reference": "Add behavior (side-effect) triggered after the {@link Mono} terminates, either by\ncompleting downstream successfully or with an error.",
    "HebCup": "Add behavior triggered after the {@link Mono} Terminate.run, either by completing downstream successfully or with an error."
}
{
    "Origin": "Invalidates a session.",
    "Reference": "Closes a session.",
    "HebCup": "Invalidates a session."
}
{
    "Origin": "Obtains an instance from the specified unique name.",
    "Reference": "Obtains an instance from the specified name.",
    "HebCup": "Obtains an instance from the specified name."
}
{
    "Origin": "Getting Search Suggestions \nin the Amazon CloudSearch Developer Guide .",
    "Reference": "CloudSearch Developer Guide.",
    "HebCup": "Getting Search Suggestions \nin the Amazon CloudSearch Developer Guide ."
}
{
    "Origin": "Build one {@link CharacterRunAutomaton} matching any term the query might match.",
    "Reference": "Build one {@link CharArrayMatcher} matching any term the query might match.",
    "HebCup": "Build one {@link CharArrayMatcher} matching any term the query might match."
}
{
    "Origin": "So if you\nwant to be sure that your {@link IClassCache} is handled in all situations then call this\nmethod twice with your implementations.",
    "Reference": "So if you\nwant to be sure that your {@link IGetAndSetLocator} is handled in all situations then call this\nmethod twice with your implementations.",
    "HebCup": "So if you want to be sure that your {@link IgetAndSetter} is handled in all situations then call this method twice with your implementations."
}
{
    "Origin": "Creates an exception from an service id.",
    "Reference": "Creates an exception from an API id.",
    "HebCup": "Creates an exception from an api Id."
}
{
    "Origin": "resolves installed library dependencies",
    "Reference": "Resolves installed library dependencies",
    "HebCup": "resolves installed library dependencies"
}
{
    "Origin": "Go through the timestamps stored in the {@link #toNotifyQueue} and send the TIMER events for the expired events.",
    "Reference": "Go through the timestamps stored in the toNotifyQueue and send the TIMER events for the expired events.",
    "HebCup": "Go through the timestamps stored in the {@link#state.toNotifyQueue} and send the TIMER events for the expired events."
}
{
    "Origin": "Get the log lines that contain the unique {@link StringDecorator} string.",
    "Reference": "Get the log lines that contain the unique {@link StringDecorator} string for the given component.",
    "HebCup": "Get the log lines that contain the unique {@link StringDecorator} string."
}
{
    "Origin": "The {@code what} supplies the message that describes the member.",
    "Reference": "The {@code what} parameter supplies the message that describes the member.",
    "HebCup": "The {@code what} supplies the message that describes the member."
}
{
    "Origin": "Returns the name of the table to copy data from in case of an complex update.",
    "Reference": "Provides the name the table should have after the update.",
    "HebCup": "Returns the name of the table to copy New from in case of an complex update."
}
{
    "Origin": "The context associated with a Closure instance.",
    "Reference": "The referent of a MirrorReference instance.",
    "HebCup": "The context associated with a Closure instance."
}
{
    "Origin": "Assigns the specified type and result size.",
    "Reference": "Assigns the specified type, and result size or occurrence indicator.",
    "HebCup": "Assigns the specified type and result size."
}
{
    "Origin": "The method call will block (not return)\nuntil a stanza is available or the timeout has elapsed.",
    "Reference": "The method call will block (not return) until a stanza is available or the\ntimeout has elapsed or if the connection was terminated because of an error.",
    "HebCup": "The method call will block (not return)\nuntil a stanza is available or the timeout has elapsed."
}
{
    "Origin": "Tests the specifying heap memory with config default value for job manager and task manager.",
    "Reference": "Tests the specifying job manager heap memory with config default value for job manager and task manager.",
    "HebCup": "Tests the specifying Job Manager Heap Memory with config default value for job manager and task manager."
}
{
    "Origin": "Nguyen-Widrow randomizer with a range between -1 and 1.",
    "Reference": "RangeRandomizer with a range between -1 and 1.",
    "HebCup": "Nguyen-Widrow randomizer with a range between -1 and 1."
}
{
    "Origin": "Cancel events are never emitted.",
    "Reference": "Cancel events are also emitted.",
    "HebCup": "Cancel events are never emitted."
}
{
    "Origin": "Trailing empty strings are therefore not included in the resulting array.",
    "Reference": "Trailing empty strings are therefore not included in the resulting {@link Seq}.",
    "HebCup": "Trailing empty strings are therefore not included in the resulting array."
}
{
    "Origin": "Unwraps a given connection provider if necessary",
    "Reference": "Recursively unwraps a given connection provider if necessary",
    "HebCup": "Unwraps a given null if necessary"
}
{
    "Origin": "Gets the amount of available items in the network of the type passed in, checking NBT or not.",
    "Reference": "Gets the number of available items in the network satisfying the given matcher.",
    "HebCup": "Gets the amount of available Corporea Request in the network of the type passed in, checking NBT or not."
}
{
    "Origin": "ServerBuilder.service(ServiceWithRoutes)} to mount all service paths\nwithout interfering with other services.",
    "Reference": "ServerBuilder.service(HttpServiceWithRoutes)} to mount all service paths\nwithout interfering with other services.",
    "HebCup": "ServerBuilder.service(HttpServiceWithRoutes)} to mount all service paths without interfering with other services."
}
{
    "Origin": "The default implementation delegates to {@link #process(BaseEvent)} and will:",
    "Reference": "The default implementation delegates to {@link #process(CoreEvent)} and will:",
    "HebCup": "The default implementation delegates to {@link #process(CoreEvent)} and will:"
}
{
    "Origin": "The {@link EcKeyCreateOptions} parameter is required.",
    "Reference": "The {@link CreateEcKeyOptions} parameter is required.",
    "HebCup": "The {@link CreateEcKeyOptions} parameter is required."
}
{
    "Origin": "This is currently accomplished by calling {@link MapMaker#makeMap()}.",
    "Reference": "This is equivalent to {@link MapMaker#makeMap()}.",
    "HebCup": "This is currently accomplished by calling {@link ConcurrentHashMap#makeMap ()}."
}
{
    "Origin": "For selection order-by queries, order-by expressions will be put at the front.",
    "Reference": "Order-by expressions will be put at the front.",
    "HebCup": "For order By order-by queries, order-by expressions will be put at the front."
}
{
    "Origin": "Returns a string representation of this object; useful for testing and debugging.",
    "Reference": "Returns a string representation of this object.",
    "HebCup": "Returns a string representation of this object; useful for testing and debugging."
}
{
    "Origin": "You can also use the optional archive\ndescription field to specify how the archive is referred to in an\nexternal index of archives, such as you might create in Amazon",
    "Reference": "You can also use the optional archive description field to\nspecify how the archive is referred to in an external index of archives,\nsuch as you might create in Amazon DynamoDB.",
    "HebCup": "You can also use the optional archive\ndescription field to specify how the archive is referred to in an\nexternal index of archives, such as you might create in Amazon"
}
{
    "Origin": "Create a {@code TimePairInter} object from its two halves.",
    "Reference": "Create and add a {@code TimePairInter} object from its two halves.",
    "HebCup": "createAdded a {@code TimePairInter} object from its two halves."
}
{
    "Origin": "Builds an {@link Intent} for starting all downloads.",
    "Reference": "Builds an {@link Intent} to pause all downloads.",
    "HebCup": "Builds an {@link Intent} for starting all downloads."
}
{
    "Origin": "The {@link Poller poller} allows users to automatically poll on the create certificate\noperation status.",
    "Reference": "The {@link PollerFlux poller} allows users to automatically poll on the create certificate\noperation status.",
    "HebCup": "The {@link PollerFlux PollerFlux} allows users to automatically poll on the create certificate operation status."
}
{
    "Origin": "Shortcut for {@link #create(String, String, ModelType, String, Boolean)}",
    "Reference": "Shortcut for {@link #create(String, String, ModelType, String, boolean)}",
    "HebCup": "Shortcut for {@link#create (String , String , ModelType , String , boolean)}"
}
{
    "Origin": "Configure a SpEL expression to evaluate a {@link Command} for RSocket request type at runtime\nagainst a request message.",
    "Reference": "Configure a SpEL expression to evaluate a {@link Command} for the RSocket request type at runtime\nagainst a request message.",
    "HebCup": "Configure a SpEL expression to evaluate a {@link Command} for RSocket request type at runtime\nagainst a request message."
}
{
    "Origin": "Calls {@link Plugin#willDeclareSetter(TypeSpec.Builder, PropertyGenerator, MethodSpec.Builder)}\non all the bundled plugins",
    "Reference": "Calls {@link Plugin#beforeDeclareSetter(TypeSpec.Builder, PropertyGenerator, MethodSpec.Builder)}\non all the bundled plugins",
    "HebCup": "Calls {@link Plugin#beforeDeclareSetter (TypeSpec.Builder , PropertyGenerator , MethodSpec.Builder)} on all the bundled plugins"
}
{
    "Origin": "If the caller's module is this module then update this module to\nopen the given package to the given module.",
    "Reference": "If this module has opened a package to at least the caller\nmodule then update this module to open the package to the given module.",
    "HebCup": "If the caller's module is this module then update this module to\nopen the given package to the given module."
}
{
    "Origin": "Initializes the properties with the default configuration for the command-line tool.",
    "Reference": "Initializes the config with the default configuration for the command-line tool.",
    "HebCup": "Initializes the > with the default configuration for the command-line tool."
}
{
    "Origin": "Set the time in ms this object was last used.",
    "Reference": "Sets the time in milliseconds this object was last used.",
    "HebCup": "Set the time in ms this object was this.last Used Millis."
}
{
    "Origin": "Calling with null will terminate the PublishProcessor and a NullPointerException\nis signalled to the Subscribers.",
    "Reference": "Calling with a null value will terminate the PublishProcessor and a NullPointerException\nis signaled to the Subscribers.",
    "HebCup": "Calling with null will terminate the PublishProcessor and a ExceptionHelper.createNullPointerException is signalled to the Subscribers."
}
{
    "Origin": "Gets the current data source from this DataCommunicator.",
    "Reference": "Gets the current data provider from this DataCommunicator.",
    "HebCup": "Gets the current Data Provider from this DataCommunicator."
}
{
    "Origin": "Update a MessageDigest with the content of a context.",
    "Reference": "Update a {@link Hasher} with the content of a context.",
    "HebCup": "Update a Hasher with the content of a context."
}
{
    "Origin": "For data\npolicies not supported by management rest api (for example, NORMAL and PRELOADED)\nit will show as UNSUPPORTED",
    "Reference": "For data\npolicies not supported by management rest api (for example, NORMAL and PRELOADED)\nit will show as LEGACY",
    "HebCup": "For data policies not supported by management rest api (for example , NORMAL and PRELOADED) it will show as LEGACY"
}
{
    "Origin": "Returns an RxJava Observable that monitors changes to this RealmObject.",
    "Reference": "Returns an Rx Observable that monitors changes to this RealmObject.",
    "HebCup": "Returns an RxJava ChangesetObservable that monitors changes to this RealmObject."
}
{
    "Origin": "Returns the quorum name for lock operations.",
    "Reference": "Returns the split brain protection name for lock operations.",
    "HebCup": "Returns the split Brain Protection Name for lock operations."
}
{
    "Origin": "Returns the o auth consumer with the primary key or throws a {@link com.liferay.opensocial.NoSuchOAuthConsumerException} if it could not be found.",
    "Reference": "Returns the o auth consumer with the primary key or throws a {@link NoSuchOAuthConsumerException} if it could not be found.",
    "HebCup": "Returns the o auth consumer with the primary key or throws a {@link com.liferay.opensocial.NoSuchOAuthConsumerException} if it could not be found."
}
{
    "Origin": "The children will be ordered from bottom to top rather than the default top to bottom.",
    "Reference": "The children will be displayed last to first.",
    "HebCup": "The children will be ordered from bottom to top rather than the default top to bottom."
}
{
    "Origin": "Tokenizes the specified input and returns distinct tokens.",
    "Reference": "Normalizes the specified input and returns its distinct tokens.",
    "HebCup": "Tokenizes the specified input and returns distinct <."
}
{
    "Origin": "Adds the given {@link ItemStack} to the player's inventory, or drops it in front of them if it was not accepted",
    "Reference": "Adds the given {@link ItemStack} to the player's inventory, or drops it in front of them if their was not enough\nroom.",
    "HebCup": "Adds the given {@link ItemStack} to the player.inventory's inventory, or drops it in front of them if it was not accepted"
}
{
    "Origin": "Clear updates not committed in the session",
    "Reference": "Rollback updates not committed in the session",
    "HebCup": "rollback updates not committed in the session"
}
{
    "Origin": "Use {@link #makeNaiveMatrix()} if\nyou want to perform further updates.",
    "Reference": "Use {@link #makePopulationMatrix()} if\nyou want to perform further updates.",
    "HebCup": "Use {@link #makePopulationMatrix()} if you want to perform further updates."
}
{
    "Origin": "If no cache is configured or there is an error while\nquerying the cache, false is returned none the less.",
    "Reference": "If no cache is configured or there is an error while\nquerying the cache, returns false nonetheless.",
    "HebCup": "If no cache is configured or there is an error while\nquerying the cache, false is returned none the less."
}
{
    "Origin": "Create or obtain a {@link CallableStatement} from the pool.",
    "Reference": "Creates or obtains a {@link CallableStatement} from the pool.",
    "HebCup": "Create or obtain a {@link CallableStatement} from the pool."
}
{
    "Origin": "Gets the additional trade information, defaulted to an empty instance.",
    "Reference": "Gets the additional information, defaulted to an empty instance.",
    "HebCup": "Gets the additional PortfolioItem information , defaulted to an empty instance."
}
{
    "Origin": "The {@link KeyCreateOptions#getExpires() expires} and {@link",
    "Reference": "The {@link CreateKeyOptions#getExpiresOn() expires} and {@link",
    "HebCup": "The {@link CreateKeyOptions#getExpires () expires} and {@link"
}
{
    "Origin": "RsPrettyJSON can conform to equals and hash code contract.",
    "Reference": "RsPrettyJSON can conform to equals.",
    "HebCup": "RsPrettyJSON can conform to equals and hash code contract."
}
{
    "Origin": "Create an instance of {@link JAXBElement }{@code <}{@link CTMarkupRange }{@code >}}",
    "Reference": "Create an instance of {@link JAXBElement }{@code <}{@link CTMoveToRangeEnd }{@code >}}",
    "HebCup": "Create an instance of {@link JAXBElement} {@code <} {@link CTMoveToRangeEnd} {@code >}}"
}
{
    "Origin": "perform an answer merge without explanation\nNB:assumes answers are compatible (concept corresponding to join vars if any are the same)",
    "Reference": "perform an answer merge with optional explanation\nNB:assumes answers are compatible (concept corresponding to join vars if any are the same)",
    "HebCup": "perform an answer if without explanation NB:assumes answers are compatible (concept corresponding to join vars if any are the same)"
}
{
    "Origin": "Returns a string representation of this object; useful for testing and debugging.",
    "Reference": "Returns a string representation of this object.",
    "HebCup": "Returns a string representation of this object; useful for testing and debugging."
}
{
    "Origin": "Checks if the given user exists in the current tenant",
    "Reference": "Checks if the given users and roles exist in the current tenant",
    "HebCup": "Checks if the given users Or Roles Exist in the current tenant"
}
{
    "Origin": "Should subscriptions be considered part of a group even if using a unicast endpoint, should it be\nconsidered an individual even if using a multicast endpoint, or should the use of a unicast/multicast\nendpoint infer the usage.",
    "Reference": "Should network subscriptions be considered part of a group even if using a unicast endpoint, should it be\nconsidered an individual even if using a multicast endpoint, or should the use of a unicast/multicast\nendpoint infer the usage.",
    "HebCup": "Should subscriptions be considered part of a receiverGroup even if using a unicast endpoint , should it be considered an individual even if using a multicast endpoint , or should the use of a unicast/multicast endpoint infer the usage."
}
{
    "Origin": "Set the value of url used to locate the database for this datasource.",
    "Reference": "Sets the value of URL string used to locate the database for this datasource.",
    "HebCup": "Set the value of url used to locate the database for this datasource."
}
{
    "Origin": "Tests the functionality of copyTo.",
    "Reference": "Tests the functionality of copyTo(array).",
    "HebCup": "Tests the functionality of CopyToArray."
}
{
    "Origin": "send a list of update to downstream kafka topic",
    "Reference": "send the list of the message to downstream kafka topic",
    "HebCup": "send a list of update to downstream kafka topic"
}
{
    "Origin": "| lhsPatternBind consequenceInvocation?\n          )",
    "Reference": "| lhsPatternBind consequenceInvocation*\n          )\n          SEMICOLON?",
    "HebCup": "| lhsPatternBind consequenceInvocation?\n          )"
}
{
    "Origin": "See {@link InstanceSelector#select(int)}",
    "Reference": "See {@link InstanceSelector#select(IndexSlot)}",
    "HebCup": "See {@link InstanceSelector#select(IndexSlot)}"
}
{
    "Origin": "* One or more of the custom model's audio resources is invalid.",
    "Reference": "* The custom model contains one or more invalid audio resources.",
    "HebCup": "* One or more of the custom model's audio resources is invalid."
}
{
    "Origin": "DHCP Server should send DHCPNAK message to client if \"Request IP\" is incorrect, or is on the wrong network",
    "Reference": "DHCP Server should send DHCPNAK message to client if \"Request IP\" is incorrect/invalid, or is on the wrong network",
    "HebCup": "DHCP Server should send DHCPNAK message to client if \"Request IP\" is incorrect, or is on the wrong network"
}
{
    "Origin": "This will trigger the creation of the player, the\nlistener registration, the start of the action schedule, and the preparation of the player\nwith the provided media source.",
    "Reference": "This will trigger the creation of the player, the\nlistener registration, the start of the action schedule, the initial set of media items and the\npreparation of the player.",
    "HebCup": "This will trigger the creation of the player, the\nlistener registration, the start of the action schedule, and the preparation of the player\nwith the provided media source."
}
{
    "Origin": "Like {@link #to(Class)} but updates an existing object instead of creating a new instance.",
    "Reference": "Like {@link #fetch(Class)} but updates an existing object instead of creating a new instance.",
    "HebCup": "Like {@link#fetchInto (Class)} but updates an existing object instead of creating a new instance."
}
{
    "Origin": "The copy doesn't have access to a\ndataset.",
    "Reference": "The copy has access to the same\ndataset.",
    "HebCup": "The copy doesn't have access to a\ndataset."
}
{
    "Origin": "Returns an immutable map containing five mappings.",
    "Reference": "Returns an unmodifiable map containing five mappings.",
    "HebCup": "Returns an Unmodifiable map containing five mappings."
}
{
    "Origin": "Adds 25 more results to existing search results",
    "Reference": "Adds more results to existing search results",
    "HebCup": "Adds 25 more results to existing mwApi.search results"
}
{
    "Origin": "{@codesnippet com.azure.data.applicationconfig.configurationclient.deleteSettingWithResponse#ConfigurationSetting-boolean-Context}",
    "Reference": "{@codesnippet com.azure.data.applicationconfig.configurationclient.deleteConfigurationSettingWithResponse#ConfigurationSetting-boolean-Context}",
    "HebCup": "{@codesnippet com.azure.data.applicationconfig.configurationclient.deleteConfigurationSettingWithResponse#ConfigurationSetting-boolean-Context}"
}
{
    "Origin": "Get the name of the type that should be used in context.",
    "Reference": "Get the name of the type that should be applied in context.",
    "HebCup": "Get the name of the type that should be used in context."
}
{
    "Origin": "Gets the type instance for the given ID.",
    "Reference": "Gets the specified type instance.",
    "HebCup": "Gets the type instance for the given i."
}
{
    "Origin": "Also includes db:output() and fn:put().",
    "Reference": "Also includes update:output() and fn:put().",
    "HebCup": "Also includes update:output() and fn:put()."
}
{
    "Origin": "Set the Date that this Token expires",
    "Reference": "Set the ZonedDateTime that this Token expires",
    "HebCup": "Set the ZonedDateTime that this Token expires"
}
{
    "Origin": "Adds the specified column which will not be serialized.",
    "Reference": "Adds the specified columns which will not be serialized.",
    "HebCup": "Adds the specified Columns which will not be serialized."
}
{
    "Origin": "Get branding settings\n### Functional Description:   DRACOON branding configuration entry point.",
    "Reference": "Get branding settings\n## \u26a0 Deprecated since version VERSION  ### Functional Description:   DRACOON branding configuration entry point.",
    "HebCup": "Get branding settings\n### Functional Description:   DRACOON branding configuration entry point."
}
{
    "Origin": "When no implementation is available, {@code setState} has no effect.",
    "Reference": "When no implementation is available, {@code setState} does not change the state.",
    "HebCup": "When no implementation is available, {@code setState} has no effect."
}
{
    "Origin": "Reject late events that arrive more than {@code millisAfterWindowEnd}\nafter the end of its window.",
    "Reference": "Reject late events that arrive more than {@code afterWindowEnd}\nafter the end of its window.",
    "HebCup": "Reject late events that arrive more than {@code afterWindowEnd.toMillis} after the end of its window."
}
{
    "Origin": "If the worker\nfinds that the task is canceled through the canceled flag returned by",
    "Reference": "If the worker finds that the\ntask is canceled through the  flag returned by",
    "HebCup": "If the worker\nfinds that the task is canceled through the canceled flag returned by"
}
{
    "Origin": "If the set etag doesn't match anything the update won't happen, this will result in a 412.",
    "Reference": "If the set ETag doesn't match anything the update won't happen, this will result in a 412.",
    "HebCup": "If the setConfiguration etag doesn't match anything the update won't happen , this will result in a 412."
}
{
    "Origin": "Given a pattern, which contains one or more capturing groups, and a String,\nreturns a list with the values of the\ncaptured groups in the pattern.",
    "Reference": "Given a pattern and a string, returns a list with the values of the\ncaptured groups in the pattern.",
    "HebCup": "Given a pattern, which contains one or more capturing groups, and a String,\nreturns a list with the values of the\ncaptured groups in the pattern."
}
{
    "Origin": "NOTE:This operation is only useful for long-lived activities\nto report liveliness of the task and to determine if a cancellation is\nbeing attempted.",
    "Reference": "This operation is only useful\nfor long-lived activities to report liveliness of the task and to\ndetermine if a cancellation is being attempted.",
    "HebCup": "NOTE:This operation is only useful for long-lived activities\nto report liveliness of the task and to determine if a cancellation is\nbeing attempted."
}
{
    "Origin": "Gets on tier percentage.",
    "Reference": "Gets on-tier percentages.",
    "HebCup": "Gets On Tier Percentages."
}
{
    "Origin": "Returns a string representation of this object; useful for testing and debugging.",
    "Reference": "Returns a string representation of this object.",
    "HebCup": "Returns a string representation of this object; useful for testing and debugging."
}
{
    "Origin": "NOTE:This operation is eventually consistent.",
    "Reference": "This operation is eventually consistent.",
    "HebCup": "NOTE:This operation is eventually consistent."
}
{
    "Origin": "Tests that the acetylation file can get downloaded and parsed",
    "Reference": "Tests that the acetylation file can get parsed without problems.",
    "HebCup": "Tests that the acetylation file can get downloaded and parsed"
}
{
    "Origin": "String representation of what sort of file {@code path} is.",
    "Reference": "String representation of read and write permissions of {@code path}.",
    "HebCup": "String representation of what sort of file {@code path} is."
}
{
    "Origin": "Manually configure the resource mappings.",
    "Reference": "Manually configure resource handler mappings.",
    "HebCup": "Manually configure the resource mappings."
}
{
    "Origin": "The default implementation skips\n and maps around deleted documents, and calls {@link #write(Fields)}.",
    "Reference": "The default implementation skips\n and maps around deleted documents, and calls {@link #write(Fields,NormsProducer)}.",
    "HebCup": "The default implementation skips\n and maps around deleted documents, and calls {@link #write(Fields)}."
}
{
    "Origin": "Returns an {@link Operator} to allow the query to be pushed\ndependencies via the {@link Observable#lift(Operator)} method.",
    "Reference": "Returns an {@link Transformer} to allow the query to be pushed\ndependencies via the {@link Observable#compose(Transformer)} method.",
    "HebCup": "Returns an {@link Transformer} to allow the query to be pushed dependencies via the {@link Observable#lift (Operator)} method."
}
{
    "Origin": "Integers 0 ... n.",
    "Reference": "Integers 0 ... n - 1.",
    "HebCup": "Integers 0 ... n."
}
{
    "Origin": "Register a record reader.",
    "Reference": "Set the batch size.",
    "HebCup": "Register a batch Size."
}
{
    "Origin": "The functions can assume their\ninput is never be {@code null} nor {@link Optional}.",
    "Reference": "The function arguments assume that\ntheir input is neither {@code null} nor {@link Optional}.",
    "HebCup": "The functions can assume their\ninput is never be {@code null} nor {@link Optional}."
}
{
    "Origin": "Sort the points by x asc, y asc.",
    "Reference": "The candidates are sorted by x asc, y desc.",
    "HebCup": "reverseOrder the points by x asc , y asc."
}
{
    "Origin": "Resolves a collection of root modules, with this configuration as its\nparent, to create a new configuration.",
    "Reference": "Resolves a collection of root modules, with service binding, and with\nthis configuration as its parent, to create a new configuration.",
    "HebCup": "resolve And a collection of root modules, with this configuration as its parent, to create a new configuration."
}
{
    "Origin": "Encodes the form using the standard URI encoding mechanism and the UTF-8\ncharacter set.",
    "Reference": "Encodes the form using the standard HTML form encoding mechanism and the\nUTF-8 character set.",
    "HebCup": "Encodes the form using the standard URI encoding mechanism and the UTF-8 false."
}
{
    "Origin": "{@code handshake} will be non-null and {@code throwable} will be null in the case of a\nsuccessful TLS connection.",
    "Reference": "{@code handshake} will be non-null and {@code ioe} will be null in the case of a\nsuccessful TLS connection.",
    "HebCup": "{@code handshake} will be non-null and {@code IOException} will be null in the case of a successful TLS connection."
}
{
    "Origin": "Create a new data source from a cursor of events.",
    "Reference": "Create a new data source from a stream of events.",
    "HebCup": "Create a new data source from a ObjectStream of events."
}
{
    "Origin": "Generic setter for the virtualMetadataPopularConfiguration property of this class",
    "Reference": "Generic setter for the virtualMetadataConfiguration property of this class",
    "HebCup": "Generic setter for the VirtualMetadataConfiguration property of this class"
}
{
    "Origin": "Re-initializes this listener container's\nshared connection and its sessions and consumers.",
    "Reference": "Re-initializes this listener container's\nshared connection and its sessions and consumers, if necessary.",
    "HebCup": "Re-initializes this listener container's\nshared connection and its sessions and consumers."
}
{
    "Origin": "Tests the engine starts up, executes 1 trade cycle successfully, but then receives unexpected Exception from",
    "Reference": "Tests the engine starts up, executes 1 trade cycle successfully, but then receives unexpected",
    "HebCup": "Tests the engine starts up, executes 1 trade cycle successfully, but then receives unexpected Exception from"
}
{
    "Origin": "Additionally, Amazon Glacier also checks for any missing content\nranges when assembling the archive, if missing content ranges are\nfound, Amazon Glacier returns an error and the operation fails.",
    "Reference": "Additionally, Amazon Glacier also checks for any missing content ranges\nwhen assembling the archive, if missing content ranges are found, Amazon",
    "HebCup": "Additionally, Amazon Glacier also checks for any missing content\nranges when assembling the archive, if missing content ranges are\nfound, Amazon Glacier returns an error and the operation fails."
}
{
    "Origin": "Convert to primitive types, returning default value if text is null.",
    "Reference": "Convert to boolean, returning default value if text is inconvertible.",
    "HebCup": "Convert to primitive types, returning default value if text is null."
}
{
    "Origin": "This method effectively emulates\nthe  JavaScript cast function except it returns UNKNOWN for known values\nwith side-effects, use getImpureBooleanValue if you don't care about side-effects.",
    "Reference": "This method\neffectively emulates the  JavaScript cast function\nexcept it return UNKNOWN for known values with side-effects, use\ngetImpureBooleanValue if you don't care about side-effects.",
    "HebCup": "This method effectively emulates the JavaScript cast function except it switchs UNKNOWN for known values with side-effects , use getImpureBooleanValue if you don't care about side-effects."
}
{
    "Origin": "To perform a partial update of a block blob's, use PutBlock\nand PutBlockList.",
    "Reference": "To perform a partial update of a block blob's, use",
    "HebCup": "To perform a partial update of a block blob's, use PutBlock\nand PutBlockList."
}
{
    "Origin": "Sets the servers resolved by name resolution.",
    "Reference": "Sets the addresses resolved by name resolution.",
    "HebCup": "Sets the Addresses resolved by name resolution."
}
{
    "Origin": "We will also set\nthe longestPhaseSpawnRunnerName to the longest running spawn runner name across all phases if\nit exists.",
    "Reference": "We will also set the\nlongestPhaseSpawnRunnerName to the longest running spawn runner name across all phases.",
    "HebCup": "We will also set the longestPhaseSpawnspawnResult.getRunnerName to the longest running spawn runner name across all phases if it exists."
}
{
    "Origin": "get the list of git markers web-elements in the editor",
    "Reference": "Gets the list of git markers web-elements in the editor.",
    "HebCup": "get the catch of git markers web-elements in the editor"
}
{
    "Origin": "Set isManualImport.",
    "Reference": "Set IsManualImport.",
    "HebCup": "Set IsManualImport."
}
{
    "Origin": "construct an object from a byte stream\n(similar semantically to previous method, we are deciding\n which one to support)",
    "Reference": "Construct an object from a byte stream\n(similar semantically to previous method, we are deciding\n which one to support)",
    "HebCup": "construct an object from a byte stream\n(similar semantically to previous method, we are deciding\n which one to support)"
}
{
    "Origin": "Execute tests for a given {@link EngineDiscoveryRequest} using the\n{@link TestEngine} with the provided ID.",
    "Reference": "Execute tests for the given {@link EngineDiscoveryRequest} using the\n{@link TestEngine} with the supplied ID.",
    "HebCup": "Execute tests for a given {@link EngineDiscoveryRequest} using the\n{@link TestEngine} with the provided ID."
}
{
    "Origin": "Returns the object with the settings used for calls to labelAudio.",
    "Reference": "Returns the object with the settings used for calls to listEvaluationJobs.",
    "HebCup": "Returns the object with the settings used for calls to ListEvaluationJobs."
}
{
    "Origin": "Blocks until all processes are stopped.",
    "Reference": "Blocks until all processes are quickly stopped.",
    "HebCup": "Blocks until all processes are stopped."
}
{
    "Origin": "Set-up database.",
    "Reference": "Set down database.",
    "HebCup": "set-up database."
}
{
    "Origin": "Object chooser, this becomes the selected item (and added\nto the chooser if necessary).",
    "Reference": "If the Object is in the Object chooser, this\nbecomes the selected item (and added to the chooser if necessary).",
    "HebCup": "Object chooser, this becomes the selected item (and added\nto the chooser if necessary)."
}
{
    "Origin": "Create a connection creator for short-lived connections.",
    "Reference": "Creates a channel creator for short-lived connections.",
    "HebCup": "Create a connection creator for short-lived connections."
}
{
    "Origin": "Creates and returns a new {@link TitanVertexProperty} for the given key on this vertex with the specified\nobject being the value.",
    "Reference": "Creates and returns a new {@link JanusGraphVertexProperty} for the given key on this vertex with the specified\nobject being the value.",
    "HebCup": "Creates and returns a new {@link JanusGraphVertexProperty} for the given key on this vertex with the specified object being the value."
}
{
    "Origin": "Converts an entity to a DBObject",
    "Reference": "Converts an entity to a Document",
    "HebCup": "Converts an entity to a Document"
}
{
    "Origin": "Returns the title, or null if none is set",
    "Reference": "Returns the title static text, or null if none is set.",
    "HebCup": "Returns the title, or null if none is set"
}
{
    "Origin": "Returns \"true\" if the provided CrawlURI has an HttpMethod with\na status code that falls within this instance's specified\nrange.",
    "Reference": "Returns \"true\" if the provided CrawlURI has a fetch status that falls\nwithin this instance's specified range.",
    "HebCup": "Returns ``true`` if the provided CrawlURI has an int with a status code that falls within this instance's specified range."
}
{
    "Origin": "The total time is calculated using the total count, since this is a built-in correspondence in the\n{@link SimplifiedLogScenario}.",
    "Reference": "The self time is calculated using the self count, since this is a built-in correspondence in the\n{@link SimplifiedLogScenario}.",
    "HebCup": "The total time is calculated using the total count, since this is a built-in correspondence in the\n{@link SimplifiedLogScenario}."
}
{
    "Origin": "Note that validation type will be ignored for child context.",
    "Reference": "Note that the validation mode will be ignored for child context.",
    "HebCup": "Note that validation Mode will be ignored for child context."
}
{
    "Origin": "We check if there is a registered comparator for all the interfaces if {@code clazz}",
    "Reference": "We check if there is a registered comparator for a interfaces of {@code clazz}",
    "HebCup": "We check if there is a registered return for all the interfaces if {@code clazz}"
}
{
    "Origin": "If not explicitly configured, this is the default value of\n{@link CheckpointingOptions#FS_BUFFER_SIZE}.",
    "Reference": "If not explicitly configured, this is the default value of\n{@link CheckpointingOptions#FS_WRITE_BUFFER_SIZE}.",
    "HebCup": "If not explicitly configured , this is the default value of {@link CheckpointingOptions#FS_WRITE_BUFFER_SIZE}."
}
{
    "Origin": "Checks if caching was enabled for at least one document.",
    "Reference": "Checks if disk caching is requested or required for at least one document.",
    "HebCup": "Checks if caching was enabled for at least one document."
}
{
    "Origin": "Convenience method to get custom install file",
    "Reference": "Convenience method to get custom installation script",
    "HebCup": "Convenience method to input custom install file"
}
{
    "Origin": "Filters the sql commands if necessary.",
    "Reference": "Filters the sql commands if necessary - eg.",
    "HebCup": "Filters the sql commands if necessary."
}
{
    "Origin": "Retrn the list of members for the given class.",
    "Reference": "Returns a list of enclosed members for the given type.",
    "HebCup": "Retrn the list of Members the given class."
}
{
    "Origin": "Now this iteration ends, we've covered target with 1 interval, so the count increments by 1.",
    "Reference": "Now this iteration ends, we've covered target with 1 merged interval, so the#of intervals increments by 1.",
    "HebCup": "Now this iteration ends , we've covered target with 1 interval , so the numOfIntervals increments by 1."
}
{
    "Origin": "Updates a module m to export a package to all modules.",
    "Reference": "Update module m to export a package to all modules.",
    "HebCup": "Updates a module m to export a package to all modules."
}
{
    "Origin": "Getter of publicationDateMax.",
    "Reference": "Getter of publicationDateMin.",
    "HebCup": "Getter of publicationDateMin."
}
{
    "Origin": "Tests that  is assignable to and from .",
    "Reference": "Tests that  is assignable from .",
    "HebCup": "Tests that  is assignable to and from ."
}
{
    "Origin": "Wait for this task to meet the expected number of commits as defined by {@code\nexpectedCommits}.",
    "Reference": "Wait up to the specified timeout for this task to meet the expected number of commits as\ndefined by {@code expectedCommits}.",
    "HebCup": "Wait for this task to meet the expected number of commits as defined by {@code\nexpectedCommits}."
}
{
    "Origin": "Set the number of digits in the fractional part of a size.",
    "Reference": "Set the default number of digits in the fractional part of a size.",
    "HebCup": "Set the number of digits in the fractional part of a defaultSize."
}
{
    "Origin": "Check if CertConstraintParameters has a trusted match, if it does\ncall next() for any following constraints.",
    "Reference": "Check if ConstraintsParameters has a trusted match, if it does\ncall next() for any following constraints.",
    "HebCup": "Check if ConstraintsParameters has a trusted match , if it does call next () for any following constraints."
}
{
    "Origin": "Resolves a collection of root modules, with service binding, and with\nthis configuration as its parent, to create a new configuration.",
    "Reference": "Resolves a collection of root modules, with this configuration as its\nparent, to create a new configuration.",
    "HebCup": "Resolves a collection of root modules, with service binding, and with\nthis configuration as its parent, to create a new configuration."
}
{
    "Origin": "If the prefetch is not needed, {@link #playFromMediaId} can be directly called\nwithout this method.",
    "Reference": "If the prepare is not needed, {@link #playFromMediaId} can be directly called\nwithout this method.",
    "HebCup": "If the prepare is not needed , {@link#playFromMediaId} can be directly called without this method."
}
{
    "Origin": "See Immutable Set Static Factory Methods for details.",
    "Reference": "See Unmodifiable Sets for details.",
    "HebCup": "See Unmodifiable Set Static Factory Methods for details."
}
{
    "Origin": "Submits a result of a broker execution.",
    "Reference": "Submits the result of a broker execution.",
    "HebCup": "Submits a result of a brokering execution."
}
{
    "Origin": "Returns a random local port number, greater than min and lower than max.",
    "Reference": "Returns a random local port number in the interval [min, max].",
    "HebCup": "Returns a random local port number, greater than min and lower than max."
}
{
    "Origin": "Obtains an instance from the specified unique name.",
    "Reference": "Obtains an instance from the specified name.",
    "HebCup": "Obtains an instance from the specified name."
}
{
    "Origin": "Iterate over registered {@link HandlerMethodArgumentResolver}s and invoke the one that supports it.",
    "Reference": "Iterate over registered\n{@link HandlerMethodArgumentResolver HandlerMethodArgumentResolvers}\nand invoke the one that supports it.",
    "HebCup": "Iterate over registered {@link HandlerMethodArgumentResolver}s and invoke the one that supports it."
}
{
    "Origin": "NOTE:This operation is eventually consistent.",
    "Reference": "This operation is eventually consistent.",
    "HebCup": "NOTE:This operation is eventually consistent."
}
{
    "Origin": "After this method is\ncalled, no accumulo client will work in the current classloader.",
    "Reference": "After this method is\ncalled, no Connector will work in the current classloader.",
    "HebCup": "After this method is\ncalled, no accumulo client will work in the current classloader."
}
{
    "Origin": "Waits during {@code timeout} until specified {@code element} does not contain the specified\n{@code expectedText}.",
    "Reference": "Waits during {@code timeout} until specified {@code element} does not contain the specified\n{@code absentText}.",
    "HebCup": "Waits during {@code timeout} until specified {@code element} does not contain the specified {@code absentText}."
}
{
    "Origin": "choosing return type is based on existence of @class field in JSON",
    "Reference": "choosing return type is based on existence of @class and @type field in JSON",
    "HebCup": "choosing return type is based on existence of @class field in JSON"
}
{
    "Origin": "Recursively get path in top down ancestral order.",
    "Reference": "Recursively append the path in top down ancestral order.",
    "HebCup": "Recursively append Path in top down ancestral order."
}
{
    "Origin": "Simply calls through to the {@link TransactionRepresentation#accept(Visitor)} method for each {@link",
    "Reference": "Simply calls through to the {@link CommandStream#accept(Visitor)} method for each {@link",
    "HebCup": "Simply calls through to the {@link CommandsRepresentation#accept(Visitor)} method for each {@link"
}
{
    "Origin": "Returns {@code true} if the given name is a legal binary name.",
    "Reference": "Returns {@code true} if the given name is a legal type name.",
    "HebCup": "Returns {@code true} if the given name is a legal Type Name."
}
{
    "Origin": "Set the Date that this Token was Created",
    "Reference": "Set the ZonedDateTime that this Token was Created",
    "HebCup": "Set the ZonedDateTime that this Token was Created"
}
{
    "Origin": "Publish Config mapped to the given key under the {@link #DEFAULT_GROUP default group}",
    "Reference": "Publish Config mapped to the given key under the {@link #getDefaultGroup() default group}",
    "HebCup": "Publish Config mapped to the given key under the {@link#getDefaultGroup default group}"
}
{
    "Origin": "{@codesnippet com.azure.storage.blob.specialized.BlobAsyncClientBase.startCopyFromURL#String}",
    "Reference": "{@codesnippet com.azure.storage.blob.specialized.BlobAsyncClientBase.beginCopy#String-Duration}",
    "HebCup": "{@codesnippet com.azure.storage.blob.specialized.BlobAsyncClientBase.beginCopy#String}"
}
{
    "Origin": "The input file must be a list of whitespace-separated verb-lemma-POS triples, one verb\nform per line.",
    "Reference": "The input file must be a list of tab-separated verb-POS pairs, one verb\nper line.",
    "HebCup": "The input file must be a list of whitespace-separated verb-lemma-POS triples, one verb\nform per line."
}
{
    "Origin": "We need to resend our first message with our conn_id",
    "Reference": "We need to resend the first message with our conn_id",
    "HebCup": "We need to resend our rsp message with our conn_id"
}
{
    "Origin": "Returns the component's background color as an alpha-red-green-blue\ninteger.",
    "Reference": "Returns the background color of the %type% as an alpha-red-green-blue\ninteger.",
    "HebCup": "Returns the component's background color as an alpha-red-green-blue\ninteger."
}
{
    "Origin": "The value is a double (ie VERSION) that needs to be formatted as a percentage with two decimal places precision.",
    "Reference": "The value is a double (ie VERSION) that needs to be formatted as a percentage with 'n' decimal places precision.",
    "HebCup": "The value is a double (ie VERSION) that needs to be formatted as a percentage with Decimal precision."
}
{
    "Origin": "During the prefetch, a session should not hold audio focus in order to allow\nother sessions play seamlessly.",
    "Reference": "During the prepare, a session should not hold audio focus in order to allow\nother sessions play seamlessly.",
    "HebCup": "During the Prepare , a session should not hold audio focus in order to allow other sessions play seamlessly."
}
{
    "Origin": "Create optimized insert value.",
    "Reference": "Create insert value.",
    "HebCup": "create Insert Value."
}
{
    "Origin": "Cookie data is signed it using\n.",
    "Reference": "Session data is signed it using\n.",
    "HebCup": "token data is signed it using ."
}
{
    "Origin": "Gets the convention of the swap for which the data is valid.",
    "Reference": "Gets the name of the volatilities.",
    "HebCup": "Gets the convention of the Name for which the data is valid."
}
{
    "Origin": "sort cookies with respect to their path: those with more specific Path attributes\nprecede those with less specific, as defined in RFC 2965 sec.",
    "Reference": "sort cookies with respect to their path and age: those with more longer Path attributes\nprecede those with shorter, as defined in RFC 6265.",
    "HebCup": "sort cookies with respect to their path: those with more specific PathAndAge attributes precede those with less specific , as defined in RFC 2965 sec."
}
{
    "Origin": "Process double drops & XP gain for Mining.",
    "Reference": "Process double drops & XP gain for miningBehaviour.",
    "HebCup": "Process double drops & XP gain for miningBehaviour."
}
{
    "Origin": "Tests the creation of a message authentication code for the sha256\nalgorithm.",
    "Reference": "Tests the creation of message authentication codes for the sha256 algorithm.",
    "HebCup": "Tests the creation of a message authentication code for the sha256\nalgorithm."
}
{
    "Origin": "Test of local method, of class ABITracer.",
    "Reference": "Test of Local file method, of class ABITracer.",
    "HebCup": "Test of local method, of class ABITracer."
}
{
    "Origin": "Creates a speculation reason that is part of this group.",
    "Reference": "Creates a speculation reason described by this group.",
    "HebCup": "Creates a speculation reason that is part of this group."
}
{
    "Origin": "Creates a SingleItemSketch on the heap given a Memory and assumes the DEFAULT_UPDATE_SEED.",
    "Reference": "Creates a SingleItemSketch on the heap given a SingleItemSketch Memory image and assumes the\nDEFAULT_UPDATE_SEED.",
    "HebCup": "Creates a heapify on the heap given a Memory and assumes the DEFAULT_UPDATE_SEED."
}
{
    "Origin": "Sets the query I use to {@link #validateObject validate} {@link Connection}s.",
    "Reference": "Sets the query I use to {@link #validateObject validate} {@link Connection}s. Should return at least one row.",
    "HebCup": "Sets the query I use to {@link #validateObject validate} {@link Connection}s."
}
{
    "Origin": "Returns true if field sessionKey is set (has been assigned a value) and false otherwise",
    "Reference": "Returns true if field sessionId is set (has been assigned a value) and false otherwise",
    "HebCup": "Returns true if field SessionId is set (has been assigned a value) and false otherwise"
}
{
    "Origin": "TODO: If a region is involved, all of its consumer regions are involved",
    "Reference": "If a region is involved, all of its consumer regions are involved",
    "HebCup": "TODO: If a (is involved , all of its consumer regions are involved"
}
{
    "Origin": "If whitelisted properties list is defined, only those props are\nvisible for JaVers, and the rest is ignored.",
    "Reference": "If ignored properties list is defined, only those props are\nvisible for JaVers, and the rest is ignored.",
    "HebCup": "If included Properties list is defined, only those props are visible for JaVers, and the rest is ignored."
}
{
    "Origin": "Then,\nreturn a  to scan the code and find the text to replace\nthe placeholder.",
    "Reference": "Then,\noverride getLabelFixingVisitor() to scan the code and find the text to replace\nthe placeholder.",
    "HebCup": "Then,\nreturn a  to scan the code and find the text to replace\nthe placeholder."
}
{
    "Origin": "Broadcasts string message to all participants over default data channel.",
    "Reference": "Broadcasts a string message to all endpoints of the conference.",
    "HebCup": "Broadcasts string message to all participants over default data channel."
}
{
    "Origin": "Triangulate N views using the Discrete Linear Transform (DLT)",
    "Reference": "Triangulate N views using the Discrete Linear Transform (DLT) with an uncalibrated camera",
    "HebCup": "triangulate N View N views using the Discrete Linear Transform (DLT)"
}
{
    "Origin": "Assigns the actorType.",
    "Reference": "Assigns the factory.",
    "HebCup": "Assigns the factory."
}
{
    "Origin": "Returns an immutable {@link Map} that is backed by the given {@link CConfiguration}.",
    "Reference": "Returns a {@link Map} that is backed by the given {@link CConfiguration}.",
    "HebCup": "Returns an immutable {@link Map} that is backed by the given {@link >Configuration}."
}
{
    "Origin": "Work-around for bug in\njava.net.URI ()",
    "Reference": "Work-around for bugs in\njava.net.URI (e.g.",
    "HebCup": "Work-around for bug in java.net.final ()"
}
{
    "Origin": "Get group by.",
    "Reference": "Get group by segment.",
    "HebCup": "Get group by."
}
{
    "Origin": "Returns a new reference to the function with the given name and arity.",
    "Reference": "Returns a function call to the function with the given name and arity.",
    "HebCup": "Returns a new reference to the function with the given name and arity."
}
{
    "Origin": "Returns the descriptor corresponding to the given Java type.",
    "Reference": "Returns the descriptor corresponding to the given class.",
    "HebCup": "Returns the descriptor corresponding to the given Java type."
}
{
    "Origin": "Sets a custom legend's labels and colors arrays.",
    "Reference": "Sets a custom legend's entries array.",
    "HebCup": "Sets a custom legend's labels and entries arrays."
}
{
    "Origin": "This includes not just\nthe resources defined in this module, but in any other modules that this module depends on, as well as any libraries those modules may\ndepend on (such as appcompat).",
    "Reference": "This includes not just\nthe resources defined in this module, but in any other modules that this module depends on, as well as any libraries those modules may\ndepend on (e.g.",
    "HebCup": "This includes not just\nthe resources defined in this module, but in any other modules that this module depends on, as well as any libraries those modules may\ndepend on (such as appcompat)."
}
{
    "Origin": "Returns all pending tasks that are still not completed.",
    "Reference": "Returns all continuous tasks that are still not completed.",
    "HebCup": "Returns all continuous Tasks that are still not completed."
}
{
    "Origin": "Integers 0 ... n.",
    "Reference": "Integers 0 ... n - 1.",
    "HebCup": "Integers 0 ... n."
}
{
    "Origin": "IE system, hosts, partitions",
    "Reference": "IE database, hosts, partitions",
    "HebCup": "IE system, hosts, partitions"
}
{
    "Origin": "Gets the exampleText.",
    "Reference": "Gets the text.",
    "HebCup": "Gets the text."
}
{
    "Origin": "See {@link jdk.internal.org.objectweb.asm.ClassVisitor#visitModule(String, int)}.",
    "Reference": "See {@link jdk.internal.org.objectweb.asm.ClassVisitor#visitModule}.",
    "HebCup": "See {@link jdk.internal.org.objectweb.asm.ClassVisitor#visitModule(String, int)}."
}
{
    "Origin": "Returns the {@linkplain #descendants() descendant stream} filtered by child type.",
    "Reference": "Returns the {@linkplain #descendants() descendant stream} filtered by the\ngiven node type.",
    "HebCup": "Returns the {@linkplain#descendants () descendant stream} filtered by r type."
}
{
    "Origin": "Run all tests with given executor.",
    "Reference": "Run all tests with given runner.",
    "HebCup": "Run all tests with given runner."
}
{
    "Origin": "Returns the members of this action profile group.",
    "Reference": "Returns the list of member references of this action profile group.",
    "HebCup": "Returns the members of this action Weighted group."
}
{
    "Origin": "When accessing right, level value increments by 1.",
    "Reference": "When right, column value increments by 1.",
    "HebCup": "When accessing right , col value increments by 1."
}
{
    "Origin": "Accumulate lefts into a LinkedListX (extended Persistent List) and Right with the supplied combiner function",
    "Reference": "Accumulate lefts into a LazySeq (extended Persistent List) and Right with the supplied combiner function",
    "HebCup": "Accumulate lefts into a LazySeq (extended Persistent List) and Right with the supplied combiner function"
}
{
    "Origin": "Getter Parameter Value for bankAccountFromId",
    "Reference": "Getter Parameter Value for Bank Account From",
    "HebCup": "Getter Parameter Value for cBankAccountId"
}
{
    "Origin": "Note that a MutableInteger isn't and can't be equal to an Integer.",
    "Reference": "Note that a MutableLong isn't and can't be equal to an Long.",
    "HebCup": "Note that a MutableInteger isn't and can't be equal to an Integer."
}
{
    "Origin": "Registers a custom property comparator for a given Custom type.",
    "Reference": "Registers a custom property comparator for a given Custom Type.",
    "HebCup": "Registers a custom property comparator for a given Custom type."
}
{
    "Origin": "For example, if the entire chart area is visible, this\nis simply the current size of {@link #contentRectMinusAllMargins}.",
    "Reference": "For example, if the entire chart area is visible, this\nis simply the current size of {@link #contentRect}.",
    "HebCup": "For example , if the entire chart area is visible , this is simply the current size of {@link#contentRect}."
}
{
    "Origin": "Adds the given Certificate to the certificateStore, if not yet containing.",
    "Reference": "Adds the given Certificate to the certificatesMap, if not yet containing.",
    "HebCup": "Adds the given Certificate to the certificatesMap , if not yet containing."
}
{
    "Origin": "Creates a new program scope: the list of methods.",
    "Reference": "Creates a new program scope as the root of all scopes",
    "HebCup": "Creates a new program scope: the list of methods."
}
{
    "Origin": "Queries this contact source for the given searchString.",
    "Reference": "Creates query for the given searchString.",
    "HebCup": "Queries this Contact Query for the given searchString."
}
{
    "Origin": "Computes the maximum for each pixel across all bands in the {@link Planar} image.",
    "Reference": "Computes the maximum for each pixel across selected bands in the {@link Planar} image.",
    "HebCup": "Computes the maximum for each pixel across all bands in the {@link Planar} image."
}
{
    "Origin": "Copied from org.mortbay.log.StdErrLog.",
    "Reference": "Copied from org.eclipse.log.StdErrLog.",
    "HebCup": "Copied from org.mortbay.log.StdErrLog."
}
{
    "Origin": "Validation of page:\n- detects invalid credentials error\n- detects wrong clientId error",
    "Reference": "Validation of page:\n- detects CAPTCHA test\n- detects invalid credentials error\n- detects wrong clientId error",
    "HebCup": "Validation of page:\n- detects invalid credentials error\n- detects wrong clientId error"
}
{
    "Origin": "Converts an array of raw binary data into an array of ascii 0 and 1 characters.",
    "Reference": "Converts an array of raw binary data into an array of ASCII 0 and 1 characters.",
    "HebCup": "Converts an array of raw binary data into an array of ascii 0 and 1 characters."
}
{
    "Origin": "Returns a string representation of this object; useful for testing and debugging.",
    "Reference": "Returns a string representation of this object.",
    "HebCup": "Returns a string representation of this object; useful for testing and debugging."
}
{
    "Origin": "To provide custom\nvalues for any of the parameters, you must modify the group after\ncreating it using ModifyDBParameterGroup .",
    "Reference": "To provide custom values for\nany of the parameters, you must modify the group after creating it using",
    "HebCup": "To provide custom\nvalues for any of the parameters, you must modify the group after\ncreating it using ModifyDBParameterGroup ."
}
{
    "Origin": "Stores a user and encrypted password.",
    "Reference": "Adds a user.",
    "HebCup": "Stores a user and encrypted password."
}
{
    "Origin": "generates a Meta Object Protocol method, that is used to call a non public\nmethod, or to make a call to super.",
    "Reference": "Generates a Meta Object Protocol method, that is used to call a non public\nmethod, or to make a call to super.",
    "HebCup": "generates a Meta Object Protocol method, that is used to call a non public\nmethod, or to make a call to super."
}
{
    "Origin": "Removes the specified tags from the {@link NamespacedEntityId}",
    "Reference": "Removes the specified tags from the {@link MetadataEntity}",
    "HebCup": "Removes the specified tags from the {@link MetadataEntity}"
}
{
    "Origin": "Returns the annotation mirror as specified by the \"qualifier\" element in {@code\nqualifierAnno}.",
    "Reference": "Returns the annotation mirror as specified by the \"qualifier\" element in {@code\ncontractAnno}.",
    "HebCup": "Returns the annotation mirror as specified by the ``qualifier`` element in {@code contractAnno}."
}
{
    "Origin": "Returns a boolean value indicating whether the method is executed in the first tier Truffle compilation.",
    "Reference": "Returns a boolean value indicating whether the method is executed in the low-grade Truffle compilation.",
    "HebCup": "Returns a boolean value indicating whether the method is executed in the first Grade Truffle compilation."
}
{
    "Origin": "If the value isn't a uri, then a IllegalArgumentException will be thrown.",
    "Reference": "If the value isn't a uri, then an",
    "HebCup": "If the value isn't a uri, then a IllegalArgumentException will be thrown."
}
{
    "Origin": "Runs the command with the given args.",
    "Reference": "Runs a command with the given args.",
    "HebCup": "Runs the return with the given args."
}
{
    "Origin": "Schedules package actions differentiating their type among Linux and Solaris\nservers.",
    "Reference": "Schedules package actions.",
    "HebCup": "Schedules package actions differentiating their type among Linux and Solaris\nservers."
}
{
    "Origin": "Returns a curve node for a CDS quoted in par spread or quoted spread.",
    "Reference": "Returns a curve node with par spread convention.",
    "HebCup": "Returns a curve node for a CDS quoted in par spread or quoted spread."
}
{
    "Origin": "Set the value of statusAfter, used in parameter comment.",
    "Reference": "Set the value of clusterstatus, used in parameter comment.",
    "HebCup": "Set the value of clusterstatus , used in parameter comment."
}
{
    "Origin": "Map an o.s.Message to an o.s.a.core.Message.",
    "Reference": "Map an o.s.m.Message to an o.s.a.core.Message.",
    "HebCup": "Map an o.s.Message to an o.s.a.core.Message."
}
{
    "Origin": "This method should be called after acquiring the retention lock; See {@link #acquireHistoryRetentionLock(Engine.HistorySource)}",
    "Reference": "This method should be called after acquiring the retention lock; See {@link #acquireHistoryRetentionLock()}",
    "HebCup": "This method should be called after acquiring the retention lock; See {@link #acquireHistoryRetentionLock(Engine.HistorySource)}"
}
{
    "Origin": "Flatten the list of values of the given keys from the actual map under test into an array, this new array becoming\nthe object under test.",
    "Reference": "Flatten the values of the given keys from the actual map under test into a new array, this new array becoming the object under test.",
    "HebCup": "Flatten the list of values of the given keys from the actual map under test into an array, this new array becoming\nthe object under test."
}
{
    "Origin": "Returns {@code true} if the given identifier is a legal Java identifier.",
    "Reference": "Returns {@code true} if the given name is a legal binary name.",
    "HebCup": "Returns {@code true} if the given identifier is a legal Java identifier."
}
{
    "Origin": "Load a {@link JobDirectoryManifest} from a {@link AgentManifestMessage}.",
    "Reference": "Load a {@link DirectoryManifest} from a {@link AgentManifestMessage}.",
    "HebCup": "Load a {@link DirectoryManifest} from a {@link AgentManifestMessage}."
}
{
    "Origin": "A failure to parse will return {@link NoopDnsServerAddressStreamProvider}.",
    "Reference": "A failure to parse will return {@link DefaultDnsServerAddressStreamProvider}.",
    "HebCup": "A failure to parse will return {@link DefaultDnsServerAddressStreamProvider}."
}
{
    "Origin": "Get Allocated.",
    "Reference": "Get Zugeordnet.",
    "HebCup": "Get Allocated."
}
{
    "Origin": "The classpath.",
    "Reference": "The build classpath.",
    "HebCup": "The buildClasspath."
}
{
    "Origin": "Get the {@link Sql @Sql} annotations declared on the supplied\n{@link AnnotatedElement}.",
    "Reference": "Get the {@code @Sql} annotations declared on the supplied {@code element}.",
    "HebCup": "Get the {@link Sql @Sql} annotations declared on the supplied {@link element}."
}
{
    "Origin": "Removes a flag from the specified array.",
    "Reference": "Removes this flag from the specified array.",
    "HebCup": "Removes a flag from the specified array."
}
{
    "Origin": "Note that the {@link Columns#NAME} column's width will be ignored, as it depends on the frame's\ninitial dimensions.",
    "Reference": "Note that the {@link Column#NAME} column's width will be ignored, as it depends on the frame's\ninitial dimensions.",
    "HebCup": "Note that the {@link Columns#NAME} column.ordinal's width will be ignored, as it depends on the frame's initial dimensions."
}
{
    "Origin": "Map treatment to set_vlan action.",
    "Reference": "Map treatment to permit action.",
    "HebCup": "Map treatment to PERMIT action."
}
{
    "Origin": "Tries to return a valid Os version on windows systems.",
    "Reference": "Tries to return a valid OS version on Windows systems.",
    "HebCup": "Tries to return a valid Os version on windows systems."
}
{
    "Origin": "NOTE: By default this registers the dao to be associated with the class that it uses.",
    "Reference": "NOTE: By default this registers the DAO to be associated with the class that it uses.",
    "HebCup": "NOTE: By default this registers the Dao To Class be associated with the class that it uses."
}
{
    "Origin": "WebElement#getAttribute(String)} equals to provided {@code expectedValue}.",
    "Reference": "WebElement#getAttribute(String)} equals to provided {@code expected} one.",
    "HebCup": "element#getAttribute (String)} equals to provided {@code expectedValue}."
}
{
    "Origin": "Other arguments are parsed to a {@link Configuration} and passed to the",
    "Reference": "Other arguments are parsed to a {@link Configuration} and passed to the Dispatcher,\nfor instance: .",
    "HebCup": "Other arguments are parsed to a {@link Configuration} and passed to the"
}
{
    "Origin": "Group: common",
    "Reference": "Group: security",
    "HebCup": "Group: common"
}
{
    "Origin": "Finds all constraint annotations defined for the given class and returns them in a list of\nconstraint descriptors.",
    "Reference": "Finds all constraint annotations defined for the given constrainable and returns them in a list of constraint\ndescriptors.",
    "HebCup": "Finds all constraint annotations defined for the given Constrainable and returns them in a list of constraint descriptors."
}
{
    "Origin": "Returns a string representation of this object; useful for testing and debugging.",
    "Reference": "Returns a string representation of this object.",
    "HebCup": "Returns a string representation of this object; useful for testing and debugging."
}
{
    "Origin": "Sets the scrService Object for this ScrActionSupport instance.",
    "Reference": "Sets the ServiceComponentRuntime Object for this ScrActionSupport instance.",
    "HebCup": "Sets the ServiceComponentRuntime Object for this ScrActionSupport instance."
}
{
    "Origin": "This is normally true, except when scanning is hosted in a different service.",
    "Reference": "This is normally false, except when scanning is hosted in a different process.",
    "HebCup": "This is normally true, except when scanning is hosted in a different service."
}
{
    "Origin": "Returns the value of the {@code bitfield} field.",
    "Reference": "Returns the value of the {@code baselineUsesContext} field.",
    "HebCup": "Returns the value of the {@code baselineUsesContext} field."
}
{
    "Origin": "Sends the specified sequence number to the channel.",
    "Reference": "Sends the specified sequence to the channel.",
    "HebCup": "Sends the specified Sequence to the channel."
}
{
    "Origin": "Return true if the given attribute name is the name of a pre-defined\nattribute that is not allowed in the class file.",
    "Reference": "Return true if the given attribute name is the name of a pre-defined\nattribute in JVMS VERSION that is not allowed in a module-info class.",
    "HebCup": "Return true if the given attribute name is the name of a pre-defined\nattribute that is not allowed in the class file."
}
{
    "Origin": "{@codesnippet com.azure.security.keyvault.certificates.CertificateClient.deleteCertificateWithResponse#String-Context}",
    "Reference": "{@codesnippet com.azure.security.keyvault.certificates.CertificateClient.beginDeleteCertificate#string}",
    "HebCup": "{@codesnippet com.azure.security.keyvault.certificates.CertificateClient.beginDeleteCertificate#String-Context}"
}
{
    "Origin": "Close and free all {@link PreparedStatement}s or\n{@link CallableStatement}s from the pool, and close the underlying\nconnection.",
    "Reference": "Closes and frees all {@link PreparedStatement}s or {@link CallableStatement}s from the pool, and close the\nunderlying connection.",
    "HebCup": "Close and free all {@link PreparedStatement}s or\n{@link CallableStatement}s from the pool, and close the underlying\nconnection."
}
{
    "Origin": "Returns the secondary parents of this property map, for interfaces that\nneed multiple inheritance.",
    "Reference": "Returns the secondary parents of this property map, for interfaces that need multiple\ninheritance or for interfaces of abstract classes.",
    "HebCup": "Returns the secondary parents of this property map, for interfaces that\nneed multiple inheritance."
}
{
    "Origin": "Returns a string representation of this object; useful for testing and debugging.",
    "Reference": "Returns a string representation of this object.",
    "HebCup": "Returns a string representation of this object; useful for testing and debugging."
}
{
    "Origin": "This exception is caught here and reported through\nthe event handler.",
    "Reference": "This exception is caught here and reported through reporter.",
    "HebCup": "This exception is caught here and reported through\nthe event handler."
}
{
    "Origin": "This operation is required only for organizations that were created explicitly in billing mode, or that were\nmigrated from a Consolidated Billing account family to Organizations.",
    "Reference": "This operation is required only for organizations that were created explicitly with only the consolidated billing\nfeatures enabled, or that were migrated from a Consolidated Billing account family to Organizations.",
    "HebCup": "This operation is required only for organizations that were created explicitly in billing mode, or that were\nmigrated from a Consolidated Billing account family to Organizations."
}
{
    "Origin": "Returns true and initiates a reconfiguration if a current one is not going",
    "Reference": "Returns true and initiates a reconfiguration if a current one is not\ngoing If a reconfiguration is going returns false",
    "HebCup": "Returns true and initiates a reconfiguration _ if a current one is not going"
}
{
    "Origin": "Returns a string representation of this object; useful for testing and debugging.",
    "Reference": "Returns a string representation of this object.",
    "HebCup": "Returns a string representation of this object; useful for testing and debugging."
}
{
    "Origin": "Returns a {@link ListenableFuture} for an open connection corresponding to the given id.",
    "Reference": "Returns a {@link ListenableFuture} for an {@link OpenedSocket} corresponding to the given id.",
    "HebCup": "Returns a {@link ListenableFuture} for an open connection corresponding to the given id."
}
{
    "Origin": "Returns a string representation of this object; useful for testing and debugging.",
    "Reference": "Returns a string representation of this object.",
    "HebCup": "Returns a string representation of this object; useful for testing and debugging."
}
{
    "Origin": "ParseException is thrown by the parser, it should be caught and returned in the InputRowPlusRaw so we will be able\nto provide information on the raw row which failed to be parsed.",
    "Reference": "If a ParseException is thrown by the parser, it should be caught and returned in the InputRowListPlusJson so\nwe will be able to provide information on the raw row which failed to be parsed.",
    "HebCup": "ParseException is thrown by the parser, it should be caught and returned in the InputRowPlusRawRaw so we will be able to provide information on the raw row which failed to be parsed."
}
{
    "Origin": "This\nmethod will also expand paths on the members of Collections.",
    "Reference": "This\nmethod will also expand paths on the members of Collections and Maps.",
    "HebCup": "This\nmethod will also expand paths on the members of Collections."
}
{
    "Origin": "This is why there is not a set method for the category property.",
    "Reference": "This is why there is not a set method for the item property.",
    "HebCup": "This is why there is not a set method for the Item property."
}
{
    "Origin": "Tests that {@link DatasetServiceImpl#insertAll} retries quota rate limited attempts.",
    "Reference": "Tests that {@link DatasetServiceImpl#insertAll} retries rate limited attempts.",
    "HebCup": "Tests that {@link DatasetServiceImpl#InsertRateLimitAll} retries quota rate limited attempts."
}
{
    "Origin": "Get Record ID.",
    "Reference": "Get Sales Transaction.",
    "HebCup": "get Is ID."
}
{
    "Origin": "Get branding info\n### Functional Description:   Provides information about branding settings.",
    "Reference": "Get branding information\n## \u26a0 Deprecated since version VERSION  ### Functional Description:   Provides information about branding settings.",
    "HebCup": "Get branding info\n### Functional Description:   Provides information about branding settings."
}
{
    "Origin": "Test that DocumentElement.add does not throw any exception when passing a non-null value.",
    "Reference": "Test that DocumentElement.addValue does not throw any exception when passing a non-null value.",
    "HebCup": "Test that DocumentElement.addValue does not throw any exception when passing a non-null value."
}
{
    "Origin": "Reading request by chunk and getting values from chunk",
    "Reference": "Example of reading request by chunk and getting values from chunk to chunk",
    "HebCup": "Reading request by chunk and getting values from chunk"
}
{
    "Origin": "Code snippets for {@link BlobClient#setHTTPHeadersWithResponse(BlobHTTPHeaders, BlobAccessConditions, Duration,",
    "Reference": "Code snippets for {@link BlobClient#setHTTPHeadersWithResponse(BlobHttpHeaders, BlobAccessConditions, Duration,",
    "HebCup": "Code snippets for {@link BlobClient#setHTTPHeadersWithResponse(BlobHttpHeaders, BlobAccessConditions, Duration,"
}
{
    "Origin": "True if the type is a JSO or interface implemented by a JSO, or a JsType.",
    "Reference": "True if the type is a JSO or interface implemented by a JSO, or a JsType, or a JsFunction.",
    "HebCup": "True if the type is a JSO or interface implemented by a JSO, or a JsType."
}
{
    "Origin": "Creates a negotiator used for ALTS.",
    "Reference": "Creates a negotiator used for ALTS client.",
    "HebCup": "Creates a negotiator used for ALTS."
}
{
    "Origin": "For an overview of CIDR ranges, go to the",
    "Reference": "For an overview of CIDR ranges, go to the Wikipedia Tutorial.",
    "HebCup": "For an overview of CIDR ranges, go to the"
}
{
    "Origin": "This should be the String representation of the {@link FieldEntity}.",
    "Reference": "This should be the {@link FieldEntity}.",
    "HebCup": "This should be the FieldEntity representation of the {@link FieldEntity}."
}
{
    "Origin": "Note this method creates a HotStream that starts emitting data\nimmediately.",
    "Reference": "Note this method creates a Connectable that starts emitting data\nimmediately.",
    "HebCup": "Note this method creates a Connectable that starts emitting data immediately."
}
{
    "Origin": "Get Extern Keyword Snippet Block.",
    "Reference": "Get keys Builtin Function Snippet Block.",
    "HebCup": "get Builtin Keys Snippet Block."
}
{
    "Origin": "Returns a rule that forbids access to the given set of IP addresses.",
    "Reference": "Adds a rule that forbids access to the given set of IP addresses.",
    "HebCup": "Returns a Utils that forbids access to the given set of IP addresses."
}
{
    "Origin": "Test affinity awareness partition distributions cache size property.",
    "Reference": "Test Partition Awareness partition distributions cache size property.",
    "HebCup": "test Partition Awareness Partition Distributions Cache Size Property."
}
{
    "Origin": "Decode the JVM options\n 1. strip \\\" at the start and at the end\n 2. replace \"&equals\" with \"=\"\n 3.",
    "Reference": "Decode the JVM options\n 1. strip \\\" at the start and at the end\n 2. replace \"(61)\" and \"&equals\" with \"=\"\n 3.",
    "HebCup": "Decode the JVM options\n 1. strip \\\" at the start and at the end\n 2. replace \"&equals\" with \"=\"\n 3."
}
{
    "Origin": "Test of var method, of class Beta.",
    "Reference": "Test of variance method, of class Beta.",
    "HebCup": "Test of Variance method , of class Beta."
}
{
    "Origin": "The {@link KeyCreateOptions} is required.",
    "Reference": "The {@link CreateKeyOptions} is required.",
    "HebCup": "The {@link CreateKeyOptions} is required."
}
{
    "Origin": "and repositoryId = ?.",
    "Reference": "and parentFolderId = ?.",
    "HebCup": "and parentFolderId = ?."
}
{
    "Origin": "Create a list of {@link FileMediaItem2} for testing purpose.",
    "Reference": "Create a list of {@link FileMediaItem} for testing purpose.",
    "HebCup": "Create a list of {@link FileMediaItem} for testing purpose."
}
{
    "Origin": "### \u24d8 Further Information: Room administrators should regularly handle pending assignments to provide access to rooms for other users.",
    "Reference": "### \u24d8 Further Information: Room administrators should **SHOULD** handle pending assignments to provide access to rooms for other users.",
    "HebCup": "### \u24d8 Further Information: Room administrators should regularly handle Token assignments to provide access to rooms for other users."
}
{
    "Origin": "Configure whether or not to use an empty oauth token for OAuth1",
    "Reference": "Configure whether or not to add an empty oauth token for OAuth1 while generating Base string",
    "HebCup": "Configure whether or not to use an empty TokenTo token for OAuth1"
}
{
    "Origin": "Parses {@link Basic2DMatrix} from the given Matrix Market string.",
    "Reference": "Parses {@link Basic2DMatrix} from the given Matrix Market.",
    "HebCup": "Parses {@link Basic2DMatrix} from the given Matrix Market InputStream."
}
{
    "Origin": "This method ADDS additional IterationListener to existing listeners",
    "Reference": "This method ADDS additional TrainingListener to existing listeners",
    "HebCup": "This method ADDS additional trainingListeners to existing listeners"
}
{
    "Origin": "Test of var method, of class TDistribution.",
    "Reference": "Test of variance method, of class TDistribution.",
    "HebCup": "Test of Variance method , of class TDistribution."
}
{
    "Origin": "Unless overridden by this method, the default Cipher instance is a\n{@link BlowfishCipher}.",
    "Reference": "Unless overridden by this method, the default CipherService instance is an\n{@link AesCipherService}.",
    "HebCup": "Unless overridden by this method , the default CipherService instance is a {@link BlowfishCipher}."
}
{
    "Origin": "{@code throwable} will be null in the case of a successful attempt to send the body.",
    "Reference": "{@code ioe} will be null in the case of a successful attempt to send the body.",
    "HebCup": "{@code IOException} will be null in the case of a successful attempt to send the body."
}
{
    "Origin": "For the `/v1/tables` method, the default is `tables`.",
    "Reference": "For the **Extract tables** method, the default is `tables`.",
    "HebCup": "For the `/v1/tables` method, the default is `tables`."
}
{
    "Origin": "Creates and caches a test {@link BaseEvent} instance for the scope of the current test method.",
    "Reference": "Creates and caches a test {@link CoreEvent} instance for the scope of the current test method.",
    "HebCup": "Creates and caches a test {@link CoreEvent} instance for the scope of the current test method."
}
{
    "Origin": "You are running on JDK6 which comes with JAX-WS {0} API, but this tool requires JAX-WS {1} API.",
    "Reference": "You are running on JDK6 or newer which comes with JAX-WS {0} API, but this tool requires JAX-WS {1} or newer API.",
    "HebCup": "You are running on JDK6 which comes with JAX-WS {0} API, but this tool requires JAX-WS {1} API."
}
{
    "Origin": "This\nmethod removes any fully qualified throwable class names from the message\ncause chain.",
    "Reference": "This\nmethod replaces fully qualified throwable class names from the message\ncause chain with simple class names.",
    "HebCup": "This\nmethod removes any fully qualified throwable class names from the message\ncause chain."
}
{
    "Origin": "The Camel Rest component to use for the REST transport, such as restlet, spark-rest.",
    "Reference": "The Camel Rest component to use for (producer) the REST transport, such as http, undertow.",
    "HebCup": "The Camel Rest producerComponent to use for the REST transport , such as restlet , spark-rest."
}
{
    "Origin": "This function initializes the Facebook SDK, the behavior of Facebook SDK functions are\nundetermined if this function is not called.",
    "Reference": "The behavior of Facebook SDK functions are undetermined if this function is not called.",
    "HebCup": "This function initializes the Facebook SDK, the behavior of Facebook SDK functions are\nundetermined if this function is not called."
}
{
    "Origin": "Commonly important\nstatus information.",
    "Reference": "Track something gone wrong.",
    "HebCup": "Commonly important status informationparams.putString"
}
{
    "Origin": "Finds a {@link Preference} based on its key.",
    "Reference": "Finds a {@link Preference} with the given key.",
    "HebCup": "Finds a {@link Preference} based on its key."
}
{
    "Origin": "ImmutableSet ImmutableSet.copyOf(Collection)} to set the property?",
    "Reference": "ImmutableSet.copyOf(Collection)} to set the property?",
    "HebCup": "ImmutableSet ImmutableSet.copyOf(Collection)} to set the property?"
}
{
    "Origin": "Returns the value of a yes/no option.",
    "Reference": "Returns the boolean value of a yes/no option.",
    "HebCup": "Returns the value of a Text/no option."
}
{
    "Origin": "Computes the average for each pixel across all bands in the {@link Planar}\nimage.",
    "Reference": "Computes the average for each pixel across selected bands in the {@link Planar} image.",
    "HebCup": "Computes the average for each pixel across all bands in the {@link Planar}\nimage."
}
{
    "Origin": "Returns the highest solid 'terrain' block which can occur naturally.",
    "Reference": "Returns the highest solid 'terrain' block.",
    "HebCup": "new the highest solid 'terrain' block which can occur naturally."
}
{
    "Origin": "Returns a string representation of this object; useful for testing and debugging.",
    "Reference": "Returns a string representation of this object.",
    "HebCup": "Returns a string representation of this object; useful for testing and debugging."
}
{
    "Origin": "Execute the ALTER CLASS.",
    "Reference": "Execute the ALTER CLUSTER.",
    "HebCup": "Execute the ALTER CLASS."
}
{
    "Origin": "Instead, it returns deleted inodes so that their blocks can\nbe deleted after the inode deletion journal entry has been written.",
    "Reference": "Instead, it adds blocks to the blockDeletionContext so that\nthey can be deleted after the inode deletion journal entry has been written.",
    "HebCup": "Instead, it returns deleted inodes so that their blocks can\nbe deleted after the inode deletion journal entry has been written."
}
{
    "Origin": "This method overwrites existing fields added with {@link #field(String, TypeInformation)}.",
    "Reference": "This method overwrites existing fields added with {@link #field(String, DataType)}.",
    "HebCup": "This method overwrites existing fields added with {@link#FieldData (String , TypeInformation)}."
}
{
    "Origin": "Cancels the task of loading and displaying image for incoming imageView.",
    "Reference": "Cancels the task of loading and displaying image for incoming imageAware.",
    "HebCup": "Cancels the task of loading and displaying image for incoming ImageAware."
}
{
    "Origin": "Sets the Raft state machine factory.",
    "Reference": "Sets the server thread pool size.",
    "HebCup": "Sets the Raft thread Pool Size."
}
{
    "Origin": "Returns the frame percentage.",
    "Reference": "Returns the health.",
    "HebCup": "Returns the frame Health."
}
{
    "Origin": "Set name of the Cosmos DB Cassandra keyspace.",
    "Reference": "Set the resource value.",
    "HebCup": "Set name of the Cosmos DB resource."
}
{
    "Origin": "Create an instance of {@link JAXBElement }{@code <}{@link CTMarkupRange }{@code >}}",
    "Reference": "Create an instance of {@link JAXBElement }{@code <}{@link CTMoveFromRangeEnd }{@code >}}",
    "HebCup": "Create an instance of {@link JAXBElement} {@code <} {@link CTMoveFromRangeEnd} {@code >}}"
}
{
    "Origin": "This method will return true if the version stored in the file\nmatches the supplied String version.",
    "Reference": "This method will return true if the version stored in the file\nmatches the supplied float version.",
    "HebCup": "This method will return true if the version stored in the file matches the supplied (version."
}
{
    "Origin": "Write the task state to the {@link ProvisionerStore}, retrying if any exception is caught.",
    "Reference": "Write the task state to the {@link ProvisionerTable}, retrying if any exception is caught.",
    "HebCup": "Write the task state to the {@link ProvisionerStore}, retrying if any exception is caught."
}
{
    "Origin": "Applies the optimization (main entry point).",
    "Reference": "Applies the optimization to the given query root.",
    "HebCup": "Applies the optimization (main entry point)."
}
{
    "Origin": "For each network interface, create a listening thread using {@link #_executorService}",
    "Reference": "For each network interface, create a listening thread using {@link #executorService}",
    "HebCup": "For each network interface , create a listening thread using {@link#executorService}"
}
{
    "Origin": "This method could be used in the method.",
    "Reference": "This method could be used in the modules.",
    "HebCup": "This method could be used in the method."
}
{
    "Origin": "Returns true to indicate that we can paint a representation of the",
    "Reference": "Returns true to indicate that we can paint a representation of the Object.",
    "HebCup": "Returns true to indicate that we can paint a representation of the"
}
{
    "Origin": "Override the debug WARN logging level",
    "Reference": "Override the default logging level of INFO",
    "HebCup": "Override the debug WARN logging LEVEL"
}
{
    "Origin": "Builder.newRequires(mods, mn);",
    "Reference": "Builder.newRequires(mods, mn, compiledVersion);",
    "HebCup": "Builder.newRequires(mods, mn);"
}
{
    "Origin": "Get the value of username.",
    "Reference": "Gets the value of user name.",
    "HebCup": "Get the value of userName."
}
{
    "Origin": "Completes {@code cs} with any additional changes from its topics",
    "Reference": "Completes {@code changeSet} with any additional changes from its topics",
    "HebCup": "Completes {@code changeSet} with any additional changes from its topics"
}
{
    "Origin": "Returns the Java type of the ProtoFields helper class generated for a corresponding\n{@code protoType} that has a custom adapter.",
    "Reference": "Returns the Java type of the abstract adapter class generated for a corresponding {@code\nprotoType}.",
    "HebCup": "Returns the Java type of the abstracthelper class generated for a corresponding {@code protoType} that has a custom adapter."
}
{
    "Origin": "Build a PreparedStatementCreator based on the given SQL and named parameters.",
    "Reference": "Build a {@link PreparedStatementCreator} based on the given SQL and named parameters.",
    "HebCup": "Build a PreparedStatementCreator based on the given Statement and named parameters."
}
{
    "Origin": "Tests that a configuration is able to be retrieved when it exists, whether or not it is locked.",
    "Reference": "Tests that a configuration is able to be retrieved when it exists, whether or not it is read-only.",
    "HebCup": "Tests that a configuration is able to be retrieved when it exists, whether or not it is locked."
}
{
    "Origin": "Set the WebSocket sub-protocols supported by the server.",
    "Reference": "Set the WebSocket list of sub-protocol supported by the server.",
    "HebCup": "set Web the WebSocket sub-protocols supported by the server."
}
{
    "Origin": "Returns true if there's another route to attempt.",
    "Reference": "Returns true if there's another set of routes to attempt.",
    "HebCup": "Returns true if there's another route to attempt."
}
{
    "Origin": "Creates a preprocessed graph for a snippet or method substitution.",
    "Reference": "Creates a preprocessed graph for a snippet or method substitution with a context of .",
    "HebCup": "Creates a preprocessed graph for a snippet or method substitution."
}
{
    "Origin": "Tests the {@link FileSystemMaster#delete(AlluxioURI, DeleteOptions)} method for\na directory.",
    "Reference": "Tests the {@link FileSystemMaster#delete(AlluxioURI, DeleteContext)} method for\na directory.",
    "HebCup": "Tests the {@link FileSystemMaster#delete (AlluxioURI , DeleteContext)} method for a directory."
}
{
    "Origin": "Returns a string representation of this object; useful for testing and debugging.",
    "Reference": "Returns a string representation of this object.",
    "HebCup": "Returns a string representation of this object; useful for testing and debugging."
}
{
    "Origin": "Use {@link #onSubmitAfterForm(AjaxRequestTarget, Form)} instead.",
    "Reference": "Use {@link #onAfterSubmit(AjaxRequestTarget, Form)} instead.",
    "HebCup": "Use {@link#onAfterSubmit (AjaxRequestTarget , Form)} instead."
}
{
    "Origin": "The item is removed from the collection mapped to the specified key.",
    "Reference": "The value is removed from the collection mapped to the specified key.",
    "HebCup": "The value is removed from the collection mapped to the specified key."
}
{
    "Origin": "Returns an offset time formed from this time and the specified offset.",
    "Reference": "Returns a local date-time formed from this time at the specified date.",
    "HebCup": "Returns an Local Date Time formed from this time and the specified offset."
}
{
    "Origin": "Required for cron or delay",
    "Reference": "Required for delay and every",
    "HebCup": "Required for cron or delay"
}
{
    "Origin": "That is, leaving endpoints are not included in the copy.",
    "Reference": "That is, leaving nodes are not included in the copy.",
    "HebCup": "That is , leaving nodes are not included in the copy."
}
{
    "Origin": "Checks the dirty status of the 'batchId' field.",
    "Reference": "Checks the dirty status of the 'sitemaps' field.",
    "HebCup": "Checks the dirty status of the 'batchId' field."
}
{
    "Origin": "Returns an {@link Operator} to allow the query to be pushed\ndependencies via the {@link Observable#lift(Operator)} method.",
    "Reference": "Returns an {@link Transformer} to allow the query to be pushed\ndependencies via the {@link Observable#compose(Transformer)} method.",
    "HebCup": "Returns an {@link Transformer} to allow the query to be pushed dependencies via the {@link Observable#lift (Operator)} method."
}
{
    "Origin": "The fetcher should something as it falls back to Chimbori",
    "Reference": "The fetcher should something as it falls back to OttoBib",
    "HebCup": "The fetcher should something as it falls back to OttoBib"
}
{
    "Origin": "Paints split button.",
    "Reference": "Paints menu button.",
    "HebCup": "Paints Menu Button."
}
{
    "Origin": "See Immutable Map Static Factory Methods for details.",
    "Reference": "See Unmodifiable Maps for details.",
    "HebCup": "See Unmodifiable Map Static Factory Methods for details."
}
{
    "Origin": "This method may be called after {@link #startServer()} to (re-)set the script evaluation timeout in\nthe running server.",
    "Reference": "This method may be called after {@link #startServer()} to (re-)set the evaluation timeout in\nthe running server.",
    "HebCup": "This method may be called after {@link #startServer()} to (re-)set the Evaluation Timeout in the running server."
}
{
    "Origin": "Use {@link CommandSpec#setInterpolateVariables(Boolean)} to switch off variable expansion if needed.",
    "Reference": "Use {@link CommandSpec#interpolateVariables(Boolean)} to switch off variable expansion if needed.",
    "HebCup": "Use {@link CommandSpec#setinterpolateVariables(Boolean)} to switch off variable expansion if needed."
}
{
    "Origin": "Test of npara method, of class Exponential.",
    "Reference": "Test of length method, of class Exponential.",
    "HebCup": "Test of Length method , of class Exponential."
}
{
    "Origin": "Returns the public keys or {@code null} for none.",
    "Reference": "Returns the public keys.",
    "HebCup": "Returns the public Keys.get Public Keys or {@code null} for none."
}
{
    "Origin": "Set the fileContentLanguage property: Specifies the natural languages\nused by this resource.",
    "Reference": "Set the contentLanguage property: Specifies the natural languages\nused by this resource.",
    "HebCup": "Set the contentLanguage property: Specifies the natural languages used by this resource."
}
{
    "Origin": "Create an instance of {@link JAXBElement }{@code <}{@link CTMarkupRange }{@code >}}",
    "Reference": "Create an instance of {@link JAXBElement }{@code <}{@link CTMoveFromRangeEnd }{@code >}}",
    "HebCup": "Create an instance of {@link JAXBElement} {@code <} {@link CTMoveFromRangeEnd} {@code >}}"
}
{
    "Origin": "This method will attempt to load the cluster defaults and update the configuration if\nnecessary.",
    "Reference": "This method will attempt to load the cluster and path level configuration defaults and update\nthe configuration if necessary.",
    "HebCup": "This method will attempt to load the Configuration defaults and update the configuration if necessary."
}
{
    "Origin": "Setter Parameter Value for File Name",
    "Reference": "Setter Parameter Value for File Path or Name",
    "HebCup": "Setter Parameter Value for file Path Or Name"
}
{
    "Origin": "DHCP Server should send DHCPNAK message to client if \"Request IP\" is incorrect, or is on the wrong network",
    "Reference": "DHCP Server should send DHCPNAK message to client if \"Request IP\" is incorrect, or is on the wrong network (giaddr is incorrect)",
    "HebCup": "DHCP Server should send DHCPNAK message to client if \"Request IP\" is incorrect, or is on the wrong network"
}
{
    "Origin": "Checks if device connected or connecting to wifi network.",
    "Reference": "Checks if device connected to a WIFI network.",
    "HebCup": "Checks if device connected or connecting to isWifi network."
}
{
    "Origin": "Returns true if field targetThreadNameList is set (has been assigned a value) and false otherwise",
    "Reference": "Returns true if field threadNameList is set (has been assigned a value) and false otherwise",
    "HebCup": "Returns true if field ThreadNameList is set (has been assigned a value) and false otherwise"
}
{
    "Origin": "Loads a new module from the class path and defers scanning associated directories for\nresources.",
    "Reference": "Loads a new (assumed monolithic) module from the class path and defers scanning associated\ndirectories for resources.",
    "HebCup": "Loads a new module from the class path and defers scanning associated directories for\nresources."
}
{
    "Origin": "Validate {@code sslContext} is configured properly.",
    "Reference": "Makes sure the specified {@link SslContext} is configured properly.",
    "HebCup": "Validate {@code)} is configured properly."
}
{
    "Origin": "Note that this method will only return a non-null value code if the  has been set.",
    "Reference": "Note that this method will only return a non-null value code if the {@code CacheManager} has been set.",
    "HebCup": "Note that this method will only return a non-null value code if the  has been set."
}
{
    "Origin": "It creates a topic using KafkaProducer.",
    "Reference": "It creates a topic using Producer.",
    "HebCup": "It creates a topic using Producer."
}
{
    "Origin": "Returns a wrapped instance of {@link ClientConnectionRequest}\nto capture the necessary performance metrics.",
    "Reference": "Returns a wrapped instance of {@link ConnectionRequest}\nto capture the necessary performance metrics.",
    "HebCup": "Returns a wrapped instance of {@link ConnectionRequest} to capture the necessary performance metrics."
}
{
    "Origin": "Adds all database providers, and starts initialization of our services.",
    "Reference": "Initializes the latest snapshot and\nadds all database providers, and starts initialization of our services.",
    "HebCup": "Adds all database providers, and starts initialization of our services."
}
{
    "Origin": "The method, which is invoked on implementing subclasses in order to create the view recycler\nadapter, which allows to inflate the child views, which are associated with tabs.",
    "Reference": "The method, which is invoked on implementing subclasses in order to create the view recycler\nadapter, which allows to inflate the views, which are associated with tabs.",
    "HebCup": "The method , which is invoked on implementing subclasses in order to create the view recycler adapter , which allows to inflate the Content views , which are associated with tabs."
}
{
    "Origin": "Removes the specified object from the list of registered configuration listeners.",
    "Reference": "Removes the specified object from the list of registered configuration LISTENERS.",
    "HebCup": "Removes the specified object from the list of registered configuration LISTENERS."
}
{
    "Origin": "Work-around for bug in\njava.net.URI ()",
    "Reference": "Work-around for bug in\njava.net.URI (URL)",
    "HebCup": "Work-around for bug in\njava.net.URI ()"
}
{
    "Origin": "See {@link ClassVisitor#visitModule(String, int)}.",
    "Reference": "See {@link ClassVisitor#visitModule}.",
    "HebCup": "See {@link ClassVisitor#visitModule(String, int)}."
}
{
    "Origin": "Create from a given Numpy .npy file.",
    "Reference": "Create an INDArray from a given Numpy .npy file.",
    "HebCup": "Create from a given Numpy .npy file."
}
{
    "Origin": "Set the given conditional-GET header, if the setting is enabled and\na suitable value is available in the URI history.",
    "Reference": "Add the given conditional-GET header, if the setting is enabled and\na suitable value is available in the URI history.",
    "HebCup": "maybeAdd the given conditional-GET header , if the setting is enabled and a suitable value is available in the URI history."
}
{
    "Origin": "Sets e guardian user id.",
    "Reference": "Sets eguardian user id.",
    "HebCup": "Sets e guardian user id."
}
{
    "Origin": "Register a module this this class loader.",
    "Reference": "Register a module this class loader.",
    "HebCup": "Register a module this this class loader."
}
{
    "Origin": "Sets the {@link #username}.",
    "Reference": "Sets the {@link #userName}.",
    "HebCup": "Sets the {@link#userName}."
}
{
    "Origin": "Code snippets for {@link PageBlobClient#uploadPagesWithResponse(PageRange, InputStream, PageBlobRequestConditions,",
    "Reference": "Code snippets for {@link PageBlobClient#uploadPagesWithResponse(PageRange, InputStream, byte[],",
    "HebCup": "Code snippets for {@link PageBlobClient#uploadPagesWithResponse(PageRange, InputStream, PageBlobRequestConditions,"
}
{
    "Origin": "Path parameter: path (required)",
    "Reference": "Path parameter: endpointType (required)",
    "HebCup": "Path parameter: path (required)"
}
{
    "Origin": "Make sure to keep {@link #database} field and map synchronized.",
    "Reference": "Make sure to keep {@link #wikiId} field and map synchronized.",
    "HebCup": "Make sure to keep {@link#WikiId} field and map synchronized."
}
{
    "Origin": "Gets an object in the value at {@code position}.",
    "Reference": "Gets a block in the value at {@code position}.",
    "HebCup": "Gets an Block in the value at {@code position}."
}
{
    "Origin": "Saves attachment to output stream.",
    "Reference": "Saves attachment to the output stream.",
    "HebCup": "Saves attachment to output stream."
}
{
    "Origin": "Decodes a byte array where each char represents an ascii '0' or '1'.",
    "Reference": "Decodes a char array where each char represents an ASCII '0' or '1'.",
    "HebCup": "Decodes a byte array where each char represents an ascii '0' or '1'."
}
{
    "Origin": "This is the price agreed when the trade occurred.",
    "Reference": "This is the price agreed when the trade occurred, in decimal form.",
    "HebCup": "This is the tradedPrice agreed when the trade occurred."
}
{
    "Origin": "The context of the initiator or null if not running.",
    "Reference": "The context of the initiator.",
    "HebCup": "The context of the initiator or null if not running."
}
{
    "Origin": "Throws {@link ConfigurationException} if given group property is defined within Hazelcast properties.",
    "Reference": "Throws {@link InvalidConfigurationException} if given group property is defined within Hazelcast properties.",
    "HebCup": "Throws {@link InvalidConfigurationException} if given group property is defined within Hazelcast properties."
}
{
    "Origin": "NOTE:You cannot delete a cache security group if it is\nassociated with any cache clusters.",
    "Reference": "You cannot delete a cache security group if it is associated with\nany cache clusters.",
    "HebCup": "NOTE:You cannot delete a cache security group if it is\nassociated with any cache clusters."
}
{
    "Origin": "Returns a new queue of given size containing consecutive\nPDelays 0 ... n.",
    "Reference": "Returns a new queue of given size containing consecutive\nPDelays 0 ... n - 1.",
    "HebCup": "Returns a new queue of given size containing consecutive\nPDelays 0 ... n."
}
{
    "Origin": "Returns a string representation of this object; useful for testing and debugging.",
    "Reference": "Returns a string representation of this object.",
    "HebCup": "Returns a string representation of this object; useful for testing and debugging."
}
{
    "Origin": "If two ranges overlap, this range or the other range strictlyContains the begin or the end of the other range.",
    "Reference": "If two ranges overlap, this range or the other range contains the begin or the end of the other range.",
    "HebCup": "If two ranges overlap , this range or the other range contains the begin or the end of the other range."
}
{
    "Origin": "Run {@link SearchResult#parallelCombineActive(Collection, Func1)} if there is at least one active connector\nin connectors, and throw NoConnectorException otherwise.",
    "Reference": "Run {@link SearchResult#parallelCombineActive(Collection, Function)} if there is at least one active connector\nin connectors, and throw NoConnectorException otherwise.",
    "HebCup": "Run {@link SearchResult#parallelCombineActive (Collection , Function)} if there is at least one active connector in connectors , and throw NoConnectorException otherwise."
}
{
    "Origin": "Returns true to indicate that we can paint a representation of the",
    "Reference": "Returns true to indicate that we can paint a representation of the Object.",
    "HebCup": "Returns true to indicate that we can paint a representation of the"
}
{
    "Origin": "Invoke Builder.conceals(String pn)",
    "Reference": "Invoke Builder.packages(String pn)",
    "HebCup": "Invoke Builder.conceals(String pn)"
}
{
    "Origin": "To use a custom ClassLoader, setClassLoader() must be called prior to calling this method.",
    "Reference": "To use a custom ClassLoader, the Flyway(ClassLoader) constructor must be called prior to calling this method.",
    "HebCup": "To use a custom ClassLoader, setClassLoader() must be called prior to calling this method."
}
{
    "Origin": "Any metadata related to the value.",
    "Reference": "Any metadata related to the entity.",
    "HebCup": "Any metadata related to the value."
}
{
    "Origin": "Returns the textual representations of the running issues (Java version and dependency), if\nany.",
    "Reference": "Returns the textual representations of the running issues (e.g.",
    "HebCup": "Returns the textual representations of the running issues (Java version and dependency), if\nany."
}
{
    "Origin": "Parses {@link DenseMatrix} from the given Matrix Market string.",
    "Reference": "Parses {@link DenseMatrix} from the given Matrix Market.",
    "HebCup": "Parses {@link DenseMatrix} from the given Matrix Market InputStream."
}
{
    "Origin": "Get distinct select items.",
    "Reference": "Get column labels.",
    "HebCup": "get Column Labels items."
}
{
    "Origin": "Probably you want\n{@link #getOffsetInSection()}.",
    "Reference": "Probably you want\n{@link #getAddress()}.",
    "HebCup": "Probably you want\n{@link #getOffsetInSection()}."
}
{
    "Origin": "Returns the s v n repository with the primary key or throws a {@link com.liferay.socialcoding.NoSuchSVNRepositoryException} if it could not be found.",
    "Reference": "Returns the s v n repository with the primary key or throws a {@link NoSuchSVNRepositoryException} if it could not be found.",
    "HebCup": "Returns the s v n repository with the primary key or throws a {@link com.liferay.socialcoding.NoSuchSVNRepositoryException} if it could not be found."
}
{
    "Origin": "For further\ninformation please read the javadoc on {@link Component#canCallListenerInterface()},\nthis method has the same semantics.",
    "Reference": "For further\ninformation please read the javadoc on {@link Component#canCallListener()},\nthis method has the same semantics.",
    "HebCup": "For further information please read the javadoc on {@link Component#canCallListener ()} , this method has the same semantics."
}
{
    "Origin": "Logs collection, string\nand throws {@link java.lang.AssertionError}, if contains.",
    "Reference": "Logs collection, element\nand throws {@link java.lang.AssertionError}, if contains.",
    "HebCup": "Logs collection , T and throws {@link java.lang.AssertionError} , if contains."
}
{
    "Origin": "Gets the value of the 'zk_Quorum' field.",
    "Reference": "Gets the value of the 'zkQuorum' field.",
    "HebCup": "Gets the value of the 'zkQuorum' field."
}
{
    "Origin": "Returns the event index.",
    "Reference": "Returns the event indexes.",
    "HebCup": "Returns the event Indexes."
}
{
    "Origin": "Generate a new LdapConnection object for following a referral\nwith the given LdapUrl, and copy the username and password\nfrom the original connection.",
    "Reference": "Generate a new LdapNetworkConnection object for following a referral\nwith the given LdapUrl, and copy the username and password\nfrom the original connection.",
    "HebCup": "Generate a new LdapNetworkConnection object for following a referral with the given LdapUrl , and copy the username and password from the original connection."
}
{
    "Origin": "Returns whether this is a required option or positional parameter.",
    "Reference": "Returns whether this is a required option or positional parameter without a default value.",
    "HebCup": "Returns whether this is a required option or positional parameter."
}
{
    "Origin": "Test affinity awareness partition distributions cache size property with semicolon.",
    "Reference": "Test Partition Awareness partition distributions cache size property with semicolon.",
    "HebCup": "test Partition Awareness Partition Distributions Cache Size Property with semicolon."
}
{
    "Origin": "Returns the subset of nodes that are in a given state",
    "Reference": "Returns the subset of nodes that are in a given state(s)",
    "HebCup": "Returns the subset of nodes that are in a given rest"
}
{
    "Origin": "Returns an ordered range of all the sync d l objects where companyId = ?",
    "Reference": "Returns an ordered range of all the sync d l objects where repositoryId = ?",
    "HebCup": "Returns an ordered range of all the sync d l objects where companyId = ?"
}
{
    "Origin": "This function\nassumes the block at the given index is cached for the given size.",
    "Reference": "This function\nassumes the block at the given index is read and cached for the given sizes.",
    "HebCup": "This function\nassumes the block at the given index is cached for the given size."
}
{
    "Origin": "Adapts a list instance.",
    "Reference": "Adapts a value.",
    "HebCup": "Adapts a T instance."
}
{
    "Origin": "Closes a session.",
    "Reference": "Registers a query.",
    "HebCup": "register a session."
}
{
    "Origin": "If you specify both tag keys and tag values in the same request,",
    "Reference": "If you specify both tag keys and tag values in the same request, Amazon",
    "HebCup": "If you specify both tag keys and tag values in the same request,"
}
{
    "Origin": "Returns a list of {@link ConditionalCard}s eligible for display.",
    "Reference": "Returns a list of {@link ContextualCard}s eligible for display.",
    "HebCup": "Returns a list of {@link ConditionalCardController}s eligible for display."
}
{
    "Origin": "log of the Gamma function.",
    "Reference": "The log of the Gamma function.",
    "HebCup": "log of the Gamma function."
}
{
    "Origin": "Only return objects changed since this time.",
    "Reference": "Only return objects changed since a specified time.",
    "HebCup": "Only return objects changed since this time."
}
{
    "Origin": "Returns the path of the data plane private key file, if this is set with the 'dataPlanePrivateKeyFile' property.",
    "Reference": "Returns the path of the data plane private key file, if this is set with the 'dataPlaneKeyFile' property.",
    "HebCup": "Returns the path of the data plane private key file, if this is set with the 'dataPlaneKeyFile' property."
}
{
    "Origin": "Replaces the {@link Request} associated with this context with the specified one without any validation.",
    "Reference": "Replaces the {@link HttpRequest} associated with this context with the specified one\nwithout any validation.",
    "HebCup": "Replaces the {@link HttpRequest} associated with this context with the specified one without any validation."
}
{
    "Origin": "AdditionalAction, this method returns false and updates the error list when the additonalActionAuth parameter is\nset to false.",
    "Reference": "AdditionalAction, this method returns false and updates the error list when the additionalActionAuth parameter is\nset to false.",
    "HebCup": "AdditionalAction , this method returns false and updates the error list when the additionalActionAuth parameter is set to false."
}
{
    "Origin": "IMPORTANT: After you create a DB cluster parameter group, you\nshould wait at least 5 minutes before creating your first DB cluster\nthat uses that DB cluster parameter group as the default parameter\ngroup.",
    "Reference": "After you create a DB cluster parameter group, you should wait at least 5\nminutes before creating your first DB cluster that uses that DB cluster\nparameter group as the default parameter group.",
    "HebCup": "IMPORTANT: After you create a DB cluster parameter group, you\nshould wait at least 5 minutes before creating your first DB cluster\nthat uses that DB cluster parameter group as the default parameter\ngroup."
}
{
    "Origin": "Close the current packet reader.",
    "Reference": "Close the current data reader.",
    "HebCup": "Close the current Data Reader."
}
{
    "Origin": "Produces canonical attribute representation by stripping an unnecessary\n\"this.\"",
    "Reference": "Strips an unnecessary \"this.\"",
    "HebCup": "Produces canonical attribute.startsWith representation by stripping an unnecessary ``this.``"
}
{
    "Origin": "Returns a string representation of this object; useful for testing and debugging.",
    "Reference": "Returns a string representation of this object.",
    "HebCup": "Returns a string representation of this object; useful for testing and debugging."
}
{
    "Origin": "Gets ports.",
    "Reference": "Gets endpoints.",
    "HebCup": "Gets endpoints."
}
{
    "Origin": "Create an instance of {@link JAXBElement }{@code <}{@link CTMarkupRange }{@code >}}",
    "Reference": "Create an instance of {@link JAXBElement }{@code <}{@link CTMoveToRangeEnd }{@code >}}",
    "HebCup": "Create an instance of {@link JAXBElement} {@code <} {@link CTMoveToRangeEnd} {@code >}}"
}
{
    "Origin": "This is the price agreed when the trade occurred.",
    "Reference": "This is the price agreed when the trade occurred, in decimal form.",
    "HebCup": "This is the Optional.ofNullable agreed when the trade occurred."
}
{
    "Origin": "In the database, the task would likely have a past start date (i.e.",
    "Reference": "In the database, the task would likely have a past start date (e.g.",
    "HebCup": "In the database, the task would likely have a past start date (i.e."
}
{
    "Origin": "Compute CRC over the frame's payload.",
    "Reference": "Compute CRC over the buffer's payload.",
    "HebCup": "Compute CRC over the frame's payload."
}
{
    "Origin": "The activity counters are reset after restarting IRI.",
    "Reference": "Note: The activity counters are reset after restarting IRI.",
    "HebCup": "The activity counters are reset after restarting IRI."
}
{
    "Origin": "See Immutable Map Static Factory Methods for details.",
    "Reference": "See Unmodifiable Maps for details.",
    "HebCup": "See Unmodifiable Map Static Factory Methods for details."
}
{
    "Origin": "Initializes the specified input.",
    "Reference": "Initializes command execution.",
    "HebCup": "Initializes the specified input."
}
{
    "Origin": "Turns this ReactiveSeq into a HotStream, a connectable Stream, being\nexecuted on a thread on the supplied executor, that is producing data",
    "Reference": "Turns this ReactiveSeq into a Connectable, a connectable Stream, being\nexecuted on a thread on the supplied executor, that is producing data",
    "HebCup": "Turns this ReactiveSeq into a Connectable , a connectable Stream , being executed on a thread on the supplied executor , that is producing data"
}
{
    "Origin": "Return a pausable HotStream that will skip emitting data when the first connecting Stream connects.",
    "Reference": "Return a pausable Connectable that will skip emitting data when the first connecting Stream connects.",
    "HebCup": "Return a PausableStream that will skip emitting data when the first connecting Stream connects."
}
{
    "Origin": "Create an instance of {@link JAXBElement }{@code <}{@link CTMarkupRange }{@code >}}",
    "Reference": "Create an instance of {@link JAXBElement }{@code <}{@link CTMoveToRangeEnd }{@code >}}",
    "HebCup": "Create an instance of {@link JAXBElement} {@code <} {@link CTMoveToRangeEnd} {@code >}}"
}
{
    "Origin": "Resets any management pack installation states from\n{@link RepositoryVersionState#INSTALLING} to\n{@link RepositoryVersionState#INSTALL_FAILED}.",
    "Reference": "Resets any management pack installation states from\n{@link MpackInstallState#INSTALLING} to\n{@link MpackInstallState#INSTALL_FAILED}.",
    "HebCup": "Resets any management pack installation states from {@link MpackInstallState#INSTALLING} to {@link MpackInstallState#INSTALL_FAILED}."
}
{
    "Origin": "Returns a string representation of this object; useful for testing and debugging.",
    "Reference": "Returns a string representation of this object.",
    "HebCup": "Returns a string representation of this object; useful for testing and debugging."
}
{
    "Origin": "Object chooser, this becomes the selected item (and added\nto the chooser if necessary).",
    "Reference": "If the Object is in the Object chooser, this\nbecomes the selected item (and added to the chooser if necessary).",
    "HebCup": "Object chooser, this becomes the selected item (and added\nto the chooser if necessary)."
}
{
    "Origin": "This feature collects stack trace in advance, when task is created, so that\nif the task throws the exception then the parent stack trace is appended to it.",
    "Reference": "This feature collects stack trace in advance, when task is created, so that\nif a task throws an exception then the parent stack trace is appended to it.",
    "HebCup": "This feature collects stack trace in advance, when task is created, so that\nif the task throws the exception then the parent stack trace is appended to it."
}
{
    "Origin": "This method returns the value of the database column m_prj_project.projectType",
    "Reference": "This method returns the value of the database column m_prj_project.type",
    "HebCup": "This method returns the value of the database column m_prj_project.projectType"
}
{
    "Origin": "Binds the specified {@link Service} at the specified path pattern of the default {@link VirtualHost}.",
    "Reference": "Binds the specified {@link HttpService} at the specified path pattern of the default {@link VirtualHost}.",
    "HebCup": "Binds the specified {@link HttpService} at the specified path pattern of the default {@link VirtualHost}."
}
{
    "Origin": "Returns a song randomly selected from all the songs in the Android",
    "Reference": "Returns a list of songs randomly selected from all the songs in the Android",
    "HebCup": "Returns a Songs randomly selected from all the songs in the Android"
}
{
    "Origin": "If {@code labels = \"abc,def\"}, settings with labels \"abc\" or \"def\" are returned.",
    "Reference": "If {@code labelFilter = \"abc,def\"}, settings with labels \"abc\" or \"def\" are returned.",
    "HebCup": "If {@code LabelFilter = ``abc ,def``} , settings with LabelFilter ``abc`` or ``def`` are returned."
}
{
    "Origin": "Initializes this.voices.",
    "Reference": "Initializes voices.",
    "HebCup": "Initializes this.voices."
}
{
    "Origin": "Returns true when no response is expected.",
    "Reference": "Receives and processes a response.",
    "HebCup": "Returns true when no response Unsupported Operation expected."
}
{
    "Origin": "Returns all subclusters of this cluster.",
    "Reference": "Returns all child clusters belonging to this cluster.",
    "HebCup": "Returns all Clusters of this cluster."
}
{
    "Origin": "Validate metadata tags and return whether any properties are present.",
    "Reference": "Validate metadata tags.",
    "HebCup": "Validate metadata tags and return whether any properties are present."
}
{
    "Origin": "Returns the o auth token with the primary key or throws a {@link com.liferay.opensocial.NoSuchOAuthTokenException} if it could not be found.",
    "Reference": "Returns the o auth token with the primary key or throws a {@link NoSuchOAuthTokenException} if it could not be found.",
    "HebCup": "Returns the o auth token with the primary key or throws a {@link com.liferay.opensocial.NoSuchOAuthTokenException} if it could not be found."
}
{
    "Origin": "Find all geodatabases from all the downloaded map areas, unregister them then recreate temporary data folder.",
    "Reference": "Find all geodatabases from all the downloaded map areas and unregisters them.",
    "HebCup": "Find all geodatabases from all the downloaded DownloadPreplannedOfflineMap areas , unregister them then recreate temporary data folder."
}
{
    "Origin": "Return the possible corrections or null.",
    "Reference": "Return the possible corrections.",
    "HebCup": "Return the possible corrections or null."
}
{
    "Origin": "Convert to object types, returning null if text is null.",
    "Reference": "Convert to object types, returning null if text is null or empty.",
    "HebCup": "Convert to object types, returning null if text is null."
}
{
    "Origin": "Use reflection to get the value of {@code variableName} from {@code obj}.",
    "Reference": "Retrieve the value of {@code variable} from the {@code obj}.",
    "HebCup": "Use reflection to get the value of {@code variable} from {@code obj}."
}
{
    "Origin": "Merge given void publishers into a new {@literal Mono} that will be fulfilled when\nall of the given {@literal sources} have been fulfilled.",
    "Reference": "Merge given publishers into a new {@literal Mono} that will be fulfilled when\nall of the given {@literal sources} have been fulfilled.",
    "HebCup": "Merge given ? publishers into a new {@literal Mono} that will be fulfilled when all of the given {@literal sources} have been fulfilled."
}
{
    "Origin": "Inflates the child view of a tab and adds it to the view hierarchy.",
    "Reference": "Inflates the view, which is associated with a tab, and adds it to the view hierarchy.",
    "HebCup": "Inflates the Content View of a tab and adds it to the view hierarchy."
}
{
    "Origin": "Map invokedynamic method name to the new name.",
    "Reference": "Maps an invokedynamic method name to its new name.",
    "HebCup": "Map invokedynamic method name to the new name."
}
{
    "Origin": "factory method that returns an instance of this class populated from metrics we expect the keys that we are\nlooking there's no explicit type checked object which guarantees that we have a specific type of metrics",
    "Reference": "Factory method that returns an instance of this class populated from metrics we expect the keys that we are\nlooking there's no explicit type checked object which guarantees that we have a specific type of metrics.",
    "HebCup": "factory method that returns an instance of this class populated from metrics we expect the keys that we are\nlooking there's no explicit type checked object which guarantees that we have a specific type of metrics"
}
{
    "Origin": "Sort the FeedItems in the queue with the given Permutor.",
    "Reference": "Sort the FeedItems in the queue with the given the named sort order.",
    "HebCup": "Sort the FeedItems in the queue with the given Permutor."
}
{
    "Origin": "Name of schedule",
    "Reference": "Name of task",
    "HebCup": "Name of Task"
}
{
    "Origin": "Check if the account is empty (no roles, no groups, no users).",
    "Reference": "Check if the account is empty (no roles, no groups, no users, etc).",
    "HebCup": "Check if the account is empty (no roles, no groups, no users)."
}
{
    "Origin": "1) Check that there are OBJECT_NUM number of objects in the SMRMap.",
    "Reference": "1) Check that there are OBJECT_NUM number of objects in the CorfuTable.",
    "HebCup": "1) Check that there are OBJECT_NUM number of objects in the CorfuTable."
}
{
    "Origin": "Sets the value of the value property.",
    "Reference": "Sets the value of the appearance property.",
    "HebCup": "Sets the Appearance of the Appearance property."
}
{
    "Origin": "Retrieve double values from disk (GH-1206).",
    "Reference": "Retrieve double values from disk.",
    "HebCup": "Retrieve double values from gh1206 (GH-1206)."
}
{
    "Origin": "Calls {@link #setQuery(Query, QueryListenOptions, Class)} with the default {@link",
    "Reference": "Calls {@link #setQuery(Query, MetadataChanges, Class)} with metadata changes excluded.",
    "HebCup": "Calls {@link #setQueryEXCLUDEQuery, QueryListenOptions, Class)} with the default {@link"
}
{
    "Origin": "Configure a sslConfig for the jmx using the legacy configuration",
    "Reference": "Configure a SSLConfig.Builder for the jmx using the legacy configuration",
    "HebCup": "Configure a SSLConfig.Builder for the jmx using the legacy configuration"
}
{
    "Origin": "Resolves a collection of root modules, with this configuration as its\nparent, to create a new configuration.",
    "Reference": "Resolves a collection of root modules, with service binding, and with\nthis configuration as its parent, to create a new configuration.",
    "HebCup": "resolve And a collection of root modules, with this configuration as its parent, to create a new configuration."
}
{
    "Origin": "Default implementation using metricDAO, datasetDAO, and QueryCache",
    "Reference": "Default implementation using metricDAO, datasetDAO, and TimeSeriesCache",
    "HebCup": "Default implementation using metricDAO, datasetDAO, and Querythis.queryCache"
}
{
    "Origin": "Sets the bootstrap member locations.",
    "Reference": "Sets the bootstrap nodes.",
    "HebCup": "Sets the bootstrap member Nodes."
}
{
    "Origin": "Get the enum corresponding to the given file size.",
    "Reference": "Get the enum corresponding to the given file size for image files.",
    "HebCup": "Get the enum corresponding to the given file ImageSize."
}
{
    "Origin": "Returns the first sync d l object in the ordered set where companyId = ?",
    "Reference": "Returns the first sync d l object in the ordered set where modifiedTime > ?",
    "HebCup": "Returns the first sync d l object in the ordered set where companyId = ?"
}
{
    "Origin": "Opens an {@code InputStream} for reading the named entry of the given\nsection in this jmod file.",
    "Reference": "Opens an {@code InputStream} for reading the named entry of the given\nsection in this JMOD file.",
    "HebCup": "Opens an {@code InputStream} for reading the named entry of the given\nsection in this jmod file."
}
{
    "Origin": "Set up notification manager to show download progress.",
    "Reference": "Set notification manager to show download progress.",
    "HebCup": "Set up notification manager to show download progress."
}
{
    "Origin": "Finds the parent binder type in the supplied set, if any.",
    "Reference": "Finds the parent binder type in the supplied sets, if any.",
    "HebCup": "Finds the parent binder typeElement in the supplied set , if any."
}
{
    "Origin": "Also, puts the new names->nodes map in the TsurgeonPattern that called copy.",
    "Reference": "Also, puts the new names->nodes map in the TsurgeonMatcher that called copy.",
    "HebCup": "Also , puts the new names->nodes map in the TsurgeonMatcher that called copy."
}
{
    "Origin": "Wraps java method and repeat creation several time\nif something fail.",
    "Reference": "Wraps Java method and repeats creation several times\nif something fails.",
    "HebCup": "Wraps java method and repeat creation several time\nif something fail."
}
{
    "Origin": "Optimizes a function that returns an empty sequence when the first argument is empty.",
    "Reference": "Optimizes a function that returns an empty sequence when the first argument or the\ncontext value is empty.",
    "HebCup": "Optimizes a function that returns an empty sequence when the first argument is empty."
}
{
    "Origin": "Get the fileContentDisposition property: Sets the file's",
    "Reference": "Get the contentDisposition property: Sets the file's",
    "HebCup": "Get the ContentDisposition property: Sets the file's"
}
{
    "Origin": "Returns {@code true} if this lookup has {@code PRIVATE} access.",
    "Reference": "Returns {@code true} if this lookup has {@code PRIVATE} and {@code MODULE} access.",
    "HebCup": "Returns {@code true} if this lookup has {@code PRIVATE} access."
}
{
    "Origin": "Creates a new data source using the specified template.",
    "Reference": "Updates a data source using the specified template.",
    "HebCup": "Creates a new source using the specified template."
}
{
    "Origin": "Returns the (unbiased) kurtosis of all the values within a {@link Dataset}",
    "Reference": "Returns the (biased) kurtosis excess of all the values within a\n{@link Dataset}",
    "HebCup": "Returns the (unbiased) population Kurtosis of all the values within a {@link Dataset}"
}
{
    "Origin": "In the case where there's no API key the ID\nwill contain ServiceOrgId + ServiceId + Service Version",
    "Reference": "In the case where there's no API key the ID\nwill contain ApiOrgId + ApiId + ApiVersion",
    "HebCup": "In the case where there's no API key the ID will contain ApiOrgId + ServiceId + Service Version"
}
{
    "Origin": "Default implementation returns {@link SessionResult#RESULT_CODE_NOT_SUPPORTED}.",
    "Reference": "Default implementation returns {@link SessionResult#RESULT_ERROR_NOT_SUPPORTED}.",
    "HebCup": "Default implementation returns {@link SessionResult#RESULT_ERROR_NOT_SUPPORTED}."
}
{
    "Origin": "Returns if this maps the specified column.",
    "Reference": "Returns if this maps the specified cell.",
    "HebCup": "Returns if this mapsCell the specified column."
}
{
    "Origin": "Returns a rule that limits the number of concurrent requests by request's\nhost domain.",
    "Reference": "Adds a rule that limits the number of concurrent requests by request's\nhost domain.",
    "HebCup": "Returns a rule that limits the number of concurrent requests by request's ,."
}
{
    "Origin": "Can this user delete this change or any patch set of this change?",
    "Reference": "Can this user delete this change?",
    "HebCup": "Can this user delete this change or any patch set of this change?"
}
{
    "Origin": "The map has weak\nkeys so it can be expunged when the caller class is GC'ed/unloaded.",
    "Reference": "The map has weak\nkeys so it can be expunged when the target class is GC'ed/unloaded.",
    "HebCup": "The map has weak\nkeys so it can be expunged when the caller class is GC'ed/unloaded."
}
{
    "Origin": "Store the specified Realm properties and child (Realm)",
    "Reference": "Store the specified CredentialHandler properties and child (CredentialHandler)",
    "HebCup": "Store the specified CredentialHandler properties and child (Realm)"
}
{
    "Origin": "We can divide the tree nodes into rows and columns, like a table.",
    "Reference": "Divide the tree nodes into rows and columns, like a table/matrix/grid.",
    "HebCup": "We can divide the tree cols into rows and columns , like a table."
}
{
    "Origin": "There must be\nexactly one snippet method in {@code declaringClass}.",
    "Reference": "There must be\nexactly one snippet method in {@code declaringClass} with a given name.",
    "HebCup": "There must be exactly one snippet ResolvedJavaMethod in {@code declaringClass}."
}
{
    "Origin": "The address should be parseable by\n{@code InetAddress#getAllByName(String)}.",
    "Reference": "The address should be parseable by {@link InetAddress#getByName(String)}.",
    "HebCup": "The address should be parseable by {@code InetAddress#getByName (String)}."
}
{
    "Origin": "Assert that the TestSubscriber received a fuseabe QueueSubscription and\nis in the given fusion mode.",
    "Reference": "Assert that the TestSubscriber received a fuseabe QueueFuseable.and\nis in the given fusion mode.",
    "HebCup": "Assert that the TestSubscriber received a fuseabe QueueSubscription and\nis in the given fusion mode."
}
{
    "Origin": "{@code timeDifferenceMs} can be negative but it's absolute value must not be larger than current window \"after\"\nvalue (which would result in a negative window size).",
    "Reference": "{@code timeDifferenceMs} can be negative but its absolute value must not be larger than current window \"after\"\nvalue (which would result in a negative window size).",
    "HebCup": "{@code timeDifferenceMs} can be negative but it's absolute value must not be larger than current window \"after\"\nvalue (which would result in a negative window size)."
}
{
    "Origin": "Creates a Stackdriver Stats exporter for an explicit project ID.",
    "Reference": "Creates a Stackdriver Stats exporter for an explicit project ID, with default Monitored",
    "HebCup": "Creates a Stackdriver Stats exporter for an explicit project ID."
}
{
    "Origin": "See Immutable List Static Factory Methods for details.",
    "Reference": "See Unmodifiable Lists for details.",
    "HebCup": "See Unmodifiable List Static Factory Methods for details."
}
{
    "Origin": "Creates and enqueues node for current thread and given mode.",
    "Reference": "Adds node to condition list and releases lock.",
    "HebCup": "Creates and enqueues ConditionNode for current thread and given mode."
}
{
    "Origin": "Update the record's sequence number.",
    "Reference": "Update the record's sequence number for outgoing records.",
    "HebCup": "Update the record's sequence number."
}
{
    "Origin": "Sets a condition when the provided mock (or other matchers) is not satisfied based on {@link Exchange}\nbeing sent to it when they are received.",
    "Reference": "Sets a condition when the provided matcher (such as mock endpoint) is not satisfied based on {@link Exchange}\nbeing sent to it when they are received.",
    "HebCup": "Sets a condition when the provided mock (or other matchers) is not satisfied based on {@link Exchange}\nbeing sent to it when they are received."
}
{
    "Origin": "Returns completed style ID for the child style.",
    "Reference": "Returns completed style identifier for the child style.",
    "HebCup": "Returns completed style ID for the child style."
}
{
    "Origin": "Sets the {@link SortOrder}s to use with backend sorting.",
    "Reference": "Sets the {@link QuerySortOrder}s to use with backend sorting.",
    "HebCup": "Sets the {@link QuerySortOrder}s to use with backend sorting."
}
{
    "Origin": "Any of the\ninput words can also be the answer if one is the parent or grandparent of\nother",
    "Reference": "Any of the\ninput words can also be the answer if one is the parent or grandparent of\nother, or if the input words are the same.",
    "HebCup": "Any of the input words can also be the answer if one is the Parents or grandparent of other"
}
{
    "Origin": "Saves the changed/deleted entities.",
    "Reference": "Saves the given entities.",
    "HebCup": "Saves the changed/deleted entities."
}
{
    "Origin": "Parse a CSV into a list of ImportedGrade objects.",
    "Reference": "Parse a CSV into a list of {@link ImportedRow} objects.",
    "HebCup": "Parse a CSV into a list of ImportedSpreadsheet objects."
}
{
    "Origin": "Generates an in-memory key for an service, used to index the app for later quick\nretrieval.",
    "Reference": "Generates an in-memory key for an api, used to index the app for later quick\nretrieval.",
    "HebCup": "Generates an in-memory key for an Api , used to index the app for later quick retrieval."
}
{
    "Origin": "This field will be ignored when\ninserting a UrlMap.",
    "Reference": "This build option is specifically for when patching an existing UrlMap.",
    "HebCup": "This field will be ignored when\ninserting a UrlMap."
}
{
    "Origin": "Returns a rule that restricts access according to the {@link Role} of the\ncurrent authenticated {@link User}.",
    "Reference": "Adds a rule that restricts access according to the {@link Role} of the\ncurrent authenticated {@link User}.",
    "HebCup": "Returns a rule that restricts access according to the {@link Role} of the\ncurrent authenticated {@link User}."
}
{
    "Origin": "Converts this template into an {@link ArgumentTypeValidator}.",
    "Reference": "Converts this template into an {@link ArgumentTypeStrategy}.",
    "HebCup": "Converts this template into an {@link ArgumentTypeStrategy}."
}
{
    "Origin": "Aurora on Amazon RDS \nin the Amazon RDS User Guide.",
    "Reference": "Aurora, see Aurora on Amazon RDS in the Amazon RDS User Guide.",
    "HebCup": "Aurora on Amazon RDS \nin the Amazon RDS User Guide."
}
{
    "Origin": "Get the Extern Item object associated with this package name.",
    "Reference": "Get the Extern Item object associated with this element name.",
    "HebCup": "Get the Extern Item object associated with this Element name."
}
{
    "Origin": "Destroys all the keys created during this test run.",
    "Reference": "Destroys all the key versions created during this test run.",
    "HebCup": "Destroys all the keys created during this test run."
}
{
    "Origin": "Test of setParams method, of class PerfMonAgentConnector.",
    "Reference": "Test of addMetric method, of class PerfMonAgentConnector.",
    "HebCup": "Test of addMetric method , of class PerfMonAgentConnector."
}
{
    "Origin": "Checks a name to ensure that it's a legal qualified class name.",
    "Reference": "Checks a name to ensure that it's a legal qualified class name in\na named package.",
    "HebCup": "Checks a name to ensure that it's a legal qualified class name."
}
{
    "Origin": "Returns the {@link WriteResult} that caused the exception.",
    "Reference": "Returns the {@link WriteConcernResult} that caused the exception.",
    "HebCup": "Returns the {@link WriteConcernResult} that caused the exception."
}
{
    "Origin": "Note that the order of extracted property/field values is consistent with the iteration order of the array under\ntest.",
    "Reference": "Note that the order of extracted values is consistent with the order of the given property/field.",
    "HebCup": "Note that the order of extracted description/field values is consistent with the iteration order of the array under test."
}
{
    "Origin": "{@link Keys#GOT_FISH}",
    "Reference": "{@link Keys#DOLPHIN_DOES_GOT_FISH}",
    "HebCup": "{@link Keys#DOLPHIN_DOES_GOT_FISH}"
}
{
    "Origin": "Input: (path, following_symlinks)",
    "Reference": "Input: (path, following_symlinks) Output:",
    "HebCup": "Input: (path, following_symlinks)"
}
{
    "Origin": "Adds entries with theirs history to partition p.",
    "Reference": "Adds entries to partition p.",
    "HebCup": "Adds entries with theirs history to partition p."
}
{
    "Origin": "Shifts the focus to the next element.",
    "Reference": "Shifts the focus to the next widget.",
    "HebCup": "Shifts the focus to the next element."
}
{
    "Origin": "Creates a constraint summing weights given by a set of indices:\nsum{weights[i-offset] | i in indices} = sum",
    "Reference": "Creates a constraint summing weights given by a set of indices:\nsum{weights[i] | i in indices} = sum",
    "HebCup": "Creates a constraint summing weights given by a set of indices: sumElements {weights[i-offset] | i in indices} = sumElements"
}
{
    "Origin": "Return the buffer that apply history DDL is written to.",
    "Reference": "Return the buffer that apply history-view DDL is written to.",
    "HebCup": "Return the buffer that apply History View DDL is written to."
}
{
    "Origin": "{@codesnippet com.azure.storage.file.fileClient.startCopy#string-map}",
    "Reference": "{@codesnippet com.azure.storage.file.fileClient.beginCopy#string-map-duration}",
    "HebCup": "{@codesnippet com.azure.storage.file.fileClient.fileAsyncClient.beginCopy#string-map}"
}
{
    "Origin": "Load a single component by adding all its classpath entries to\nthe classloader",
    "Reference": "Load a single component by adding all its classpath entries to\nthe list of classpaths to be loaded",
    "HebCup": "Load a single component by adding all its classpath entries to\nthe classloader"
}
{
    "Origin": "remove select events, do so via {@link #removeEvent(BaseEvent)}.",
    "Reference": "remove select events, do so via {@link #removeEvent(CoreEvent)}.",
    "HebCup": "remove select events, do so via {@link #removeEvent(CoreEvent)}."
}
{
    "Origin": "Does this time interval contain the specified millisecond instant.",
    "Reference": "Does this time interval contain or equal the specified millisecond instant.",
    "HebCup": "Does this time interval contain the specified millisecond instant."
}
{
    "Origin": "Converts this POJO to a {@link WorkStatus}.",
    "Reference": "Converts this POJO to a {@link WorkInfo}.",
    "HebCup": "Converts this POJO to a {@link WorkInfo}."
}
{
    "Origin": "Generates view from tiles with {@link RenderLayer#TOP}.",
    "Reference": "Generates view from tiles with {@link RenderLayer#DEFAULT}.",
    "HebCup": "Generates view from tiles with {@link RenderLayer#DEFAULT}."
}
{
    "Origin": "IMPORTANT:Only use this operation if the canceled flag of a",
    "Reference": "Only use this operation if the  flag of a",
    "HebCup": "IMPORTANT:Only use this operation if the canceled flag of a"
}
{
    "Origin": "Returns partition counters page identifier, page with caches in cache group sizes.",
    "Reference": "Returns page identifier related to page with logical cache sizes in cache group.",
    "HebCup": "Returns partition Cache Sizes Page identifier, page with caches in cache group sizes."
}
{
    "Origin": "Execute the tasks concurrently using {@link Threads} when\n {@link ExecutorService} was initiated by someone else.",
    "Reference": "Execute the tasks concurrently using {@link Threads} when\n {@link ExecutorService} was initiated by {@link Threads} itself.",
    "HebCup": "Execute the tasks concurrently using {@link Threads} when {@link <} was initiated by someone else."
}
{
    "Origin": "Returns the SOM map grid.",
    "Reference": "Returns the lattice of neurons.",
    "HebCup": "double the SOM map grid."
}
{
    "Origin": "re-create the fragment adapter so all its fragments are also re-created - used when\nuser signs in/out so the fragments reflect the active account",
    "Reference": "re-create the fragment adapter so all its fragments are also re-created - used when\nuser signs in/out so the fragments reflect the active account\nTODO: test this with the new nav",
    "HebCup": "re-create the fragment adapter so all its fragments are also re-created - used when\nuser signs in/out so the fragments reflect the active account"
}
{
    "Origin": "{@codesnippet com.azure.keyvault.keys.keyclient.restoreKeyWithResponse#byte-Context}",
    "Reference": "{@codesnippet com.azure.keyvault.keys.keyclient.restoreKeyBackupWithResponse#byte-Context}",
    "HebCup": "{@codesnippet com.azure.keyvault.keys.keyclient.restoreKeyBackupWithResponse#byte-Context}"
}
{
    "Origin": "Sets the {@link EncryptionScope encryption scope} that is used to encrypt blob contents on the server.",
    "Reference": "Sets the {@code encryption scope} that is used to encrypt blob contents on the server.",
    "HebCup": "Sets the {@link String encryption scope} that is used to encrypt blob contents on the server."
}
{
    "Origin": "List a specified feedback entry.",
    "Reference": "Get a specified feedback entry.",
    "HebCup": "List a specified feedback entry."
}
{
    "Origin": "Test of setMetricType method, of class NewAgentConnector.",
    "Reference": "Test of setTransport method, of class NewAgentConnector.",
    "HebCup": "Test of setTransport method , of class NewAgentConnector."
}
{
    "Origin": "Removes the extension from a filename.",
    "Reference": "Removes the extension from a fileName.",
    "HebCup": "Removes the extension from a fileName."
}
{
    "Origin": "Attempts to read data from the given {@link DataHolder} and fills the\nassociated data onto this {@link Mutable}.",
    "Reference": "Attempts to read data from the given {@link ValueContainer} and fills the\nassociated data onto this {@link Mutable}.",
    "HebCup": "Attempts to read data from the given {@link Key} and fills the associated data onto this {@link Mutable}."
}
{
    "Origin": "Thus, we go a-fishing in the action\ngraph reaching through error propagating middlemen: one of these exists for each {@code",
    "Reference": "Thus, we go a-fishing in the action\ngraph reaching through scheduling dependency middlemen: one of these exists for each {@code",
    "HebCup": "Thus , we go a-fishing in the action graph reaching through SCHEDULING propagating middlemen: one of these exists for each {@code"
}
{
    "Origin": "Code snippets for {@link BlobClientBase#downloadWithResponse(OutputStream, BlobRange, ReliableDownloadOptions,",
    "Reference": "Code snippets for {@link BlobClientBase#downloadWithResponse(OutputStream, BlobRange, DownloadRetryOptions,",
    "HebCup": "Code snippets for {@link BlobClientBase#downloadWithResponse (OutputStream , BlobRange , DownloadRetryOptions ,"
}
{
    "Origin": "{@code throwable} will be non-null in the case of a failed attempt to send the body.",
    "Reference": "{@code ioe} will be non-null in the case of a failed attempt to send the body.",
    "HebCup": "{@code IOException} will be non-null in the case of a failed attempt to send the body."
}
{
    "Origin": "Returns gap between split icon and split part sides.",
    "Reference": "Returns gap between menu icon and menu button part sides.",
    "HebCup": "Returns gap between menu Icon and split part sides."
}
{
    "Origin": "Delete file system node\n### Functional Description: Delete node (room, folder, file).",
    "Reference": "Delete node\n### Functional Description: Delete node (room, folder or file).",
    "HebCup": "Delete file system Sds###Functional Description: Delete Sds (room , folder , file)."
}
{
    "Origin": "Returns an immutable view of a given list.",
    "Reference": "Returns an immutable view of a given set.",
    "HebCup": "Returns an immutable view of a given ListView."
}
{
    "Origin": "Method return current instance of browser mob proxy",
    "Reference": "Method return current instance of browser up proxy",
    "HebCup": "Method return current instance of Browser Up Proxy"
}
{
    "Origin": "main is the entry point to execute high level ofbiz commands\nsuch as starting, stopping or checking the status of the server.",
    "Reference": "main is the entry point to execute high level OFBiz commands\nsuch as starting, stopping or checking the status of the server.",
    "HebCup": "main is the entry point to execute high level Command Type such as starting, stopping or checking the status of the server."
}
{
    "Origin": "Returns a {@link TrackedDevicePose} view of the {@code standingTrackedDevicePose} field.",
    "Reference": "Returns a {@link TrackedDevicePose} view of the {@code trackedDevicePose} field.",
    "HebCup": "Returns a {@link TrackedDevicePose} view of the {@code trackedDevicePose} field."
}
{
    "Origin": "Checks the dirty status of the 'prevSignature' field.",
    "Reference": "Checks the dirty status of the 'signature' field.",
    "HebCup": "Checks the dirty status of the 'Signature' field."
}
{
    "Origin": "Listen for WebSocket with the given route predicate to invoke the matching handlers",
    "Reference": "Listens for websocket with the given route predicate to invoke the matching handler.",
    "HebCup": "Listen for WebSocket with the given route predicate to invoke the matching handlers"
}
{
    "Origin": "Returns the number of open sessions on this connection, if the connection has been established.",
    "Reference": "Returns the number of open flows on this connection, if the connection has been established.",
    "HebCup": "Returns the number of Flow sessions on this connection , if the connection has been established."
}
{
    "Origin": "Create a new Map consisting of a single key/value pair.",
    "Reference": "Create a new Map combined all entries of two other maps.",
    "HebCup": "Create a new Map consisting of a single key/value pair."
}
{
    "Origin": "Implements get configuration.",
    "Reference": "Implements get configuration key.",
    "HebCup": "Implements get configuration."
}
{
    "Origin": "Takes vector of ProtocolConfigurations, iterates through it, creates Protocol for\neach ProtocolConfiguration and returns all Protocols in a vector.",
    "Reference": "Takes vector of ProtocolConfigurations, iterates through it, creates Protocol for\neach ProtocolConfiguration and returns all Protocols in a list.",
    "HebCup": "Takes vector of ProtocolConfigurations, iterates through it, creates Protocol for\neach ProtocolConfiguration and returns all Protocols in a vector."
}
{
    "Origin": "Computes the minimum for each pixel across all bands in the {@link Planar} image.",
    "Reference": "Computes the minimum for each pixel across selected bands in the {@link Planar} image.",
    "HebCup": "Computes the minimum for each pixel across all bands in the {@link Planar} image."
}
{
    "Origin": "Creates an {@code FxSwap} using forward points.",
    "Reference": "Creates an {@code FxSwap} using decimal forward points.",
    "HebCup": "Creates an {@code FxSwap} using decimal Forward Points."
}
{
    "Origin": "Returns the base value of the given property.",
    "Reference": "Returns the base value of the given property with all modifiers applied.",
    "HebCup": "Returns the base key.getDef of the given property."
}
{
    "Origin": "Adopt the return type and size from the specified expression to this expression.",
    "Reference": "Assigns the type from the specified expression.",
    "HebCup": "Adopt the return type and size from the specified expression to this expression."
}
{
    "Origin": "Given the current case, fins all intercase common files from the EamDb\nand builds maps of obj id to md5 and case.",
    "Reference": "Given the current case, fins all intercase common files from the EamDb\nand builds maps of obj id to value and case.",
    "HebCup": "Given the current case , fins all INTER_ common files from the EamDb and builds maps of obj id to md5 and case."
}
{
    "Origin": "Returns the {@code *.AsyncIface} or {@code *.Iface} implementation.",
    "Reference": "Returns the list of {@code *.AsyncIface} or {@code *.Iface} implementations.",
    "HebCup": "Returns the {@code *.AsyncIface} or {@code *.Iface} implementations."
}
{
    "Origin": "This will return the {@link Key keys}\nwith key material included of the specified versions.",
    "Reference": "This will return the {@link KeyVaultKey keys}\nwith key material included of the specified versions.",
    "HebCup": "This will return the {@link PropertiesOfKey keys} with PropertiesOfKey material included of the specified versions."
}
{
    "Origin": "returns the index of the passed media ID in the current media list",
    "Reference": "returns the media item with the passed media ID in the current media list",
    "HebCup": "returns the get Media From the passed media ID in the current media list"
}
{
    "Origin": "Returns the new value of the event source.",
    "Reference": "Returns the new value that triggered this value change event.",
    "HebCup": "Returns the new value of the event value."
}
{
    "Origin": "Files that are not in the given directory are loaded from classpath.",
    "Reference": "Files that are not in the given directory are loaded from Lucene's classloader.",
    "HebCup": "Files that are not in the given directory are loaded from classpath."
}
{
    "Origin": "This method arranges all the {@link ScheduledTrial trials} to run according to their\nscheduling criteria.",
    "Reference": "This method arranges all the trials to run according to their scheduling criteria.",
    "HebCup": "This method arranges all the {@link ListenableFuture trials} to run according to their scheduling criteria."
}
{
    "Origin": "Sets the value of the 'ValueType' field",
    "Reference": "Sets the value of the 'valueType' field.",
    "HebCup": "Sets the value of the 'valueType' field"
}
{
    "Origin": "Get Percentage.",
    "Reference": "Get Anteil.",
    "HebCup": "Get Percentage."
}
{
    "Origin": "Returns an AbstractType instance that is equivalent to this one, but with all nested UDTs explicitly frozen and\nall collections in UDTs explicitly frozen.",
    "Reference": "Returns an AbstractType instance that is equivalent to this one, but with all nested UDTs and collections\nexplicitly frozen.",
    "HebCup": "Returns an AbstractType instance that is equivalent to this one, but with all Nested MulticellTs explicitly frozen and all collections in UDTs explicitly frozen."
}
{
    "Origin": "Keep the connection open if we are asked to do so.",
    "Reference": "Keeps the connection open if told to do so.",
    "HebCup": "Keep the connection open if we are asked to.Do so."
}
{
    "Origin": "Gets the value of the 'cf_name' field.",
    "Reference": "Gets the value of the 'cfName' field.",
    "HebCup": "Gets the value of the 'cfName' field."
}
{
    "Origin": "After that\nall entries will be inserted into a new BibDatabase.",
    "Reference": "After that\nall entries are inserted into a new BibDatabase.",
    "HebCup": "After that all Entries will be inserted into a new BibDatabase."
}
{
    "Origin": "estimateMinimumDemand reports 0 until request, nonzero after\nrequest, and zero again after delivery",
    "Reference": "estimateMinimumDemand reports 0 until request, nonzero after\nrequest",
    "HebCup": "estimateMinimumDemand reports 0 until request, nonzero after\nrequest, and zero again after delivery"
}
{
    "Origin": "This is useful in situations when it is necessary to access an instance\nvariable that is out of scope.",
    "Reference": "This is useful in situations when it is necessary to access an instance\nvariable that is not visible (i.e.",
    "HebCup": "This is useful in situations when it is necessary to access an instance\nvariable that is out of scope."
}
{
    "Origin": "Returns a string representation of this object; useful for testing and debugging.",
    "Reference": "Returns a string representation of this object.",
    "HebCup": "Returns a string representation of this object; useful for testing and debugging."
}
{
    "Origin": "Sets the default SSLHostConfig name.",
    "Reference": "Sets the default SslHostConfig name.",
    "HebCup": "Sets the default SslHostConfig name."
}
{
    "Origin": "Get certain partition-level histograms based on given arguments.",
    "Reference": "Get certain resource-level histograms based on given arguments.",
    "HebCup": "Get certain resource-level histograms based on given arguments."
}
{
    "Origin": "Default is 3600 sec = 24h",
    "Reference": "Default is 600 sec = 10min",
    "HebCup": "Default is 3600 sec (24h"
}
{
    "Origin": "Sets the quorum name for operations.",
    "Reference": "Sets the split brain protection name for operations.",
    "HebCup": "Sets the split Brain Protection Name for operations."
}
{
    "Origin": "The indices of this TimeSeries and the new subset TimeSeries can be different.",
    "Reference": "The indices of this BaseBarSeries and the new subset BaseBarSeries can be different.",
    "HebCup": "The indices of this TimeSeries and the new subset TimeSeries can be different."
}
{
    "Origin": "Decode an action profile member to PI action group member.",
    "Reference": "Decode an action profile member to PI action profile member.",
    "HebCup": "Decode an action profile member to Pi Action Profile Member."
}
{
    "Origin": "Casts the {@code DateTime} to {@ChronoZonedDateTimeImpl} with the same chronology.",
    "Reference": "Casts the {@code DateTime} to {@code ChronoZonedDateTimeImpl} with the same chronology.",
    "HebCup": "Casts the {@code DateTime} to {@ChronoZonedDateTimeImpl} with the same chronology."
}
{
    "Origin": "Obtains an instance from the specified unique name.",
    "Reference": "Obtains an instance from the specified name.",
    "HebCup": "Obtains an instance from the specified name."
}
{
    "Origin": "Returns the {@link EntityId} of the entity who emit this message.",
    "Reference": "Returns the {@link ProgramId} of the program who emit this message.",
    "HebCup": "Returns the {@link ProgramId} of the entity who emit this message."
}
{
    "Origin": "Standard getter for the rightwardLabel String for this RelationshipType",
    "Reference": "Standard getter for the rightwardType String for this RelationshipType",
    "HebCup": "Standard getter for the rightwardType String for this RelationshipType"
}
{
    "Origin": "\"Skolemize\": BlankNode to IRI else return node unchanged.",
    "Reference": "\"Skolemize\" to a node.",
    "HebCup": "``Skolemize``: BlankNode To Iri String else return node unchanged."
}
{
    "Origin": "Set Verarbeitet.",
    "Reference": "Set Ordered.",
    "HebCup": "set Is Verarbeitet."
}
{
    "Origin": "This will set the margin between the annotations \"outer\" rectangle defined by\n/Rect and the boundaries of the underlying caret.",
    "Reference": "This will set the difference between the annotations \"outer\" rectangle defined by\n/Rect and the border.",
    "HebCup": "This will set the difference between the annotations ``outer`` rectangle defined by /Rect and the boundaries of the underlying caret."
}
{
    "Origin": "Creates query that searches for SourceContacts\nwhich match a specific query Pattern.",
    "Reference": "Queries this ContactSourceService for SourceContacts\nwhich match a specific query Pattern.",
    "HebCup": "Creates Source that searches for SourceContacts which match a specific Source Pattern."
}
{
    "Origin": "A voice cannot migrate from one part to another, but may migrate from one staff to another\nunder some conditions.",
    "Reference": "A voice may migrate from one staff to another under some conditions.",
    "HebCup": "A MeasureVoices cannot migrate from one part to another, but may migrate from one staff to another under some conditions."
}
{
    "Origin": "Applies the optimization to all subqueries.",
    "Reference": "Applies the optimization to a given subquery root.",
    "HebCup": "Applies the optimization to all subqueries."
}
{
    "Origin": "Deletes the running state from the {@link RemoteRuntimeDataset}.",
    "Reference": "Deletes the running state from the {@link RemoteRuntimeTable}.",
    "HebCup": "Deletes the running state from the {@link RemoteRuntimeTable}."
}
{
    "Origin": "Get Key Column Name with consideration of Synonym",
    "Reference": "Get Key Column Name with consideration of table aliases",
    "HebCup": "Get Key AD _ Element Value _ ID with consideration of Synonym"
}
{
    "Origin": "Get Search Key.",
    "Reference": "Get Token Value.",
    "HebCup": "get Token Search Key."
}
{
    "Origin": "Initialize the EventTracker's timer task.",
    "Reference": "Initialize the EventTracker's timer task for tracking and shutdown purposes.",
    "HebCup": "Initialize the EventTracker's timer task."
}
{
    "Origin": "Returns the next character.",
    "Reference": "Returns the next codepoint.",
    "HebCup": "Returns the next character."
}
{
    "Origin": "Extend the path by appending two ChildNumber objects.",
    "Reference": "Extend the path by appending additional ChildNumber objects.",
    "HebCup": "Extend the path by appending two ChildNumber objects."
}
{
    "Origin": "Find or create the best name to use for a parameter we need to rewrite.",
    "Reference": "Creates a new unique name to use for a pattern we need to rewrite.",
    "HebCup": "Find or create the best name to use for a Variable we need to rewrite."
}
{
    "Origin": "Get the Hadoop/Spark application id from the job log.",
    "Reference": "Find all the Hadoop/Spark application ids present in the Azkaban job log.",
    "HebCup": "Get the Hadoop/Spark Application Ids from the job log."
}
{
    "Origin": "Both filenames are first passed to {@link #normalize(String)}.",
    "Reference": "Both fileNames are first passed to {@link #normalize(String)}.",
    "HebCup": "Both filenames are first passed to {@link #normalize(String)}."
}
{
    "Origin": "Returns true if the package contain the target class has been opened for\nillegal access.",
    "Reference": "Returns true if the module opens a concealed or exported package for\nillegal access.",
    "HebCup": "Returns true if the package contain the target Module has been opened for illegal access."
}
{
    "Origin": "Test of get method, of class LruCache.",
    "Reference": "Test of put and get method, of class LruCache.",
    "HebCup": "Test of get method, of class LruCache."
}
{
    "Origin": "To match the\nnode N the supplier must supply a LabelSchemaDescriptor D, such that N has the label of D, and values for all\nthe properties of D.",
    "Reference": "To match the\nnode N the supplier must supply a LabelSchemaDescriptor D, such that N has values for all the properties of D.",
    "HebCup": "To match the\nnode N the supplier must supply a LabelSchemaDescriptor D, such that N has the label of D, and values for all\nthe properties of D."
}
{
    "Origin": "Note,\nhowever, that after the multipart upload completes, you cannot call\nthe List Parts operation and the multipart upload will not appear in",
    "Reference": "Note, however, that\nafter the multipart upload completes, you cannot call the List Parts\noperation and the multipart upload will not appear in List Multipart",
    "HebCup": "Note,\nhowever, that after the multipart upload completes, you cannot call\nthe List Parts operation and the multipart upload will not appear in"
}
{
    "Origin": "Decorates {@link Service}s whose {@link Route} matches the specified {@link Route}.",
    "Reference": "Decorates {@link HttpService}s whose {@link Route} matches the specified {@link Route}.",
    "HebCup": "Decorates {@link Service}s whose {@link Route} matches the specified {@link Route}."
}
{
    "Origin": "Get the {@link AggCall} correspond to the aggregate expression.",
    "Reference": "Get the {@link AggCall} correspond to the aggregate or table aggregate expression.",
    "HebCup": "Get the {@link AggregateCall} correspond to the aggregate expression."
}
{
    "Origin": "/api/v1/topology/:id/profiling/dumpprofile/:host-port/:timeout -> dump profile.",
    "Reference": "/api/v1/topology/:id/profiling/dumpprofile/:host-port -> dump profile.",
    "HebCup": "/api/v1/topology/:id/profiling/dumpprofile/:host-port/:timeout -> dump profile."
}
{
    "Origin": "Send a command to Python, and wait for a response prompt, returning all accumulated output\nsince the last call to either  or",
    "Reference": "Send a command to Python, and wait for an ack, returning all accumulated output\nsince the last call to either  or",
    "HebCup": "Send a command to Python, and wait for a response prompt, returning all For Ack since the last call to either or"
}
{
    "Origin": "Get instance manager.",
    "Reference": "Get injection manager.",
    "HebCup": "Get Injection Manager."
}
{
    "Origin": "Attaches an application created from a WADL description document\navailable at a given URI reference.",
    "Reference": "Attaches an application created from a Swagger description document\navailable at a given URI reference.",
    "HebCup": "Attaches an application created from a swagger description document available at a given URI reference."
}
{
    "Origin": "Returns concatenated UID for a period in a child timeline.",
    "Reference": "Returns a concatenated UID for a period or window in a child timeline.",
    "HebCup": "Returns concatenated UID for a PeriodOrWindow in a child timeline."
}
{
    "Origin": "Get the service locator.",
    "Reference": "Get the instance manager.",
    "HebCup": "Get the Instance Manager."
}
{
    "Origin": "or throws a {@link com.liferay.knowledgebase.NoSuchFolderException} if it could not be found.",
    "Reference": "or throws a {@link NoSuchFolderException} if it could not be found.",
    "HebCup": "or throws a {@link com.liferay.knowledgebase.NoSuchFolderException} if it could not be found."
}
{
    "Origin": "Tests for the {@link BaseFileSystem#setAttribute(AlluxioURI, SetAttributeOptions)} method.",
    "Reference": "Tests for the {@link BaseFileSystem#setAttribute(AlluxioURI, SetAttributePOptions)} method.",
    "HebCup": "Tests for the {@link BaseFileSystem#setAttribute (AlluxioURI , SetAttributePOptions.getDefault)} method."
}
{
    "Origin": "Creates {@link JobSpec} from the {@link AvroJobSpec} record.",
    "Reference": "Creates a {@link JobSpec} or {@link URI} from the {@link AvroJobSpec} record.",
    "HebCup": "Creates {@link JobSpec} from the {@link AvroJobSpec} record."
}
{
    "Origin": "Decorates {@link Service}s whose {@link Route} matches the specified {@code pathPattern}.",
    "Reference": "Decorates {@link HttpService}s whose {@link Route} matches the specified {@code pathPattern}.",
    "HebCup": "Decorates {@link Service}s whose {@link Route} matches the specified {@code pathPattern}."
}
{
    "Origin": "If no pool exists, throw an exception.",
    "Reference": "If no pool exists, returns null.",
    "HebCup": "If no pool exists, throw an exception."
}
{
    "Origin": "Registers a new listener with the specified activation method to listen\nevents generated by this component.",
    "Reference": "Registers a new event listener with the specified activation method to\nlisten events generated by this component.",
    "HebCup": "Registers a new listener with the specified activation method to listen\nevents generated by this component."
}
{
    "Origin": "Answer the (alleged most-specific) type of the object that could not be\n       constructed.",
    "Reference": "Answer the types of the object that could not be\n       constructed.",
    "HebCup": "Answer the (alleged most-specific) Types of the object that could not be constructed."
}
{
    "Origin": "Create and display the picture view.",
    "Reference": "Create and display the initial view.",
    "HebCup": "Create and display the Initial View."
}
{
    "Origin": "Decreases the reference count by {@code decrement} and de-allocates this object if the reference count reaches {@code 0}",
    "Reference": "Decreases the reference count by {@code decrement} and deallocates this response if the count reaches {@code 0}.",
    "HebCup": "Decreases the reference count by {@code decrement} and de-allocates this object if the reference count reaches {@code 0}"
}
{
    "Origin": "Note: returned indent is not set to be  to it's direct parent block",
    "Reference": "Note: returned indent is not set to be {@code 'relative'} to it's direct parent block",
    "HebCup": "Note: returned indent is not set to be  to it's direct parent block"
}
{
    "Origin": "Returns a Path to access to the given resource.",
    "Reference": "Returns a Path to access the given resource.",
    "HebCup": "Returns a Path to File access to File the given resource."
}
{
    "Origin": "This will set the margin between the annotations \"outer\" rectangle defined by\n/Rect and the boundaries of the underlying caret.",
    "Reference": "This will set the difference between the annotations \"outer\" rectangle defined by\n/Rect and boundaries of the underlying.",
    "HebCup": "This will set the difference between the annotations ``outer`` rectangle defined by /Rect and the boundaries of the underlying caret."
}
{
    "Origin": "Sets the value of the 'publicPort' field.",
    "Reference": "Sets the value of the 'publicPorts' field.",
    "HebCup": "Sets the value of the 'PublicPorts' field."
}
{
    "Origin": "Submits a request to cache the given block id.",
    "Reference": "Handles a request to cache a block asynchronously.",
    "HebCup": "Submits a request to cache the given Protocol."
}
{
    "Origin": "Gets the exampleText.",
    "Reference": "Gets the text.",
    "HebCup": "Gets the text."
}
{
    "Origin": "Acquire a SAXParser from the pool; create one if it\ndoesn't exist.",
    "Reference": "Acquire a SAXParser from the pool.",
    "HebCup": "Acquire a SAXParser from the pool; create one if it\ndoesn't exist."
}
{
    "Origin": "Each adapter will try to send blocks until have got special {@link Packet} with type {@link PacketTypes#ACK},\nthat means receiver have got block.",
    "Reference": "Each adapter will try to send blocks until have got special {@link Block} with type {@link PacketTypes#ACK},\nthat means receiver have got block.",
    "HebCup": "Each adapter will try to send blocks until have got special {@link session} with type {@link PacketTypes#ACK} , that means receiver have got block."
}
{
    "Origin": "Sets the {@code eventListeners} this {@link EventHandlerInvoker} will forward all its events to.",
    "Reference": "Sets the {@code eventHandlers} this {@link EventHandlerInvoker} will forward all its events to.",
    "HebCup": "Sets the {@code eventHandlers} this {@link EventHandlerInvoker} will forward all its events to."
}
{
    "Origin": "This method always returns {@code true} when invoked on an unnamed\nmodule.",
    "Reference": "This method always returns {@code true} when invoked on an unnamed\nmodule or an automatic module.",
    "HebCup": "This method always returns {@code true} when invoked on an unnamed\nmodule."
}
{
    "Origin": "Gets exception name.",
    "Reference": "Gets class name.",
    "HebCup": "Gets exception name."
}
{
    "Origin": "For transforms returned via GET\ndata_frame/transforms, see the @link{TransportGetTransformAction}",
    "Reference": "For transforms returned via GET\n_transform, see the @link{TransportGetTransformAction}",
    "HebCup": "For transforms returned via GET\ndata_frame/transforms, see the @link{TransportGetTransformAction}"
}
{
    "Origin": "Uninstalls split button mouseover listener.",
    "Reference": "Uninstalls menu button mouseover listener.",
    "HebCup": "Uninstalls menu Button mouseover listener."
}
{
    "Origin": "String} values used to compile the URI for a {@link DiscordRequest}.",
    "Reference": "String} values used to compile the URI for a {@link DiscordWebRequest}.",
    "HebCup": "String} values used to compile the URI for a {@link DiscordRequest}."
}
{
    "Origin": "Return the list of visible constant fields for the given TypeElement.",
    "Reference": "Returns a set of visible constant fields for the given type.",
    "HebCup": "Return the members of visible constant fields for the given TypeElement."
}
{
    "Origin": "The returned cursor will also be managed through the means of {@link #managedCursor(Cursor, CursorContext)}",
    "Reference": "The returned cursor will also be managed through the means of {@link #managedCursor(Cursor)}",
    "HebCup": "The returned cursor will also be managed through the means of {@link#managedCursor (Cursor , ;)}"
}
{
    "Origin": "Integration testing without a server targeting the given HttpHandler.",
    "Reference": "Integration testing with a \"mock\" server targeting the given WebHandler.",
    "HebCup": "Integration testing without a server targeting the given WebHandler."
}
{
    "Origin": "Does not check if feedback session exists.",
    "Reference": "Creates a feedback response.",
    "HebCup": "Does not check if feedback session exists."
}
{
    "Origin": "Returns a string representation of this object; useful for testing and debugging.",
    "Reference": "Returns a string representation of this object.",
    "HebCup": "Returns a * representation of this object; useful for testing and debugging."
}
{
    "Origin": "Adds {@link WordCountApp} as system artifact which can be used as parent artifact for testing purpose",
    "Reference": "Adds {@link AllProgramsApp} as system artifact which can be used as parent artifact for testing purpose",
    "HebCup": "Adds {@link AllProgramsApp} as system artifact which can be used as parent artifact for testing purpose"
}
{
    "Origin": "This factory converts the arbitrary date-time object to an instance of {@code LocalDateTime}.",
    "Reference": "This factory converts the arbitrary temporal object to an instance of {@code LocalDateTime}.",
    "HebCup": "This factory converts the arbitrary date-time object to an instance of {@code LocalDateTime}."
}
{
    "Origin": "Adds a WarningMessage to the message set.",
    "Reference": "Adds a warning to the message set.",
    "HebCup": "Adds a WarningMessage to the message set."
}
{
    "Origin": "See Immutable List Static Factory Methods for details.",
    "Reference": "See Unmodifiable Lists for details.",
    "HebCup": "See Unmodifiable List Static Factory Methods for details."
}
{
    "Origin": "Sets the overwrite.",
    "Reference": "Set the overwrite.",
    "HebCup": "Sets the overwrite."
}
{
    "Origin": "Try to connect the orphan slurs at the beginning of this part\nwith the orphan slurs at the end of the provided preceding part.",
    "Reference": "Retrieve possible links between the orphan slurs at the beginning of this part\nand the orphan slurs at the end of the provided preceding part.",
    "HebCup": "Try to get the orphan slurs at the beginning of this part with the orphan slurs at the end of the provided preceding part."
}
{
    "Origin": "FIXME does not use [fromTime, toTime, or period].",
    "Reference": "FIXME does not use [fromTime, toTime, or period] (or model.path)",
    "HebCup": "FIXME does not use [fromTime, toTime, or period]."
}
{
    "Origin": "Tests the creation of a file via the\n{@link BaseFileSystem#createFile(AlluxioURI, CreateFileOptions)} method.",
    "Reference": "Tests the creation of a file via the\n{@link BaseFileSystem#createFile(AlluxioURI, CreateFilePOptions)} method.",
    "HebCup": "Tests the creation of a file via the {@link BaseFileSystem#createFile (AlluxioURI , CreateFilePOptions)} method."
}
{
    "Origin": "This method must be invoked for each cache that uses protobuf.",
    "Reference": "This must be invoked for each cache that uses protobuf.",
    "HebCup": "This method must be invoked for each cache that uses protobuf."
}
{
    "Origin": "Need hibernate to be initialized.",
    "Reference": "Need Hibernate to be initialized.",
    "HebCup": "Need hibernate to be initialized."
}
{
    "Origin": "Measures the performance of string dictionary lookups by performing the provided\nnumber of lookups to random indices.",
    "Reference": "Measures the performance of string dictionary lookups by performing the provided number of lookups to random value.",
    "HebCup": "Measures the performance of string dictionary lookups by performing the provided\nnumber of lookups to random indices."
}
{
    "Origin": "RsaKeyCreateOptions#getNotBefore() notBefore} values are optional.",
    "Reference": "CreateRsaKeyOptions#getNotBefore() notBefore} values are optional.",
    "HebCup": "CreateRsaKeyOptions#getNotBefore () notBefore} values are optional."
}
{
    "Origin": "Accept (case-sensitively) the given phrases even though they are not in the built-in dictionary.",
    "Reference": "Accept (case-sensitively, unless at the start of a sentence) the given phrases even though they\nare not in the built-in dictionary.",
    "HebCup": "Accept (case-sensitively) the given phrases even though they are not in the built-in dictionary."
}
{
    "Origin": "Creates an iterator for the specified decimal.",
    "Reference": "Creates an iterator for the specified integer.",
    "HebCup": "Creates an iterator for the specified decimal."
}
{
    "Origin": "Gets the nodeType.",
    "Reference": "Gets the type.",
    "HebCup": "Gets the type."
}
{
    "Origin": "Get authentication settings\n### Functional Description:   DRACOON authentication configuration entry point.",
    "Reference": "Get authentication settings\n### \ud83d\ude80 Since version VERSION  ### Functional Description:   DRACOON authentication configuration entry point.",
    "HebCup": "Get authentication settings\n### Functional Description:   DRACOON authentication configuration entry point."
}
{
    "Origin": "Recursively traverse the coder tree and wrap the first unknown coder in every branch with a\n{@link LengthPrefixCoder} unless an ancestor coder is itself a {@link LengthPrefixCoder}.",
    "Reference": "Recursively traverses the coder tree and wraps the first unknown coder in every branch with a\n{@link LengthPrefixCoder} unless an ancestor coder is itself a {@link LengthPrefixCoder}.",
    "HebCup": "Recursively traverse the = tree and wrap the first unknown = in every branch with a {@link LengthPrefixCoder} unless an ancestor = is itself a {@link LengthPrefixCoder}."
}
{
    "Origin": "A semigroup for binary products.",
    "Reference": "A lazy semigroup for binary products.",
    "HebCup": "A semigroupDef for binary products."
}
{
    "Origin": "Test proxy implementing interfaces in a Layer defined in\nan unnamed module",
    "Reference": "Test proxy implementing interfaces in a layer defined in\nan unnamed module",
    "HebCup": "Test proxy implementing interfaces in a ModuleLayer defined in an unnamed module"
}
{
    "Origin": "Checks whether two filenames are equal exactly.",
    "Reference": "Checks whether two fileNames are equal exactly.",
    "HebCup": "Checks whether two filenames are equal exactly."
}
{
    "Origin": "The subtraction of a duration is always absolute and zone-resolvers are not required.",
    "Reference": "The subtraction of a duration is always absolute - there are no special cases.",
    "HebCup": "The subtraction of a duration is always absolute and zone-resolvers are not required."
}
{
    "Origin": "NOTE:The specified DB security group must not be associated\nwith any DB instances.",
    "Reference": "The specified DB security group must not be associated with any DB\ninstances.",
    "HebCup": "NOTE:The specified DB security group must not be associated\nwith any DB instances."
}
{
    "Origin": "Returns an immutable list containing two elements.",
    "Reference": "Returns an unmodifiable list containing two elements.",
    "HebCup": "Returns an Unmodifiable list containing two elements."
}
{
    "Origin": "If we didn't write any Indexers and there is a RootGlideModule, write the",
    "Reference": "If we didn't write any Indexers and there is a AppGlideModule, write the",
    "HebCup": "If we didn't write any Indexers and there is a AppGlideModule , write the"
}
{
    "Origin": "Gets the value of the 'zk_Quorum' field",
    "Reference": "Gets the value of the 'zkQuorum' field.",
    "HebCup": "Gets the value of the 'zkQuorum' field"
}
{
    "Origin": "Computes the average for each pixel across all bands in the {@link Planar} image.",
    "Reference": "Computes the minimum for each pixel across selected bands in the {@link Planar} image.",
    "HebCup": "Computes the average for each pixel across all bands in the {@link Planar} image."
}
{
    "Origin": "This method will ensure that you have a right and initialized instance of\n{@link StandaloneContextAwareManagerFactory}.",
    "Reference": "This method will ensure that you have a right and initialized instance of\n{@link StandaloneContextAware}.",
    "HebCup": "This method will ensure that you have a right and initialized instance of {@link WroManagerFactory}."
}
{
    "Origin": "Custom comparators are used by diff algorithm to calculate property-to-property diff.",
    "Reference": "Custom comparators are used by diff algorithm to calculate property-to-property diff\nand also collection-to-collection diff.",
    "HebCup": "Custom comparators are used by diff algorithm to calculate property-to-property diff."
}
{
    "Origin": "Initializes the database context, based on the initial servlet context.",
    "Reference": "Initializes the HTTP context, based on the initial servlet context.",
    "HebCup": "Initializes the database context, based on the initial servlet context."
}
{
    "Origin": "User / Group may look up files / folders in the Recycle Bin.",
    "Reference": "User / Group may look up files / folders in the recycle bin.",
    "HebCup": "User / Group may look up files / folders in the Recycle bin."
}
{
    "Origin": "Parses {@link RowMajorSparseMatrix} from the given Matrix Market string.",
    "Reference": "Parses {@link RowMajorSparseMatrix} from the given Matrix Market.",
    "HebCup": "Parses {@link RowMajorSparseMatrix} from the given Matrix Market InputStream."
}
{
    "Origin": "This recursive method follows the\ncontrol flow graph to find all the blocks that are reachable from the\ncurrent block WITHOUT following any JSR target.",
    "Reference": "This method follows the control\nflow graph to find all the blocks that are reachable from the current\nblock WITHOUT following any JSR target.",
    "HebCup": "This recursive method follows the control flow graph to find all the blocks that are reachable from the current block WITHOUT following any = target."
}
{
    "Origin": "Tests if the specified  is newer than the specified time reference.",
    "Reference": "Tests if the specified {@link File} is newer than the specified time reference.",
    "HebCup": "Tests return the specified is newer than the specified time reference."
}
{
    "Origin": "Builds a {@link GraphiteReporter} with the given properties, sending metrics using the\ngiven {@link Graphite} client.",
    "Reference": "Builds a {@link GraphiteReporter} with the given properties, sending metrics using the\ngiven {@link GraphiteSender}.",
    "HebCup": "Builds a {@link GraphiteReporter} with the given properties , sending metrics using the given {@link GraphiteSender} client."
}
{
    "Origin": "Draws the value of the given entry by using the provided ValueFormatter.",
    "Reference": "Draws the value of the given entry by using the provided IValueFormatter.",
    "HebCup": "Draws the value of the given entry by using the provided IValueFormatter."
}
{
    "Origin": "Returns a random temporary name for the specified database.",
    "Reference": "Returns a random temporary name for the specified database name.",
    "HebCup": "Returns a randomDbName temporary name for the specified database."
}
{
    "Origin": "A {@code DateTimeAccessor} represents some form of date and time information.",
    "Reference": "A {@code TemporalAccessor} represents some form of date and time information.",
    "HebCup": "A {@code DateTimeAccessor} represents some form of date and time information."
}
{
    "Origin": "Normally tasks are executed in different thread from the one creating it and at a different time.",
    "Reference": "Normally tasks are executed in a different thread from the one creating it and at a different time.",
    "HebCup": "Normally tasks are executed in different thread from the one creating it and at a different time."
}
{
    "Origin": "The {@link Flux} will\ncontain one or several feed response of the read cosmos users.",
    "Reference": "The {@link CosmosContinuablePagedFlux} will\ncontain one or several feed response of the read cosmos users.",
    "HebCup": "The {@link Flux} will contain one or several Cosmos Continuable Paged Flux of the read cosmos users."
}
{
    "Origin": "If object \"A\" is unregistered ,  B , C also must get unregistered.",
    "Reference": "If object \"A\" is unregistered B and C also must get unregistered.",
    "HebCup": "If object \"A\" is unregistered ,  B , C also must get unregistered."
}
{
    "Origin": "See Immutable Map Static Factory Methods for details.",
    "Reference": "See Unmodifiable Maps for details.",
    "HebCup": "See Unmodifiable Map Static Factory Methods for details."
}
{
    "Origin": "Optionally return metrics that this component reports, or null.",
    "Reference": "Optionally return a snapshot of metrics that this component reports, or null.",
    "HebCup": "Optionally return MetricsSnapshot that this component reports , or null."
}
{
    "Origin": "If any field binding validator fails, no values are saved and\n is returned.",
    "Reference": "If any field binding validator fails, no values are written and\n is returned.",
    "HebCup": "If any field binding validator fails, no values are saved and\n is returned."
}
{
    "Origin": "ID of the room in which the individual rooms for users will be created.",
    "Reference": "DEPRECATED, will be ignored ID of the room in which the individual rooms for users will be created.",
    "HebCup": "ID of the room in which the individual rooms for users will be created 4."
}
{
    "Origin": "Waits during {@code timeout} until specified {@code element} contains the specified {@code\nexpectedText}.",
    "Reference": "Waits during {@code timeout} until specified {@code element} contains the specified {@code\nexpected} one.",
    "HebCup": "Waits during {@code timeout} until specified {@code element} contains the specified {@code expected}."
}
{
    "Origin": "Renders and displays the child view of a tab.",
    "Reference": "Renders and displays the preview of a tab.",
    "HebCup": "Renders and displays the Content View of a tab."
}
{
    "Origin": "Create a new TransactionStatus for the given arguments,\nalso initializing transaction synchronization as appropriate.",
    "Reference": "Create a new ReactiveTransaction for the given arguments,\nalso initializing transaction synchronization as appropriate.",
    "HebCup": "Create a new Reactive TransactionStatus for the given arguments, also initializing transaction synchronization as appropriate."
}
{
    "Origin": "Extracts the google.rpc.Status from trailers, and makes sure they match the gRPC\n{@code status}.",
    "Reference": "Extracts the {@code google.rpc.Status} from trailers, and makes sure they match the gRPC\n{@code status}.",
    "HebCup": "Extracts the google.rpc.Status from trailers, and makes sure they match the gRPC\n{@code status}."
}
{
    "Origin": "{@codesnippet com.azure.security.keyvault.certificates.CertificateClient.createIssuer#String-String}",
    "Reference": "{@codesnippet com.azure.security.keyvault.certificates.CertificateClient.cancelCertificateOperation#string}",
    "HebCup": "{@codesnippet com.azure.security.keyvault.certificates.CertificateClient.cancelCertificateOperation#String-String}"
}
{
    "Origin": "Conditionally update the {@link #serviceTable} iff it does not exist or\nis empty.",
    "Reference": "Conditionally update the {@link #serviceTableRef} iff it does not exist or\nis empty.",
    "HebCup": "Conditionally update the {@link#serviceTableRef} iff it does not exist or is empty."
}
{
    "Origin": "* @param\nvalue the value to set.",
    "Reference": "'s Slurp Crawler   * @param value the value to set.",
    "HebCup": "* @param\nvalue the value to set."
}
{
    "Origin": "Get the {@link edu.stanford.nlp.international.Languages.Language}\nobject corresponding to the given language string.",
    "Reference": "Get the {@link edu.stanford.nlp.international.Language}\nobject corresponding to the given language string.",
    "HebCup": "Get the {@link edu.stanford.nlp.international.Languages.Language}\nobject corresponding to the given language string."
}
{
    "Origin": "log of factorial of n",
    "Reference": "The log of factorial of n.",
    "HebCup": "log of lfactorial of n"
}
{
    "Origin": "Validate metadata properties and return whether any properties are present.",
    "Reference": "Validate metadata properties.",
    "HebCup": "Validate metadata properties and return whether any properties are present."
}
{
    "Origin": "Runs the command with the given args.",
    "Reference": "Runs a command with the given args.",
    "HebCup": "Runs the return with the given args."
}
{
    "Origin": "helper method for validateThreadLocal method, runs recursively",
    "Reference": "Helper method for validateThreadLocal method, runs recursively",
    "HebCup": "helper method for validateThreadLocal method, runs recursively"
}
{
    "Origin": "Checks a filename to see if it matches the specified wildcard matcher,\nalways testing case-sensitive.",
    "Reference": "Checks a fileName to see if it matches the specified wildcard matcher,\nalways testing case-sensitive.",
    "HebCup": "Checks a fileName to see if it matches the specified wildcard matcher , always testing case-sensitive."
}
{
    "Origin": "Test EdgeNGramFilterFactory",
    "Reference": "Test EdgeNGramFilterFactory with old defaults",
    "HebCup": "Test EdgeNGramFilterFactory"
}
{
    "Origin": "Calls {@link Plugin#willDeclareProperty(TypeSpec.Builder, PropertyGenerator, FieldSpec.Builder)} on\nall the bundled plugins",
    "Reference": "Calls {@link Plugin#beforeDeclareProperty(TypeSpec.Builder, PropertyGenerator, FieldSpec.Builder)} on\nall the bundled plugins",
    "HebCup": "Calls {@link Plugin#beforeDeclareProperty (TypeSpec.Builder , PropertyGenerator , FieldSpec.Builder)} on all the bundled plugins"
}
{
    "Origin": "Get Prepayment.",
    "Reference": "Get Vorauszahlung.",
    "HebCup": "Get Prepayment."
}
{
    "Origin": "Sets the value of the 'zk_Quorum' field",
    "Reference": "Sets the value of the 'zkQuorum' field.",
    "HebCup": "Sets the value of the 'zkQuorum' field"
}
{
    "Origin": "Sets a metadata property for the specified {@link NamespacedEntityId}.",
    "Reference": "Sets a metadata property for the specified {@link MetadataEntity}.",
    "HebCup": "Sets a metadata property for the specified {@link MetadataEntity}."
}
{
    "Origin": "Create a new builder for creating Retrofit implementations.",
    "Reference": "Create a new builder for creating Retrofit clients.",
    "HebCup": "Create a new client for creating Retrofit implementations."
}
{
    "Origin": "Takes a batch of tasks from the queue and processes them.",
    "Reference": "Takes a batch of worksets from the queue and processes them.",
    "HebCup": "Takes a batch of works from the queue and processes them."
}
{
    "Origin": "Amazon Redshift sources belonging to your AWS account.",
    "Reference": "Amazon SNS and subscribe to the topic.",
    "HebCup": "Amazon Redshift sources belonging to your AWS account."
}
{
    "Origin": "Sets the digest algorithm - currently only sha* and ripemd160 is supported.",
    "Reference": "Converts the digest algorithm - currently only sha* and ripemd160 is supported.",
    "HebCup": "Sets the digest algorithm - currently only sha* and ripemd160 is supported."
}
{
    "Origin": "At present this only tries to avoid adding a straight quote to a sentence when it doesn't plausibly\n go there and should go with the next sentence.",
    "Reference": "At present this only tries to avoid adding a straight single/double quote to a sentence when it doesn't plausibly\n go there and should go with the next sentence.",
    "HebCup": "At present this only tries to avoid adding a straight Str to a sentence when it doesn't plausibly go there and should go with the next sentence."
}
{
    "Origin": "Validate that the key is not reserved {@link MetadataDataset#TAGS_KEY}.",
    "Reference": "Validate that the key is not reserved {@link MetadataConstants#TAGS_KEY}.",
    "HebCup": "Validate that the key is not reserved {@link MetadataConstants#TAGS_KEY}."
}
{
    "Origin": "Remote start and stop for every test, or once for the entire test suite of tests.",
    "Reference": "Remote serverList and stopServersAfterTests for every test, or once for the entire test suite of tests.",
    "HebCup": "Remote start And Stop Servers For Each for every test, or once for the entire test suite of tests."
}
{
    "Origin": "Use\n{@link #processKeysWithExistingMapping(com.intellij.util.Processor)} to process only keys with existing mappings",
    "Reference": "Use\n{@link #processKeysWithExistingMapping(Processor)} to process only keys with existing mappings",
    "HebCup": "Use\n{@link #processKeysWithExistingMapping(com.intellij.util.Processor)} to process only keys with existing mappings"
}
{
    "Origin": "The persister for the {@link #getEntity entity}.",
    "Reference": "The descriptor for the {@link #getEntity entity}.",
    "HebCup": "The persister for the {@link #getEntity EntityType}."
}
{
    "Origin": "Decimal modulus\ninvolves at least one decimal operand and requires both operands to have\nexact numeric types.",
    "Reference": "Decimal modulus\ninvolves at least one decimal operand.",
    "HebCup": "Decimal modulus\ninvolves at least one decimal operand and requires both operands to have\nexact numeric types."
}
{
    "Origin": "Represent a zone with a fake email.",
    "Reference": "Represent a zone with a fake email and a TTL of 86400.",
    "HebCup": "Represent a zone with a fake email."
}
{
    "Origin": "Whether to group the REST resources together.",
    "Reference": "How to group the REST resources together.",
    "HebCup": "Whether to group the REST resources together."
}
{
    "Origin": "Create an instance of {@link JAXBElement }{@code <}{@link CTMarkupRange }{@code >}}",
    "Reference": "Create an instance of {@link JAXBElement }{@code <}{@link CTMoveFromRangeEnd }{@code >}}",
    "HebCup": "Create an instance of {@link JAXBElement} {@code <} {@link CTMoveFromRangeEnd} {@code >}}"
}
{
    "Origin": "Provider-Person-Names(that are not voided)",
    "Reference": "Creates or that matches the input name with Provider-Person-Names (not voided)",
    "HebCup": "and-Person-Names(that are not voided)"
}
{
    "Origin": "Retrieves the permission of the given type associated with the given\nuser, if it exists.",
    "Reference": "Retrieves whether the permission of the given type has been granted to\nthe given user.",
    "HebCup": "Retrieves the boolean of the given type associated with the given user , if it exists."
}
{
    "Origin": "Please delete the existing keypair first.",
    "Reference": "Please delete the existing key pair first.",
    "HebCup": "Please delete the existing keypair first."
}
{
    "Origin": "Returns a string representation of this object; useful for testing and debugging.",
    "Reference": "Returns a string representation of this object.",
    "HebCup": "Returns a string representation of this object; useful for testing and debugging."
}
{
    "Origin": "Returns the PatchOperation instance for the replace operation, based on\nthe operation path.",
    "Reference": "Returns the patch instance for the replace operation (based on the operation path).",
    "HebCup": "Returns the PatchOperation instance for the replace operation, based on\nthe operation path."
}
{
    "Origin": "Returns the SpecialDirectory object corresponding to the given file, creating\nit and its parents as needed.",
    "Reference": "Returns the SpecialDirectory object corresponding to the given directory, creating\nit and its parents as needed.",
    "HebCup": "Returns the SpecialDirectory object corresponding to the given directory , creating it and its parents as needed."
}
{
    "Origin": "Returns an immutable map containing keys and values extracted from the given entries.",
    "Reference": "Returns an unmodifiable map containing keys and values extracted from the given entries.",
    "HebCup": "Returns an Unmodifiable map containing keys and values extracted from the given entries."
}
{
    "Origin": "Create a LazyPersistentQueueX from a Stream",
    "Reference": "Create a LazyPQueueX from a Stream",
    "HebCup": "Create a LazyPQueueX from a Stream"
}
{
    "Origin": "There must be exactly one {@link BD#SEARCH}\npredicate.",
    "Reference": "There must be exactly one {@link FTS#SEARCH}\npredicate.",
    "HebCup": "There must be exactly one {@link BD#SEARCH}\npredicate."
}
{
    "Origin": "Load the given library with the specified {@link java.lang.ClassLoader}",
    "Reference": "Load the given library with the specified {@link ClassLoader}",
    "HebCup": "loader the given library with the specified {@link java.lang.ClassLoader}"
}
{
    "Origin": "Gets policy for resource set.",
    "Reference": "Delete policy for resource set.",
    "HebCup": "Gets policy for saved."
}
{
    "Origin": "No processing is performed on the filenames other than comparison.",
    "Reference": "No processing is performed on the fileNames other than comparison.",
    "HebCup": "No processing is performed on the filenames other than comparison."
}
{
    "Origin": "Create item cosmos sync item response.",
    "Reference": "Create a cosmos item synchronously.",
    "HebCup": "Create item cosmos sync item response."
}
{
    "Origin": "Waits until {@link WebElement} which defined by {@code element} does not contain the specified\n{@code expectedText}.",
    "Reference": "Waits until {@link WebElement} which defined by {@code element} does not contain the specified\n{@code absentText}.",
    "HebCup": "Waits until {@link WebElement} which defined by {@code element} does not contain the specified {@code absentText}."
}
{
    "Origin": "Sets the parameters.",
    "Reference": "Set the parameters.",
    "HebCup": "Sets the parameters."
}
{
    "Origin": "Also, appropriate directory permissions (777 + StickyBit, namely \"drwxrwxrwt\") are set.",
    "Reference": "Also, appropriate directory permissions (w/ StickyBit) are set.",
    "HebCup": "Also, appropriate directory permissions (777 + StickyBit, namely \"drwxrwxrwt\") are set."
}
{
    "Origin": "Obtain a {@link RemoteRepository} for the data set having the specified\nSPARQL end point.",
    "Reference": "Obtain a flyweight {@link RemoteRepository} for the data set having the specified\nSPARQL end point.",
    "HebCup": "Obtain a {@link RemoteRepository} for the data set having the specified\nSPARQL end point."
}
{
    "Origin": "Returns  if this {@link SerialDate} is within the\nspecified range (INCLUSIVE).",
    "Reference": "Returns {@code true} if this {@link SerialDate} is within the\nspecified range (INCLUSIVE).",
    "HebCup": "Returns  if this {@link SerialDate} is within the\nspecified range (INCLUSIVE)."
}
{
    "Origin": "Returns the serializeProperties indicator parsed from the annotation\nvalue.",
    "Reference": "Returns the serialize indicator parsed from the annotation value.",
    "HebCup": "Returns the SerializableProperties indicator parsed from the annotation value."
}
{
    "Origin": "If the headsign IS ALL CAPS, it will be converted to title case (Is All Caps), otherwise the\nreturned string will match the input.",
    "Reference": "If the displayText IS ALL CAPS and more than one word, it\nwill be converted to title case (Is All Caps), otherwise the returned string will match the\ninput.",
    "HebCup": "If the DisplayText IS ALL CAPS , it will be converted to title case (Is All Caps) , otherwise the returned string will match the input."
}
{
    "Origin": "Creates a ModuleReference to an exploded module.",
    "Reference": "Creates a ModuleReference to a possibly-patched exploded module.",
    "HebCup": "Creates a ModuleReference to an exploded module."
}
{
    "Origin": "Convert the attributes if necessary and add them to the profile.",
    "Reference": "Convert the profile and authentication attributes, if necessary, and add them to the profile.",
    "HebCup": "Convert the profileAttributes if necessary and add them to the profile."
}
{
    "Origin": "For not good inters (such 'weak' inters have already survived the first REDUCTION step)\nwe put them aside as optional glyphs that can take part of the symbols glyphs clustering and\nthus compete for valuable compounds.",
    "Reference": "For not good inters (some \"weak\" inters have already survived the first REDUCTION step)\nwe put them aside as optional glyphs that can take part of the symbols glyphs clustering and\nthus compete for valuable compounds.",
    "HebCup": "For not good inters (such 'weak' inters have already survived the first REDUCTION step)\nwe put them aside as optional glyphs that can take part of the symbols glyphs clustering and\nthus compete for valuable compounds."
}
{
    "Origin": "Returns the annotation mirror as specified by the \"qualifier\" element in {@code metaAnno},\nwith arguments taken from {@code argumentAnno}.",
    "Reference": "Returns the annotation mirror as specified by the \"qualifier\" element in {@code\ncontractAnno}, with arguments taken from {@code argumentAnno}.",
    "HebCup": "Returns the annotation mirror as specified by the ``qualifier`` element in {@code contractAnno} , with arguments taken from {@code argumentAnno}."
}
{
    "Origin": "Same as {@link #testModuleWithWorkQueue(KeyFactory, Optional)} but with default task store and\nkey factory.",
    "Reference": "Same as {@link #testModuleWithWorkQueue(KeyFactory)} but with default key factory.",
    "HebCup": "Same as {@link #testModuleWithWorkQueue(KeyFactory, Optional)} but with default task store and\nkey factory."
}
{
    "Origin": "Tests for {@link ContactEditorUtils#shouldShowAccountChangedNotification()}, starting with\n1 accounts.",
    "Reference": "Tests for\n{@link ContactEditorUtils#shouldShowAccountChangedNotification(List)},\nstarting with 1 accounts.",
    "HebCup": "Tests for {@link ContactEditorUtils#shouldShowAccountChangedNotification()}, starting with\n1 accounts."
}
{
    "Origin": "Returns the (unbiased) kurtosis of all the values within a {@link PointSet}\nregion of a {@link Dataset}",
    "Reference": "Returns the (biased) skew of all the values within a {@link PointSet}\nregion of a {@link Dataset}",
    "HebCup": "Returns the (unbiased) population of all the values within a {@link PointSet} region of a {@link Dataset}"
}
{
    "Origin": "Creates a list of {@link ComponentBuildingDefinition} built on copies of {@link #baseDefinitionBuilder}.",
    "Reference": "Creates a list of {@link ComponentBuildingDefinition} built on copies of {@link #definitionBuilder}.",
    "HebCup": "Creates a list of {@link ComponentBuildingDefinition} built on copies of {@link#definitionBuilder}."
}
{
    "Origin": "This method extracts a registered {@link BaseRelayForwarderRPC} from the\n{@link Dispatcher}.",
    "Reference": "This method extracts a registered {@link BaseRelayServer} from the\n{@link Dispatcher}.",
    "HebCup": "This method extracts a registered {@link BaseRelayServer} from the {@link Dispatcher}."
}
{
    "Origin": "Removes the specified properties of the {@link NamespacedEntityId}.",
    "Reference": "Removes the specified properties of the {@link MetadataEntity}.",
    "HebCup": "Removes the specified properties of the {@link MetadataEntity}."
}
{
    "Origin": "paste the swatch data",
    "Reference": "Paste the swatch data",
    "HebCup": "paste the swatch data"
}
{
    "Origin": "Note: No  will be instantiated by this method.",
    "Reference": "No  will be instantiated by this method.",
    "HebCup": "Note: No  will be instantiated by this method."
}
{
    "Origin": "Wraps an iterator as a stream.",
    "Reference": "Converts iterator to a stream.",
    "HebCup": "Wraps an iterator StreamSupport.a stream."
}
{
    "Origin": "The NoopNegotiator should be used to do IRCv3 negotiation but not set up\nanything at that moment.",
    "Reference": "The NoopNegotiator should be used to do IRCv3 negotiation (enabling IRCv3\nin the process) but not set up anything at that moment.",
    "HebCup": "The NoopNegotiator should be used to do IRCv3 negotiation but not set up\nanything at that moment."
}
{
    "Origin": "Adds an unqualified \"exports dynamic private\" directive to the declaration.",
    "Reference": "Adds an unqualified \"opens\" directive to the declaration.",
    "HebCup": "Adds an unqualified ``opens`` directive to the declaration."
}
{
    "Origin": "Find all matching tuples - a slot of NodeId.NodeIdAny (or null) means match any",
    "Reference": "Find all matching tuples - a slot of NodeId.NodeIdAny means match any",
    "HebCup": "Find all matching tuples - a slot of NodeId.NodeIdAny (or null) means match any"
}
{
    "Origin": "This is only\npossible if the {@link javax.script.ScriptEngine} implementation implements {@link javax.script.Compilable}.",
    "Reference": "This is only\npossible if the {@link javax.script.ScriptEngine} implementation implements {@link Compilable}.",
    "HebCup": "This is only possible if the {@link javax.(.(Engine} implementation implements {@link javax.(.Compilable}."
}
{
    "Origin": "Returns current {@link ISeedingStrategy}.",
    "Reference": "Returns current {@link SeedingStrategy}.",
    "HebCup": "Returns current {@link SeedingStrategy}."
}
{
    "Origin": "Trust all certificates and add them to the {@link #CLIENT_CERTS_LIST}.",
    "Reference": "Trust all certificates and add them to the {@link #clientCertsList}.",
    "HebCup": "Trust all certificates and add them to the {@link#clientCertsList}."
}
{
    "Origin": "Predict a sequence of steps output states for the given HMM model using the\ngiven seed for probabilistic experiments",
    "Reference": "Predict a sequence of steps output states for the given HMM model",
    "HebCup": "Predict a sequence of steps output states for the given HMM model using the given model for probabilistic experiments"
}
{
    "Origin": "Returns true if the class has the specified annotation class.",
    "Reference": "Returns true if the class has the specified annotation type.",
    "HebCup": "Returns true if the class has the specified annotation class."
}
{
    "Origin": "Returns the member logical timestamp.",
    "Reference": "Returns the member incarnation number.",
    "HebCup": "Returns the member logical timestamp."
}
{
    "Origin": "Creates a course and an instructor for it.",
    "Reference": "Creates a course and an associated instructor for the course.",
    "HebCup": "Creates a course and an instructor for it."
}
{
    "Origin": "The current thread might be already in any request scope\nand in that case the scope will be changed to the scope defined by the\n{@link RequestScope.Instance scope instance}.",
    "Reference": "The current thread might be already in any request scope\nand in that case the scope will be changed to the scope defined by the\n{@link RequestContext scope context}.",
    "HebCup": "The current thread might be already in any request scope and in that case the scope will be changed to the scope defined by the {@link RequestScope.Instance context}."
}
{
    "Origin": "Returns the sync d l objects before and after the current sync d l object in the ordered set where companyId = ?",
    "Reference": "Returns the sync d l objects before and after the current sync d l object in the ordered set where repositoryId = ?",
    "HebCup": "Returns the sync d l objects before and after the current sync d l object in the ordered set where companyId = ?"
}
{
    "Origin": "Binds the specified {@link Service} at the specified path pattern of the default {@link VirtualHost}.",
    "Reference": "Binds the specified {@link HttpService} at the specified path pattern of the default {@link VirtualHost}.",
    "HebCup": "Binds the specified {@link HttpService} at the specified path pattern of the default {@link VirtualHost}."
}
{
    "Origin": "Searches for a {@link SharedKeyCredential} in the passed {@link HttpPipeline}.",
    "Reference": "Searches for a {@link StorageSharedKeyCredential} in the passed {@link HttpPipeline}.",
    "HebCup": "Searches for a {@link StorageSharedKeyCredential} in the passed {@link HttpPipeline}."
}
{
    "Origin": "This function initializes the Facebook SDK, the behavior of Facebook SDK functions are\nundetermined if this function is not called.",
    "Reference": "The behavior of Facebook SDK functions are undetermined if this function is not called.",
    "HebCup": "This function initializes the Facebook SDK, the behavior of Facebook SDK functions are\nundetermined if this function is not called."
}
{
    "Origin": "{@codesnippet com.azure.data.applicationconfig.configurationclient.listSettingRevisions#settingSelector-context}",
    "Reference": "{@codesnippet com.azure.data.applicationconfig.configurationclient.listRevisions#settingSelector-context}",
    "HebCup": "{@codesnippet com.azure.data.applicationconfig.configurationclient.listRevisions#settingSelector-context}"
}
{
    "Origin": "Test that DocumentElement.add does not throw any exception when passing a null value.",
    "Reference": "Test that DocumentElement.addValue does not throw any exception when passing a null value.",
    "HebCup": "Test that DocumentElement.addValue does not throw any exception when passing a null value."
}
{
    "Origin": "The {@link AsyncCallback} to use when the execution of the action wrapped by this object is completed.",
    "Reference": "The callback to use when the execution of the action wrapped by this object is completed.",
    "HebCup": "The {@link C} to use when the execution of the action wrapped by this object is completed."
}
{
    "Origin": "Returns the correct {@link io.netty.channel.socket.ServerSocketChannel} class based on\n{@link ChannelType}.",
    "Reference": "Returns the correct {@link io.netty.channel.socket.ServerSocketChannel} class for use by the\nworker.",
    "HebCup": "Returns the correct {@link io.netty.channel.socket.ServerSocketChannel} class based on {@link ChannelWORKER_CHANNEL_TYPE}."
}
{
    "Origin": "A return type signature represents the return value from a method.",
    "Reference": "A returntype signature represents the return value from a method.",
    "HebCup": "A return type String represents the return value from a method."
}
{
    "Origin": "or throws a {@link com.liferay.knowledgebase.NoSuchFolderException} if it could not be found.",
    "Reference": "or throws a {@link NoSuchFolderException} if it could not be found.",
    "HebCup": "or throws a {@link com.liferay.knowledgebase.NoSuchFolderException} if it could not be found."
}
{
    "Origin": "This property is not returned if the dialog node has no previous\nsibling.",
    "Reference": "This property is omitted if the dialog node has no previous sibling.",
    "HebCup": "This property is not returned if the dialog node has no previous sibling."
}
{
    "Origin": "Run the standalone ZooKeeper process and the job.",
    "Reference": "Run the ZooKeeper in-process and the job.",
    "HebCup": "Run the standalone ZooKeeper process and the job."
}
{
    "Origin": "Tests that Grindstone mills all cards to graveyard while Painter's Servant is in play",
    "Reference": "Tests that Grindstone mills all cards to graveyard while Painter's",
    "HebCup": "Tests that Grindstone mills all cards to graveyard while Painter's Servant is in play"
}
{
    "Origin": "Removes all properties for the specified {@link NamespacedEntityId}.",
    "Reference": "Removes all properties for the specified {@link MetadataEntity}.",
    "HebCup": "Removes all properties for the specified {@link MetadataEntity}."
}
{
    "Origin": "Enables full-control mode in an organization.",
    "Reference": "Enables all features in an organization.",
    "HebCup": "Enables All-control mode in an organization."
}
{
    "Origin": "Returns a string representation of this object; useful for testing and debugging.",
    "Reference": "Returns a string representation of this object.",
    "HebCup": "Returns a string representation of this object; useful for testing and debugging."
}
{
    "Origin": "Returns a string representation of this object; useful for testing and debugging.",
    "Reference": "Returns a string representation of this object.",
    "HebCup": "Returns a string representation of this object; useful for testing and debugging."
}
{
    "Origin": "Check the duration as computed in this measure from its contained voices,\ncompared to its theoretical duration.",
    "Reference": "Check the duration as computed in this stack from its contained voices,\ncompared to its theoretical duration.",
    "HebCup": "Check the duration as computed in this measure from its contained voices,\ncompared to its theoretical duration."
}
{
    "Origin": "Set Nominalmenge in Preiseinheit.",
    "Reference": "Set Abzurechnen.",
    "HebCup": "Set Nominalmenge in Preiseinheit."
}
{
    "Origin": "Adds a filter query.",
    "Reference": "Creates and adds a filter query.",
    "HebCup": "Adds a filter query."
}
{
    "Origin": "Creates a valid {@link Aggregate} operation.",
    "Reference": "Creates a valid {@link AggregateTableOperation} operation.",
    "HebCup": "Creates a valid {@link AggregateTableOperation} operation."
}
{
    "Origin": "Returns true if the given instruction belongs to this list.",
    "Reference": "Returns {@literal true} if the given instruction belongs to this list.",
    "HebCup": "Returns true if the given instruction belongs to this list."
}
{
    "Origin": "Whether this codec is capable of encoding the given Java type.",
    "Reference": "Whether this codec is capable of processing the given Java type.",
    "HebCup": "Whether this codec is capable of encoding the given Java type."
}
{
    "Origin": "This will return the {@link Key key} with key material\nincluded of its latest version.",
    "Reference": "This will return the {@link KeyVaultKey key} with key material\nincluded of its latest version.",
    "HebCup": "This will return the {@link Propertie key} with key material included of its latest version."
}
{
    "Origin": "This method should be called\nbefore reusing same instructions list between several\ns.",
    "Reference": "This method should be called before reusing an\ninstruction list between several s.",
    "HebCup": "This method should be called\nbefore reusing same instructions list between several\ns."
}
{
    "Origin": "Gets whether the user can sort this column or not.",
    "Reference": "Gets whether sorting is enabled for this column.",
    "HebCup": "Gets whether the user can sort this column or not."
}
{
    "Origin": "The returned language supplier\nis intended to be cached in the currently adopted AST.",
    "Reference": "The returned language\nreference is intended to be cached in the currently adopted AST.",
    "HebCup": "The returned Language Reference is intended to be cached in the currently adopted AST."
}
{
    "Origin": "Amalgamate all post-construct callbacks and return a read only list",
    "Reference": "Amalgamate all post-construct callbacks and return a read only set",
    "HebCup": "Amalgamate all post-construct callbacks and return a read only Set"
}
{
    "Origin": "Returns the folder with the primary key or throws a {@link com.liferay.mail.NoSuchFolderException} if it could not be found.",
    "Reference": "Returns the folder with the primary key or throws a {@link NoSuchFolderException} if it could not be found.",
    "HebCup": "Returns the folder with the primary key or throws a {@link com.liferay.mail.NoSuchFolderException} if it could not be found."
}
{
    "Origin": "Computes the coverage percentage for a given metric, over a subset of the available source files.",
    "Reference": "Computes the coverage percentage over a subset of the available source files.",
    "HebCup": "Computes the file percentage for a given metric , over a subset of the available source files."
}
{
    "Origin": "Maps all index descriptors according to {@link #indexReference(IndexDescriptor)}.",
    "Reference": "Maps all index descriptors according to {@link #indexReference(IndexDescriptor2)}.",
    "HebCup": "Maps all index descriptors according to {@link#IndexDescriptor2 (IndexDescriptor)}."
}
{
    "Origin": "Use the endorsed standards override mechanism to load JAX-WS VERSION API",
    "Reference": "Use the standard override mechanism to load JAX-WS VERSION or newer API.",
    "HebCup": "Use the endorsed standards override mechanism to load JAX-WS VERSION API"
}
{
    "Origin": "If more than one private key is present, the\nkey that is returned is undefined.",
    "Reference": "If more than one eligible private key entry is present, which key will be\nreturned is undefined.",
    "HebCup": "If more than one Apns Private Key is present, the key that is returned is undefined."
}
{
    "Origin": "Return the resource mappings, either manually configured or auto-detected\nwhen the Spring {@code ApplicationContext} is refreshed.",
    "Reference": "Return a read-only view of the resource handler mappings either manually\nconfigured or auto-detected when the Spring {@code ApplicationContext}\nis refreshed.",
    "HebCup": "Return the resource mappings, either manually configured or auto-detected\nwhen the Spring {@code ApplicationContext} is refreshed."
}
{
    "Origin": "Return true if the given attribute name is the name of a pre-defined\nattribute that is not allowed in the class file.",
    "Reference": "Return true if the given attribute name is the name of a pre-defined\nattribute in JVMS VERSION that is not allowed in a module-info class.",
    "HebCup": "Return true if the given attribute name is the name of a pre-defined\nattribute that is not allowed in the class file."
}
{
    "Origin": "For integration testing allows to prime the environment via provided configuration.",
    "Reference": "For integration testing allows to prime the environment via provided parameters.",
    "HebCup": "For integration testing allows to prime the environment via provided Type."
}
{
    "Origin": "Returns the last asset entry set in the ordered set where createTime = ?",
    "Reference": "Returns the first asset entry set in the ordered set where createTime > ?",
    "HebCup": "Returns the First asset entry set in the ordered set where createTime = ?"
}
{
    "Origin": "Get an enumeration of the keys of the JSONObject.",
    "Reference": "Get a set of keys of the JSONObject.",
    "HebCup": "Get an enumeration of the keys of the JSONObject."
}
{
    "Origin": "Sets the configuration resolver for the SAML filter chain.",
    "Reference": "Sets the registration resolver for the SAML filter chain.",
    "HebCup": "Sets the registration Resolver for the SAML filter chain."
}
{
    "Origin": "Integers 0 ... n.",
    "Reference": "Integers 0 ... n - 1.",
    "HebCup": "Integers 0 ... n."
}
{
    "Origin": "Try to find a {@link ConstructorDeclaration} by its parameters types.",
    "Reference": "Try to find a {@link ConstructorDeclaration} by its parameter types.",
    "HebCup": "Try to find a {@link ConstructorDeclaration} by its parameters types."
}
{
    "Origin": "Test the case with Blob_Not_Found errors from most servers, and Blob_Deleted at just one server.",
    "Reference": "Test the case with Blob_Not_Found errors from most servers, and Blob_Deleted, Blob_Expired or",
    "HebCup": "Test the case With_Not_Found errors from most servers, and Blob_Deleted at just one server."
}
{
    "Origin": "NameSpaceSymbTable)},\nwhereas it takes into account that subtree-c14n is -- well -- subtree-based.",
    "Reference": "NameSpaceSymbTable, Map)},\nwhereas it takes into account that subtree-c14n is -- well -- subtree-based.",
    "HebCup": "NameSpaceSymbTable)},\nwhereas it takes into account that subtree-c14n is -- well -- subtree-based."
}
{
    "Origin": "Returns the node representing the element type of the array.",
    "Reference": "Returns the node representing the array type being instantiated.",
    "HebCup": "Returns the node representing the Type of the array."
}
{
    "Origin": "Computes the price of a Domestic Cash Digital option using the call spread approximation",
    "Reference": "Computes the future price of a Domestic Cash Digital option using the call spread approximation",
    "HebCup": "Computes the price of a Domestic Cash Digital option using the call spread approximation"
}
{
    "Origin": "Created a new {@link RxInstrumenter}.",
    "Reference": "Created a new {@link InvocationInstrumenter}.",
    "HebCup": "Created a new {@link InvocationInstrumenter}."
}
{
    "Origin": "Called when GUI design has changed.",
    "Reference": "Called when the GUI design has changed.",
    "HebCup": "Called when GUI design has changed."
}
{
    "Origin": "Test for {@link ArrayBuilder#append(Array)}.",
    "Reference": "Test for {@link ArrayBuilder#append(XQArray)}.",
    "HebCup": "Test for {@link XQArrayBuilder#append(XQArray)}."
}
{
    "Origin": "Sets the current end icon to be VISIBLE or INVISIBLE.",
    "Reference": "Sets the current end icon to be VISIBLE or GONE.",
    "HebCup": "Sets the current end icon to be VISIBLE or GONE."
}
{
    "Origin": "Build mongo template mongo template.",
    "Reference": "Build mongo template.",
    "HebCup": "Client Uri Mongo template mongo template."
}
{
    "Origin": "Determines whether a room is created for each user that is created by automatic import (like a home folder).",
    "Reference": "DEPRECATED, will be ignored Determines whether a room is created for each user that is created by automatic import (like a home folder).",
    "HebCup": "Determines whether a room is created for each user that is created by automatic import (like a home folder)."
}
{
    "Origin": "Creates a ModuleReference to a module packaged as a JMOD.",
    "Reference": "Creates a ModuleReference to a module in a JMOD file.",
    "HebCup": "Creates a ModuleReference to a module packaged as a JMOD."
}
{
    "Origin": "Returns the response object with list of dhcp servers without counters.",
    "Reference": "Returns results with aggregate of counters.",
    "HebCup": "Returns the response object with list of Dhcp Relay Agg Counters without counters."
}
{
    "Origin": "Search for Visual Studio link.exe Search Order is: VS2013, VS2015, VS2012.",
    "Reference": "Search for Visual Studio link.exe Search Order is: VS2017+, VS2013, VS2015, VS2012.",
    "HebCup": "Search for Visual Studio link.exe Search Order is: VS2013, VS2015, VS2012."
}
{
    "Origin": "Generates a code sample for using {@link ShareDirectoryClient#createSubDirectory(String)}",
    "Reference": "Generates a code sample for using {@link ShareDirectoryClient#createSubdirectory(String)}",
    "HebCup": "Generates a code sample for using {@link ShareDirectoryClient#createSubdirectory (String)}"
}
{
    "Origin": "In that case\nthe ISO code of the preferred language in the UMS settings is returned.",
    "Reference": "In that\ncase the ISO 639 code of the preferred language in the UMS settings is\nreturned.",
    "HebCup": "In that case\nthe ISO code of the preferred language in the UMS settings is returned."
}
{
    "Origin": "The\ngiven {@link FirmwareUID} represents the UID of the latest updatable firmware for the thing.",
    "Reference": "The\ngiven firmware version represents the version of the latest updatable firmware for the thing.",
    "HebCup": "The given {@link String} represents the UID of the latest updatable firmware for the thing."
}
{
    "Origin": "Waits until the System.currentTimeMillis() results has changed.",
    "Reference": "Waits until System.currentTimeMillis() has flipped to the next second.",
    "HebCup": "Waits until the System.currentTimeMillis() results has changed."
}
{
    "Origin": "Add a server to the known list of servers.",
    "Reference": "Add a server to the known list of servers to blacklist.",
    "HebCup": "Add a server to the known list of servers."
}
{
    "Origin": "Returns size of the allocated memory used to store pixels of this object.",
    "Reference": "Returns size of the memory needed to store pixels of this object.",
    "HebCup": "Returns size of the allocated memory used to store pixels of this object."
}
{
    "Origin": "Deletes the specified variable from the configuration.",
    "Reference": "Deletes the specified variable from the CONFIGURATION.",
    "HebCup": "Deletes the specified variable from the CONFIGURATION."
}
{
    "Origin": "Invoked when the future is completed, it must cleanup all task related to this collector.",
    "Reference": "Invoked when the collector's future is completed, it must cleanup all task related to this collector.",
    "HebCup": "Invoked when the future is completed, it must cleanup all task related to this collector."
}
{
    "Origin": "Sets the identifier of the transaction.",
    "Reference": "Sets the identifier of the command.",
    "HebCup": "Sets the identifier of the transaction."
}
{
    "Origin": "If the requested index is greater than the current size, the list will\ngrow to the new size and a new object will be returned from the factory.",
    "Reference": "If the requested index is greater than the current size, the list will\ngrow to the new size and a new object will be returned from the factory\nor transformer.",
    "HebCup": "If the requested index is greater than the current size, the list will\ngrow to the new size and a new object will be returned from the factory."
}
{
    "Origin": "Main method to invoke this demo about how to detect language of a text input.",
    "Reference": "Main method to invoke this demo about how to detect the language of an input text.",
    "HebCup": "Main method to invoke this demo about how to detect language of a text input."
}
{
    "Origin": "Check whether the {@link Class} declares a {@literal copy} method or {@literal copy} method with parameter\ndefaulting.",
    "Reference": "Check whether the owning type of {@link PersistentProperty} declares a {@literal copy} method or {@literal copy}\nmethod with parameter defaulting.",
    "HebCup": "Check whether the {@link Class} declares a {@literal copy} method or {@literal copy} method with parameter\ndefaulting."
}
{
    "Origin": "During the prefetch, a session should not hold audio focus in order to allow\nother sessions play seamlessly.",
    "Reference": "During the prepare, a session should not hold audio focus in order to allow\nother sessions play seamlessly.",
    "HebCup": "During the Prepare , a session should not hold audio focus in order to allow other sessions play seamlessly."
}
{
    "Origin": "Returns a string representation of this object; useful for testing and debugging.",
    "Reference": "Returns a string representation of this object.",
    "HebCup": "Returns a string representation of this object; useful for testing and debugging."
}
{
    "Origin": "Note that this rule will be inserted in VNI table (table 0).",
    "Reference": "Note that this rule will be inserted in vTag table.",
    "HebCup": "Note that this rule will be inserted in VNI table (table 0)."
}
{
    "Origin": "Clears all the mount points.",
    "Reference": "Clears all the mount points except the root.",
    "HebCup": "Clears all the mount points."
}
{
    "Origin": "Code snippets for {@link BlobClientBase#setHTTPHeaders(BlobHttpHeaders)}",
    "Reference": "Code snippets for {@link BlobClientBase#setHttpHeaders(BlobHttpHeaders)}",
    "HebCup": "Code snippets for {@link BlobClientBase#setHttpHeaders (BlobHttpHeaders)}"
}
{
    "Origin": "Returns a string representation of this object; useful for testing and debugging.",
    "Reference": "Returns a string representation of this object.",
    "HebCup": "Returns a string representation of this object; useful for testing and debugging."
}
{
    "Origin": "This merges the two objects - {@code this} and the specified time -\nto form an instance of {@code OffsetDateTime}.",
    "Reference": "This merges the two objects - {@code this} and the specified time -\nto form an instance of {@code ZonedDateTime}.",
    "HebCup": "This merges the two objects - {@code this} and the specified time - to form an instance of {@code ZonedDateTime}."
}
{
    "Origin": "Since the rule to be excluded doesn't exist, there should\nbe warning about that as well.",
    "Reference": "Since the rule to be excluded doesn't exist, there should be a warning about that.",
    "HebCup": "Since the rule to be excluded doesn't exist, there should\nbe warning about that as well."
}
{
    "Origin": "Returns the number of sync d l objects where parentFolderId = ?.",
    "Reference": "Returns the number of sync d l objects where modifiedTime > ?",
    "HebCup": "Returns the number of sync d l objects where repositoryId = ?."
}
{
    "Origin": "Returns URI of image which is loading at this moment into passed {@link ImageView}",
    "Reference": "Returns URI of image which is loading at this moment into passed\n{@link android.widget.ImageView ImageView}",
    "HebCup": "Returns URI of image which is loading at this moment into passed {@link ImageView}"
}
{
    "Origin": "Code snippets for {@link BlobClient#setHTTPHeaders(BlobHttpHeaders)}",
    "Reference": "Code snippets for {@link BlobClient#setHttpHeaders(BlobHttpHeaders)}",
    "HebCup": "Code snippets for {@link BlobClient#setHttpHeaders (BlobHttpHeaders)}"
}
{
    "Origin": "See Immutable Map Static Factory Methods for details.",
    "Reference": "See Unmodifiable Maps for details.",
    "HebCup": "See Unmodifiable Map Static Factory Methods for details."
}
{
    "Origin": "Returns the class name local service.",
    "Reference": "Returns the journal article local service.",
    "HebCup": "Returns the journal Article Local Service."
}
{
    "Origin": "Replace the current expression with a given multi-expression and mark the\nmethod as modified.",
    "Reference": "Replace the current expression with a given replacement and mark the\nmethod as modified.",
    "HebCup": "Replace the current expression MeAndRecord a given multi-expression and mark the method as modified."
}
{
    "Origin": "Check that we boot successfully when the Elasticsearch dialect is configured explicitly,\nand that the Elasticsearch client starts in the second phase of bootstrap in that case.",
    "Reference": "Check that we boot successfully when the Elasticsearch version is configured explicitly,\nand that the Elasticsearch client starts in the second phase of bootstrap in that case.",
    "HebCup": "Check that we boot successfully when the Elasticsearch VERSION is configured explicitly , and that the Elasticsearch client starts in the second phase of bootstrap in that case."
}
{
    "Origin": "Usefull when  you know, that there should be js val or something at the stage",
    "Reference": "Useful whenyou know that there should be a Javascript value or something at the stage.",
    "HebCup": "Usefull when  you know, that there should be js val or something at the stage"
}
{
    "Origin": "Finds all {@link UnderFileSystemFactory} from the lib directory and caches.",
    "Reference": "Finds all {@link UnderFileSystemFactory} from the lib directory.",
    "HebCup": "Finds all {@link UnderFileSystemFactory} from the lib directory and caches."
}
{
    "Origin": "Return a {@link CollectionStatePredicate} that returns true if a collection has the expected\nnumber of active shards and active replicas",
    "Reference": "Return a {@link CollectionStatePredicate} that returns true if a collection has the expected\nnumber of shards and active replicas",
    "HebCup": "Return a {@link CollectionStatePredicate} that returns true if a collection has the expected\nnumber of active shards and active replicas"
}
{
    "Origin": "Return that one\nRDFNode or null Throw exception if more than one.",
    "Reference": "Return that one\nRDFNode or null.",
    "HebCup": "Return that AtMostOne RDFNode or null Throw exception if more than one."
}
{
    "Origin": "Get name of the Cosmos DB MongoDB database.",
    "Reference": "Get the resource value.",
    "HebCup": "Get name of the Cosmos DB resource database."
}
{
    "Origin": "Test of var method, of class NegativeBinomialDistribution.",
    "Reference": "Test of variance method, of class NegativeBinomialDistribution.",
    "HebCup": "Test of Variance method , of class NegativeBinomialDistribution."
}
{
    "Origin": "This can be trained with\n{@link ClauseSplitter#train(Stream, Optional, Optional, Featurizer)}.",
    "Reference": "This can be trained with\n{@link ClauseSplitter#train(Stream, Featurizer, TrainingOptions, Optional, Optional)}.",
    "HebCup": "This can be trained with\n{@link ClauseSplitter#train(Stream, Optional, Optional, Featurizer)}."
}
{
    "Origin": "Thus 31st January plusWrapField one day goes to the 1st January.",
    "Reference": "Thus 31st January addWrapField one day goes to the 1st January.",
    "HebCup": "Thus 31st January addWrapFieldToCopy one day goes to the 1st January."
}
{
    "Origin": "Creates query for the given queryString.",
    "Reference": "Queries this search source for the given queryString.",
    "HebCup": "Creates Source for the given queryString."
}
{
    "Origin": "The subscription will only send notifications for those ERROR\nevents in the Availability and Backup categories for the specified\nclusters.",
    "Reference": "The\nsubscription will only send notifications for those ERROR events in the",
    "HebCup": "The subscription will only send notifications for those ERROR\nevents in the Availability and Backup categories for the specified\nclusters."
}
{
    "Origin": "A query parameter\nis defined by using the Expression's parameter(_ name: String) function.",
    "Reference": "A query parameter\nis defined by using the Expression's parameter(String name) function.",
    "HebCup": "A query parameter\nis defined by using the Expression's parameter(_ name: String) function."
}
{
    "Origin": "Calculates Maximum - Nulls are handled as zeros.",
    "Reference": "Calculates Maximum - Nulls are ignored.",
    "HebCup": "Calculates Maximum - Nulls are handled as zeros."
}
{
    "Origin": "Upsampling size",
    "Reference": "Upsampling size int",
    "HebCup": "Upsampling size"
}
{
    "Origin": "Sets the jdbc driver class name.",
    "Reference": "Sets the JDBC driver class name.",
    "HebCup": "Sets the jdbc driver class name."
}
{
    "Origin": "All foldable conditions that fold to FALSE should have\nbeen removed by the {@link Optimizer}.",
    "Reference": "All foldable conditions that fold to FALSE should have\nbeen removed by the {@link Optimizer}#SimplifyCase.",
    "HebCup": "All foldable conditions.get that fold to FALSE should have been removed by the {@link Optimizer}."
}
{
    "Origin": "Return the failed hash so the client can correlate replies with requests",
    "Reference": "Return the request ID or failed hash so the client can correlate replies with requests",
    "HebCup": "Return the failed hash so the client can correlate replies with requests"
}
{
    "Origin": "Run ERiC with fixed parameters and compare the result to a golden standard.",
    "Reference": "Run LMCLUS with fixed parameters and compare the result to a golden standard.",
    "HebCup": "Run ERiC with fixed parameters and compare the result to a golden standard."
}
{
    "Origin": "Creates the full tree of nodes for the provided files/symlinks and returns the root node.",
    "Reference": "Creates the full tree of nodes for the provided files, symlinks and empty directories and\nreturns the root node.",
    "HebCup": "Creates the full tree of nodes for the provided files/symlinks and returns the root Type."
}
{
    "Origin": "This allows additional information to be attached to the trade.",
    "Reference": "This allows additional information to be attached.",
    "HebCup": "This allows additional information to be attached to the PortfolioItem."
}
{
    "Origin": "Test of npara method, of class WeibullDistribution.",
    "Reference": "Test of length method, of class WeibullDistribution.",
    "HebCup": "Test of Length method , of class WeibullDistribution."
}
{
    "Origin": "Updates the account.",
    "Reference": "Replaces the account.",
    "HebCup": "replace the account."
}
{
    "Origin": "Group: consumer",
    "Reference": "Group: producer",
    "HebCup": "Group: consumer"
}
{
    "Origin": "Prepare a pooled {@link HttpClient}.",
    "Reference": "Prepare an {@link HttpClient}.",
    "HebCup": "Prepare a pooled {@link HttpClient}."
}
{
    "Origin": "Test affinity awareness partition distributions cache size property with semicolon.",
    "Reference": "Test Partition Awareness partition distributions cache size property with semicolon.",
    "HebCup": "test Partition Awareness Partition Distributions Cache Size Property with semicolon."
}
{
    "Origin": "Creates a histogram of the given arguments",
    "Reference": "Creates a count of the given arguments",
    "HebCup": "Creates a histogram of the given arguments"
}
{
    "Origin": "R is a rotation transformation specified by the quaternion (qx, qy, qz, qw).",
    "Reference": "R is a rotation - and possibly scaling - transformation specified by the quaternion (qx, qy, qz, qw).",
    "HebCup": "R is a rotation transformation specified by the quaternion (qw, qy, qz, qw)."
}
{
    "Origin": "Note that this performs chains\nconstruction but wil not inject {@link MuleContext} or {@link FlowConstruct} or perform any lifecycle.",
    "Reference": "Note that this performs\nchains construction but wil not inject {@link MuleContext} or perform any lifecycle.",
    "HebCup": "Note that this performs chains\nconstruction but wil not inject {@link MuleContext} or {@link FlowConstruct} or perform any lifecycle."
}
{
    "Origin": "Basically, this method runs the following instructions:",
    "Reference": "This method run the following instructions:",
    "HebCup": "Basically, this method runs the following instructions:"
}
{
    "Origin": "For a list of the event categories and\nsource types, go to",
    "Reference": "For a list of the event categories and source\ntypes, go to Amazon Redshift Event Notifications.",
    "HebCup": "For a list of the event categories and\nsource types, go to"
}
{
    "Origin": "Creates an URI based on the RedisURI.",
    "Reference": "Creates an URI based on the RedisURI if possible.",
    "HebCup": "Creates an URI based on the RedisURI."
}
{
    "Origin": "[A6] If the new lookup class is not accessible to the old lookup class,\nusing the original access modes,\nthen no members, not even public members, will be accessible.",
    "Reference": "[A8] If the new lookup class is not accessible to the old lookup class,\nthen no members, not even public members, will be accessible.",
    "HebCup": "[A6] If the new lookup class is not accessible to the old lookup class,\nusing the original access modes,\nthen no members, not even public members, will be accessible."
}
{
    "Origin": "If {@link #IGNORE_OVERFLOW} is true and one of the bounds is outside the Integer range,\nthen that bound is set to the bound of the Integer range.",
    "Reference": "If {@link #ignoreOverflow} is true and one of the bounds is outside the Integer range,\nthen that bound is set to the bound of the Integer range.",
    "HebCup": "If {@link#ignoreOverflow} is true and one of the bounds is outside the Integer range , then that bound is set to the bound of the Integer range."
}
{
    "Origin": "Returns a string representation of this object; useful for testing and debugging.",
    "Reference": "Returns a string representation of this object.",
    "HebCup": "Returns a string representation of this object; useful for testing and debugging."
}
{
    "Origin": "Initializes a new instance id for the given container element.",
    "Reference": "Adjusts formatter settings and initializes a new instance id for the given container element.",
    "HebCup": "Initializes a Settings instance id for the given container element."
}
{
    "Origin": "This method will retrieve one ExternalSourceEntryResource based on the ExternalSource for the given",
    "Reference": "This method will retrieve one ExternalSourceEntryResource based on the ExternalSource for the given\nexternalSourceName and with the given entryId",
    "HebCup": "This method will retrieve one ExternalSourceEntryResource based on the ExternalSource for the given"
}
{
    "Origin": "NOTE:You cannot authorize ingress from an Amazon EC2 security\ngroup in one region to an ElastiCache cluster in another region.",
    "Reference": "You cannot authorize ingress from an Amazon EC2 security group in\none region to an ElastiCache cluster in another region.",
    "HebCup": "NOTE:You cannot authorize ingress from an Amazon EC2 security\ngroup in one region to an ElastiCache cluster in another region."
}
{
    "Origin": "Returns true if field execTime is set (has been assigned a value) and false otherwise",
    "Reference": "Returns true if field limit is set (has been assigned a value) and false otherwise",
    "HebCup": "Returns true if field Limit is set (has been assigned a value) and false otherwise"
}
{
    "Origin": "Gets dockerfile file name of this github url",
    "Reference": "Gets devfile file name of this github url",
    "HebCup": "Gets Devfile file name of this github url"
}
{
    "Origin": "Overrides the state changed to determine if the state is new or changed and then\nto call the {@link #_wrappedCallback} if it has",
    "Reference": "Overrides the state changed to determine if the state is new or changed and then\nto call the {@link #wrappedCallback} if it has",
    "HebCup": "Overrides the state changed to determine if the state is new or changed and then to call the {@link#wrappedCallback} if it has"
}
{
    "Origin": "Returns a suitable content for the argument file given to dx with --main-dex-list.",
    "Reference": "This can be passed to dx as a file with --main-dex-list.",
    "HebCup": "Returns a suitable content for the argument file given Set dx with --main-dex-list."
}
{
    "Origin": "Resolves a collection of root modules, with service binding, to create\nconfiguration.",
    "Reference": "Resolves a collection of root modules, with service binding, to create\na Configuration for the boot layer.",
    "HebCup": "Resolves a collection of root modules, with service binding, to create Modules."
}
{
    "Origin": "If any\noffset in this is a less than or equal to an offset in other, then that offset is an\noffset for the array in lub.",
    "Reference": "If any\noffset in this is a less than or equal to an offset in other, then that offset is an\noffset for the sequence in lub.",
    "HebCup": "If any offset in this is a less than or equal to an offset in other , then that offset is an offset for the sequence in lub."
}
{
    "Origin": "Add Tapi Topology to Dcs store.",
    "Reference": "Add Tapi TopologyContext and Topology to Dcs store.",
    "HebCup": "Add Tapi Topology to Dcs store."
}
{
    "Origin": "Scenario:\n  - CA inherited trust\n  - gateway trusts service via CA\n  - service trusts gateway via CA",
    "Reference": "Scenario:\n  - CA inherited trust\n  - gateway trusts API via CA\n  - API trusts gateway via CA",
    "HebCup": "Scenario: - CA inherited trust - gateway trusts Api via CA - Api trusts gateway via CA"
}
{
    "Origin": "Updates a module's structure when the user selects a build variant from the tool window.",
    "Reference": "Updates a module's structure when the user selects a build variant or ABI.",
    "HebCup": "Updates a module's structure when the user selects a build variant from the tool window."
}
{
    "Origin": "The default\n implementation returns {@link AttributeFactory#DEFAULT_ATTRIBUTE_FACTORY}.",
    "Reference": "The default\n implementation returns {@link TokenStream#DEFAULT_TOKEN_ATTRIBUTE_FACTORY}.",
    "HebCup": "The default implementation returns {@link TokenStream#DEFAULT_ATTRIBUTE_FACTORY}."
}
{
    "Origin": "Adds one more acceptable indentation level.",
    "Reference": "Adds one or more acceptable indentation level.",
    "HebCup": "Adds one more acceptable indentation result.levels."
}
{
    "Origin": "This method generates the set of error parameters from an {@link BaseEvent} to use on the error response function.",
    "Reference": "This method generates the set of error parameters from an {@link CoreEvent} to use on the error response function.",
    "HebCup": "This method generates the set of error parameters from an {@link CoreEvent} to use on the error response function."
}
{
    "Origin": "Time (in ms) of last received appendPosition.",
    "Reference": "Time (in ns) of last received appendPosition.",
    "HebCup": "Time (in Ns) of last received appendPosition."
}
{
    "Origin": "{@codesnippet com.azure.security.keyvault.certificates.CertificateClient.getIssuer#issuerProperties}",
    "Reference": "{@codesnippet com.azure.security.keyvault.certificates.CertificateClient.listPropertiesOfIssuers}",
    "HebCup": "{@codesnippet com.azure.security.keyvault.certificates.CertificateClient.listPropertiesOfIssuers#issuerProperties}"
}
{
    "Origin": "Create a {@link InstanceManager}.",
    "Reference": "Create a {@link InjectionManager}.",
    "HebCup": "Create a {@link InjectionManager}."
}
{
    "Origin": "Wraps the given object if necessary.",
    "Reference": "Wrap an object, if necessary.",
    "HebCup": "Wraps the given object objectPackage necessary."
}
{
    "Origin": "Creates a new {@link FileIOChannel.ID} in one of the temp directories.",
    "Reference": "Creates a new {@link ID} in one of the temp directories.",
    "HebCup": "Creates a new {@link ID} in one of the temp directories."
}
{
    "Origin": "Returns an InputRowPlusRaw object containing the InputRow plus the raw, unparsed data corresponding to the next row\navailable.",
    "Reference": "Returns an {@link InputRowListPlusRawValues} object containing the InputRow plus the raw, unparsed data corresponding to\nthe next row available.",
    "HebCup": "Returns an InputRowPlusRaw object containing the InputRow PlusRaw the raw , unparsed data corresponding to the next row available."
}
{
    "Origin": "Obtains an instance from the specified unique name.",
    "Reference": "Obtains an instance from the specified name.",
    "HebCup": "Obtains an instance from the specified name."
}
{
    "Origin": "Fetches the configuration settings that match the {@code options}.",
    "Reference": "Fetches the configuration settings that match the {@code selector}.",
    "HebCup": "Fetches the configuration ConfigurationSettings that match the {@code options}."
}
{
    "Origin": "Same as {@link #isAnyPipelineConfigSet()}, but blocks execution.",
    "Reference": "Same as {@link #isAnyPipelineConfigSet(long)}, but blocks execution.",
    "HebCup": "Same as {@link #isAnyPipelineConfigSet()}, but blocks execution."
}
{
    "Origin": "Setting the timeline is\nnot allowed after a call to {@link #setMediaSource(MediaSource)}.",
    "Reference": "Setting the timeline is\nnot allowed after a call to {@link #setMediaSources(MediaSource...)}.",
    "HebCup": "Setting the timeline is not allowed after a call to {@link #setmediaSources(mediaSources)}."
}
{
    "Origin": "Returns the tree for an annotation given an Attribute to\nsearch (recursively) and its corresponding tree.",
    "Reference": "Returns the tree for an attribute given an enclosing attribute to\nsearch (recursively) and the enclosing attribute's corresponding tree.",
    "HebCup": "Returns the tree for an annotation given an Attribute to search matchrecursively) and its corresponding tree."
}
{
    "Origin": "Encode a PI action group to a action profile group.",
    "Reference": "Encode a PI action profile group to a action profile group.",
    "HebCup": "Encode a Pi Action Profile Group to a action profile group."
}
{
    "Origin": "Deserializes the data as an object of the  type.",
    "Reference": "Deserializes the data as an object of the  type using the given\n instance.",
    "HebCup": "Deserializes the data as an object of the  type."
}
{
    "Origin": "Loads resource IDs from R.txt file and returns the list of their names, if successful.",
    "Reference": "Loads resource IDs from R.txt file.",
    "HebCup": "Loads resource IDs from R.txt file and returns the list of their names, if successful."
}
{
    "Origin": "Get the fileCacheControl property: Sets the file's cache control.",
    "Reference": "Get the cacheControl property: Sets the file's cache control.",
    "HebCup": "Get the CacheControl property: Sets the file's cache control."
}
{
    "Origin": "Retrieves a node relative to the node of the live application,\ne.g.",
    "Reference": "Retrieves a node relative to the node of the live application",
    "HebCup": "Retrieves a node relative to the node of the live application,\ne.g."
}
{
    "Origin": "Gets an {@link BaseBiome} from a {@link ArgumentStack}.",
    "Reference": "Gets an {@link BiomeType} from a {@link ArgumentStack}.",
    "HebCup": "Gets an {@link BiomeType} from a {@link ArgumentStack}."
}
{
    "Origin": "Delegates to {@link #getAttributeTypedNames()} and extracts the names.",
    "Reference": "Delegates to {@link #getTypedAttributeNames()} and extracts the names.",
    "HebCup": "Delegates to {@link#getTypedAttributeNames ()} and extracts the names."
}
{
    "Origin": "Retrieves the data source with the specified id.",
    "Reference": "Retrieves the legacy datasource with the specified id.",
    "HebCup": "Retrieves the data source with the specified id."
}
{
    "Origin": "Tests a  operating in bounded mode, created with a {@link StreamOutOfBoundException}.",
    "Reference": "Tests a  operating in bounded mode and throwing a {@link StreamOutOfBoundException}.",
    "HebCup": "Tests a  operating in bounded mode, created with a {@link StreamOutOfBoundException}."
}
{
    "Origin": "Returns a rule that restricts access according to the {@link Role} of the\ncurrent authenticated {@link User}.",
    "Reference": "Adds a rule that restricts access according to the {@link Role} of the\ncurrent authenticated {@link User}.",
    "HebCup": "Returns a rule that restricts access according to the {@link Role} of the\ncurrent authenticated {@link User}."
}
{
    "Origin": "The {@link Poller poller} allows users to automatically poll on the create certificate\noperation status.",
    "Reference": "The {@link PollerFlux poller} allows users to automatically poll on the create certificate\noperation status.",
    "HebCup": "The {@link PollerFlux PollerFlux} allows users to automatically poll on the create certificate operation status."
}
{
    "Origin": "Get statistics for table for given filtering constraint.",
    "Reference": "Get statistics for table for given columns and filtering constraint.",
    "HebCup": "Get statistics for table for given filtering constraint."
}
{
    "Origin": "Sort the overlapping intervals first.",
    "Reference": "Sort the overlapping intervals by start first.",
    "HebCup": "Sort the overlapping intervals first."
}
{
    "Origin": "Verify that duplicate exported packages are detected.",
    "Reference": "Verify that duplicate requires are detected.",
    "HebCup": "Verify that duplicate exported Static are detected."
}
{
    "Origin": "Tests the {@link FileSystemMaster#checkConsistency(AlluxioURI, CheckConsistencyOptions)} method\nwhen running on a file that is inconsistent.",
    "Reference": "Tests the {@link FileSystemMaster#checkConsistency(AlluxioURI, CheckConsistencyContext)} method\nwhen running on a file that is inconsistent.",
    "HebCup": "Tests the {@link FileSystemMaster#checkConsistency (AlluxioURI , CheckConsistencyContext)} method when running on a file that is inconsistent."
}
{
    "Origin": "Produces a {@link RunnerApi.CombinePayload} from a {@link Combine}.",
    "Reference": "Produces a {@link RunnerApi.CombinePayload} from a {@link Combine.PerKey}.",
    "HebCup": "Produces a {@link RunnerApi.CombinePayload} from a {@link CombinePerKey}."
}
{
    "Origin": "Evaluates the condition and returns the matching expression.",
    "Reference": "Evaluates the condition and returns the offset of the resulting branch.",
    "HebCup": "Evaluates the condition and returns the matching expression."
}
{
    "Origin": "Cancels touch focus for the specified actor.",
    "Reference": "Cancels touch focus for all listeners with the specified listener actor.",
    "HebCup": "Cancels touch focus for the specified listenerActor."
}
{
    "Origin": "Returns the built-in service account's credential for the application if running on",
    "Reference": "This is the built-in service account if running on Google",
    "HebCup": "Returns the built-in service account's credential for the application be running on"
}
{
    "Origin": "Sets the event index.",
    "Reference": "Sets the event indexes.",
    "HebCup": "Sets the event Indexes."
}
{
    "Origin": "Returns the node for the specified file path.",
    "Reference": "Returns the node for the specified file.",
    "HebCup": "Returns the node for the specified String path."
}
{
    "Origin": "Sets the session's state machine name.",
    "Reference": "Returns the session timeout.",
    "HebCup": "timeout the session's state machine name."
}
{
    "Origin": "TODO: Change this into selectTrack(TrackInfo)",
    "Reference": "TODO: Change this into selectTrack(TrackInfo) (b/132928418)",
    "HebCup": "TODO: Change this into selectTrack(TrackInfo)"
}
{
    "Origin": "Returns the class name persistence.",
    "Reference": "Returns the journal article persistence.",
    "HebCup": "Returns the Journal Article Persistence."
}
{
    "Origin": "Record an {@link ExecutionEvent} for a container or test that was skipped.",
    "Reference": "Record an {@link Event} for a container or test that was skipped.",
    "HebCup": "Record an {@link Event} for a container or test that was skipped."
}
{
    "Origin": "Creates a Hive database from CatalogDatabase.",
    "Reference": "Creates a Hive database from a CatalogDatabase.",
    "HebCup": "Creates a Hive database from CatalogDatabase."
}
{
    "Origin": "BIC score of the mixture for given data.",
    "Reference": "The BIC score of the mixture for given data.",
    "HebCup": "BIC score of the mixture for given data."
}
{
    "Origin": "Runs a query and retrieves JSON.",
    "Reference": "Runs a query and retrieves a map.",
    "HebCup": "Runs a query and retrieves JSON."
}
{
    "Origin": "Browse the histogram to detect the sequence of peaks (similar to stems) and\nspaces (blanks).",
    "Reference": "Browse the projection to detect the sequence of peaks (similar to stems) and\nspaces (blanks).",
    "HebCup": "Browse the histogram to detect the sequence of peaks)similar to stems) and spaces)blanks)."
}
{
    "Origin": "Apache Spark (camel-spark)",
    "Reference": "Spark Rest (camel-spark-rest)",
    "HebCup": "Apache spark-rest (camel-spark)"
}
{
    "Origin": "Get Type.",
    "Reference": "Get Art.",
    "HebCup": "Get Type."
}
{
    "Origin": "Create an instance of {@link JAXBElement }{@code <}{@link CTMarkupRange }{@code >}}",
    "Reference": "Create an instance of {@link JAXBElement }{@code <}{@link CTMoveFromRangeEnd }{@code >}}",
    "HebCup": "Create an instance of {@link JAXBElement} {@code <} {@link CTMoveFromRangeEnd} {@code >}}"
}
{
    "Origin": "Gets a new {@link PiNode} that replaces this placeholder during snippet instantiation.",
    "Reference": "Replaces this node with a {@link PiNode} during snippet instantiation.",
    "HebCup": "Gets a new {@link PiNode.create} that replaces this placeholder during snippet instantiation."
}
{
    "Origin": "Gets the list of {@link IssuerProperties issuers} on this page.",
    "Reference": "Gets the iterable stream of {@link IssuerProperties issuers} on this page.",
    "HebCup": "Gets the IterableStream of {@link IssuerProperties issuers} on this page."
}
{
    "Origin": "Retrieves the default value of a parameter, or otherwise an empty String",
    "Reference": "Retrieves the default value of a parameter, or otherwise returns null",
    "HebCup": "Retrieves the default value of a parameter , or otherwise an empty Object"
}
{
    "Origin": "Returns a string representation of this object; useful for testing and debugging.",
    "Reference": "Returns a string representation of this object.",
    "HebCup": "Returns a string representation of this object; useful for testing and debugging."
}
{
    "Origin": "Returns {@code true} if this manifestation represents a field that is neither {@code final}, {@code transient} or {@code volatile}.",
    "Reference": "Returns {@code true} if this manifestation represents a field that is neither {@code final} or {@code volatile}.",
    "HebCup": "Returns {@code true} if this manifestation represents a field that is neither {@code final}, {@code transient} or {@code volatile}."
}
{
    "Origin": "Sets the context.",
    "Reference": "Set the context.",
    "HebCup": "Sets the context."
}
{
    "Origin": "Returns true if the image is a JPEG and its data is already complete at the specified length,\nfalse otherwise.",
    "Reference": "Returns true if the image is a JPEG or DNG and its data is already complete at the specified\nlength, false otherwise.",
    "HebCup": "Returns true if the image is a JPEG and its data is already complete at the specified length,\nfalse otherwise."
}
{
    "Origin": "See {@link Upsertable#rowidHasPriority()} for more information.",
    "Reference": "See {@link Upsertable#rowidSupersedesLogicalKey()} for more information.",
    "HebCup": "See {@link Upsertable#rowidSupersedesLogicalKey ()} for more information."
}
{
    "Origin": "To do this, we\nuse the boolean  to indicate which table to use.",
    "Reference": "To do this, we\nuse the boolean {@code trainLeaving} to indicate which table to use.",
    "HebCup": "To do this, we\nuse the boolean  to indicate which table to use."
}
{
    "Origin": "Does NOT write the ID.",
    "Reference": "Does NOT write the ID or\norder.",
    "HebCup": "Does NOT write the ID."
}
{
    "Origin": "Returns a string representation of this object; useful for testing and debugging.",
    "Reference": "Returns a string representation of this object.",
    "HebCup": "Returns a string representation of this object; useful for testing and debugging."
}
{
    "Origin": "Create introspection invalid response.",
    "Reference": "Build unauthorized response entity.",
    "HebCup": "build Unauthorized Response Entity."
}
{
    "Origin": "{@codesnippet com.azure.storage.blob.specialized.BlobClientBase.copyFromURL#URL}",
    "Reference": "{@codesnippet com.azure.storage.blob.specialized.BlobClientBase.copyFromURL#String}",
    "HebCup": "{@codesnippet com.azure.storage.blob.specialized.BlobClientBase.copyFromURL#String}"
}
{
    "Origin": "Manipulate the zoom level of the application and pans to specific location",
    "Reference": "Manipulate the zoom level of the application",
    "HebCup": "Manipulate the zoom level of the application and pans to specific location"
}
{
    "Origin": "On Android, the default charset is UTF-8.",
    "Reference": "Android note: The Android platform default is always UTF-8.",
    "HebCup": "On Android , the java.nio.charset.StandardCharsets.UTF charset is UTF-8."
}
{
    "Origin": "Create a new BoneCP configuration object.",
    "Reference": "Create a new connection.",
    "HebCup": "get a new BoneCP configuration object."
}
{
    "Origin": "Generates a valid document ID for a service, used to index the service in ES.",
    "Reference": "Generates a valid document ID for a API, used to index the API in ES.",
    "HebCup": "Generates a valid document ID for a Api , used to index the Api in ES."
}
{
    "Origin": "Compares that two secrets are equal.",
    "Reference": "Compares that two secrets are equal and not null.",
    "HebCup": "Compares that two secrets are equal."
}
{
    "Origin": "Tests the {@link BlockWorker#createBlock(long, long, String, long)} method.",
    "Reference": "Tests the {@link BlockWorker#createBlock(long, long, String, String, long)} method.",
    "HebCup": "Tests the {@link BlockWorker#createBlock(long, long, String, long)} method."
}
{
    "Origin": "Creates query that searches for SourceContacts\nwhich match a specific query String.",
    "Reference": "Queries this ContactSourceService for SourceContacts\nwhich match a specific query String.",
    "HebCup": "Creates Source that searches for SourceContacts which match a specific Source String."
}
{
    "Origin": "{@codesnippet com.azure.storage.blob.specialized.PageBlobAsyncClient.copyIncremental#URL-String}",
    "Reference": "{@codesnippet com.azure.storage.blob.specialized.PageBlobAsyncClient.copyIncremental#String-String}",
    "HebCup": "{@codesnippet com.azure.storage.blob.specialized.PageBlobAsyncClient.copyIncremental#String-String}"
}
{
    "Origin": "This is\nespecially important for parameters that are critical when creating\nthe default database for a DB instance, such as the character set for\nthe default database defined by the character_set_database parameter.",
    "Reference": "This is especially important for parameters that are\ncritical when creating the default database for a DB instance, such as\nthe character set for the default database defined by the\n parameter.",
    "HebCup": "This is\nespecially important for parameters that are critical when creating\nthe default database for a DB instance, such as the character set for\nthe default database defined by the character_set_database parameter."
}
{
    "Origin": "Rule a subsumes rule b, if a subsumes b\nAND\na has got least the same expected predictive accuracy as b.",
    "Reference": "The defintion\nof subsumption is: Rule a subsumes rule b, if a subsumes b AND a has got\nleast the same expected predictive accuracy as b.",
    "HebCup": "Rule a subsumes rule b, if a subsumes b\nAND\na has got least the same expected predictive accuracy as b."
}
{
    "Origin": "Create an instance of {@link JAXBElement }{@code <}{@link CTIntProperty }{@code >}}",
    "Reference": "Create an instance of {@link JAXBElement }{@code <}{@link CTFontFamily }{@code >}}",
    "HebCup": "Create an instance of {@link JAXBElement} {@code <} {@link CTFontFamily} {@code >}}"
}
{
    "Origin": "VMThreads.THREAD_MUTEX\nshould be held when iterating the list.",
    "Reference": "{@link #THREAD_MUTEX}\nmust be held when iterating the list.",
    "HebCup": "VMThreads.THREAD_MUTEX\nshould be held when iterating the list."
}
{
    "Origin": "Depth-first traversal of the control flow graph.",
    "Reference": "Non-recursive depth-first traversal of the control flow graph.",
    "HebCup": "Depth-first traversal of the control flow graph."
}
{
    "Origin": "Tests that when an etag is passed to set it will only set if the current representation of the setting has the\netag.",
    "Reference": "Tests that when an ETag is passed to set it will only set if the current representation of the setting has the\nETag.",
    "HebCup": "Tests that when an etag is passed to setConfiguration it will only setConfiguration if the current representation of the setting has the etag."
}
{
    "Origin": "To compare the underlying local date of two {@code DateTimeAccessor} instances,\nuse {@link ChronoField#EPOCH_DAY} as a comparator.",
    "Reference": "To compare the underlying local date of two {@code TemporalAccessor} instances,\nuse {@link ChronoField#EPOCH_DAY} as a comparator.",
    "HebCup": "To compare the underlying local date of two {@code DateTimeAccessor} instances,\nuse {@link ChronoField#EPOCH_DAY} as a comparator."
}
{
    "Origin": "Returns the k b folder with the primary key or throws a {@link com.liferay.knowledgebase.NoSuchFolderException} if it could not be found.",
    "Reference": "Returns the k b folder with the primary key or throws a {@link NoSuchFolderException} if it could not be found.",
    "HebCup": "Returns the k b folder with the primary key or throws a {@link com.liferay.knowledgebase.NoSuchFolderException} if it could not be found."
}
{
    "Origin": "Same as {@link #setPipelineConfig(PiPipeconf, ByteBuffer)}, but blocks\nexecution.",
    "Reference": "Same as {@link #setPipelineConfig(long, PiPipeconf, ByteBuffer)}, but\nblocks execution.",
    "HebCup": "Same as {@link #setPipelineConfig(PiPipeconf, ByteBuffer)}, but blocks\nexecution."
}
{
    "Origin": "Register one or more annotated classes to be processed.",
    "Reference": "Register one or more component classes to be processed.",
    "HebCup": "Register one or more component Classes to be processed."
}
{
    "Origin": "creates a MOP method name from a method",
    "Reference": "Creates a MOP method name from a method.",
    "HebCup": "creates a MOP method name from a method"
}
{
    "Origin": "If the variable was set, a configuration {@link ConfigurationEvent event} will be passed to\nall registered listeners.",
    "Reference": "If the variable was set, a CONFIGURATION {@link ConfigurationEvent event} will be passed to\nall registered listeners.",
    "HebCup": "If the variable was set , a CONFIGURATION {@link ConfigurationEvent event} will be passed to all registered listeners."
}
{
    "Origin": "This is the {@code location} given in the constructor after\nbeing resolved against the core instance dir.",
    "Reference": "This is the {@code location}\ngiven in the constructor.",
    "HebCup": "This is the {@code location} given in the constructor after\nbeing resolved against the core instance dir."
}
{
    "Origin": "Returns the last state from which the simulated annealing search found a\nsolution state.",
    "Reference": "Returns the last explored state.",
    "HebCup": "Returns the last state from which the simulated annealing search found a\nsolution state."
}
{
    "Origin": "Set runtime DI locator.",
    "Reference": "Set runtime DI injection manager.",
    "HebCup": "Set runtime DI locator."
}
{
    "Origin": "The IHAWriteMessage is returned to the caller.",
    "Reference": "The {@link IHAWriteMessage}\nis returned to the caller.",
    "HebCup": "The IHAWriteMessage is returned to the caller."
}
{
    "Origin": "Remove a storage block by the name.",
    "Reference": "Removes a buffer block by the name.",
    "HebCup": "Remove a Buffer Block by the name."
}
{
    "Origin": "Returns whether or not icon for the specified identifier exists.",
    "Reference": "Returns whether or not {@link Icon} for the specified identifier exists.",
    "HebCup": "Returns whether or not icon for the specified identifier exists."
}
{
    "Origin": "Unsubscribes us to notifications about incoming Coin packets.",
    "Reference": "Unsubscribes us from notifications about incoming Coin packets.",
    "HebCup": "Unsubscribes us to notifications about incoming Coin packets."
}
{
    "Origin": "Sets the value.",
    "Reference": "Set the value.",
    "HebCup": "Sets the value."
}
{
    "Origin": "Using the provided abscissa range, extract the relevant foreground pixels\nfrom the NO_STAFF image and evaluate possible glyph instances.",
    "Reference": "In the provided slice, extract the relevant foreground pixels from the NO_STAFF\nimage and evaluate possible glyph instances.",
    "HebCup": "Using the provided abscissa range , extract the relevant foreground pixels from the NO_STAFF image and evaluate possible parts instances."
}
{
    "Origin": "Add a file to the list of the successfully uploaded files.",
    "Reference": "Add a file to the list of the successfully uploaded files and remove it from the file list",
    "HebCup": "Add a file to the list of the successfully uploaded files."
}
{
    "Origin": "This method wraps raw in the character provided by {@link #getNameEscape()}.",
    "Reference": "This method escapes raw using method {@link #escapeName(String)}.",
    "HebCup": "This method wraps raw in the character provided by {@link#getNameEscape (escape}."
}
{
    "Origin": "Returns a string representation of this object; useful for testing and debugging.",
    "Reference": "Returns a string representation of this object.",
    "HebCup": "Returns a string representation of this object; useful for testing and debugging."
}
{
    "Origin": "Set Manufacturing Order.",
    "Reference": "Set Produktionsauftrag.",
    "HebCup": "Set Manufacturing Order."
}
{
    "Origin": "Parses the WSDL file in order to validate the service, port and operation, to get the SOAP Action (if defined)\nand to check if the operation requires input parameters or not.",
    "Reference": "Resolves the WSDL file in order to validate the service, port and operation, to get the SOAP Action (if defined)\nand to check if the operation requires input parameters or not.",
    "HebCup": "Parses the wsdl file in order to validate the service , port and operation , to get the SOAP Action (if defined) and to check if the operation requires input parameters or not."
}
{
    "Origin": "Creates and loads a resource repository.",
    "Reference": "Creates and loads a resource repository without using a persistent cache.",
    "HebCup": "Creates and loads a resource repository."
}
{
    "Origin": "Swaps the operands of the expression if better performance is expected.",
    "Reference": "Swaps the operands of the expression if this might improve performance.",
    "HebCup": "Swaps the operands of the expression if better performance is expected."
}
{
    "Origin": "This merges the two objects - {@code this} and the specified offset -\nto form an instance of {@code OffsetTime}.",
    "Reference": "This merges the two objects - {@code this} and the specified date -\nto form an instance of {@code LocalDateTime}.",
    "HebCup": "This merges the two objects - {@code this} and the specified offset - to form an instance of {@code LocalDateTime}."
}
{
    "Origin": "The input file must be a list of tab-separated verb-POS pairs, one verb\nper line.",
    "Reference": "The input file must be a list of whitespace-separated verb-lemma-POS triples, one verb\nform per line.",
    "HebCup": "The input file must be a list of tab-separated verb-POS pairs, one verb per line: ."
}
{
    "Origin": "After you enable full-control mode, the master account in the organization can apply OCPs on all member accounts.",
    "Reference": "After you enable all features in your organization, the master account in the organization can apply policies on\nall member accounts.",
    "HebCup": "After you Enable All-control mode, the master account in the organization can apply OCPs on all member accounts."
}
{
    "Origin": "Associates this cache configuration to a quorum.",
    "Reference": "Associates this cache configuration to a split brain protection.",
    "HebCup": "Associates this cache configuration to a SplitBrainProtection."
}
{
    "Origin": "Test of process method, of class ABITracer.",
    "Reference": "Test of local method, of class ABITracer.",
    "HebCup": "Test of Local method , of class ABITracer."
}
{
    "Origin": "Sets the {@link EncryptionScope encryption scope} that is used to encrypt blob contents on the server.",
    "Reference": "Sets the {@code encryption scope} that is used to encrypt blob contents on the server.",
    "HebCup": "Sets the {@link String encryption scope} that is used to encrypt blob contents on the server."
}
{
    "Origin": "Gets any cached {@link SyncSession} for the given {@link SyncConfiguration} or create a new one if\nno one exists.",
    "Reference": "Gets a cached {@link SyncSession} for the given {@link SyncConfiguration} or throw if no one exists yet.",
    "HebCup": "Gets any cached {@link IllegalStateException} for the given {@link SyncConfiguration} or create a new one if no one exists."
}
{
    "Origin": "Defines enum set for the filter.",
    "Reference": "Defines enum set of dispatcher types for the filter.",
    "HebCup": "Defines enum set for the filter."
}
{
    "Origin": "Each adapter will try to send blocks until have got special {@link Block} with type {@link PacketTypes#ACK},\nthat means receiver have got block.",
    "Reference": "Each adapter will try to send blocks until have got special {@link Packet} with type {@link PacketTypes#ACK},\nthat means receiver have got block.",
    "HebCup": "Each adapter will try to send blocks until have got special {@link sessionReader.remoteNodeInfo} with type {@link PacketTypes#ACK} , that means receiver have got block."
}
{
    "Origin": "The curves themselves are provided in {@link ScenarioMarketData}\nusing {@link CurveId} as the identifier.",
    "Reference": "The curves themselves are provided in {@link ScenarioMarketData}\nusing {@link RatesCurveId} as the identifier.",
    "HebCup": "The curves themselves are provided in {@link ScenarioMarketData} using {@link RatesCurveId} as the identifier."
}
{
    "Origin": "Returns newly created {@link NinePatchIcon} containing stretchable shadow.",
    "Reference": "Returns newly created shadow {@link NinePatchIcon}.",
    "HebCup": "Returns newly created {@link NinePatchIcon} containing stretchable shadow."
}
{
    "Origin": "Formats a millisecond {@code long} value into the supplied {@code StringBuilder}.",
    "Reference": "Formats a millisecond {@code long} value into the\nsupplied {@code StringBuffer}.",
    "HebCup": "Formats a millisecond {@code long} value into the supplied {@code B}."
}
{
    "Origin": "Creates and sends share intent across the system.",
    "Reference": "Creates and sends a share intent across the system.",
    "HebCup": "Creates and sends intent intent across the system."
}
{
    "Origin": "Group: consumer",
    "Reference": "Group: producer",
    "HebCup": "Group: consumer"
}
{
    "Origin": "Attaches an existing database.",
    "Reference": "Attaches an udb database to Alluxio catalog.",
    "HebCup": "Attaches an existing database."
}
{
    "Origin": "Load enOrganizationModel",
    "Reference": "Load Organization Model",
    "HebCup": "Load OrganizationModel"
}
{
    "Origin": "Wait for the transport thread to finish.",
    "Reference": "Wait for all transport threads to finish.",
    "HebCup": "Wait for the transport thread to finish."
}
{
    "Origin": "XML Catalogs, OASIS Standard V1.1, invalid path entries will be ignored.",
    "Reference": "XML Catalogs, OASIS Standard V1.1, if a catalog entry is invalid, it\nis ignored.",
    "HebCup": "XML Catalogs , OASIS Standard V1.1 , invalid uri entries will be ignored."
}
{
    "Origin": "Sets the path to the configuration file.",
    "Reference": "Sets the path to the CONFIGURATION file.",
    "HebCup": "Sets the path to the CONFIGURATION file."
}
{
    "Origin": "Receives all emails that matches given {@link EmailFilter filter}\nand set given flags.",
    "Reference": "Receives all emails that match given {@link EmailFilter} and set given {@link Flags}.",
    "HebCup": "Receives all emails that matches given {@link EmailFilter filter}\nand set given flags."
}
{
    "Origin": "The meta-property for the {@code productType} property.",
    "Reference": "The meta-property for the {@code type} property.",
    "HebCup": "The meta-property for the {@code type} property."
}
{
    "Origin": "TODO If the last HALog file (in commit counter sequence) is discovered\nwithout a closing root block (the opening and closing root blocks are the\nsame) then it can not be used.",
    "Reference": "Note: If the last HALog file (in commit counter sequence) is discovered\nwithout a closing root block (the opening and closing root blocks are the\nsame) then it can not be used.",
    "HebCup": "TODO If the last HALog file (in commit counter sequence) is discovered\nwithout a closing root block (the opening and closing root blocks are the\nsame) then it can not be used."
}
{
    "Origin": "Sets the {@link ISeedingStrategyFactory} to be used by this factory.",
    "Reference": "Sets the {@link SeedingStrategyFactory} to be used by this factory.",
    "HebCup": "Sets the {@link SeedingStrategyFactory} to be used by this factory."
}
{
    "Origin": "This method is a shortcut to {@linkplain #prefix(String, boolean) prefix(prefix, true)}.",
    "Reference": "This method is a shortcut to {@linkplain #pathPrefix(String, boolean) pathPrefix(prefix, true)}.",
    "HebCup": "This method is a shortcut to {@linkplain#pathPrefix (String , boolean) pathPrefix (prefix , true)}."
}
{
    "Origin": "Returns the service type corresponding to the name of a services\nconfiguration file if it is a valid Java identifier.",
    "Reference": "Returns the service type corresponding to the name of a services\nconfiguration file if it is a legal type name.",
    "HebCup": "Returns the service type corresponding to the name of a services configuration file if it is a valid Class Name."
}
{
    "Origin": "Generates a code sample for using {@link DirectoryClient#createFileWithResponse(String, long, FileHTTPHeaders,",
    "Reference": "Generates a code sample for using {@link DirectoryClient#createFileWithResponse(String, long, FileHttpHeaders,",
    "HebCup": "Generates a code sample for using {@link DirectoryClient#createFileWithResponse (String , long , FileHttpHeaders ,"
}
{
    "Origin": "Construct StringDataSource from the underneath byte channel which is associated with the entity struct.",
    "Reference": "Construct StringDataSource from the underneath byte channel which is associated with the entity object.",
    "HebCup": "Construct StringDataSource from the underneath byte channel which is associated with the entity Obj."
}
{
    "Origin": "Tracked blobstore entries are rotated out of the stored map periodically.",
    "Reference": "Tracked topology entries are rotated out of the stored map periodically.",
    "HebCup": "Tracked Set entries are rotated out of the stored map periodically."
}
{
    "Origin": "See {@link #newDatabase(File, Config, GraphDatabaseFacadeFactory.Dependencies)} instead.",
    "Reference": "See {@link #newDatabase(File, Config, ExternalDependencies)} instead.",
    "HebCup": "See {@link#newDatabase (File , Config , ExternalDependencies)} instead."
}
{
    "Origin": "The refresh is only effective if the device is:\nofflinedoes not support GCM\nGCM registration failed",
    "Reference": "The refresh is only effective if the device is:\nofflinedoes not support FCM\nFCM registration failed",
    "HebCup": "The refresh is only effective if the device is: offlinedoes not support GCM Push failed"
}
{
    "Origin": "Does this search ONLY for\nDWR*Service classes and ignores Test classes.",
    "Reference": "Does this search ONLY for\nDWR*Service classes.",
    "HebCup": "Does this search ONLY for DWR*Service String and ignores Test classes."
}
{
    "Origin": "Start grid.",
    "Reference": "Start one grid instance.",
    "HebCup": "Start grid."
}
{
    "Origin": "Expands {@code this} pattern with the given variable mapping.",
    "Reference": "Missing {@code variables} mapping are\nremoved from the expanded tree.",
    "HebCup": "Expands {@code this} pattern with the given variable mapping."
}
{
    "Origin": "Sets the value of the spinCount property.",
    "Reference": "Sets the value of the saltValue property.",
    "HebCup": "Sets the value of the SaltValue property."
}
{
    "Origin": "Constuct a trace log event.",
    "Reference": "Constuct an informational log event.",
    "HebCup": "Constuct a trace log event."
}
{
    "Origin": "Gets an action with empty request body sent.",
    "Reference": "Gets an action with empty request body and empty multipart config.",
    "HebCup": "Gets an action with empty request body sent."
}
{
    "Origin": "The modules\nare located in the {@code ${test.classes}/modules} directory.",
    "Reference": "The modules\nare located on the test module path ({@code ${test.module.path}}).",
    "HebCup": "The modules\nare located in the {@code ${test.classes}/modules} directory."
}
{
    "Origin": "Gets the value of the 'publicPort' field.",
    "Reference": "Gets the value of the 'publicPorts' field.",
    "HebCup": "Gets the value of the 'publicPorts' field."
}
{
    "Origin": "Computes a mapping from the {@link SystemStreamPartition} to {@link TaskName} using the provided {@param grouperContext}",
    "Reference": "Computes a mapping from the {@link SystemStreamPartition} to {@link TaskName} using the provided {@param grouperMetadata}",
    "HebCup": "Computes a mapping from the {@link SystemStreamPartition} to {@link TaskName} using the provided {@param GrouperMetadata}"
}
{
    "Origin": "For details see also {@link #getFieldOrAlias(String)}",
    "Reference": "For details see also {@link #getFieldOrAlias(Field)}",
    "HebCup": "For details see also {@link #getFieldOrAlias(Field)}"
}
{
    "Origin": "Gets the destination associated with this appender.",
    "Reference": "Gets the connection associated with this appender.",
    "HebCup": "Gets the Connection associated with this appender."
}
{
    "Origin": "Get TU-UPC.",
    "Reference": "Get UPC.",
    "HebCup": "Get TU-UPC."
}
{
    "Origin": "Returns an {@link Operator} to allow the query to be run once per\nparameter list in the source.",
    "Reference": "Returns an {@link Transformer} to allow the query to be run once per\nparameter list in the source.",
    "HebCup": "Returns an {@link Transformer} to allow the query to be run once per parameter list in the source."
}
{
    "Origin": "Applies all included s to xmlSignatureInput and\nreturns the result of these transformations.",
    "Reference": "Applies all included {@code Transform}s to xmlSignatureInput and\nreturns the result of these transformations.",
    "HebCup": "Applies all included s to xmlSignatureInput and\nreturns the result of these transformations."
}
{
    "Origin": "Returns a string representation of this object; useful for testing and debugging.",
    "Reference": "Returns a string representation of this object.",
    "HebCup": "Returns a string representation of this object; useful for testing and debugging."
}
{
    "Origin": "Returns the number of sync d l objects where companyId = ?",
    "Reference": "Returns the number of sync d l objects where repositoryId = ?",
    "HebCup": "Returns the number of sync d l objects where repositoryId = ?"
}
{
    "Origin": "Add given object to the deque, prepending to head.",
    "Reference": "Prepend given object to the head.",
    "HebCup": "Add given object to the deque, prepending to head."
}
{
    "Origin": "Bugsnag.onBreadcrumb(new OnBreadcrumb() {\npublic boolean run(Breadcrumb breadcrumb) {\nreturn false;  ignore the breadcrumb\n}\n})",
    "Reference": "Bugsnag.onBreadcrumb(new OnBreadcrumbCallback() {\npublic boolean run(Breadcrumb breadcrumb) {\nreturn false;  ignore the breadcrumb\n}\n})",
    "HebCup": "Bugsnag.onBreadcrumb (new OnBreadcrumbCallback () {public boolean run (Breadcrumb breadcrumb) {return false; ignore the breadcrumb}})"
}
{
    "Origin": "Computes the minimum for each pixel across all bands in the {@link Planar} image.",
    "Reference": "Computes the minimum for each pixel across selected bands in the {@link Planar} image.",
    "HebCup": "Computes the minimum for each pixel across all bands in the {@link Planar} image."
}
{
    "Origin": "Sets the {@link IClassCache} for the given application.",
    "Reference": "Sets the {@link IGetAndSetLocator} for the given application.",
    "HebCup": "Sets the {@link IgetAndSetter} for the given application."
}
{
    "Origin": "Gets a path to an artifact with given version and groupId=org.apache.ignite and artifactId={@code artifactName}.",
    "Reference": "Gets a path to an artifact with given version and groupId=org.apache.ignite and artifactId={@code artifactId}.",
    "HebCup": "Gets a path to an artifact with given version and groupId=org.apache.ignite and artifactId= {@code artifactId}."
}
{
    "Origin": "Clean up after each test by resetting the Fuseki instance",
    "Reference": "Clean up after each test by resetting the data",
    "HebCup": "Clean up after each test by resetting the Fuseki instance"
}
{
    "Origin": "Reset starting address.",
    "Reference": "Reset head segment.",
    "HebCup": "reset Head Segment."
}
{
    "Origin": "Returns whether PUT is supported for the given {@link ResourceMetadata}.",
    "Reference": "Returns whether PUT requests can be used to create new instances for the type backing the given\n{@link ResourceMetadata}.",
    "HebCup": "Returns whether For is supported for the given {@link ResourceMetadata}."
}
{
    "Origin": "No guarantee of order for past timers is assumed when\nexpired later.",
    "Reference": "No guarantee of order for expired timers is\nassumed when later polled.",
    "HebCup": "No guarantee of order for past timers is assumed when\nexpired later."
}
{
    "Origin": "The same as {@link #indexReference(IndexDescriptor2)}, except no schema lock is taken.",
    "Reference": "The same as {@link #indexReference(IndexDescriptor)}, except no schema lock is taken.",
    "HebCup": "The same as {@link #indexReference(IndexDescriptor)}, except no schema lock is taken."
}
{
    "Origin": "Returns a {@link StartAtlasDbTransactionResponseV4} which has a single immutable ts, and a range of timestamps to\nbe used as start timestamps.",
    "Reference": "Returns a {@link StartTransactionResponseV4} which has a single immutable ts, and a range of timestamps to\nbe used as start timestamps.",
    "HebCup": "Returns a {@link StartTransactionResponseV4} which has a single immutable ts , and a range of timestamps to be used as start timestamps."
}
{
    "Origin": "Corresponds to `hex.tree.drf.DrfMojoModel.score0()`",
    "Reference": "Corresponds to `hex.tree.gbm.GbmMojoModel.score0()`",
    "HebCup": "Corresponds to `hex.tree.drf.DrfMojoModel.score0()`"
}
{
    "Origin": "Stores the {@link FCPPluginConnection} so in the future it can be obtained by its ID with\n{@link #getConnection(UUID)}.",
    "Reference": "Stores the {@link FCPPluginConnectionImpl} so in the future it can be obtained by its ID with\n{@link #getConnection(UUID)}.",
    "HebCup": "Stores the {@link FCPPluginConnectionImpl} so in the future it can be obtained by its ID with {@link#getConnection (UUID)}."
}
{
    "Origin": "Submits a bar notification for drawing.",
    "Reference": "Returns the notification manager instance.",
    "HebCup": "Submits a Notification Manager for drawing."
}
{
    "Origin": "Getter for the Training Parameters of the Feature Selector.",
    "Reference": "Getter for the Training Parameters of the Feature Selectors.",
    "HebCup": "Getter for the Training Parameters List of the Feature Selector."
}
{
    "Origin": "Receives all emails that matches given {@link EmailFilter filter}.",
    "Reference": "Receives all emails that matches given {@link EmailFilter}.",
    "HebCup": "Receives all emails that matches given {@link filter filter}."
}
{
    "Origin": "Returns a supplier that returns the current execution context associated with the given\nlanguage.",
    "Reference": "Returns a reference that returns the current execution context associated with the given\nlanguage.",
    "HebCup": "Returns a ContextReference that returns the current execution context associated with the given language."
}
{
    "Origin": "Returns an enumeration of URL objects to all the resources with the\ngiven name on the class path of this class loader.",
    "Reference": "Returns an enumeration of URL objects to all the resources with the\ngiven name in modules defined to this class loader or on the class\npath of this loader.",
    "HebCup": "Returns an enumeration of URL objects to all the resources with the\ngiven name on the class path of this class loader."
}
{
    "Origin": "Wind the wheel forward by setting the current tick of the wheel to examine on the next {@link #poll}.",
    "Reference": "Set the current tick of the wheel to examine on the next {@link #poll}.",
    "HebCup": "current the wheel forward by setting the current tick of the wheel to examine on the next {@link#poll}."
}
{
    "Origin": "Cross root, height(left) + height(right)\n2.",
    "Reference": "If not, the diameter is the depth(left) + depth(right).",
    "HebCup": "Cross root , getDepth (left) + getDepth (right) 2."
}
{
    "Origin": "The array length access has been removed\nfrom the offset.",
    "Reference": "The sequence length\naccess has been removed from the offset.",
    "HebCup": "The Sequence Length Access has been removed from the offset."
}
{
    "Origin": "Returns a reference to a chatRoom named roomName or null\nif that room does not exist.",
    "Reference": "Returns a reference to a chatRoom named roomName.",
    "HebCup": "Returns a reference to a chatRoom named roomName or null\nif that room does not exist."
}
{
    "Origin": "Adds next request to {@link RequestType#BUNDLE_TRANSPORT_UPDATE} query.",
    "Reference": "Adds next request to {@link RequestType#CHANNEL_INFO_UPDATE} query.",
    "HebCup": "Adds next request to {@link RequestType#CHANNEL_INFO_UPDATE} query."
}
{
    "Origin": "Calling with null will terminate the PublishProcessor and a NullPointerException\nis signalled to the Subscribers.",
    "Reference": "Calling with a null value will terminate the PublishProcessor and a NullPointerException\nis signaled to the Subscribers.",
    "HebCup": "Calling with null will terminate the PublishProcessor and a ExceptionHelper.createNullPointerException is signalled to the Subscribers."
}
{
    "Origin": "Discards a Message from the not-Acked-List",
    "Reference": "Discards a Message from the not-Acked-List and returns the messageobject",
    "HebCup": "Discards a Message from the not-Acked-List"
}
{
    "Origin": "Returns an immutable map containing zero mappings.",
    "Reference": "Returns an unmodifiable map containing zero mappings.",
    "HebCup": "Returns an Unmodifiable map containing zero mappings."
}
{
    "Origin": "Close connection (blocking call).",
    "Reference": "Close connection.",
    "HebCup": "Close connection (blocking call)."
}
{
    "Origin": "Create a new innovation.",
    "Reference": "Create a new neuron innovation.",
    "HebCup": "Create a new innovation."
}
{
    "Origin": "Otherwise an empty {@link CachedResponse} will be added to the context, this will be used to cache the response once it has been\nreceived from the back-end service",
    "Reference": "Otherwise an empty {@link CachedResponse} will be added to the context, this will be used to cache the response once it has been\nreceived from the back-end API",
    "HebCup": "Otherwise an empty {@link CachedResponse} will be added to the context , this will be used to cache the response once it has been received from the back-end Api"
}
{
    "Origin": "This method will convert ballerina @Service to swaggers @Swagger object.",
    "Reference": "This method will convert ballerina @Service to openApi @OpenApi object.",
    "HebCup": "This method will convert ballerina @Service to swaggers @OpenApi object."
}
{
    "Origin": "Get Nominalmenge in Preiseinheit.",
    "Reference": "Get Zu berechn.",
    "HebCup": "Get Nominalmenge in Preiseinheit."
}
{
    "Origin": "Scheduler:\n {@code combineLatest} does not operate by default on a particular {@link Scheduler}.",
    "Reference": "Scheduler:\n {@code combineLatestArray} does not operate by default on a particular {@link Scheduler}.",
    "HebCup": "Scheduler: {@code combineLatestArray} does not operate by default on a particular {@link Scheduler}."
}
{
    "Origin": "Converts array of  to {@link EmailAddress}.",
    "Reference": "Converts array of {@link String} to {@link EmailAddress}.",
    "HebCup": "Converts array of  to {@link EmailAddress}."
}
{
    "Origin": "Gets the deprecated keys, in the order to be checked.",
    "Reference": "Gets the fallback keys, in the order to be checked.",
    "HebCup": "Gets the fallback Keys, in the order to be checked."
}
{
    "Origin": "If a mock can be assigned to a field, do it.",
    "Reference": "If a mock without field name can be assigned to a field, do it.",
    "HebCup": "If a mock can be assigned to a field, do it."
}
{
    "Origin": "Each value will be separated on the command line by the host-specific path separator.",
    "Reference": "Each value will be separated on the command line by the ':' character, the option parser's",
    "HebCup": "Each value will be separated on the command line by the host-specific path separator."
}
{
    "Origin": "Updates the Connection's line associated with the given action id to its new position.",
    "Reference": "Updates the wire associated with the given action id to its new position.",
    "HebCup": "Updates the wires's line associated with the given action id to its new position."
}
{
    "Origin": "Creates a valid {@link WindowAggregate} operation.",
    "Reference": "Creates a valid {@link WindowAggregateTableOperation} operation.",
    "HebCup": "Creates a valid {@link TableOperation} operation."
}
{
    "Origin": "Expected to be used by the Poller to release resources on socket\nclose, errors etc.",
    "Reference": "Expected to be used by the Endpoint to release resources on socket\nclose, errors etc.",
    "HebCup": "Expected to be used by the Poller to release resources on socketWrapper close , errors etc."
}
{
    "Origin": "If the server ID matches the local server ID,\nit also updates myQuorumAddr and myElectionAddr.",
    "Reference": "If the server ID matches the local server ID,\nit also updates myAddrs.",
    "HebCup": "If the server ID matches the local server ID,\nit also updates myQuorumAddr and myElectionAddr."
}
{
    "Origin": "Returns a list of all application which have registered.",
    "Reference": "Returns a list of all instances of applications which have registered.",
    "HebCup": "Returns a list of all instance which have registered."
}
{
    "Origin": "Sets the class name local service.",
    "Reference": "Sets the journal article local service.",
    "HebCup": "Sets the journal Article Local Service."
}
{
    "Origin": "Get the content of this element.",
    "Reference": "Gets the value of the content property.",
    "HebCup": "Get the content of this element."
}
{
    "Origin": "or throws a {@link com.liferay.wsrp.NoSuchProducerException} if it could not be found.",
    "Reference": "or throws a {@link NoSuchProducerException} if it could not be found.",
    "HebCup": "or throws a {@link com.liferay.wsrp.NoSuchProducerException} if it could not be found."
}
{
    "Origin": "This method is always invoked after {@link #responseHeadersStart(Call)}.",
    "Reference": "This method is always invoked after {@link #responseHeadersStart}.",
    "HebCup": "This method is always invoked after {@link #responseresponseStart(Call)}."
}
{
    "Origin": "Otherwise returns a {@code Success} containing the given {@code value}.",
    "Reference": "Otherwise returns a {@link Try.Success} containing the given {@code value}.",
    "HebCup": "Otherwise returns a {@code Success} containing the given {@code value}."
}
{
    "Origin": "This only applies to classes configured by\n{@link #withVerboseClasses(String...) verboseClasses}.",
    "Reference": "This only applies to classes configured by\n{@link #setVerboseClasses(String...) verboseClasses}.",
    "HebCup": "This only applies to classes configured by {@link #setVerboseClasses(String...) verboseClasses}."
}
{
    "Origin": "Adds next payload type information update request to\n{@link RequestType#RTP_DESCRIPTION_UPDATE} query currently being built.",
    "Reference": "Adds next payload type information update request to\n{@link RequestType#CHANNEL_INFO_UPDATE} query currently being built.",
    "HebCup": "Adds next payload type information update request to {@link RequestType#CHANNEL_INFO_UPDATE} query currently being built."
}
{
    "Origin": "Group: consumer",
    "Reference": "Group: producer",
    "HebCup": "Group: consumer"
}
{
    "Origin": "See Immutable Map Static Factory Methods for details.",
    "Reference": "See Unmodifiable Maps for details.",
    "HebCup": "See Unmodifiable Map Static Factory Methods for details."
}
{
    "Origin": "Returns the builder for the settings used for calls to snapshotTable.",
    "Reference": "Returns the builder for the settings used for all RPCs.",
    "HebCup": "Returns the builder for the settings used for calls to stub."
}
{
    "Origin": "Returns an immutable list containing nine elements.",
    "Reference": "Returns an unmodifiable list containing nine elements.",
    "HebCup": "Returns an Unmodifiable list containing nine elements."
}
{
    "Origin": "Sets the selection model for this listing.",
    "Reference": "Sets the selection model for the grid.",
    "HebCup": "Sets the selection model for this listing."
}
{
    "Origin": "Iterating with two Progenius for a draw",
    "Reference": "Servant is in play Iterating with two Progenius for a draw",
    "HebCup": "Iterating with two Progenius for a draw"
}
{
    "Origin": "Refreshes the rendering of the specified file, or its parent, in the tree.",
    "Reference": "Refreshes the rendering of the specified file, and its parents, in the tree.",
    "HebCup": "Refreshes the rendering of the specified file, or its parent, in the tree."
}
{
    "Origin": "Gets the amount of local iterations.",
    "Reference": "Get the amount of local iterations.",
    "HebCup": "Gets the get Amount Of local iterations."
}
{
    "Origin": "Create an instance of {@link JAXBElement }{@code <}{@link CTMarkupRange }{@code >}}",
    "Reference": "Create an instance of {@link JAXBElement }{@code <}{@link CTMoveFromRangeEnd }{@code >}}",
    "HebCup": "Create an instance of {@link JAXBElement} {@code <} {@link CTMoveFromRangeEnd} {@code >}}"
}
{
    "Origin": "When area is downloaded, geodatabases gets registered with the original service to support syncronization.",
    "Reference": "When an area is downloaded, geodatabases are registered with the original service to support syncronization.",
    "HebCup": "When area is downloaded, geodatabases gets registered with the original service to support syncronization."
}
{
    "Origin": "Called to invalidate the cache - clearing it so that subsequent calls to getService()\nor getContract() will trigger a new fetch from the ES store.",
    "Reference": "Called to invalidate the cache - clearing it so that subsequent calls to getApi()\nor getContract() will trigger a new fetch from the ES store.",
    "HebCup": "Called to invalidate the cache - clearing it so that subsequent calls to getapi() or getContract() will trigger a new fetch from the ES store."
}
{
    "Origin": "I. e. index 0 of the new TimeSeries will\nbe index startIndex of this TimeSeries.",
    "Reference": "I. e. index 0 of the new BaseBarSeries will\nbe index startIndex of this BaseBarSeries.",
    "HebCup": "I. e. index 0 of the new TimeSeries will\nbe index startIndex of this TimeSeries."
}
{
    "Origin": "ClosePullRequest leaves issue open if no rebase mode.",
    "Reference": "ClosePullRequest can leave issue open if no rebase mode.",
    "HebCup": "ClosePullRequest leaves issue open if no rebase mode."
}
{
    "Origin": "The {@link RsaKeyCreateOptions#getKeySize() keySize} can be\noptionally specified.",
    "Reference": "The {@link CreateRsaKeyOptions#getKeySize() keySize} can be\noptionally specified.",
    "HebCup": "The {@link CreateRsaKeyOptions#getKeySize () keySize} can be optionally specified."
}
{
    "Origin": "removes the citation of the removed entry as it's not needed anymore",
    "Reference": "removes the citation of the removed entries as they are not needed anymore",
    "HebCup": "removes the citation of the removed Entries as it's not needed anymore"
}
{
    "Origin": "Unless backing array needs resizing, operates in O(1) time.",
    "Reference": "(enqueue to tail) Unless backing array needs resizing, operates in O(1) time.",
    "HebCup": "Unless backing array needs resizing, operates in O(1) time."
}
{
    "Origin": "Construct a new MemberSummaryBuilder.",
    "Reference": "Construct a new MemberSummaryBuilder for an annotation type.",
    "HebCup": "Construct a new MemberSummaryBuilder."
}
{
    "Origin": "Returns the current range of the segment.",
    "Reference": "Returns the segment length.",
    "HebCup": "Returns the current range of the segment."
}
{
    "Origin": "The {@link Secret} is required.",
    "Reference": "The {@link KeyVaultSecret} is required.",
    "HebCup": "The {@link KeyVaultSecret} is required."
}
{
    "Origin": "Returns a string representation of this object; useful for testing and debugging.",
    "Reference": "Returns a string representation of this object.",
    "HebCup": "Returns a string representation of this object; useful for testing and debugging."
}
{
    "Origin": "The unicode provided has to be a unicode representation of the emoji\nthat is supposed to be represented by the Reaction.",
    "Reference": "The unicode provided has to be a unicode representation of the emoji\nthat is supposed to be used for the Reaction.",
    "HebCup": "The unicode provided has to be a unicode representation of the emoji\nthat is supposed to be represented by the Reaction."
}
{
    "Origin": "The value is \"put\", which means it is either replaced or added.",
    "Reference": "The value is \"put\".",
    "HebCup": "The value is \"put\", which means it is either replaced or added."
}
{
    "Origin": "Stage where the actual wrapped method call occurs.",
    "Reference": "Final stage where the actual wrapped method call occurs.",
    "HebCup": "Stage where the actual wrapped method call occurs."
}
{
    "Origin": "Conditions can be imported statically from {@link ExecutionEventConditions}\nand {@link TestExecutionResultConditions}.",
    "Reference": "Conditions can be imported statically from {@link EventConditions}\nand {@link TestExecutionResultConditions}.",
    "HebCup": "Conditions can be imported statically from {@link EventConditions} and {@link TestExecutionResultConditions}."
}
{
    "Origin": "Creates a new block blob, or updates the content of an existing block blob.",
    "Reference": "Creates a new block blob.",
    "HebCup": "Creates a new block blob, or updates the content of an existing block blob."
}
{
    "Origin": "Check if an active user with the given email exits in database",
    "Reference": "Search for an active user with the given email exits in database",
    "HebCup": "Check if an active user with the given By exits in database"
}
{
    "Origin": "Basic test of \"requires public\":\n    m1 requires m2, m2 requires public m3",
    "Reference": "Basic test of \"requires transitive\":\n    m1 requires m2, m2 requires transitive m3",
    "HebCup": "Basic test of ``requires public``: m1 requires m2 , m2 requires TRANSITIVE m3"
}
{
    "Origin": "Uses the IconicsImageView styleable tags to get the iconics data of menu items",
    "Reference": "Inflates an menu by resource id and uses the styleable tags to get the iconics data of menu\nitems",
    "HebCup": "Uses the IconicsImageView styleable tags to get the iconics data of XmlAndSetIconicsDrawables items"
}
{
    "Origin": "See Immutable Set Static Factory Methods for details.",
    "Reference": "See Unmodifiable Sets for details.",
    "HebCup": "See Unmodifiable Set Static Factory Methods for details."
}
{
    "Origin": "Updates a single entry of the local entity map with the given {@code key} and {@code value},\nand then broadcasts the update to all nodes in the cluster.",
    "Reference": "Updates a single entry of the local entity map with the given {@code key} and {@code value},\nand broadcasts the operation to all nodes in the cluster.",
    "HebCup": "Updates a single entry of the local entity map with the given {@code key} and {@code value},\nand then broadcasts the update to all nodes in the cluster."
}
{
    "Origin": "Returns an immutable list containing six elements.",
    "Reference": "Returns an unmodifiable list containing six elements.",
    "HebCup": "Returns an Unmodifiable list containing six elements."
}
{
    "Origin": "Sets the output.",
    "Reference": "Set the output.",
    "HebCup": "Sets the output."
}
{
    "Origin": "Creates a {@link Behavior} that uses the given {@link WicketFunction function}\nto do something with a component's attribute.",
    "Reference": "Creates a {@link Behavior} that uses the given {@code SerializableFunction function} to do\nsomething with a component's attribute.",
    "HebCup": "Creates a {@link Behavior} that uses the given {@link SerializableFunction function} to do something with a component's attribute."
}
{
    "Origin": "The filter will be\ncombined to existing filters using\n{@link AppendableFilterDataProvider#combineFilters(Object, java.util.Optional)}.",
    "Reference": "The filter will be\ncombined to existing filters using\n{@link AppendableFilterDataProvider#combineFilters(Object, Object)}.",
    "HebCup": "The filter will be combined to existing filters using {@link AppendableFilterDataProvider#combineFilters (Object , java.util.Optional).map}."
}
{
    "Origin": "Start leader election.",
    "Reference": "Start participation in a leader election.",
    "HebCup": "Start leader election."
}
{
    "Origin": "To obtain an ARN with Amazon SNS, you must\ncreate a topic in Amazon SNS and subscribe to the topic.",
    "Reference": "To obtain an ARN with Amazon SNS, you must create a topic in",
    "HebCup": "To obtain an ARN with Amazon SNS, you must\ncreate a topic in Amazon SNS and subscribe to the topic."
}
{
    "Origin": "Code snippets for {@link BlobAsyncClient#setHTTPHeaders(BlobHttpHeaders)}",
    "Reference": "Code snippets for {@link BlobAsyncClient#setHttpHeaders(BlobHttpHeaders)}",
    "HebCup": "Code snippets for {@link BlobAsyncClient#setHttpHeaders (BlobHttpHeaders)}"
}
{
    "Origin": "Returns the formatted date and time of the signing date in UTC zone.",
    "Reference": "Returns the formatted date and time of the request signing date in UTC\nzone.",
    "HebCup": "Returns the formatted date and time of the Request Signing Date in UTC zone."
}
{
    "Origin": "The option is a:\n type.",
    "Reference": "The option will be converted to a  type.",
    "HebCup": "The Timeout is a: type."
}
{
    "Origin": "This method blocks and waits until the provided index has been updated across the entire Titan cluster\nand reached a stable state.",
    "Reference": "This method blocks and waits until the provided index has been updated across the entire JanusGraph cluster\nand reached a stable state.",
    "HebCup": "This method blocks and waits until the provided index has been updated across the entire Janus cluster and reached a stable state."
}
{
    "Origin": "Note: giving  argument doesn't mean that a single block that uses that wrap can't be wrapped.",
    "Reference": "Note: giving {@code 'false'} argument doesn't mean that a single block that uses that wrap can't be wrapped.",
    "HebCup": "Note: giving  argument doesn't mean that a single block that uses that wrap can't be wrapped."
}
{
    "Origin": "Calculate Sum of all elements in a column, and\n     return as a Vector",
    "Reference": "Calculate Sums of elements in a column, and return as a Vector.",
    "HebCup": "Calculate Sum of all elements in a column, and\n     return as a Vector"
}
{
    "Origin": "notifies the registered listeners that a user has been removed.",
    "Reference": "Notifies the registered listeners that a user has been removed.",
    "HebCup": "notifies the registered listeners that a user has been removed."
}
{
    "Origin": "Converts an entity to a DBObject.",
    "Reference": "Converts an entity to a Document.",
    "HebCup": "Converts an entity to a Document."
}
{
    "Origin": "Return the incoming binding sets associated with the optimized\nquery plan (after running the optimizers).",
    "Reference": "Return the incoming binding sets associated with the optimized AST.",
    "HebCup": "Return the incoming binding sets associated with the optimized Optimized AST Binding (after running the optimizers)."
}
{
    "Origin": "Try a SIGTERM once, then try again (twice) with SIGKILL.",
    "Reference": "Try a SIGINT first, then try again with SIGKILL.",
    "HebCup": "Try a SIGTERM once, then try again (twice) with SIGKILL."
}
{
    "Origin": "RelationshipType for the left or right label as indicated by the second parameter.",
    "Reference": "RelationshipType for the left or right type as indicated by the second parameter.",
    "HebCup": "RelationshipType for the left or right Type as indicated by the second parameter."
}
{
    "Origin": "This is an overload of {@link #getUsers(int)} with {@code 100}.",
    "Reference": "This is an overload of {@link #retrieveUsers(int)} with {@code 100}.",
    "HebCup": "This is an overload of {@link#retrieveUsers (int)} with {@code 100}."
}
{
    "Origin": "Sets the quorum name for operations.",
    "Reference": "Sets the split brain protection name for operations.",
    "HebCup": "Sets the split Brain Protection Name for operations."
}
{
    "Origin": "Then build a list of version differences i.e difference between the\nversion in the GossipDigest and the version in the local state for a given NetEndpoint.",
    "Reference": "Then build a list of version differences i.e difference between the\nversion in the GossipDigest and the version in the local state for a given NetNode.",
    "HebCup": "Then build a list of version differences i.e difference between the version in the GossipDigest and the version in the local state for a given NetNode."
}
{
    "Origin": "Joins a collection into an entire row of comma separated values.",
    "Reference": "Joins a series into an entire row of comma separated values.",
    "HebCup": "Joins a double into an entire row of comma separated values."
}
{
    "Origin": "Returns the (biased) estimate of the sample variance of the values within\na {@link Dataset}.",
    "Reference": "Returns the (unbiased) estimate of the sample standard deviation of the\nvalues within a {@link Dataset}.",
    "HebCup": "Returns the (biased) estimate of the sample sample of the values within a {@link Dataset}."
}
{
    "Origin": "Updates the classifier with the given instance.",
    "Reference": "Updates the classifier with information from one training instance.",
    "HebCup": "Updates the classifier with the given instance."
}
{
    "Origin": "The maximum number of statements that can remain idle in the\npool, without extra ones being released, or negative for no limit.",
    "Reference": "Gets the maximum number of statements that can remain idle in the\npool, without extra ones being released, or negative for no limit.",
    "HebCup": "The maximum number of statements that can remain idle in the\npool, without extra ones being released, or negative for no limit."
}
{
    "Origin": "Load balancing decision are based on this\nnormalized {@link #getScore() score} (work is assigned to hosts in\ninverse proportion to the normalized load of the host).",
    "Reference": "Load balancing decision\nare based on this normalized {@link #getAvailability() score} (work is\nassigned to hosts in inverse proportion to the normalized load of the\nhost).",
    "HebCup": "Load balancing decision are based on this normalized {@link#getAvailability () score} (work is assigned to hosts in inverse proportion to the normalized load of the host)."
}
{
    "Origin": "Getter Parameter Value for isReconcileAutomatically",
    "Reference": "Getter Parameter Value for Reconcile Automatically",
    "HebCup": "Getter Parameter Value for isAutoReconciled"
}
{
    "Origin": "Set \"global\" CORS configuration based on URL patterns.",
    "Reference": "Set the \"global\" CORS configurations based on URL patterns.",
    "HebCup": "Set \"global\" CORS configuration based on URL patterns."
}
{
    "Origin": "Returns the primitive ID.",
    "Reference": "Returns the primitive name.",
    "HebCup": "Returns the Name."
}
{
    "Origin": "Returns a {@link InferredRowCoder} with row type factory overridden by {@code rowTypeFactory}.",
    "Reference": "Returns a {@link InferredRowCoder} with row type factory overridden by {@code schemaFactory}.",
    "HebCup": "Returns a {@link InferredRowCoder} with Schema Factory overridden by {@code rowTypeFactory}."
}
{
    "Origin": "Applies the {@link DefaultCamelBeanPostProcessor} to this instance.",
    "Reference": "Applies the {@link CamelBeanPostProcessor} to this instance.",
    "HebCup": "Applies the {@link getCamelBeanPostProcessor} to this instance."
}
{
    "Origin": "{@codesnippet com.azure.data.applicationconfig.configurationclient.getSetting#string-string-OffsetDateTime}",
    "Reference": "{@codesnippet com.azure.data.applicationconfig.configurationclient.getConfigurationSetting#string-string-OffsetDateTime}",
    "HebCup": "{@codesnippet com.azure.data.applicationconfig.configurationclient.getConfigurationSetting#string-string-OffsetDateTime}"
}
{
    "Origin": "API allowing to search for documents allowing to have multiple entries per language",
    "Reference": "API allowing to search for documents allowing to have multiple entries per locale",
    "HebCup": "API allowing to search for documents allowing to have multiple entries per language"
}
{
    "Origin": "The level of logging required.",
    "Reference": "Gets the level of logging required.",
    "HebCup": "The LevelIndex of logging required."
}
{
    "Origin": "Sets the statistic repository with the specified statistic repository.",
    "Reference": "Sets the option query service with the specified option query service.",
    "HebCup": "Sets the Option Query Service with the specified statistic Option Query Service ."
}
{
    "Origin": "or throws a {@link com.liferay.opensocial.NoSuchOAuthConsumerException} if it could not be found.",
    "Reference": "or throws a {@link NoSuchOAuthConsumerException} if it could not be found.",
    "HebCup": "or throws a {@link com.liferay.opensocial.NoSuchOAuthConsumerException} if it could not be found."
}
{
    "Origin": "NOTE:This operation is eventually consistent.",
    "Reference": "This operation is eventually consistent.",
    "HebCup": "NOTE:This operation is eventually consistent."
}
{
    "Origin": "An instance of {@link ApplicableRegionSet} will always be returned,\neven if regions are disabled or region data failed to load.",
    "Reference": "An instance of {@link RegionResultSet} will always be returned,\neven if regions are disabled or region data failed to load.",
    "HebCup": "An instance of {@link FailedLoadRegionSet} will always be returned , even if regions are disabled or region data failed to load."
}
{
    "Origin": "If the item is already collapsed, does nothing.",
    "Reference": "For items that are already collapsed, does nothing.",
    "HebCup": "If the items is already collapsed , does nothing."
}
{
    "Origin": "Returns the configured JavaScript head include resources.",
    "Reference": "Returns the schema configured JavaScript head include resources.",
    "HebCup": "Returns the configured JavaScript head include resources."
}
{
    "Origin": "Takes a package and a relative path to a resource and returns an absolute path to the\nresource.",
    "Reference": "Takes a package and a path to a resource and returns an absolute path to the resource.",
    "HebCup": "Takes a package and a path.substring to a resource and returns an absolute path to the resource."
}
{
    "Origin": "Use reflection to discover and report on the bigdata build information.",
    "Reference": "Method used to discover and report on the bigdata build information.",
    "HebCup": "Use reflection to discover and report on the bigdata build information."
}
{
    "Origin": "Returns a collection of model objects which are based on the given\npermissions and target user.",
    "Reference": "Returns a collection of model objects which are based on the given\npermissions and target entity.",
    "HebCup": "Returns a collection of model objects which are based on the given permissions and target Entity."
}
{
    "Origin": "Called from {@link FritzAhaUpdateXmlCallback} to provide new values for\nthings.",
    "Reference": "Called from {@link FritzAhaUpdateCallback} to provide new values for things.",
    "HebCup": "Called from {@link FritzAhaUpdateXmlCallback} to provide new values for\nthings."
}
{
    "Origin": "Gets the valueType.",
    "Reference": "Gets the type.",
    "HebCup": "Gets the type."
}
{
    "Origin": "Sets {@link View.OnClickListener} of the {@code CarMenuItem}.",
    "Reference": "Sets {@link OnClickListener} of the {@code CarMenuItem}.",
    "HebCup": "Sets {@link OnClickListener} of the {@code CarMenuItem}."
}
{
    "Origin": "Apply the XPath and assert the number of nodes found.",
    "Reference": "Apply the XPath and assert the number value found.",
    "HebCup": "Apply the XPath and assert the number of nodes found."
}
{
    "Origin": "Getting RawUpdatesHandler provider if set",
    "Reference": "Getting RawUpdatesHandler if set",
    "HebCup": "Getting RawUpdatesHandler if set"
}
{
    "Origin": "Prints out the pair of  objects found in the\nfile that is the first and only argument.",
    "Reference": "Prints out the pair of {@code Extractors} objects found in the\nfile that is the first and only argument.",
    "HebCup": "Prints out the pair of  objects found in the\nfile that is the first and only argument."
}
{
    "Origin": "The KeyStore type (jks, jceks, pkcs12, etc) for the identity and trust store for connections created by this\nlistener.",
    "Reference": "The KeyStore type (jks, jceks, pkcs12, etc) for the identity and trust store for connections of a particular type.",
    "HebCup": "The KeyStore type (jks, jceks, pkcs12, etc) for the identity and trust store for connections created by this\nlistener."
}
{
    "Origin": "Checks whether the 'publicPort' field has been set",
    "Reference": "Checks whether the 'publicPorts' field has been set",
    "HebCup": "Checks whether the 'PublicPorts' field has been set"
}
{
    "Origin": "Find if there is an \"engine option\" (covers engine, compiler and instruments options) present\namong the given options.",
    "Reference": "Find if there is an \"engine option\" (covers engine and instruments options) present\namong the given options.",
    "HebCup": "Find if there is an \"engine option\" (covers engine, compiler and instruments options) present\namong the given options."
}
{
    "Origin": "The option will be converted to a",
    "Reference": "The option will be converted to a\n type.",
    "HebCup": "The option will be converted to a"
}
{
    "Origin": "Set the Date that this Token was Created",
    "Reference": "Set the ZonedDateTime that this Token was Created",
    "HebCup": "Set the ZonedDateTime that this Token was Created"
}
{
    "Origin": "Returns a basic {@link ValueSupplier} that serves the value passed in",
    "Reference": "Returns a basic {@link org.ehcache.ValueSupplier} that serves the value passed in",
    "HebCup": "Returns a basic {@link org.ehcache.ValueSupplier} that serves the value passed in"
}
{
    "Origin": "Reads a {@link ServiceRequest} from information found in the inbound\nportion of the http request.",
    "Reference": "Reads a {@link ApiRequest} from information found in the inbound\nportion of the http request.",
    "HebCup": "Reads a {@link ApiRequest} from information found in the inbound portion of the http request."
}
{
    "Origin": "Helper to parse the imported file into an {@link ImportedGradeWrapper} depending on its type",
    "Reference": "Helper to parse the imported file into an {@link ImportedSpreadsheetWrapper} depending on its type",
    "HebCup": "Helper to parse the imported file into an {@link ImportedSpreadsheetWrapper} depending on its type"
}
{
    "Origin": "delete child from this node",
    "Reference": "Delete child from this node.",
    "HebCup": "delete Node from this node"
}
{
    "Origin": "Find all RootGlideModules and save them to an instance variable (throw if > 1).",
    "Reference": "Find all AppGlideModules and save them to an instance variable (throw if > 1).",
    "HebCup": "Find all AppGlideModules and save them to an instance variable (throw if > 1)."
}
{
    "Origin": "Remove all identities which are not used by other services or components",
    "Reference": "Remove all identities which are related to the specified set of components and not used by\nother services or components",
    "HebCup": "Remove all null which are not used by other services or components"
}
{
    "Origin": "Returns true if at least one argument returns the empty sequence.",
    "Reference": "Returns the first expression that yields an empty sequence.",
    "HebCup": "Returns true if at least empty argument returns the empty sequence."
}
{
    "Origin": "This method is called from {@link #copy()}.",
    "Reference": "This method is called from {@link #clone()}.",
    "HebCup": "This method is called from {@link #copy()}."
}
{
    "Origin": "These trytes can then be easily converted into the actual transaction object.",
    "Reference": "These trytes can then be converted into the actual transaction object.",
    "HebCup": "These trytes can then be easily converted into the actual transaction object."
}
{
    "Origin": "Returns a string representation of this object; useful for testing and debugging.",
    "Reference": "Returns a string representation of this object.",
    "HebCup": "Returns a string representation of this object; useful for testing and debugging."
}
{
    "Origin": "Queries {@code _mapping} definition to automatically detect all types for an index",
    "Reference": "Queries {@code _alias} definition to automatically detect all indices",
    "HebCup": "Queries {@code _alias} definition to automatically detect all types for an index"
}
{
    "Origin": "Create an instance of {@link JAXBElement }{@code <}{@link CTMarkupRange }{@code >}}",
    "Reference": "Create an instance of {@link JAXBElement }{@code <}{@link CTMoveToRangeEnd }{@code >}}",
    "HebCup": "Create an instance of {@link JAXBElement} {@code <} {@link CTMoveToRangeEnd} {@code >}}"
}
{
    "Origin": "Setter for {@link #allowOnlyRequestedHeaders}",
    "Reference": "Setter for {@link #exposedHeaders}",
    "HebCup": "Setter for {@link#exposedHeaders}"
}
{
    "Origin": "This works if {@link #dbnodes} is set to true.",
    "Reference": "This works if {@link #data} is assigned.",
    "HebCup": "This works if {@link #dbnodes} is set to true."
}
{
    "Origin": "Returns true if field ttlAction is set (has been assigned a value) and false otherwise",
    "Reference": "Returns true if field ttlActionNotUsed is set (has been assigned a value) and false otherwise",
    "HebCup": "Returns true if field TtlActionNotUsed is set (has been assigned a value) and false otherwise"
}
{
    "Origin": "{@link Publication#isOriginal()} is true,  then an {@link AeronException}\nwill be thrown and the recording not initiated.",
    "Reference": "{@link Publication#isOriginal()} is true,  then an {@link ArchiveException}\nwill be thrown and the recording not initiated.",
    "HebCup": "{@link Publication#isOriginal ()} is true , then an {@link ArchiveException} will be thrown and the recording not initiated."
}
{
    "Origin": "Schedules a set media items action to be executed.",
    "Reference": "Schedules a new source preparation action to be executed.",
    "HebCup": "Schedules a prepare Source action to be executed."
}
{
    "Origin": "Start building a new factory class-based service binding.",
    "Reference": "Start building a new supplier class-based service binding.",
    "HebCup": "Start building a new Supplier Class-based service binding."
}
{
    "Origin": "Send request for execution via {@link #cliIo}.",
    "Reference": "Send request for execution via corresponding singleIo from {@link #ios} or sticky singleIo.",
    "HebCup": "Send request for execution via {@link #cliIo}."
}
{
    "Origin": "Returns a session attribute.",
    "Reference": "Returns the value of a session attribute.",
    "HebCup": "Returns a session attribute."
}
{
    "Origin": "Returns the list documents that have been processed or \nif no documents were present.",
    "Reference": "Returns the list documents that have been processed or an empty list if\nno documents were present.",
    "HebCup": "List the list documents that have been processed or if no documents were present."
}
{
    "Origin": "See {@link #setPadding(int, int, int, int)}",
    "Reference": "See {@link #setPadding(float, float, float, float)}",
    "HebCup": "See {@link#setPadding (int , float , float , float)}"
}
{
    "Origin": "Caching of path expression results (GH-1197).",
    "Reference": "Caching of path expression results.",
    "HebCup": "gh1197 of path expression results (GH-1197)."
}
{
    "Origin": "Returns an Intent to view the details of the group identified by the given URI.",
    "Reference": "Returns true the URI is a group URI.",
    "HebCup": "Returns an String to view the details of the group identified by the given URI."
}
{
    "Origin": "Returns current socket timeout limit (milliseconds), default is 10000 (10sec)",
    "Reference": "Returns current socket timeout limit (milliseconds).",
    "HebCup": "Returns current socket connectTimeout limit (milliseconds) , default is 10000 (10sec)"
}
{
    "Origin": "This is either a colon \":\" followed\nby the channel number, or the empty string.",
    "Reference": "This is either a colon \":\" followed\nby the channel number, or the empty string for a configuration channel.",
    "HebCup": "This is either a colon \":\" followed\nby the channel number, or the empty string."
}
{
    "Origin": "Gets the batch size.",
    "Reference": "Get the batch size.",
    "HebCup": "Gets the get Batch Size."
}
{
    "Origin": "Compares the relative fitness of two sets of parameter types in terms of\nmatching a third set of runtime parameter types, such that a list ordered\nby the results of the comparison would return the best match first\n(least).",
    "Reference": "Compares the relative fitness of two Executables in terms of how well they\nmatch a set of runtime parameter types, such that a list ordered\nby the results of the comparison would return the best match first\n(least).",
    "HebCup": "Compares the relative fitness of two sets of parameter types in terms of matching a third set of runtime parameter types, such that a list ordered by the results of the comparison would return the best match first (least?."
}
{
    "Origin": "The option will be converted to a\n type.",
    "Reference": "The option will be converted to a",
    "HebCup": "The option will be converted to a\n type."
}
{
    "Origin": "Informs main activity and other listeners like tasker whether logging has started/stopped",
    "Reference": "Informs main activity and broadcast listeners whether logging has started/stopped",
    "HebCup": "Informs main activity and other listeners like Broadcast whether logging has started/stopped"
}
{
    "Origin": "Returns a string representation of this object; useful for testing and debugging.",
    "Reference": "Returns a string representation of this object.",
    "HebCup": "Returns a string representation of this object; useful for testing and debugging."
}
{
    "Origin": "Creates a DBObject from this Point",
    "Reference": "Creates a Document from this Point",
    "HebCup": "Creates a Document from this Point"
}
{
    "Origin": "The attribute values of annotations must be primitive or String constants.",
    "Reference": "The attribute values of annotations must be primitive, String or Enum constants.",
    "HebCup": "The attribute values of annotations must be primitive or String constants."
}
{
    "Origin": "Compares if the given md5 matches another md5 hash.",
    "Reference": "Compares if the given hash matches another hash.",
    "HebCup": "Compares if the given actual matches another actual hash."
}
{
    "Origin": "OR o onto v inplace, i.e.",
    "Reference": "OR o onto v in-place, i.e.",
    "HebCup": "OR o onto v inplace, shiftWords.e."
}
{
    "Origin": "Get the certificate store of all processed certificates until now.",
    "Reference": "Get the map of all processed certificates until now.",
    "HebCup": "Get the certificates Map of all processed certificates until now."
}
{
    "Origin": "Attaches {@link ImageObserver} to the load icon of this node.",
    "Reference": "Attaches {@link ImageObserver} to the load icon of this {@link AsyncUniqueNode}.",
    "HebCup": "Attaches {@link ImageObserver} to the load icon of this node."
}
{
    "Origin": "This method tries to process all the available Genbank records\nin the File or InputStream, closes the underlying resource,\nand return the results in {@link LinkedHashMap}.",
    "Reference": "This method will return all the available Genbank records\nin the File or InputStream, closes the underlying resource,\nand return the results in {@link LinkedHashMap}.",
    "HebCup": "This method tries to process all the available Genbank records in the File or InputStream , closes the underlying resource , and LinkedHashMap the results in {@link LinkedHashMap}."
}
{
    "Origin": "Map module name to the new name.",
    "Reference": "Maps a module name to its new name.",
    "HebCup": "Map module name to the new name."
}
{
    "Origin": "Makes the given module visitor visit this open declaration.",
    "Reference": "Makes the given module visitor visit this opened package.",
    "HebCup": "Makes the given module visitor visit this open declaration."
}
{
    "Origin": "New attribute statement.",
    "Reference": "New attribute statement attribute statement.",
    "HebCup": "New attribute statement."
}
{
    "Origin": "Encode a PiActionGroupMember to a ActionProfileMember.",
    "Reference": "Encode a PiActionProfileMember to a ActionProfileMember.",
    "HebCup": "Encode a PiActionProfileMember to a ActionProfileMember."
}
{
    "Origin": "Map a json string to a javabean.",
    "Reference": "Serialize a json string into a javabean object.",
    "HebCup": "Map a json string to a javabean."
}
{
    "Origin": "Create an instance of {@link JAXBElement }{@code <}{@link CTMarkupRange }{@code >}}",
    "Reference": "Create an instance of {@link JAXBElement }{@code <}{@link CTMoveFromRangeEnd }{@code >}}",
    "HebCup": "Create an instance of {@link JAXBElement} {@code <} {@link CTMoveFromRangeEnd} {@code >}}"
}
{
    "Origin": "Initialize the SSL Context, factory and verifier.",
    "Reference": "Initialize the SSL Context and factory.",
    "HebCup": "Initialize the SSL Context, factory and verifier."
}
{
    "Origin": "Decodes a byte array where each byte represents an ascii '0' or '1'.",
    "Reference": "Decodes a byte array where each byte represents an ASCII '0' or '1'.",
    "HebCup": "Decodes a byte array where each byte represents an ascii '0' or '1'."
}
{
    "Origin": "Create single chunk on the already existing empty frame.",
    "Reference": "Create chunks on the h2o backend.",
    "HebCup": "Create single Chunks on the already existing empty frame."
}
{
    "Origin": "Create a {@link SNSNotificationsPublisher} unless one exists in the context already.",
    "Reference": "Create a {@link JobStateChangeSNSPublisher} unless one exists in the context already.",
    "HebCup": "Create a {@link JobStateChangeSNSPublisher} unless one exists in the context already."
}
{
    "Origin": "Delivers the exception to all registered child channels, and prohibits new streams being created on this connection.",
    "Reference": "Close all registered child channels, and prohibit new streams from being created on this connection.",
    "HebCup": "Delivers the exception to all registered child channels , and prohibits new streams being created on ch connection."
}
{
    "Origin": "So, if the given {@link Quaterniond} is\nthe identity (does not apply any additional rotation), the reflection plane will be z=0, offset by the given .",
    "Reference": "So, if the given {@link Quaterniondc} is\nthe identity (does not apply any additional rotation), the reflection plane will be z=0, offset by the given .",
    "HebCup": "So , if the given {@link Quaterniondc} is the identity (does not apply any additional rotation) , the reflection plane will be z=0 , offset by the given ."
}
{
    "Origin": "Invoke Builder.requires(Requires[])",
    "Reference": "Builder.requires(Requires[])",
    "HebCup": "Invoke REQUIRES.requires(Requires[])"
}
{
    "Origin": "***** Property SXAPP *****",
    "Reference": "***** Property SXAPPSTORE *****",
    "HebCup": "***** Property SXAPPSTORE *****"
}
{
    "Origin": "Register an input stream, using the PCollection id as the config id.",
    "Reference": "Register an input stream with certain config id.",
    "HebCup": "Register an input stream , using the PCollection streamId as the config id."
}
{
    "Origin": "Get attribute value.",
    "Reference": "Get property value.",
    "HebCup": "get Property value."
}
{
    "Origin": "Creates a ModuleReference to a module packaged as a modular JAR.",
    "Reference": "Creates a ModuleReference to a possibly-patched module in a modular JAR.",
    "HebCup": "Creates a ModuleReference to a module packaged as a modular JAR."
}
{
    "Origin": "Adds next ICE transport update request to\n{@link RequestType#TRANSPORT_UPDATE} query currently being built.",
    "Reference": "Adds next ICE transport update request to\n{@link RequestType#CHANNEL_INFO_UPDATE} query currently being built.",
    "HebCup": "Adds next ICE transport update request to {@link RequestType#CHANNEL_INFO_UPDATE} query currently being built."
}
{
    "Origin": "If we failed on either stream in or out, reply fail to coordinator",
    "Reference": "If we failed on either stream in or out, respond fail to coordinator",
    "HebCup": "If we failed on either stream in or out, reply fail to coordinator"
}
{
    "Origin": "Finds a declaration with the given name that is in scope at the current location.",
    "Reference": "Finds a variable declaration with the given name that is in scope at the current location.",
    "HebCup": "Finds a declaration with the given name that is in scope at the current location."
}
{
    "Origin": "If the original rendering contains\nspaces, the returned value is the original rendering enclosed in\nsingle quotes.",
    "Reference": "Manchester syntax parser then the returned value is the original rendering enclosed in\nsingle quotes.",
    "HebCup": "If the original rendering contains\nspaces, the returned value is the original rendering enclosed in\nsingle quotes."
}
{
    "Origin": "Adds a WarningMessage to the message set.",
    "Reference": "Adds a warning to the message set.",
    "HebCup": "Adds a WarningMessage to the message set."
}
{
    "Origin": "Used to store a few UI related settings for the current session only.",
    "Reference": "Used to store a few UI related settings in the PreferencesService (serialized to db)",
    "HebCup": "Used to store a few UI related settings for the current session only."
}
{
    "Origin": "Comma separated list of servers to start when starting tests",
    "Reference": "Comma separated list of servers to serverList when starting tests",
    "HebCup": "Comma separated list of servers to ServerList when starting tests"
}
{
    "Origin": "Get the content of this element.",
    "Reference": "Gets the value of the content property.",
    "HebCup": "Get the content of this element."
}
{
    "Origin": "First, the first record is always recorded.",
    "Reference": "The current record is always recorded.",
    "HebCup": "First, the first record is always recorded."
}
{
    "Origin": "choosing return type is based on existence of @class field in JSON",
    "Reference": "choosing return type is based on existence of @class and @type field in JSON",
    "HebCup": "choosing return type is based on existence of @class field in JSON"
}
{
    "Origin": "Convert a UTC datetime in millis to an encoded date in the default\ntimezone.",
    "Reference": "Convert a local datetime in millis to an encoded date.",
    "HebCup": "Convert a UTC datetime in millis to an encoded date in the default\ntimezone."
}
{
    "Origin": "Sets the paramConsolescript.",
    "Reference": "Sets the web server script parameter.",
    "HebCup": "Sets the paramWebserverscript."
}
{
    "Origin": "Returns the indexes of the rows to be read/built.",
    "Reference": "Returns the indexes of the rows to be read/built if the related data is available.",
    "HebCup": "Returns the indexes of the rows to be read/built."
}
{
    "Origin": "Datascience is always available as long as there is a valid license",
    "Reference": "Analytics is always available as long as there is a valid license",
    "HebCup": "Analytics is always available as long as there is a valid license"
}
{
    "Origin": "Provide a lazy {@link LaunchJobService} bean if one hasn't already been defined.",
    "Reference": "Provide a lazy {@link JobProcessManager} bean if one hasn't already been defined.",
    "HebCup": "Provide a lazy {@link JobProcessManager} bean if one hasn't already been defined."
}
{
    "Origin": "Reads {@link AnnotationData annotation data} on provided accessible object.",
    "Reference": "Reads {@link AnnotationData annotation data} on provided annotated element.",
    "HebCup": "Reads {@link AnnotationData annotation data} on provided Annotated Element."
}
{
    "Origin": "Returns the built-in service account's credential for the application if running on",
    "Reference": "This is the built-in service account if running on Google",
    "HebCup": "Returns the built-in service account's credential for the application if running on"
}
{
    "Origin": "Sets the units of this drug order",
    "Reference": "Sets the dose units of this drug order",
    "HebCup": "Sets the doseUnits of this drug order"
}
{
    "Origin": "Generates a valid document ID for a service referenced by a contract, used to\nretrieve the service from ES.",
    "Reference": "Generates a valid document ID for a api referenced by a contract, used to\nretrieve the api from ES.",
    "HebCup": "Generates a valid document ID for a Api referenced by a contract , used to retrieve the Api from ES."
}
{
    "Origin": "Determines whether a character is upper case according to\n{@linkplain Character#isUpperCase(char) Java's definition}.",
    "Reference": "Determines whether a BMP character is upper case according to\n{@linkplain Character#isUpperCase(char) Java's definition}.",
    "HebCup": "Determines whether a character is upper case according to\n{@linkplain Character#isUpperCase(char) Java's definition}."
}
{
    "Origin": "Tests that when an etag is passed to delete it will only delete if the current representation of the setting has the etag.",
    "Reference": "Tests that when an ETag is passed to delete it will only delete if the current representation of the setting has the ETag.",
    "HebCup": "Tests that when an etag is passed to deleteConfiguration it will only deleteConfiguration if the current representation of the setting has the etag."
}
{
    "Origin": "returns the object with the given ID from the pool",
    "Reference": "Returns the object with the given ID from the pool.",
    "HebCup": "returns the T with the given ID from the pool"
}
{
    "Origin": "The {@code onErrorResumeNext} method changes this\nbehavior.",
    "Reference": "The {@code onErrorResumeWith} method changes this\nbehavior.",
    "HebCup": "The {@code onErrorResumeWith} method changes this behavior."
}
{
    "Origin": "Log rule execution statistics.",
    "Reference": "Log rule execution statistics @ INFO.",
    "HebCup": "Log rule execution statistics."
}
{
    "Origin": "Returns the specified session attribute of a session.",
    "Reference": "Returns the value of a session attribute.",
    "HebCup": "Returns the specified get attribute of a session."
}
{
    "Origin": "Checks whether the openstack node contains the given physical interface.",
    "Reference": "Checks whether the openstack node contains the given patch port.",
    "HebCup": "Checks whether the openstack node contains the given physical Port."
}
{
    "Origin": "Checks if the given key is present in the modifiedProperties of this queue.",
    "Reference": "Checks if the given key is present for the given graph object in the modifiedProperties of this queue.",
    "HebCup": "Checks if the given key is present in the modifiedProperties of this queue."
}
{
    "Origin": "Does this time interval contain the specified time interval completely.",
    "Reference": "Does this time interval contain or equal the specified time interval.",
    "HebCup": "Does this time interval contain the specified time interval completely."
}
{
    "Origin": "Sets the {@link SharedKeyCredential} used to authorize requests sent to the service.",
    "Reference": "Sets the {@link StorageSharedKeyCredential} used to authorize requests sent to the service.",
    "HebCup": "Sets the {@link StorageSharedKeyCredential} used to authorize requests sent to the service."
}
{
    "Origin": "Obtains the type from a unique name.",
    "Reference": "Obtains an instance from the specified name.",
    "HebCup": "Obtains the type from a name."
}
{
    "Origin": "When the byte array is converted to a string, the UTF-8 is used.",
    "Reference": "When the byte array is converted to a string, UTF-8 is used.",
    "HebCup": "When the byte array is converted to a string, the UTF-8 is used."
}
{
    "Origin": "This can be trained with\n{@link ClauseSplitter#train(Stream, Featurizer, TrainingOptions, Optional, Optional)}.",
    "Reference": "This can be trained with\n{@link ClauseSplitter#train(Stream, Optional, Optional, Featurizer)}.",
    "HebCup": "This can be trained with\n{@link ClauseSplitter#train(Stream, Featurizer, TrainingOptions, Optional, Optional)}."
}
{
    "Origin": "This is necessary as the custom parameters must be applied in a certain order,\nand we can't assume that the consumer of this API will add them in the right order.",
    "Reference": "Builder is necessary here as the custom parameters must be applied in a certain order,\nand we can't assume that the consumer of this API will add them in the right order.",
    "HebCup": "This is necessary as the custom instance must be applied in a certain order , and we can't assume that the consumer of this API will add them in the right order."
}
{
    "Origin": "return the DataFlavors for this",
    "Reference": "Return the DataFlavors for this",
    "HebCup": "return the DataFlavors for this"
}
{
    "Origin": "Create a new reader with the new type {@code B}.",
    "Reference": "Create a new reader for the new mapped type {@code B}.",
    "HebCup": "Create a new xml with the new type {@code B}."
}
{
    "Origin": "Invoke Builder.provides(Provides[] provides)",
    "Reference": "Builder.provides(Provides[] provides)",
    "HebCup": "Invoke PROVIDES.provides(Provides[] provides)"
}
{
    "Origin": "The aspectRatio method is called",
    "Reference": "The size method is called",
    "HebCup": "The aspectRatio method is called"
}
{
    "Origin": "This can be trained with\n{@link ClauseSplitter#train(Stream, Featurizer, TrainingOptions, Optional, Optional)}.",
    "Reference": "This can be trained with\n{@link ClauseSplitter#train(Stream, Optional, Optional, Featurizer)}.",
    "HebCup": "This can be trained with\n{@link ClauseSplitter#train(Stream, Featurizer, TrainingOptions, Optional, Optional)}."
}
{
    "Origin": "Get UPC/EAN.",
    "Reference": "Get CU-UPC.",
    "HebCup": "get UPC _ CU/EAN."
}
{
    "Origin": "set Parser state to {@link XmlState}.",
    "Reference": "set Parser state to {@link ProcessingInstructionEncounteredState}.",
    "HebCup": "set Parser state to {@link processingInstructionState}."
}
{
    "Origin": "Throw an {@link IllegalArgumentException} if the request is null or negative.",
    "Reference": "Log an {@link IllegalArgumentException} if the request is null or negative.",
    "HebCup": "if an {@link IllegalArgumentException} if the request is null or negative."
}
{
    "Origin": "Adds a state (as a vertix) to the State-Flow Graph if not already present.",
    "Reference": "Adds a state (as a vertex) to the State-Flow Graph if not already present.",
    "HebCup": "Adds a state (as a Vertex) to the State-Flow Graph if not already present."
}
{
    "Origin": "Whether the calendar should be infinite or limited to a number of days.",
    "Reference": "Whether the calendar should be infinite (default) or limited to a number of days.",
    "HebCup": "Whether the calendar should be infinite or limited to a number of days."
}
{
    "Origin": "If a full restart recovery is currently pending, this recovery is included in the\ncount.",
    "Reference": "If a recovery is currently pending, this recovery is included in the count.",
    "HebCup": "If a Restarts recovery is currently pending, this recovery is included in the count."
}
{
    "Origin": "The supported fields are Year, DayOfYear and MillisOfDay.",
    "Reference": "The supported fields are Year, MonthOfDay, DayOfMonth and MillisOfDay.",
    "HebCup": "The supported fields are Year, DayOfYear and MillisOfDay."
}
{
    "Origin": "Add validation for a particular signature",
    "Reference": "Add verification for a particular signature",
    "HebCup": "Add verification for a particular signature"
}
{
    "Origin": "Store the result of the current assignment statement in the given scope.",
    "Reference": "Stores the result of an current assignment expression in the given scope.",
    "HebCup": "Store the result of the current assignment statement in the given scope."
}
{
    "Origin": "**See also:**\n* [Working with grammars](URL)\n* [Add grammars to the custom language model](URL).",
    "Reference": "**See also:**\n* [Understanding\ngrammars](URL)\n* [Add a grammar to the custom language\nmodel](URL).",
    "HebCup": "**See also:** * [Working with grammars] (URL responseConverter * [Add grammars to the custom language model] (URL)."
}
{
    "Origin": "Returns a number that encodes how contents of the arrangement are aligned vertically.",
    "Reference": "Returns a number that encodes how contents of the %type% are aligned vertically.",
    "HebCup": "Returns a number that encodes how contents of the %type% are aligned vertically."
}
{
    "Origin": "This delegates to {@link #execute(CommandSender, String, String[], CommandMessages)}.",
    "Reference": "This delegates to {@link #execute(CommandSender, String, String[], ResourceBundle,",
    "HebCup": "This delegates to {@link#execute (CommandSender , bundle , String[] , CommandMessages)}."
}
{
    "Origin": "Since this may read it's inputs more than once this method does all the opening\nand checking of the inputs.",
    "Reference": "Since this may read its inputs more than once this method does all the opening\nand checking of the inputs.",
    "HebCup": "Since this may read it's gets more than once this method does all the opening and checking of the inputs."
}
{
    "Origin": "Get offset segment.",
    "Reference": "Get offset parameter index.",
    "HebCup": "get Offset Parameter Index."
}
{
    "Origin": "What happens when you put an object in an Entity?",
    "Reference": "What happens when you put a single null in a collection in an Entity?",
    "HebCup": "What happens when you put an Properties in an Entity?"
}
{
    "Origin": "Returns the Java types corresponding to the argument types of the given\nmethod descriptor.",
    "Reference": "Returns the {@link Type} values corresponding to the argument types of the given method\ndescriptor.",
    "HebCup": "Returns the Java types corresponding to the argument types of the given\nmethod descriptor."
}
{
    "Origin": "The output fraction will have the minimum width necessary between\nthe minimum and maximum widths - trailing zeroes are omitted.",
    "Reference": "The printed fraction will have the minimum width necessary between\nthe minimum and maximum widths - trailing zeroes are omitted.",
    "HebCup": "The output fraction will have the minimum width necessary between\nthe minimum and maximum widths - trailing zeroes are omitted."
}
{
    "Origin": "WorkflowExecutionSignaled event is recorded in the history of the\ncurrent open workflow with the matching workflowId in the domain.",
    "Reference": "If a runId is not specified, then the\n event is recorded in the history\nof the current open workflow with the matching workflowId in the\ndomain.",
    "HebCup": "WorkflowExecutionSignaled event is recorded in the history of the\ncurrent open workflow with the matching workflowId in the domain."
}
{
    "Origin": "Determines if an DRACOON account is automatically created for a new user who successfully logs on with his / her AD account.",
    "Reference": "Determines if a DRACOON account is automatically created for a new user who successfully logs on with his / her AD / IDP account.",
    "HebCup": "Determines if a DRACOON account is automatically created for a new user who successfully logs on with his / her AD account."
}
{
    "Origin": "Creates external docs swagger definition.",
    "Reference": "Creates external docs openApi definition.",
    "HebCup": "Creates external docs openApi definition."
}
{
    "Origin": "If no filter is specified,\na default of \"(objectClass=*)\" is returned.",
    "Reference": "If no filter is specified,\na default of \"(objectClass=user)\" is returned.",
    "HebCup": "If no filter is specified, a default of ``(objectClass=user)`` is returned."
}
{
    "Origin": "Creates a temporary snapshot directory for the given path.",
    "Reference": "Creates a local temporary snapshot directory for the given path.",
    "HebCup": "Creates a temporary snapshot directory for the given File."
}
{
    "Origin": "Returns the {@link ResolvedJavaMethod} for the vmtarget of a java.lang.invoke.MemberName.",
    "Reference": "Returns the {@link ResolvedJavaMethod} for the method of a java.lang.invoke.MemberName.",
    "HebCup": "Returns the {@link ResolvedJavaMethod} for the vmtarget of a java.lang.invoke.method."
}
{
    "Origin": "Computes the average for each pixel across all bands in the {@link Planar} image.",
    "Reference": "Computes the average for each pixel across selected bands in the {@link Planar} image.",
    "HebCup": "Computes the average for each pixel across all bands in the {@link Planar} image."
}
{
    "Origin": "Returns the number of open flows on this connection, if the connection has been established.",
    "Reference": "Returns the number of open flows on this connection.",
    "HebCup": "Returns the number of open flows on this connection, if the connection has been established."
}
{
    "Origin": "Runs bean level validators on the bean after saving.",
    "Reference": "Runs bean level validators on the bean after writing.",
    "HebCup": "Runs bean level validators on the bean after saving."
}
{
    "Origin": "Use this method if you don't have the source root but a LSDocument instance\nfor a document in the project.",
    "Reference": "Use this method if you don't have the source root but a LSDocument instance\nfor a lsDocument in the project.",
    "HebCup": "Use this method if you don't have the source root but a LSDocument instance for a lsDocument in the project."
}
{
    "Origin": "Commits and closes the transaction without returning CommitLog",
    "Reference": "Commits and closes the transaction",
    "HebCup": "Commits and closes the transaction without returning CommitLog"
}
{
    "Origin": "Returns a {@link TrackedDevicePose} view of the {@code standingTrackedDevicePose} field.",
    "Reference": "Returns a {@link TrackedDevicePose} view of the {@code trackedDevicePose} field.",
    "HebCup": "Returns a {@link TrackedDevicePose} view of the {@code trackedDevicePose} field."
}
{
    "Origin": "Encode a PiActionGroupMember to a ActionProfileMember.",
    "Reference": "Encode a PiActionProfileMember to a ActionProfileMember.",
    "HebCup": "Encode a PiActionProfileMember to a ActionProfileMember."
}
{
    "Origin": "If the list is empty no prefiltering can be done.",
    "Reference": "If the list is empty no partition can match.",
    "HebCup": "If the list is empty no prefiltering can be done."
}
{
    "Origin": "or throws a {@link com.liferay.calendar.NoSuchBookingException} if it could not be found.",
    "Reference": "or throws a {@link NoSuchBookingException} if it could not be found.",
    "HebCup": "or throws a {@link com.liferay.calendar.NoSuchBookingException} if it could not be found."
}
{
    "Origin": "Falls back on the attribute if the groups are the same size.",
    "Reference": "Falls back on the group key if the groups are the same size.",
    "HebCup": "Falls back on the GroupKey if the groups are the same size."
}
{
    "Origin": "Create an initial optimistic locking value according the {@link VersionType}\ncontract for the version property.",
    "Reference": "Create an initial optimistic locking value according the {@link VersionSupport}\ncontract for the version property.",
    "HebCup": "Create an initial optimistic locking value according the {@link VersionSupport} contract for the version property."
}
{
    "Origin": "Returns a copy of this ZonedDateTime changing the zone offset to the\nlater of the two valid offsets at a local time-line overlap.",
    "Reference": "Returns a copy of this date-time changing the zone offset to the\nlater of the two valid offsets at a local time-line overlap.",
    "HebCup": "Returns a copy of this ZonedDateTime changing the zone laterOffset to the later of the two valid offsets at a local time-line overlap."
}
{
    "Origin": "Register one or more annotated classes to be processed.",
    "Reference": "Register one or more component classes to be processed.",
    "HebCup": "Register one or more component Classes to be processed."
}
{
    "Origin": "Returns a range of all the sync d l objects where companyId = ?",
    "Reference": "Returns a range of all the sync d l objects where modifiedTime > ?",
    "HebCup": "Returns a range of all the sync d l objects where companyId = ?"
}
{
    "Origin": "Get the value of the {@code accessible} flag for this object.",
    "Reference": "Get the value of the {@code accessible} flag for this reflected object.",
    "HebCup": "Get the value of the {@code accessible} flag for this object."
}
{
    "Origin": "Rotate this vector the specified radians about the given rotation axis.",
    "Reference": "Rotate this vector the specified radians around the given rotation axis.",
    "HebCup": "Rotate this vector the specified radians Axis the given rotation axis."
}
{
    "Origin": "Get a {@link DirectExecutionContext} for the provided {@link PTransformNode} and key.",
    "Reference": "Get a {@link DirectStateAndTimers} for the provided {@link PTransformNode} and key.",
    "HebCup": "Get a {@link DirectStateAndTimers} for the provided {@link PTransformNode} and key."
}
{
    "Origin": "Creates a {@link Service} which handles SAML messages.",
    "Reference": "Creates an {@link HttpService} which handles SAML messages.",
    "HebCup": "Creates a {@link HttpService} which handles SAML messages."
}
{
    "Origin": "Return an empty list for no children, and return {@code null} for the error.",
    "Reference": "Return an empty\nlist for no children rather than using result code for error.",
    "HebCup": "Return an empty LibraryResult for no children , and return {@code null} for the error."
}
{
    "Origin": "Sets the alternateIntents.",
    "Reference": "Set the alternateIntents.",
    "HebCup": "Sets the alternateIntents."
}
{
    "Origin": "This maps either the security ID or the legal entity ID to a group.",
    "Reference": "This maps the legal entity ID to a group.",
    "HebCup": "This maps either the security ID or the legal entity ID to a group."
}
{
    "Origin": "Is grand type supported service.",
    "Reference": "Is grant type supported service.",
    "HebCup": "is Grant Type Supported service."
}
{
    "Origin": "Build the extern package list from given URL or the directory path,\nas specified with the \"-linkoffline\" flag.",
    "Reference": "Build the extern element list from given URL or the directory path,\nas specified with the \"-linkoffline\" flag.",
    "HebCup": "Build the extern package list from given URL or the directory path,\nas specified with the \"-linkoffline\" flag."
}
{
    "Origin": "Sets the userId.",
    "Reference": "Set the userId.",
    "HebCup": "Sets the userId."
}
{
    "Origin": "Removes the specified keys from the metadata of the specified {@link NamespacedEntityId}.",
    "Reference": "Removes the specified keys from the metadata of the specified {@link MetadataEntity}.",
    "HebCup": "Removes the specified keys from the metadata of the specified {@link MetadataEntity}."
}
{
    "Origin": "After the {@link InstanceManager} is created, we specifically do not call\nany more methods on it: the locator must instantiate the Immediate\nservice without any further prompting to the locator.",
    "Reference": "After the {@link InjectionManager} is created, we specifically do not call\nany more methods on it: the locator must instantiate the Immediate\nservice without any further prompting to the locator.",
    "HebCup": "After the {@link InjectionManager} is created , we specifically do not call any more methods on it: the locator must instantiate the Immediate service without any further prompting to the locator."
}
{
    "Origin": "Refreshes the JList with the log records contained by {@link DebugConsoleHandler}.",
    "Reference": "Refreshes the JList with the log records contained by {@link DebugConsoleAppender}.",
    "HebCup": "Refreshes the JList with the log records contained by {@link DebugConsoleAppender}."
}
{
    "Origin": "Here it checks whether the Sample\ntook to long to be considered successful.",
    "Reference": "Here it checks whether the Sample data is XML.",
    "HebCup": "Here it checks whether the Sample\ntook to long to be considered successful."
}
{
    "Origin": "The calibration is defined using {@link CurveGroupDefinition}.",
    "Reference": "The calibration is defined using {@link RatesCurveGroupDefinition}.",
    "HebCup": "The calibration is defined using {@link RatesCurveGroupDefinition}."
}
{
    "Origin": "Returns the descriptor corresponding to the given Java type.",
    "Reference": "Returns the descriptor corresponding to the given class.",
    "HebCup": "Returns the descriptor corresponding to the given Java type."
}
{
    "Origin": "Gets the count of P2SH Sig Ops in the Script scriptSig scaled by WITNESS_SCALE_FACTOR",
    "Reference": "Gets the count of P2SH Sig Ops in the Script scriptSig",
    "HebCup": "Gets the count of P2SH Sig Ops in the Script scriptSig scaled by WITNESS_SCALE_FACTOR"
}
{
    "Origin": "Checks whether this connection has a ongoing handshake initiated\nreceiving the provided client hello.",
    "Reference": "Checks whether this connection is started for the provided CLIENT_HELLO.",
    "HebCup": "Checks whether this connection has a started By Client initiated receiving the provided client hello."
}
{
    "Origin": "Code snippets for {@link DataLakePathAsyncClient#setAccessControl(PathAccessControl)}",
    "Reference": "Code snippets for {@link DataLakePathAsyncClient#setAccessControlList(List, String, String)}",
    "HebCup": "Code snippets for {@link DataLakePathAsyncClient#setAccessControl(PathAccessControlEntry)}"
}
{
    "Origin": "Determines whether a character is a digit according to {@linkplain Character#isDigit(char)",
    "Reference": "Determines whether a character is a BMP digit according to {@linkplain Character#isDigit(char)",
    "HebCup": "Determines whether a character is a digit according to {@linkplain Character#isDigit(char)"
}
{
    "Origin": "Returns the name that identifies this service for the config-sentinel.",
    "Reference": "Returns the name that identifies this service for the config-sentinel, never null",
    "HebCup": "Returns the name that identifies this service for the config-sentinel."
}
{
    "Origin": "Calculate the log10 likelihoods of the ref/alt het genotype for each alt allele, then subtracts\nthese from the hom ref log10 likelihood to get the log-odds.",
    "Reference": "Calculate the log likelihoods of the ref/alt het genotype for each alt allele, then subtracts\nthese from the hom ref log likelihood to get the log-odds.",
    "HebCup": "Calculate the log10 likelihoods of the ref/alt het genotype for each alt allele, then subtracts these from the hom Ref Log Likelihood to get the log-odds."
}
{
    "Origin": "Returns the {@code AccountGroup} for the specified UUID if it exists.",
    "Reference": "Returns the {@code InternalGroup} for the specified UUID if it exists.",
    "HebCup": "Returns the {@code InternalGroup} for the specified UUID if it exists."
}
{
    "Origin": "Get all {@link Execution}s contained in this {@link ExecutionResults}.",
    "Reference": "Get all Test {@link Execution}s contained in this {@link ExecutionResults}.",
    "HebCup": "Get all {@link Execution}s contained in this.test {@link ExecutionResults}."
}
{
    "Origin": "Applies a configuration entry to the internal state machine.",
    "Reference": "Applies a command entry to the state machine.",
    "HebCup": "Applies a Indexed to the internal state machine."
}
{
    "Origin": "Returns an unmodifiable Map of metadata for a given alias.",
    "Reference": "Returns an unmodifiable Map of properties for a given alias.",
    "HebCup": "Returns an unmodifiable Map of Properties for a given alias."
}
{
    "Origin": "Sets the color of the description text.",
    "Reference": "Returns the Description object of the chart.",
    "HebCup": "get the color of the description text."
}
{
    "Origin": "Get the current all agents state.",
    "Reference": "Get the agents.",
    "HebCup": "Get the current all getAll state."
}
{
    "Origin": "Escapes a URI, replacing \"/\" and \".\"",
    "Reference": "Escapes a URI, replacing \"/\" with \"%2F\".",
    "HebCup": "Escapes a URI, replacing \"/\" and \".\""
}
{
    "Origin": "See {@link IChangeLog#transactionCommited()}.",
    "Reference": "See {@link IChangeLog#transactionCommited(long)}.",
    "HebCup": "See {@link IChangeLog#transactionCommited()}."
}
{
    "Origin": "With the check in the {@link Callable} passed to the guava cache, we avoid building an extra context.",
    "Reference": "With the check in the {@link Callable} passed to the Guava cache, we avoid building an extra context.",
    "HebCup": "With the check in the {@link Callable} passed to the guava cache, we avoid building an extra context."
}
{
    "Origin": "Gets the request page number from the specified request URI and tag title.",
    "Reference": "Gets the request page number from the specified request URI and category URI.",
    "HebCup": "Gets the request page number from the specified request URI and category URI."
}
{
    "Origin": "Do nothing if\n{@link BaseConfiguration#nocomment} is set to true.",
    "Reference": "Do nothing if\n{@link BaseOptions#noComment} is set to true.",
    "HebCup": "Do nothing if {@link Baseoptions.no#nocomment} is set to true."
}
{
    "Origin": "Returns a literal for the {@link Reference} cardinality.",
    "Reference": "Returns a literal for the {@link ScrService.Reference} cardinality.",
    "HebCup": "Returns a literal for the {@link ScrService.Reference} cardinality."
}
{
    "Origin": "The option will be converted to a\n type.",
    "Reference": "The option will be converted to a",
    "HebCup": "The option will be converted to a\n type."
}
{
    "Origin": "This function completes the input future when the channel is registered.",
    "Reference": "This function completes the input future when the channel is ready.",
    "HebCup": "This function completes the input future when the channel is Ready."
}
{
    "Origin": "Delegates to {@link AutowireUtils#resolveDependency}.",
    "Reference": "Delegates to {@link ParameterResolutionDelegate#resolveDependency}.",
    "HebCup": "Delegates to {@link ParameterResolutionDelegate#resolveDependency}."
}
{
    "Origin": "Get Divide Rate.",
    "Reference": "Get Divisor.",
    "HebCup": "Get Divide Rate."
}
{
    "Origin": "Support for X11 cannot be provided due to an oversight in the way that\nXRecord currently operates.",
    "Reference": "Event propagation support for X11 cannot be provided due to an oversight\nin the way that XRecord currently operates.",
    "HebCup": "Support for X11 cannot be provided due to an oversight in the way that\nXRecord currently operates."
}
{
    "Origin": "Removes an {@link OnNavigatedListener} from this controller.",
    "Reference": "Removes an {@link OnDestinationChangedListener} from this controller.",
    "HebCup": "Removes an {@link OnCurrentDestinationChangedListener} from this controller."
}
{
    "Origin": "If this node is Array Node and has value for specified index, {@code this} is returned\n to allow chaining; otherwise {@link IllegalArgumentException} is thrown.",
    "Reference": "If this node is Array Node and has value for specified index, {@code this} is returned\n to allow chaining;\n otherwise exception is thrown.",
    "HebCup": "If this node is Array Node and has value for specified index, {@code this} is returned\n to allow chaining; otherwise {@link IllegalArgumentException} is thrown."
}
{
    "Origin": "Create an array of MapSqlParameterSource objects populated with data from the\nvalues passed in.",
    "Reference": "Create an array of {@link MapSqlParameterSource} objects populated with data from\nthe values passed in.",
    "HebCup": "Create an array of MapsSqlParameterSource objects populated with data from the values passed in."
}
{
    "Origin": "Timeout waiting to hear the status of all cluster members before voting if a majority have been heard from.",
    "Reference": "Timeout waiting to canvass the status of cluster members before voting if a majority have been heard from.",
    "HebCup": "Timeout waiting to hear the Canvass of all cluster members before voting if a majority have been heard from."
}
{
    "Origin": "Jsonify string.",
    "Reference": "Jsonify.",
    "HebCup": "toJson string."
}
{
    "Origin": "Parses the ballerina/http@config annotation and builds swagger definition.",
    "Reference": "Parses the ballerina/http@config annotation and builds openApi definition.",
    "HebCup": "Parses the ballerina/http @config annotation and builds openApi definition."
}
{
    "Origin": "Gets the synonymText.",
    "Reference": "Gets the synonym.",
    "HebCup": "Gets the synonym."
}
{
    "Origin": "Complexity: 6 (2 of which emulated) trigonometric functions.",
    "Reference": "Complexity: 6 trigonometric functions.",
    "HebCup": "Complexity: 6 (2 of which emulated 0 trigonometric functions."
}
{
    "Origin": "Specifies if a visual feedback should be shown when a button with an assigned image\nis pressed.",
    "Reference": "Specifies if a visual feedback should be shown when a %type% with an assigned image\nis pressed.",
    "HebCup": "Specifies if a visual feedback should be shown when a %type% with an assigned image is pressed."
}
{
    "Origin": "Overload of {@link #connect(String, ServerStateListener, ServerConnectionFailListener)} with only one listener.",
    "Reference": "Overload of {@link #connect(String, ServerStateListener, ServerReconnectFilter)} with only one listener.",
    "HebCup": "Overload of {@link#connect (String , ServerStateListener , ServerReconnectFilter)} with only one listener."
}
{
    "Origin": "Creates a RFC-6454 comparable origin from the {@code origin} string.",
    "Reference": "Creates a RFC-6454 comparable URI from the {@code uri} string.",
    "HebCup": "Creates a RFC-6454 comparable origin from the {@code origin} (."
}
{
    "Origin": "Creates an instance of {@link RowFactory} using provided {@link RowTypeFactory}\nand {@link GeneratedGetterFactory}.",
    "Reference": "Creates an instance of {@link RowFactory} using provided {@link SchemaFactory}\nand {@link GeneratedGetterFactory}.",
    "HebCup": "Creates an instance of {@link RowFactory} using provided {@link SchemaFactory} and {@link GeneratedGetterFactory}."
}
{
    "Origin": "Create or obtain a {@link PreparedStatement} from the pool.",
    "Reference": "Creates or obtains a {@link PreparedStatement} from the pool.",
    "HebCup": "Create or obtain a {@link PreparedStatement} from the pool."
}
{
    "Origin": "Special handling for NTFS ADS: Don't accept colon in the filename.",
    "Reference": "Special handling for NTFS ADS: Don't accept colon in the fileName.",
    "HebCup": "Special handling for NTFS ADS: Don't accept colon in the fileName."
}
{
    "Origin": "ModifyCluster API to associate a different security group and\ndifferent parameter group with the restored cluster.",
    "Reference": "Amazon Redshift creates the cluster, you can use the ModifyCluster\nAPI to associate a different security group and different parameter group\nwith the restored cluster.",
    "HebCup": "ModifyCluster API to associate a different security group and\ndifferent parameter group with the restored cluster."
}
{
    "Origin": "Report the reference point for the moving inter located on 'center' point.",
    "Reference": "Report the staff reference point for the moving inter location.",
    "HebCup": "Report the reference point for the moving inter located on 'location' point."
}
{
    "Origin": "Get the sorted iterable of all {@link RankedProvider providers} (custom and default) registered for the given service\nprovider contract in the underlying {@link InstanceManager instance manager} container.",
    "Reference": "Get the sorted iterable of all {@link RankedProvider providers} (custom and default) registered for the given service\nprovider contract in the underlying {@link InjectionManager injection manager} container.",
    "HebCup": "Get the sorted iterable of all {@link RankedProvider providers} (custom and default) registered for the given service provider contract in the underlying {@link InjectionManager instance manager} container."
}
{
    "Origin": "This method returns the textual part of the filename before the last dot.",
    "Reference": "This method returns the textual part of the fileName before the last dot.",
    "HebCup": "This method returns the textual part of the fileName before the last dot."
}
{
    "Origin": "The second record is gets decrypted so this method also checks its content.",
    "Reference": "The third record is decrypted so this method also checks its content.",
    "HebCup": "The second record is gets decrypted so this method also checks its content."
}
{
    "Origin": "Obtain a {@link RemoteRepository} for the data set having the specified\nSPARQL end point.",
    "Reference": "Obtain a flyweight {@link RemoteRepository} for the data set having the specified\nSPARQL end point.",
    "HebCup": "Obtain a {@link RemoteRepository} for the data set having the specified\nSPARQL end point."
}
{
    "Origin": "Get infrastructure properties\n### Functional Description:   DRACOON infrastructure properties entry point.",
    "Reference": "Get infrastructure properties\n### \ud83d\ude80 Since version VERSION  ### Functional Description:   DRACOON infrastructure properties entry point.",
    "HebCup": "Get infrastructure properties\n### Functional Description:   DRACOON infrastructure properties entry point."
}
{
    "Origin": "Creates a new standby {@link FileSystemMaster} from journal along with its dependencies, and\nreturns the master registry containing that master.",
    "Reference": "Creates a new standby {@link FileSystemMaster} from journal along with its dependencies, and\nreturns the master registry and the journal system.",
    "HebCup": "Creates a new standby {@link FileSystemMaster} from journal along with its dependencies, and returns the Fs Master Resource containing that master."
}
{
    "Origin": "Checks the dirty status of the 'batchId' field.",
    "Reference": "Checks the dirty status of the 'sitemaps' field.",
    "HebCup": "Checks the dirty status of the 'batchId' field."
}
{
    "Origin": "Whether the given {@code @InitBinder} method should be used to initialize\nthe given WebDataBinder instance.",
    "Reference": "Determine whether the given {@code @InitBinder} method should be used\nto initialize the given {@link WebDataBinder} instance.",
    "HebCup": "Whether the given {@code @InitinitBinder} method should be used to initialize the given WebDatainitBinder instance."
}
{
    "Origin": "The {@link RsaKeyCreateOptions#getKeyType() keyType} indicates the type of key to create.",
    "Reference": "The {@link CreateRsaKeyOptions#getKeyType() keyType} indicates the type of key to create.",
    "HebCup": "The {@link CreateRsaKeyOptions#getKeyType () keyType} indicates the type of key to create."
}
{
    "Origin": "Sets the text.",
    "Reference": "Set the text.",
    "HebCup": "Sets the text."
}
{
    "Origin": "Write a line of the CoNLL output.",
    "Reference": "Produce a line of the CoNLL output.",
    "HebCup": "Write a line of the CoNLL output."
}
{
    "Origin": "Returns an array containing some validators in order to validate the",
    "Reference": "Returns an array containing some validators in order to validate the SootClass",
    "HebCup": "Returns an array containing some validators in order to validate the"
}
{
    "Origin": "Set the sentenceLocation.",
    "Reference": "Set the sentenceLocations.",
    "HebCup": "Set the sentenceLocations."
}
{
    "Origin": "Registers the LocalDispatcher with this ServiceDispatcher",
    "Reference": "Registers the loader with this ServiceDispatcher",
    "HebCup": "Registers the DispatchContext with this ServiceDispatcher"
}
{
    "Origin": "Test if the paths are the same.",
    "Reference": "Test if the paths are the same name.",
    "HebCup": "Test if the paths are the SameName."
}
{
    "Origin": "Integers 0 ... n.",
    "Reference": "Integers 0 ... n - 1.",
    "HebCup": "Integers 0 ... n."
}
{
    "Origin": "Create parameters necessary for creating a single use Alipay source.",
    "Reference": "Create single-use Alipay Source params.",
    "HebCup": "Create parameters necessary for creating a single use Alipay source."
}
{
    "Origin": "Size of a dash array is even and sum of all the units off in the array is 0.",
    "Reference": "It's solid when the\nsize of a dash array is even and sum of all the units off in the array\nis 0.",
    "HebCup": "Size of a dash array is even and sum of all the units off in the array is 0."
}
{
    "Origin": "The {@link MessageReceiver} will be selected in the following way\nfrom the {@link Cause} in {@link #getCause()}:",
    "Reference": "The {@link MessageChannel} will be selected in the following way\nfrom the {@link Cause} in {@link #getCause()}:",
    "HebCup": "The {@link MessageChannel} will be selected in the following way from the {@link Cause} in {@link#getCause ()}:"
}
{
    "Origin": "Create or obtain a {@link PreparedStatement} from the pool.",
    "Reference": "Creates or obtains a {@link PreparedStatement} from the pool.",
    "HebCup": "Create or obtain a {@link PreparedStatement} from the pool."
}
{
    "Origin": "Associates memoryCacheKey with imageView.",
    "Reference": "Associates memoryCacheKey with imageAware.",
    "HebCup": "Associates memoryCacheKey with ImageAware."
}
{
    "Origin": "Get the current file's imports.",
    "Reference": "Get the current module's imports.",
    "HebCup": "Get the get Current Module Imports's imports."
}
{
    "Origin": "Sets the propagate flags for this event.",
    "Reference": "Sets the reserved flags for this event.",
    "HebCup": "Sets the Reserved flags for this event."
}
{
    "Origin": "Main method to invoke this demo about how to recognize entities of a text input.",
    "Reference": "Main method to invoke this demo about how to recognize the entities of an input text.",
    "HebCup": "Main method to invoke this demo about how to recognize entity of a text input."
}
{
    "Origin": "Returns all the sync d l objects where modifiedTime > ?",
    "Reference": "Returns an ordered range of all the sync d l objects where modifiedTime > ?",
    "HebCup": "Returns all the sync d l objects where modifiedTime > ?"
}
{
    "Origin": "Converts a single {@link OutputStream} into multiple {@link ByteString ByteStrings}.",
    "Reference": "Converts a single element delimited {@link OutputStream} into multiple\n{@link ByteString ByteStrings}.",
    "HebCup": "Converts a single {@link ElementDelimitedOutputStream} into multiple {@link ByteString ByteStrings}."
}
{
    "Origin": "The rotations in this policy",
    "Reference": "The endpoints of this policy",
    "HebCup": "The endpoints in this policy"
}
{
    "Origin": "[IF Sidecar19-SE]",
    "Reference": "[IF Java14]",
    "HebCup": "[IF Sidecar19-SE]"
}
{
    "Origin": "Decorates and binds the specified {@link ServiceWithRoutes} at multiple {@link Route}s\nof the default {@link VirtualHost}.",
    "Reference": "Decorates and binds the specified {@link HttpServiceWithRoutes} at multiple {@link Route}s\nof the default {@link VirtualHost}.",
    "HebCup": "Decorates and binds the specified {@link HttpServiceWithRoutes} at multiple {@link Route}s of the default {@link VirtualHost}."
}
{
    "Origin": "Create client request filtering stage using the instance manager.",
    "Reference": "Create client request filtering stage using the injection manager.",
    "HebCup": "Create client request filtering stage using the Injection Manager."
}
{
    "Origin": "Initialization required for editing an xml bundle.",
    "Reference": "Initialize the key set for an xml bundle.",
    "HebCup": "Initialization required for editing an xml bundle."
}
{
    "Origin": "return the Transfer Data of type DataFlavor from InputStream",
    "Reference": "Return the Transfer Data of type DataFlavor from InputStream",
    "HebCup": "return the Transfer Data of type DataFlavor from InputStream"
}
{
    "Origin": "The timestamp for the most recent update to the synonym.",
    "Reference": "The timestamp for the most recent update to the object.",
    "HebCup": "The timestamp for the most recent update to the synonym."
}
{
    "Origin": "Return the name for the selector header.",
    "Reference": "Return the name for the selector header name.",
    "HebCup": "Return the name for the selector header."
}
{
    "Origin": "Amazon CloudSearch will still automatically scale your domain\nbased on the volume of data and traffic, but not below the desired\ninstance type and replication count.",
    "Reference": "CloudSearch will still automatically scale your domain based on the\nvolume of data and traffic, but not below the desired instance type and\nreplication count.",
    "HebCup": "Amazon CloudSearch will still automatically scale your domain\nbased on the volume of data and traffic, but not below the desired\ninstance type and replication count."
}
{
    "Origin": "Sets the value of the 'RowKey' field.",
    "Reference": "Sets the value of the 'rowKey' field.",
    "HebCup": "Sets the value of the 'rowKey' field."
}
{
    "Origin": "Creates a multi expression for evaluating a method call instance,\npossible clinit, and all arguments.",
    "Reference": "Creates a lists of expression for evaluating a method call instance,\npossible clinit, and all arguments.",
    "HebCup": "Creates a multi expressions for evaluating a method call instance , possible clinit , and all arguments."
}
{
    "Origin": "Test ModuleModule with a JAR file containing a .class file in the top\nlevel directory.",
    "Reference": "Test ModuleFinder with a JAR file containing a .class file in the top\nlevel directory.",
    "HebCup": "Test ModuleModule with a JAR file containing a .class file in the top\nlevel directory."
}
{
    "Origin": "You\nshould always check the response for a  at which to\ncontinue the list; if there are no more items the \nis  .",
    "Reference": "You should always\ncheck the response for a marker at which to\ncontinue the list; if there are no more items the\nmarker is null.",
    "HebCup": "You\nshould always check the response for a  at which to\ncontinue the list; if there are no more items the \nis  ."
}
{
    "Origin": "Gets the list of {@link SecretProperties SecretProperties} on this page.",
    "Reference": "Gets the iterable stream of {@link SecretProperties SecretProperties} on this page.",
    "HebCup": "Gets the IterableStream of {@link SecretProperties SecretProperties} on this page."
}
{
    "Origin": "The meta-property for the {@code referenceEntityIds} property.",
    "Reference": "The meta-property for the {@code legalEntityIds} property.",
    "HebCup": "The meta-property for the {@code legalEntityIds} property."
}
{
    "Origin": "See Immutable Set Static Factory Methods for details.",
    "Reference": "See Unmodifiable Sets for details.",
    "HebCup": "See Unmodifiable Set Static Factory Methods for details."
}
{
    "Origin": "This will always return false until the scanning service starts up, at which time it will be\nknown.",
    "Reference": "This will always return false until the scanning service starts up, at which time it will be\nknown if it is in a different process.",
    "HebCup": "This will always return false until the scanning service starts up, at which time it will be\nknown."
}
{
    "Origin": "Get field types for an AVRO-generated SpecificRecord.",
    "Reference": "Get field types for an AVRO-generated SpecificRecord or a POJO.",
    "HebCup": "Get field types for an AVRO-generated SpecificRecord."
}
{
    "Origin": "If {@code null} is passed, warn logging is turned off.",
    "Reference": "If {@code null} or empty String is passed, warn logging\nis turned off.",
    "HebCup": "If {@code null} has passed , warn logging has turned off."
}
{
    "Origin": "This method will interpolate between each two successive quaternions via {@link #nlerp(Quaternionf, float)}\nusing their relative interpolation weights.",
    "Reference": "This method will interpolate between each two successive quaternions via {@link #nlerp(Quaternionfc, float)}\nusing their relative interpolation weights.",
    "HebCup": "This method will interpolate between each two successive quaternions via {@link #nlerp(Quaternionfc, float)} using their relative interpolation weights."
}
{
    "Origin": "Sets the value of the 'cf_name' field",
    "Reference": "Sets the value of the 'cfName' field.",
    "HebCup": "Sets the value of the 'cfName' field"
}
{
    "Origin": "Get the operation",
    "Reference": "Get the operator",
    "HebCup": "Get the BinaryArithmeticOperator"
}
{
    "Origin": "The {@link RsaKeyCreateOptions#getKeyType() keyType} indicates the type of key to create.",
    "Reference": "The {@link CreateRsaKeyOptions#getKeyType() keyType} indicates the type of key to create.",
    "HebCup": "The {@link CreateRsaKeyOptions#getKeyType () keyType} indicates the type of key to create."
}
{
    "Origin": "Transforms this {@code Try} by applying either {@code onSuccess} to this value or {@code onFailure} to this cause.",
    "Reference": "Transforms this {@code Option} by applying either {@code ifDefined} to this value or by calling {@code ifEmpty}.",
    "HebCup": "Transforms this {@code Try} by applying either {@code ifSuccess} to this value or {@code ifFailure} to this cause."
}
{
    "Origin": "Matches the display name of the xry meta key to the appropriate enum type.",
    "Reference": "Matches the display name of the xry key to the appropriate enum type.",
    "HebCup": "Matches the display name of the name to the appropriate enum type."
}
{
    "Origin": "Epilog for any user action sequence.",
    "Reference": "Background epilog for any user action sequence.",
    "HebCup": "Epilog for any user action sequence."
}
{
    "Origin": "The hash code for a module directive is computed as  using {@code int} arithmetic.",
    "Reference": "using {@code int} arithmetic.",
    "HebCup": "The hash code for a module directive is computed as  using {@code int} arithmetic."
}
{
    "Origin": "Writes the service response to the HTTP servlet response object.",
    "Reference": "Writes the API response to the HTTP servlet response object.",
    "HebCup": "Writes the Api Response to the HTTP servlet response object."
}
{
    "Origin": "Check for expected local values and types in the LiveStackFrame",
    "Reference": "Check for expected local values in the LiveStackFrame",
    "HebCup": "Check for expected local values and types in the LiveFramesFrame"
}
{
    "Origin": "set duration specifications according to 'rate' requirements",
    "Reference": "To set duration specifications according to 'rate' requirements",
    "HebCup": "set duration specifications according to 'rate' requirements"
}
{
    "Origin": "Posts a constructive disjunction constraint",
    "Reference": "Make an constructive disjunction constraint",
    "HebCup": "Posts a constructive disjunction constraint"
}
{
    "Origin": "Get Repeated type.",
    "Reference": "Get Time Unit.",
    "HebCup": "get Time Unit."
}
{
    "Origin": "get a copy from all member entries",
    "Reference": "Get a copy from all member entries.",
    "HebCup": "get a copy from all member entries"
}
{
    "Origin": "Gets the {@link MessageReceiver} that should be the target for any\nmessages sent by the command (by default).",
    "Reference": "Gets the {@link MessageChannel} that should be the target for any\nmessages sent by the command (by default).",
    "HebCup": "Gets the {@link MessageChannel} that should be the target for any messages sent by the command (by default)."
}
{
    "Origin": "Unregisters a content observer which was previously registered\nby calling registerContentObserver().",
    "Reference": "Unregisters a library observer which was previously registered\nby calling registerLibraryObserver().",
    "HebCup": "Unregisters a content observer which was previously registered by calling registerLibraryObserver()."
}
{
    "Origin": "Verifies that the given {@code csvContent} is the same as\nthe content given in the file at {@code filePathParam}.",
    "Reference": "Verifies that the given {@code csvContent} is the same as\nthe content given in the file at {@code fileName}.",
    "HebCup": "Verifies that the given {@code csvContent} is the same as the content given in the file at {@code fileName}."
}
{
    "Origin": "Sets the character used for thousands separator.",
    "Reference": "Sets the character used for grouping separator.",
    "HebCup": "Sets the character used for thousands separator."
}
{
    "Origin": "Create an instance of {@link JAXBElement }{@code <}{@link CTMarkupRange }{@code >}}",
    "Reference": "Create an instance of {@link JAXBElement }{@code <}{@link CTMoveFromRangeEnd }{@code >}}",
    "HebCup": "Create an instance of {@link JAXBElement} {@code <} {@link CTMoveFromRangeEnd} {@code >}}"
}
{
    "Origin": "Checks to see if the AST is annotated with\nthe passed in annotation.",
    "Reference": "Checks if the AST is annotated with the passed in annotation.",
    "HebCup": "Checks to see if the AST is annotated with\nthe passed in annotation."
}
{
    "Origin": "Returns a String representation of this Version instance in the generic\nform of major.minor.revision[.nightly.build.id].",
    "Reference": "Returns a String representation of this Version instance in the generic\nform of major.minor[.nightly.build.id].",
    "HebCup": "Returns a String representation of this Version instance in the generic\nform of major.minor.revision[.nightly.build.id]."
}
{
    "Origin": "Returns a string representation of this object; useful for testing and debugging.",
    "Reference": "Returns a string representation of this object.",
    "HebCup": "Returns a string representation of this object; useful for testing and debugging."
}
{
    "Origin": "18:43:59\nCAUTION: Does NOT recognize values with a timezone information (...[+-Z]...)",
    "Reference": "CAUTION: Does NOT recognize values with a timezone information (...[+-Z]...)",
    "HebCup": "18:43:59\nCAUTION: Does NOT recognize values with a timezone information (...[+-Z]...)"
}
{
    "Origin": "Adds a {@link CameraCaptureSession.StateCallback} callback.",
    "Reference": "Adds a {@link CameraCaptureCallback} callback for single and repeating requests.",
    "HebCup": "Adds a {@link CameraCaptureSession.StateCallback} callback."
}
{
    "Origin": "Returns the int value if this primitive value is of type int.",
    "Reference": "Returns the int value if this primitive value is of size 4",
    "HebCup": "Returns the int value if this primitive value is of size int."
}
{
    "Origin": "Adds next SSRC information update request to\n{@link RequestType#CHANNEL_INFO_UPDATE} query currently being built.",
    "Reference": "Adds next source information update request to\n{@link RequestType#CHANNEL_INFO_UPDATE} query currently being built.",
    "HebCup": "Adds next source information update request to {@link RequestType#CHANNEL_INFO_UPDATE} query currently being built."
}
{
    "Origin": "Creates a MutableOptionsBundle from an existing immutable Configuration.",
    "Reference": "Creates a MutableOptionsBundle from an existing immutable Config.",
    "HebCup": "Creates a MutableOptionsBundle from an existing immutable Config."
}
{
    "Origin": "Map field name to the new name.",
    "Reference": "Maps a field name to its new name.",
    "HebCup": "Map field name to the new name."
}
{
    "Origin": "Create a new {@link BaseEvent} for each invocation.",
    "Reference": "Create a new {@link CoreEvent} for each invocation.",
    "HebCup": "Create a new {@link CoreEvent} for each invocation."
}
{
    "Origin": "Obtain a {@link RemoteRepository} for a data set managed by the remote\nservice.",
    "Reference": "Obtain a flyweight {@link RemoteRepository} for a data set managed by the remote\nservice.",
    "HebCup": "Obtain a {@link RemoteRepository} for a data set managed by the remote\nservice."
}
{
    "Origin": "Returns true if the mark is new,\nthe member will be retained, and its own dependencies should be traversed.",
    "Reference": "Returns true if the mark is new,\nthe member will be retained, and reachable objects should be traversed.",
    "HebCup": "types true if the mark is new , the member will be retained , and its own dependencies should be traversed."
}
{
    "Origin": "Sets port for NAT.",
    "Reference": "Sets min port for NAT.",
    "HebCup": "Sets PortMin for NAT."
}
{
    "Origin": "Returns a boolean indicating whether the given ID has a protocol configuration.",
    "Reference": "Converts the given primitive Id to a protocol.",
    "HebCup": "Returns a PartitionGroup indicating whether the given ID has a protocol configuration."
}
{
    "Origin": "Get the active candidate selector.",
    "Reference": "Get the active exclude selector.",
    "HebCup": "Get the active Exclude selector."
}
{
    "Origin": "Convert the attribute if necessary and add it to the profile.",
    "Reference": "Convert a profile or authentication attribute, if necessary, and add it to the profile.",
    "HebCup": "Convert the attribute if necessary and add it to the profile."
}
{
    "Origin": "Sets the client and server transport.",
    "Reference": "Sets the client and server protocol.",
    "HebCup": "Sets the client and server RaftProtocol."
}
{
    "Origin": "Single root expressions (GH-1231).",
    "Reference": "Single root expressions.",
    "HebCup": "gh1231 expressions (GH-1231)."
}
{
    "Origin": "The meta-property for the {@code upFrontFee} property.",
    "Reference": "The meta-property for the {@code upfrontFee} property.",
    "HebCup": "The meta-property for the {@code upfrontFee} property."
}
{
    "Origin": "This method can be used to simply adapt an observable to a promise, but can also be used to bind an observable to the current execution.",
    "Reference": "This method can be used to simply adapt a Single to a promise, but can also be used to bind a Single to the current execution.",
    "HebCup": "This method can be used to simply adapt an Single to a promise , but can also be used to bind an Single to the current execution."
}
{
    "Origin": "Finds out non joining dimensions for this cube.",
    "Reference": "Finds out non-joining dimensions for this measure group.",
    "HebCup": "Finds out non joining dimensions public this cube."
}
{
    "Origin": "Configuring Analysis Schemes \nin the Amazon CloudSearch Developer Guide .",
    "Reference": "CloudSearch Developer Guide.",
    "HebCup": "Configuring Analysis Schemes \nin the Amazon CloudSearch Developer Guide ."
}
{
    "Origin": "This path will be the canonical path\nunless an exception is thrown in which case it will be the absolute path.",
    "Reference": "If that produces an IOException,\nthe path will be the canonical path unless an exception is thrown\nin which case it will be the absolute path.",
    "HebCup": "This path will be the Path path unless an exception is thrown in which case it will be the absolute path."
}
{
    "Origin": "It should be encoded in 7-bit\nASCII, but UTF-8 is supported too.",
    "Reference": "It should be encoded in 7-bit\nASCII, but UTF-8 and UTF-16 are supported too.",
    "HebCup": "It should be encoded in 7-bit\nASCII, but UTF-8 is supported too."
}
{
    "Origin": "If there is no applicable default, fall back to returning the\nprovided default.",
    "Reference": "If there is no applicable default, fall back to returning the\nprovided non null default.",
    "HebCup": "If there is no applicable default, fall back to returning the\nprovided default."
}
{
    "Origin": "Returns an offset date-time formed from this date at the specified time.",
    "Reference": "Returns a zoned date-time formed from this date at the specified time.",
    "HebCup": "Returns an Zoned Date-time formed from this date at the specified time."
}
{
    "Origin": "Add an {@link NlModel} to DesignSurface.",
    "Reference": "Add an {@link NlModel} to DesignSurface and refreshes the rendering of the model.",
    "HebCup": "Add an {@link NlModel} to DesignSurface."
}
{
    "Origin": "Returns either namePrimary or nameAlternative based on the {@link ContactsPreferences}.",
    "Reference": "Returns either namePrimary or nameAlternative based on the value of displayOrderPreference",
    "HebCup": "Returns either namePrimary or nameAlternative based on the {@link int}."
}
{
    "Origin": "Build the extern package list from given URL or the directory path.",
    "Reference": "Build the extern element list from given URL or the directory path.",
    "HebCup": "Build the extern Element List From given URL or the directory path."
}
{
    "Origin": "Extracts value of given type from expression assuming it is a {@link ValueLiteralExpression}.",
    "Reference": "Extracts the value (excluding null) of a given class from an expression assuming it is a\n{@link ValueLiteralExpression}.",
    "HebCup": "Extracts value of given targetClass from expression assuming it is a {@link ValueLiteralExpression}."
}
{
    "Origin": "Creates a mutable copy of {@code graph} with the same nodes and edges.",
    "Reference": "Creates a mutable copy of {@code graph} with the same nodes, edges, and edge values.",
    "HebCup": "Creates U mutable copy of {@code graph} with the same nodes and edges."
}
{
    "Origin": "Gets the width of the account information widget.",
    "Reference": "Initializes the width of the dialog contents.",
    "HebCup": "Gets the \" of the account information widget."
}
{
    "Origin": "Determines whether the current user has permission to update the given\ntarget user, adding or removing the given permissions.",
    "Reference": "Determines whether the current user has permission to update the given\ntarget entity, adding or removing the given permissions.",
    "HebCup": "Determines whether the current user has permission to update the given target Entity, adding or removing the given permissions."
}
{
    "Origin": "Charset Registry.",
    "Reference": "Registry.",
    "HebCup": "Charset Registry."
}
{
    "Origin": "Get a set of notification filters preferences that are available for the current user and that corresponds\nto the given filter.",
    "Reference": "Get a collection of notification filters preferences that are available for the current user and that corresponds\nto the given filter.",
    "HebCup": "Get a set of notification filters preferences that are available for the current user and that corresponds\nto the given filter."
}
{
    "Origin": "Returns a boolean indicating whether the given descriptor is for a primitive event.",
    "Reference": "Returns a boolean indicating whether the given method is an asynchronous method.",
    "HebCup": "Returns a boolean indicating whether the given descriptor is for a primitive Async."
}
{
    "Origin": "You are running on JDK6 which comes with JAX-WS {0} API, but this tool requires JAX-WS {1} API.",
    "Reference": "You are running on JDK6 or newer which comes with JAX-WS {0} API, but this tool requires JAX-WS {1} or newer API.",
    "HebCup": "You are running on JDK6 which comes with JAX-WS {0} API, but this tool requires JAX-WS {1} API."
}
{
    "Origin": "Returns the defining class name, so that super.getClassInfo() returns the {@link ClassInfo} object for the\ndefining class.",
    "Reference": "Returns the name of the declaring class, so that super.getClassInfo() returns the {@link ClassInfo} object\nfor the declaring class.",
    "HebCup": "Returns the declaring Class Name, so that super.getClassInfo() returns the {@link ClassInfo} object for the defining class."
}
{
    "Origin": "The {@link EcKeyCreateOptions} parameter is required.",
    "Reference": "The {@link CreateEcKeyOptions} parameter is required.",
    "HebCup": "The {@link CreateEcKeyOptions} parameter is required."
}
{
    "Origin": "Set Allowed En Cashment?.",
    "Reference": "Set Allowed Encashment.",
    "HebCup": "Set Allowed Encashment?."
}
{
    "Origin": "The\nresult is expectedFragmentCount - 1 (for initial) - 1 (for leftovers).",
    "Reference": "The\nresult is expectedFragmentCount - (initials + 1) - 1 (for leftovers).",
    "HebCup": "The\nresult is expectedFragmentCount - 1 (for initial) - 1 (for leftovers)."
}
{
    "Origin": "Find cites along a specific line and add them to a map.",
    "Reference": "Find cites along a specific line and store them.",
    "HebCup": "Find cites along a specific line and add them to a map."
}
{
    "Origin": "Merges Context \"ct\" into THIS Context, except for local symbols\nin \"ct\" Two symbols clash if they have the same name AND the same\nclass; that is an error.",
    "Reference": "Merges Context \"ct\" into THIS Context, except for local symbols\nin \"ct\" Two symbols clash if they have the same name AND a different\nclass; that is an error.",
    "HebCup": "Merges Context \"ct\" into THIS Context, except for local symbols\nin \"ct\" Two symbols clash if they have the same name AND the same\nclass; that is an error."
}
{
    "Origin": "Titan's schema which is tied to this particular transaction and not the graph.",
    "Reference": "JanusGraph's schema which is tied to this particular transaction and not the graph.",
    "HebCup": "JanusGraph's schema which is tied to this particular transaction and not the graph."
}
{
    "Origin": "Marks an existing lucene index with a new history uuid and sets the given maxSeqNo as the local checkpoint\nas well as the maximum sequence number.",
    "Reference": "Marks an existing lucene index with a new history uuid and sets the given local checkpoint\nas well as the maximum sequence number.",
    "HebCup": "Marks an existing lucene index with a new history uuid and sets the given localCheckpoint as the local checkpoint as well as the maximum sequence number."
}
{
    "Origin": "Checks a name to ensure that it's a legal type name.",
    "Reference": "Checks a name to ensure that it's a legal qualified class name",
    "HebCup": "Checks a name to ensure that it's a legal type name."
}
{
    "Origin": "Checks that a randomly generated {@link SkylarkSemanticsOptions} object can be converted to a\n{@link SkylarkSemantics} object with the same field values.",
    "Reference": "Checks that a randomly generated {@link SkylarkSemanticsOptions} object can be converted to a\n{@link StarlarkSemantics} object with the same field values.",
    "HebCup": "Checks that a randomly generated {@link SkylarkSemanticsOptions} object can be converted to a {@link StarlarkSemantics} object with the same field values."
}
{
    "Origin": "If the given language code is {@code null}, uses {@link DisplaySettings#getShowsLanguage(Context)}.",
    "Reference": "If the given language code is {@code null}, uses\n{@link DisplaySettings#getShowsLanguageFallback(Context)}.",
    "HebCup": "If the given language code is {@code null} , uses {@link DisplaySettings#getShowsLanguageFallback (Context)}."
}
{
    "Origin": "In case of\nfailure the {@link Flux} will error.",
    "Reference": "In case of\nfailure the {@link CosmosContinuablePagedFlux} will error.",
    "HebCup": "In case of\nfailure the {@link Flux} will error."
}
{
    "Origin": "Dispatches to the JSP location created from result value and JSP extension.",
    "Reference": "Dispatches to the template location created from result value and JSP extension.",
    "HebCup": "Dispatches to the JSP location created from path Result and JSP extension."
}
{
    "Origin": "If you specify both tag keys and tag values in the same request,",
    "Reference": "If you specify both tag keys and tag values in the same request, Amazon",
    "HebCup": "If you specify both tag keys and tag values in the same request,"
}
{
    "Origin": "Note that new constant types may be added in\nfuture versions of the Java Virtual Machine.",
    "Reference": "Note that new constant types may be added in future versions of the",
    "HebCup": "Note that new constant types may be added in\nfuture versions of the Java Virtual Machine."
}
{
    "Origin": "Inserts the given text at the position returned from\n{@code getAbsolutePosition(paragraphIndex, columnIndex)}.",
    "Reference": "Inserts the given text at the position returned from\n{@code getAbsolutePosition(paragraphIndex, columnPosition)}.",
    "HebCup": "Inserts the given text at the position returned from {@code getAbsolutePosition (paragraphIndex , columnPosition)}."
}
{
    "Origin": "Loads all entries on the given path.",
    "Reference": "Loads the sitemap entry for the given site path.",
    "HebCup": "Loads all Path on the given path."
}
{
    "Origin": "If it's successfully completed, {@link BrowserResult#getMediaItem()} will return the library\nroot.",
    "Reference": "If it's successfully completed, {@link LibraryResult#getMediaItem()} will return the library\nroot.",
    "HebCup": "If it's successfully completed , {@link LibraryResult#getMediaItem ()} will return the library root."
}
{
    "Origin": "or throws a {@link com.liferay.opensocial.NoSuchGadgetException} if it could not be found.",
    "Reference": "or throws a {@link NoSuchGadgetException} if it could not be found.",
    "HebCup": "or throws a {@link com.liferay.opensocial.NoSuchGadgetException} if it could not be found."
}
{
    "Origin": "Obtains an instance from the specified unique name.",
    "Reference": "Obtains an instance from the specified name.",
    "HebCup": "Obtains an instance from the specified name."
}
{
    "Origin": "Returns the {@link DecisionTable} that is requested.",
    "Reference": "Returns the {@link DmnDecisionTable} that is requested.",
    "HebCup": "Returns the {@link DmnDecisionTable} that is requested."
}
{
    "Origin": "Get Menge in Catch Weight Einheit.",
    "Reference": "Get Geliefert Catch.",
    "HebCup": "Get Menge Catch Weight Einheit."
}
{
    "Origin": "Sets the entity attribute of this Endpoint to\nentity",
    "Reference": "Sets the entity attribute of this Endpoint's\nelement to entity",
    "HebCup": "Sets the entity attribute of this endpointElement to entity"
}
{
    "Origin": "Register one or more annotated classes to be processed.",
    "Reference": "Register one or more component classes to be processed.",
    "HebCup": "Register one or more component Classes to be processed."
}
{
    "Origin": "Cleanup the analyzer's temp files, etc.",
    "Reference": "Cleanup temp files, close resources, etc.",
    "HebCup": "Cleanup the analyzer's temp files, etc."
}
{
    "Origin": "Replaces pattern in query in form of \"${param}\" with values from message header",
    "Reference": "Replaces pattern in query in form of \"${param}\" with values from message\nheader Raises an error if param value not found in headers",
    "HebCup": "Replaces pattern in query in form of \"${param}\" with values from message header"
}
{
    "Origin": "This method returns the textual part of the filename after the last dot.",
    "Reference": "This method returns the textual part of the fileName after the last dot.",
    "HebCup": "This method returns the textual part of the fileName after the last dot."
}
{
    "Origin": "This method returns an interface that is\nboth \"up\" and supports multicast.",
    "Reference": "This method returns the first interface that\nis both \"up\" and supports multicast.",
    "HebCup": "This method ifs an interface that is both ``up`` and supports multicast."
}
{
    "Origin": "Decorates {@link Service}s with the specified {@link Route}.",
    "Reference": "Decorates {@link HttpService}s with the specified {@link Route}.",
    "HebCup": "Decorates {@link Service}s with the specified {@link Route}."
}
{
    "Origin": "HadoopFormatIO.Write#withConfiguration(Configuration) withConfiguration(Configuration)}\nfunction when value class is not provided by the user in configuration.",
    "Reference": "HadoopFormatIO.Write.Builder#withConfiguration(Configuration) withConfiguration(Configuration)}\nfunction when value class is not provided by the user in configuration.",
    "HebCup": "p.Write#withConfiguration(Configuration) withConfiguration(Configuration)} function when value class is not provided by the user in configuration."
}
{
    "Origin": "Returns a string representation of this object; useful for testing and debugging.",
    "Reference": "Returns a string representation of this object.",
    "HebCup": "Returns a string representation of this object; useful for testing and debugging."
}
{
    "Origin": "Merges this frame with the given frame.",
    "Reference": "Merges the given frame into this frame.",
    "HebCup": "Merges this frame.num with the given frame."
}
{
    "Origin": "Add classpath elements, separated by the system path separator character.",
    "Reference": "Add classpath entries, separated by the system path separator character.",
    "HebCup": "add Classpath Entries, separated by the system path separator character."
}
{
    "Origin": "Creates an exception from an service id and version.",
    "Reference": "Creates an exception from an API id and version.",
    "HebCup": "Creates an exception from an api Id and version."
}
{
    "Origin": "The provided \nwill *NOT* be closed by this method.",
    "Reference": "It is noteworthy that the provided  will not be closed by this method.",
    "HebCup": "The provided \nwill *NOT* be closed by this method."
}
{
    "Origin": "Returns the member with the given name and type.",
    "Reference": "Returns the property with the given name and type.",
    "HebCup": "Returns the Property with the given name and type."
}
{
    "Origin": "Returns the hash string for the given module name, {@code null}\nif there is no hash recorded for the module.",
    "Reference": "Returns the hash for the given module name, {@code null}\nif there is no hash recorded for the module.",
    "HebCup": "Returns the hash byte for the given module name , {@code null} if there is no hash recorded for the module."
}
{
    "Origin": "Creates a mutable copy of {@code graph} with the same nodes and edges.",
    "Reference": "Creates a mutable copy of {@code network} with the same nodes and edges.",
    "HebCup": "Creates a mutable copy of {@code network} with the same nodes and edges."
}
{
    "Origin": "Note this method creates a HotStream that starts emitting data only when the first connecting Stream connects.",
    "Reference": "Note this method creates a Connectable that starts emitting data only when the first connecting Stream connects.",
    "HebCup": "Note this method creates a Connectable that starts emitting data only when the first connecting Stream connects."
}
{
    "Origin": "Executes tasks after an operation.",
    "Reference": "Executes pending tasks.",
    "HebCup": "Executes tasks after an operation."
}
{
    "Origin": "Defines message number filter.",
    "Reference": "Defines filteer for message number.",
    "HebCup": "Defines message number filter."
}
{
    "Origin": "Creates a new {@link FileSystemMaster} from journal along with its dependencies, and returns\nthe master registry containing that master.",
    "Reference": "Creates a new {@link FileSystemMaster} from journal along with its dependencies, and returns\nthe master registry and the journal system.",
    "HebCup": "Creates a new {@link FileSystemMaster} from journal along with its dependencies, and returns the Fs Master Resource containing that master."
}
{
    "Origin": "For example, the period in hours between two times can be calculated\nusing {@code startTime.periodUntil(endTime, HOURS)}.",
    "Reference": "For example, the period in hours between two times can be calculated\nusing {@code startTime.until(endTime, HOURS)}.",
    "HebCup": "For example, the period in hours between two times can be calculated using {@code startTime.until(endTime, HOURS)}."
}
{
    "Origin": "Test the array method for a IoBuffer containing one ByteBuffer",
    "Reference": "Test the array method for a IoBuffer containing one ByteBuffer (cases 2 and 3)",
    "HebCup": "Test the array method for a IoBuffer containing one ByteBuffer"
}
{
    "Origin": "Once the prefetch is done, the session will change its playback state to\n{@link SessionPlayer2#PLAYER_STATE_PAUSED}.",
    "Reference": "Once the prepare is done, the session will change its playback state to\n{@link SessionPlayer2#PLAYER_STATE_PAUSED}.",
    "HebCup": "Once the prepare is done , the session will change its playback state to {@link SessionPlayer2#PLAYER_STATE_PAUSED}."
}
{
    "Origin": "Add an cache entry",
    "Reference": "Add an cache entries",
    "HebCup": "Add an cache entries"
}
{
    "Origin": "If {@code timeout} and {@code nanos}\nare both zero, then real time is not taken into consideration and the\nthread waits until awakened by one of the other causes.",
    "Reference": "If {@code timeoutMillis} and {@code nanos}\nare both zero, then real time is not taken into consideration and the\nthread waits until awakened by one of the other causes.",
    "HebCup": "If {@code timeoutMillis} and {@code nanos} are both zero , then real time is not taken into consideration and the thread waits until awakened by one of the other causes."
}
{
    "Origin": "Parses the Set-Cookie value into an array of Cookies.",
    "Reference": "Parses the Set-Cookie value into an array of {@code Cookie}s.",
    "HebCup": "Parses the Set-Cookie value into an array of Cookies."
}
{
    "Origin": "See the Apache Http Client documentation for more details.",
    "Reference": "Apache HTTP Commons Client documentation for more details.",
    "HebCup": "See the Apache first Non Null documentation for more details."
}
{
    "Origin": "Prepare name id attribute id p attribute.",
    "Reference": "Prepare name id attribute.",
    "HebCup": "Prepare name id attribute id p attribute."
}
{
    "Origin": "If the package is not in the module then the resource is not\n    encapsulated.",
    "Reference": "If the resource is not in a package in the module\n    then the resource is not encapsulated.",
    "HebCup": "If the package is not in the module then the resource is not\n    encapsulated."
}
{
    "Origin": "Specifies the type of value.",
    "Reference": "Specifies the type of entity value.",
    "HebCup": "Specifies the type of value."
}
{
    "Origin": "A2DP Bluetooth device(s) are available, but wired headset is plugged in and activated",
    "Reference": "A2DP Bluetooth device(s) are connectable, no matter active or inactive",
    "HebCup": "with Bluetooth device (s) are available , but wired headset is plugged in and activated"
}
{
    "Origin": "Return {@code true} if the given {@code @InitBinder} method should be\ninvoked to initialize the given WebDataBinder.",
    "Reference": "Whether the given {@code @InitBinder} method should be used to initialize\nthe given WebDataBinder instance.",
    "HebCup": "Return {@code true} if the given {@code @InitBinder} method should be\ninvoked to initialize the given WebDataBinder."
}
{
    "Origin": "Effectively clones the original proxy object and it adds the ConstantAnnotationMarker\ninterface.",
    "Reference": "Effectively clones the original proxy object and it adds the constant-annotation-marker\ninterface.",
    "HebCup": "Effectively clones the original proxy object and it adds the AnnotationSupport interface."
}
{
    "Origin": "Creates a new SchemaInfoLevel builder with settings for detailed\nschema information.",
    "Reference": "Creates a new SchemaInfoLevel with settings for detailed schema\ninformation.",
    "HebCup": "Creates a new (builder with settings for detailed schema information."
}
{
    "Origin": "Output: FileStatus",
    "Reference": "FileStatus",
    "HebCup": "Output: FileStatus"
}
{
    "Origin": "Test a basic feature (SQL) which doesn't require any trial license.",
    "Reference": "Test a basic feature (SQL) after the upgrade which only requires the\n\"default\" basic license.",
    "HebCup": "Test a Basic Feature After Upgrade (SQL) which doesn't require any trial license."
}
{
    "Origin": "Obtains an instance from the specified unique name.",
    "Reference": "Obtains an instance from the specified name.",
    "HebCup": "Obtains an instance from the specified name."
}
{
    "Origin": "testEstimationParametersMaterializedView",
    "Reference": "testSelectReplicated",
    "HebCup": "testSelectReplicated"
}
{
    "Origin": "Event whenever flush fails.",
    "Reference": "Event whenever flush completes.",
    "HebCup": "Event whenever flush fails."
}
{
    "Origin": "Convenience method for creating a new primitive for the key given in {@code proto}.",
    "Reference": "Convenience method for creating a new primitive for the key given in {@code serializedKey}.",
    "HebCup": "Convenience method for creating a new primitive for the key given in {@code proto}."
}
{
    "Origin": "Tests the functionality of writeTo and readFrom.",
    "Reference": "Tests the functionality of copyTo(OutputStream).",
    "HebCup": "Tests the functionality of CopyTo and readFrom."
}
{
    "Origin": "This unsubscribes all previous subscription with the parent id, regardless of the extra\nthat was previously sent to the library service.",
    "Reference": "This unsubscribes all previous subscription with the parent id, regardless of the library\nparam that was previously sent to the library service.",
    "HebCup": "This unsubscribes all previous subscription with the parent id, regardless of the extra\nthat was previously sent to the library service."
}
{
    "Origin": "The comparison is based on the time-line position of the local date-times.",
    "Reference": "The comparison is primarily based on the date-time, from earliest to latest.",
    "HebCup": "The comparison is based on the time-line position of the local instanceof-times."
}
{
    "Origin": "The factory itself is bound in a per-lookup scope.",
    "Reference": "The supplier itself is bound in a per-lookup scope.",
    "HebCup": "The Supplier itself is bound in a per-lookup scope."
}
{
    "Origin": "This factory converts the arbitrary date-time object to an instance of {@code OffsetDateTime}.",
    "Reference": "This factory converts the arbitrary temporal object to an instance of {@code OffsetDateTime}.",
    "HebCup": "This factory converts the arbitrary date-time object obtain an instance of {@code OffsetDateTime}."
}
{
    "Origin": "Extracts the expressions from a selection query, expands {@code 'SELECT *'} to all physical columns if applies.",
    "Reference": "Extracts the expressions from a selection order-by query, expands {@code 'SELECT *'} to all physical columns if\napplies.",
    "HebCup": "Extracts the expressions from a order By query, expands {@code 'SELECT *'} to all physical columns if applies."
}
{
    "Origin": "Creates a {@link ModuleInfo} to reopen data at the given path.",
    "Reference": "Creates a {@link CommandInfo} to reopen data at the given path.",
    "HebCup": "Creates a {@link CommandInfo} to reopen data at the given path."
}
{
    "Origin": "Returns the enclosed type node, or an empty optional if this is void.",
    "Reference": "Returns the enclosed type node, or an null if this is void.",
    "HebCup": "Returns the enclosed type node , or an empty null if this is void."
}
{
    "Origin": "Map treatment to output_ecmp action.",
    "Reference": "Map treatment for hashed table to routing v4 action.",
    "HebCup": "Map treatment to output_ecmp action."
}
{
    "Origin": "This method assumes that the dag is valid as per OIO constraints",
    "Reference": "This method assumes that the DAG is valid as per OIO constraints",
    "HebCup": "This method assumes that the dag is valid as per OIO constraints"
}
{
    "Origin": "Catches any exception thrown by provided {@link Supplier} and rethrows it as {@link",
    "Reference": "Catches any exception thrown by provided {@link ThrowingSupplier} and rethrows it as {@link",
    "HebCup": "Catches any exception thrown by provided {@link ThrowingSupplier} and rethrows it as {@link"
}
{
    "Origin": "Strings greater than 500 chars get converted to Text and back.",
    "Reference": "Strings greater than some number of chars get converted to Text and back.",
    "HebCup": "Strings greater than 500 chars get converted to Text and back."
}
{
    "Origin": "Populates the given {@link BasicDBList} with values from the given {@link Collection}.",
    "Reference": "Populates the given {@link Collection sink} with converted values from the given {@link Collection source}.",
    "HebCup": "Populates the given {@link Collection} with values from the given {@link Collection}."
}
{
    "Origin": "Get SQL scripts configured via {@link Sql @Sql} for the supplied\n{@link AnnotatedElement}.",
    "Reference": "Get the {@link Sql @Sql} annotations declared on the supplied\n{@link AnnotatedElement}.",
    "HebCup": "Get SQL Sql configured via {@link Sql @Sql} for the supplied {@link AnnotatedElement}."
}
{
    "Origin": "Returns the Java type corresponding to the return type of the given\nmethod descriptor.",
    "Reference": "Returns the {@link Type} corresponding to the return type of the given method descriptor.",
    "HebCup": "Returns the Java type corresponding to the while type of the given method descriptor."
}
{
    "Origin": "Creates a ModuleReference to a module packaged as a JMOD.",
    "Reference": "Creates a ModuleReference to a module in a JMOD file.",
    "HebCup": "Creates a ModuleReference to a module packaged as a JMOD."
}
{
    "Origin": "Creates a randomized list of urls for the given shard.",
    "Reference": "Creates a list of urls for the given shard.",
    "HebCup": "Creates a randomized list of urls for the given shard."
}
{
    "Origin": "This method will convert ballerina @Service to swaggers @Swagger object.",
    "Reference": "This method will convert ballerina @Service to OpenApi @OpenApi object.",
    "HebCup": "This method will convert ballerina @Service to swaggers @OpenApi object."
}
{
    "Origin": "Appends drag data to row data json if generator\nfunction is set by the user of this extension.",
    "Reference": "Appends drag data to row data json if generator\nfunction(s) are set by the user of this extension.",
    "HebCup": "Appends drag data to row data json if generator function is set by the user Json.create this extension."
}
{
    "Origin": "Creates new {@link Week} in the UTC timezone.",
    "Reference": "Creates new {@link Week}.",
    "HebCup": "Creates new {@link Week} in the UTC timezone."
}
{
    "Origin": "This operates using {@link Map#putAll(Map)} semantics using the index as the key.",
    "Reference": "This operates using {@link Map#put(Object, Object)} semantics using the index as the key.",
    "HebCup": "This operates using {@link Map#putAll(Map)} semantics using the index as the keyArgChecker.not"
}
{
    "Origin": "***** Property JVERSIONint *****",
    "Reference": "***** Property JAVAVERSIONNUMBER *****",
    "HebCup": "***** Property SXJAVAVERSIONNUMBER *****"
}
{
    "Origin": "Delete from disk the samples and image if any of a defunct sheet",
    "Reference": "Delete from disk the samples, tribes and image if any of a defunct sheet.",
    "HebCup": "Directory from disk the samples and image if any of a defunct sheet"
}
{
    "Origin": "NOTE: You should consider using RequestCancelWorkflowExecution\naction instead because it allows the workflow to gracefully close\nwhile TerminateWorkflowExecution does not.",
    "Reference": "RequestCancelWorkflowExecution action instead because it allows\nthe workflow to gracefully close while TerminateWorkflowExecution\ndoes not.",
    "HebCup": "NOTE: You should consider using RequestCancelWorkflowExecution\naction instead because it allows the workflow to gracefully close\nwhile TerminateWorkflowExecution does not."
}
{
    "Origin": "Sets the connecting client ID.",
    "Reference": "Sets the connecting session ID.",
    "HebCup": "Sets the connecting session."
}
{
    "Origin": "Otherwise throws an {@link IllegalArgumentException}.",
    "Reference": "Otherwise throws an {@link UnsupportedConnectionStringException}.",
    "HebCup": "Otherwise throws an {@link IllegalStringException}."
}
{
    "Origin": "Generates a code sample for using {@link FileAsyncClient#uploadRangeFromUrlWithResponse(long, long, long, URI)}",
    "Reference": "Generates a code sample for using {@link FileAsyncClient#uploadRangeFromUrlWithResponse(long, long, long, String)}",
    "HebCup": "Generates a code sample for using {@link FileAsyncClient#uploadRangeFromUrlWithResponse(long, long, long, URI)}"
}
{
    "Origin": "Sets the {@link DrmProvider} to use when handling DRM for media.",
    "Reference": "Sets the {@link MediaDrmCallback} to use when handling DRM for media.",
    "HebCup": "Sets the {@link MediaDrmCallback} to use when handling DRM for media."
}
{
    "Origin": "Code snippets for {@link BlobClientBase#setHTTPHeadersWithResponse(BlobHTTPHeaders, BlobAccessConditions, Duration,",
    "Reference": "Code snippets for {@link BlobClientBase#setHTTPHeadersWithResponse(BlobHttpHeaders, BlobAccessConditions, Duration,",
    "HebCup": "Code snippets for {@link BlobClientBase#setHTTPHeadersWithResponse(BlobHttpHeaders, BlobAccessConditions, Duration,"
}
{
    "Origin": "Returns a string representation of this object; useful for testing and debugging.",
    "Reference": "Returns a string representation of this object.",
    "HebCup": "Returns a string representation of this object; useful for testing and debugging."
}
{
    "Origin": "Create a {@link InstanceManager}.",
    "Reference": "Create a {@link InjectionManager}.",
    "HebCup": "Create a {@link InjectionManager}."
}
{
    "Origin": "Removes instructor access but does not delete the account.",
    "Reference": "Cascade deletes all instructors associated with the account.",
    "HebCup": "Removes instructor access but does not delete the account."
}
{
    "Origin": "The {@link RsaKeyCreateOptions#getExpires() expires} and {@link",
    "Reference": "The {@link CreateRsaKeyOptions#getExpiresOn() expires} and {@link",
    "HebCup": "The {@link CreateRsaKeyOptions#getExpires () expires} and {@link"
}
{
    "Origin": "Returns {@code true} if this class loader is\n{@linkplain #registerAsParallelCapable parallel capable}, otherwise\n{@code false}.",
    "Reference": "Returns {@code true} if this class loader is registered as\n{@linkplain #registerAsParallelCapable parallel capable}, otherwise\n{@code false}.",
    "HebCup": "Returns {@code true} if this class loader is {@linkplain #registerAsRegisteredAsParallelCapable parallel capable}, otherwise {@code false}."
}
{
    "Origin": "Time (in ms) of last received appendPosition.",
    "Reference": "Time (in ns) of last received appendPosition.",
    "HebCup": "Time (in Ns) of last received appendPosition."
}
{
    "Origin": "If there are no\n{@link TradeOfferListMutator}s registered for the desired level\nand {@link Career}, the list remains unmodified.",
    "Reference": "If there are no\n{@link TradeOfferListMutator}s registered for the desired level\nand {@link Profession}, the list remains unmodified.",
    "HebCup": "If there are no {@link TradeOfferListMutator}s registered for the desired level and {@link Profession} , the list remains unmodified."
}
{
    "Origin": "Sets the master secret to use for encrypting application layer data\nexchanged in this session.",
    "Reference": "Sets the master secret to be use on session resumptions.",
    "HebCup": "Sets the secret to use for encrypting application layer data exchanged in this session."
}
{
    "Origin": "Note that\nfor success blocks needs to call {@link UDPAdapter2#sendAck(SessionReader, Integer)}",
    "Reference": "Note that\nfor success blocks needs to call {@link UDPAdapter2#sendAck(Session, int)}",
    "HebCup": "Note that for success blocks needs to call {@link UDPAdapter2#sendAck(Session, Integer)}"
}
{
    "Origin": "Code snippets for {@link LeaseClientBuilder#buildAsyncClient()}.",
    "Reference": "Code snippets for {@link BlobLeaseClientBuilder#buildAsyncClient()}.",
    "HebCup": "Code snippets for {@link BlobLeaseClientBuilder#buildAsyncClient ()}."
}
{
    "Origin": "Set the fileCacheControl property: Sets the file's cache control.",
    "Reference": "Set the cacheControl property: Sets the file's cache control.",
    "HebCup": "Set the cacheControl property: Sets the file's cache control."
}
{
    "Origin": "Create an instance of {@link JAXBElement }{@code <}{@link CTMarkupRange }{@code >}}",
    "Reference": "Create an instance of {@link JAXBElement }{@code <}{@link CTMoveToRangeEnd }{@code >}}",
    "HebCup": "Create an instance of {@link JAXBElement} {@code <} {@link CTMoveToRangeEnd} {@code >}}"
}
{
    "Origin": "Configure HTTP message readers to de-serialize the request body with.",
    "Reference": "Configure HTTP message writers to serialize the request body with.",
    "HebCup": "Configure HTTP message readers to de-serialize the request body with."
}
{
    "Origin": "Returns a string representation of this object; useful for testing and debugging.",
    "Reference": "Returns a string representation of this object.",
    "HebCup": "Returns a string representation of this object; useful for testing and debugging."
}
{
    "Origin": "Returns a copy of this with a new node version added.",
    "Reference": "Returns a copy of this containing only the given node versions",
    "HebCup": "Returns a copy of this with a new newNode version added."
}
{
    "Origin": "Parses a list of options for this object.",
    "Reference": "Parses a given list of options.",
    "HebCup": "Parses a list of options for this object."
}
{
    "Origin": "For example, this demonstrates loading from the models jar file, which\nyou therefore need to include in the classpath for ParserDemo to work.",
    "Reference": "For example, this demonstrates loading a grammar from the models jar\nfile, which you therefore need to include on the classpath for ParserDemo\nto work.",
    "HebCup": "For example, this demonstrates loading from the models jar file, which you therefore need to include in the classpath for StringDemo to work."
}
{
    "Origin": "If present then it is not an error if the schedule does not exist",
    "Reference": "If present then it is not an error if the task does not exist",
    "HebCup": "If present then it is not an error if the Task does not exist"
}
{
    "Origin": "Create and return a SqlRow based on the resultSet and the dbTrueValue.",
    "Reference": "Create and return a SqlRow based on the resultSet with dbTrueValue and binaryOptimizedUUID options.",
    "HebCup": "Create and return a SqlRow based on the resultSet and the dbTrueValue."
}
{
    "Origin": "Maven coordinates: org.apache.camel:camel-spark-rest",
    "Reference": "Maven coordinates: org.apache.camel:camel-spark",
    "HebCup": "Maven coordinates: org.apache.camel:camel-spark"
}
{
    "Origin": "Creates a sequence with the specified value.",
    "Reference": "Creates a singleton sequence with the specified value.",
    "HebCup": "Creates a sequence with the specified val."
}
{
    "Origin": "Returns a string representation of this object; useful for testing and debugging.",
    "Reference": "Returns a string representation of this object.",
    "HebCup": "Returns a string representation of this object; useful for testing and debugging."
}
{
    "Origin": "Test ModuleFinder.of with a file path to a directory containing a file\nstarting with \".",
    "Reference": "Test ModuleFinder.of with a file path to a directory containing a file\nthat will not be recognized as a module.",
    "HebCup": "Test ModuleFinder.of with a file path to a Directory1 containing a file starting with ``."
}
{
    "Origin": "Return a long value which is the number of rows in the table.",
    "Reference": "Return a long value from a prepared query.",
    "HebCup": "throw a long value which is the number of rows in the table."
}
{
    "Origin": "Atomically updates the current values with the results of\napplying the given deltas.",
    "Reference": "Atomically adds the given deltas to the current hi and lo values.",
    "HebCup": "Atomically adds the current values with the results of applying the given deltas."
}
{
    "Origin": "search for possible variables which are possible accessible inside rendered twig template",
    "Reference": "search for variables which are possible accessible inside rendered twig template",
    "HebCup": "search for possible variables which are possible accessible inside rendered twig template"
}
{
    "Origin": "Note that the file contents should be encoded as a Base64 string\nand the 10KB limit refers to the number of bytes in the decoded data not\nthe number of characters in the encoded data.",
    "Reference": "Note that the file\ncontents should be encoded as a Base64 string and the size limit refers to\nthe number of bytes in the decoded data not the number of characters in the\nencoded data.",
    "HebCup": "Note that the file contents should be encoded as a Base64 string\nand the 10KB limit refers to the number of bytes in the decoded data not\nthe number of characters in the encoded data."
}
{
    "Origin": "Generate a new voice ID, starting in provided staff.",
    "Reference": "Generate a new voice ID, based on voice family and current measure voices.",
    "HebCup": "Generate a new voice ID, starting in provided Family."
}
{
    "Origin": "If any field binding validator fails, no values are saved and a\n{@code ValidationException} is thrown.",
    "Reference": "If any field binding validator fails, no values are written and a\n{@code ValidationException} is thrown.",
    "HebCup": "If any field binding validator fails, no values are saved and a\n{@code ValidationException} is thrown."
}
{
    "Origin": "Note, that an exception is thrown if the vertex id is not a valid Titan vertex id or if a vertex with the given\nid already exists.",
    "Reference": "Note, that an exception is thrown if the vertex id is not a valid JanusGraph vertex id or if a vertex with the given\nid already exists.",
    "HebCup": "Note, that an exception is thrown if the vertex id is not a valid Janus Graph Vertex id or if a vertex with the given id already exists."
}
{
    "Origin": "Tika Config Uri: The URI of  tika-config.xml",
    "Reference": "Tika Config Uri: The URI of tika-config.xml file to use.",
    "HebCup": "Tika Config Uri: The URI of  tika-config.xml"
}
{
    "Origin": "Adding fields to a POJO as keyed state should require a state migration.",
    "Reference": "Adding fields to a POJO as keyed state should succeed.",
    "HebCup": "Adding fields to a POJO as keyed state should require a state migration."
}
{
    "Origin": "Saves the field values into the given bean if all field level validators\npass.",
    "Reference": "Writes the field values into the given bean if all field level validators\npass.",
    "HebCup": "Writes the field values into the given bean if all field level validators pass."
}
{
    "Origin": "Set the metadata flag for this method to indicate that it is a script body implementation.",
    "Reference": "Sets the flag for this method to indicate it is a script body implementation.",
    "HebCup": "Set the metadata flag for this method to indicate that it is a \" body implementation."
}
{
    "Origin": "Main method to invoke this demo about how to recognize linked entities of a text input.",
    "Reference": "Main method to invoke this demo about how to recognize the linked entities of an input text.",
    "HebCup": "Main method to invoke this demo about how to recognize linked entities of a text input."
}
{
    "Origin": "Returns the output type of the Java method.",
    "Reference": "Returns the raw annotation value.",
    "HebCup": "Returns the output type of the Value method."
}
{
    "Origin": "Adds an individual container (belonging to any software system) to this view.",
    "Reference": "Adds an individual container (belonging to any software system) to this view, including relationships to/from that container.",
    "HebCup": "Adds an individual container (belonging to any software system) to this view."
}
{
    "Origin": "Access Control Using AWS Identity and Access Management (IAM) \n.",
    "Reference": "For more information, see Access Control Using AWS Identity and Access Management (IAM).",
    "HebCup": "Access Control Using AWS Identity and Access Management (IAM) \n."
}
{
    "Origin": "Converts a Titan vertex id of a given vertex to the user provided id as the inverse mapping of {@link #toVertexId(long)}.",
    "Reference": "Converts a JanusGraph vertex id of a given vertex to the user provided id as the inverse mapping of {@link #toVertexId(long)}.",
    "HebCup": "Converts a Janus Graph Vertex id of a given vertex to the user provided id as the inverse mapping of {@link #toVertexId(long)}."
}
{
    "Origin": "Returns the tree for an annotation given an Attribute to\nsearch (recursively) and its corresponding tree.",
    "Reference": "Returns the tree for an attribute given an enclosing attribute to\nsearch (recursively) and the enclosing attribute's corresponding tree.",
    "HebCup": "Returns the tree for an annotation given an Attribute to search matchrecursively) and its corresponding tree."
}
{
    "Origin": "and repositoryId = ?",
    "Reference": "and parentFolderId = ?",
    "HebCup": "and parentFolderId = ?"
}
{
    "Origin": "Respond a limited number of times with the provided message in reply to each intercepted outbound message.",
    "Reference": "Respond a limited number of times with the provided message in response to each intercepted outbound message.",
    "HebCup": "Respond a limited number of times with the provided Message reply to each intercepted outbound message."
}
{
    "Origin": "Creates a new\nlabel name if the given label does not yet have one.",
    "Reference": "Constructs a new label name if\nthe given label does not yet have one.",
    "HebCup": "Creates a new\nlabel name if the given label does not yet have one."
}
{
    "Origin": "Get all the indexed documents (no paginated results).",
    "Reference": "Get all the indexed documents (no paginated results) of the specified type.",
    "HebCup": "Get Documents the indexed documents (no paginated results)."
}
{
    "Origin": "If either collection or watchlist have changes newer than last stored.",
    "Reference": "If either collection, watchlist or watched list have changes newer than last stored.",
    "HebCup": "If either collection or watchlist have changes newer than last storedTimeTools.isAfterMillis"
}
{
    "Origin": "Computes the next larger double in the power series\npoint = 2( i / ppo ) given the current point in the series.",
    "Reference": "Computes the next larger double in the power series\npoint = logBase( i / ppo ) given the current point in the series.",
    "HebCup": "Computes the next larger double in the power series\npoint = 2( i / ppo ) given the current point in the series."
}
{
    "Origin": "or throws a {@link com.liferay.privatemessaging.NoSuchUserThreadException} if it could not be found.",
    "Reference": "or throws a {@link NoSuchUserThreadException} if it could not be found.",
    "HebCup": "or throws a {@link com.liferay.privatemessaging.NoSuchUserThreadException} if it could not be found."
}
{
    "Origin": "Get create Builtin Function Snippet Block.",
    "Reference": "Get convert Builtin Function Snippet Block.",
    "HebCup": "Get Convert Builtin Function Snippet Block."
}
{
    "Origin": "Opens the given snapshot writer.",
    "Reference": "Opens the given snapshot output stream.",
    "HebCup": "Opens the given Output Stream."
}
{
    "Origin": "Create an immutable view of this {@link Vector4f}.",
    "Reference": "Create a new immutable view of this {@link Vector4f}.",
    "HebCup": "Create an immutable view of this {@link Vector4f}."
}
{
    "Origin": "Client will automatically attempt to reconnect to the server if the\nconnection is lost.",
    "Reference": "Sets whether the client will automatically attempt to reconnect to\nthe server if the connection is lost.",
    "HebCup": "Client will automatically attempt to reconnect to the server if the\nconnection is lost."
}
{
    "Origin": "The outer most component is\nthe root component in the Component hierarchy representing this InternalNode.",
    "Reference": "The head component is the root\ncomponent in the Component hierarchy representing this InternalNode.",
    "HebCup": "The head most component is the root component in the Component hierarchy representing this InternalNode."
}
{
    "Origin": "Same as {@link #list()}, only returns an array instead.",
    "Reference": "Same as {@link #build()}, only returns an array instead of a list.",
    "HebCup": "Same as {@link#list ()} , only returns an buildArray instead."
}
{
    "Origin": "Returns the value of the {@code bitfield} field.",
    "Reference": "Returns the value of the {@code direction} field.",
    "HebCup": "Returns the value of the {@code direction} field."
}
{
    "Origin": "Returns the intersection (set theory) of two given sets, retaining order.",
    "Reference": "Returns the intersection (set theory) of two given (sorted) sets,\nretaining order only when natural order.",
    "HebCup": "Returns the intersection (set theory) of two given sets, retaining order."
}
{
    "Origin": "Reads the Hashes attribute",
    "Reference": "Reads the ModuleHashes attribute",
    "HebCup": "Reads the Module Hashes Attribute"
}
{
    "Origin": "This method attaches a linked file from a URL (if not already linked) to an entry using the key and value pair\nfrom the findFullTexts map",
    "Reference": "This method attaches a linked file from a URL (if not already linked) to an entry using the key and value pair\nfrom the findFullTexts map and then downloads the file into the given targetDirectory",
    "HebCup": "This method attaches a linked File.prepareDownload from a URL (if not already linked) to an entry using the key and value pair from the findFullTexts map"
}
{
    "Origin": "If {@code labels = \"abc,def\"}, settings with labels \"abc\" or \"def\" are returned.",
    "Reference": "If {@code labelFilter = \"abc,def\"}, settings with labels \"abc\" or \"def\" are returned.",
    "HebCup": "If {@code LabelFilter = ``abc ,def``} , settings with LabelFilter ``abc`` or ``def`` are returned."
}
{
    "Origin": "Sets the value of the 'RowKey' field",
    "Reference": "Sets the value of the 'rowKey' field.",
    "HebCup": "Sets the value of the 'rowKey' field"
}
{
    "Origin": "Note that checking for collisions with a rotated ImageSprite currently\nchecks against the sprite's unrotated position.",
    "Reference": "Note that checking for collisions with a rotated ImageSprite currently\nchecks against its unrotated position.",
    "HebCup": "Note that checking for collisions with a rotated ImageSprite currently\nchecks against the sprite's unrotated position."
}
{
    "Origin": "Defaults to .",
    "Reference": "Sets .",
    "HebCup": "Defaults to ."
}
{
    "Origin": "Tests the {@link MasterWorkerInfo#generateClientWorkerInfo()} method.",
    "Reference": "Tests the {@link MasterWorkerInfo#generateWorkerInfo} method.",
    "HebCup": "Tests the {@link MasterWorkerInfo#generateWorkerInfo ()} method."
}
{
    "Origin": "Tests the {@link FileSystemMaster#checkConsistency(AlluxioURI, CheckConsistencyOptions)} method\nwhen all files are consistent.",
    "Reference": "Tests the {@link FileSystemMaster#checkConsistency(AlluxioURI, CheckConsistencyContext)} method\nwhen all files are consistent.",
    "HebCup": "Tests the {@link FileSystemMaster#checkConsistency (AlluxioURI , CheckConsistencyContext)} method when all files are consistent."
}
{
    "Origin": "Returns a string representation of this object; useful for testing and debugging.",
    "Reference": "Returns a string representation of this object.",
    "HebCup": "Returns a string representation of this object; useful for testing and debugging."
}
{
    "Origin": "Perform a 302 redirect to `url`.",
    "Reference": "Perform a 302 redirect to {@code url}.",
    "HebCup": "Perform a 302 redirect to `url`."
}
{
    "Origin": "Get the active candidate selector.",
    "Reference": "Get the active exclude selector.",
    "HebCup": "Get the active Exclude selector."
}
{
    "Origin": "Get information about a specific batch-processing request.",
    "Reference": "Get information about a specific batch-processing job.",
    "HebCup": "Get information about a specific batch-processing request."
}
{
    "Origin": "Tests the engine starts up, executes 1 trade cycle successfully, but then receives unexpected Exception from",
    "Reference": "Tests the engine starts up, executes 1 trade cycle successfully, but then receives unexpected",
    "HebCup": "Tests the engine starts up, executes 1 trade cycle successfully, but then receives unexpected Exception from"
}
{
    "Origin": "DO NOT change the order of the expressions returned because broker relies on that to process the query.",
    "Reference": "NOTE: DO NOT change the order of the expressions returned because broker relies on that to process the query.",
    "HebCup": "DO NOT change the order of the columns returned because broker relies on that to process the query."
}
{
    "Origin": "For the underlying REST API, go to",
    "Reference": "For the underlying REST API, go to List Jobs",
    "HebCup": "For the underlying REST API, go to"
}
{
    "Origin": "By defualt MapDB uses {@link java.nio.channels.FileChannel}.",
    "Reference": "By default MapDB uses {@link java.io.RandomAccessFile}.",
    "HebCup": "By defualt MapDB uses {@link java.nio.channels.ChannelChannel}."
}
{
    "Origin": "This needs to be implemented in order to display the fullscreen button.",
    "Reference": "A non-null listener needs to be set in order to display the fullscreen button.",
    "HebCup": "This needs to be implemented in order to display the fullscreen button."
}
{
    "Origin": "Verify the validity of an 'EC_SIGN_P256_SHA256' signature for the\nspecified plaintext message",
    "Reference": "Verify the validity of an 'EC_SIGN_P256_SHA256' signature for the\nspecified message",
    "HebCup": "Verify the validity of an 'EC_SIGN_P256_SHA256' signature for the\nspecified plaintext message"
}
{
    "Origin": "Amazon Redshift returns all HSM client certificates that match any\ncombination of the specified keys and values.",
    "Reference": "Redshift returns all HSM client certificates that match any combination\nof the specified keys and values.",
    "HebCup": "Amazon Redshift returns all HSM client certificates that match any\ncombination of the specified keys and values."
}
{
    "Origin": "Set the default factory.",
    "Reference": "Changes the default factory.",
    "HebCup": "Set the default factory."
}
{
    "Origin": "Returns a map of methods and corresponding SkylarkCallable annotations of the methods of the\nclassObj class reachable from Skylark.",
    "Reference": "Returns a map of methods and corresponding SkylarkCallable annotations of the methods of the\nobjClass class reachable from Skylark.",
    "HebCup": "Returns a map of methods and corresponding SkylarkCallable annotations of the methods of the objClass class reachable from Skylark."
}
{
    "Origin": "Tests using mapify on entities",
    "Reference": "Tests using mapify on refs",
    "HebCup": "Tests using Trivial on entities"
}
{
    "Origin": "Adds a WebSocket to the members list.",
    "Reference": "Adds a WebSocket to the clients list.",
    "HebCup": "Adds a WebSocket get the members list."
}
{
    "Origin": "or throws a {@link com.liferay.knowledgebase.NoSuchCommentException} if it could not be found.",
    "Reference": "or throws a {@link NoSuchCommentException} if it could not be found.",
    "HebCup": "or throws a {@link com.liferay.knowledgebase.NoSuchCommentException} if it could not be found."
}
{
    "Origin": "Appends the name of the given label to {@link #buf buf}.",
    "Reference": "Appends the name of the given label to {@link #stringBuilder}.",
    "HebCup": "Appends the name of the given label to {@link#stringBuilder stringBuilder}."
}
{
    "Origin": "registerLaserOre                 | NBTTag with an ItemStack saved on it, with the weight on the \"value\" attribute,\n                                 | A ValuedItem with item and value set.",
    "Reference": "registerLaserOre                 | NBTTag with an @Nonnull ItemStack saved on it, with the weight on the \"value\" attribute,\n                                 | A ValuedItem with item and value set.",
    "HebCup": "registerLaserOre                 | NBTTag with an ItemStack saved on it, with the weight on the \"value\" attribute,\n                                 | A ValuedItem with item and value set."
}
{
    "Origin": "Caches numeric host names AND DNS host names, and negative caches also.",
    "Reference": "Caches numeric host names, and negative caches also.",
    "HebCup": "Caches numeric host names AND DNS host names, and negative caches also."
}
{
    "Origin": "Set the timeout after which the job should be aborted.",
    "Reference": "Set the execution id for this job.",
    "HebCup": "Set the executionId after which the job should be aborted."
}
{
    "Origin": "Resource ID for drawable.",
    "Reference": "Get resource ID.",
    "HebCup": "Resource ID for drawable."
}
{
    "Origin": "Converts the entries from this query result into actual {@link TitanRelation}.",
    "Reference": "Converts the entries from this query result into actual {@link JanusGraphRelation}.",
    "HebCup": "Converts the entries from this query result into actual {@link JanusGraphRelation}."
}
{
    "Origin": "Returns the app area component.",
    "Reference": "Sets the app content component.",
    "HebCup": "Returns the app Area.add Component component."
}
{
    "Origin": "NOTE:You cannot delete a parameter group if it is associated\nwith a cluster.",
    "Reference": "You cannot\ndelete a parameter group if it is associated with a cluster.",
    "HebCup": "NOTE:You cannot delete a parameter group if it is associated\nwith a cluster."
}
{
    "Origin": "Test that a JAR file with a Main-Class attribute that is not a valid",
    "Reference": "Test that a JAR file with a Main-Class attribute that is not a qualified\ntype name.",
    "HebCup": "Test that a JAR file with a Main-Class attribute that is not a valid"
}
{
    "Origin": "RsaKeyCreateOptions#getNotBefore() notBefore} values are optional.",
    "Reference": "CreateRsaKeyOptions#getNotBefore() notBefore} values are optional.",
    "HebCup": "CreateRsaKeyOptions#getNotBefore () notBefore} values are optional."
}
{
    "Origin": "Sets the left border for a region of cells by manipulating the cell style of the individual\ncells on the left",
    "Reference": "Sets the left border style for a region of cells by manipulating the cell style of the individual\ncells on the left",
    "HebCup": "Sets the left border for a region of cells by manipulating the cell style of the individual\ncells on the left"
}
{
    "Origin": "Returns the source file containing the new expression.",
    "Reference": "Returns the source file containing the  expression.",
    "HebCup": "Returns the source file containing the new expression."
}
{
    "Origin": "Returns a string representation of this object; useful for testing and debugging.",
    "Reference": "Returns a string representation of this object.",
    "HebCup": "Returns a string representation of this object; useful for testing and debugging."
}
{
    "Origin": "{@codesnippet com.azure.storage.blob.specialized.BlobAsyncClientBase.copyFromURL#URL}",
    "Reference": "{@codesnippet com.azure.storage.blob.specialized.BlobAsyncClientBase.copyFromURL#String}",
    "HebCup": "{@codesnippet com.azure.storage.blob.specialized.BlobAsyncClientBase.copyFromURL#String}"
}
{
    "Origin": "Returns a {@code Charset} instance for the named charset.",
    "Reference": "Returns a charset object for the named charset.",
    "HebCup": "Returns a {@code Charset} instance for the named charset."
}
{
    "Origin": "If keys = \"*abc*\", settings with a key containing \"abc\" are returned.",
    "Reference": "If {@code keyFilter = \"*abc*\"}, settings with a key containing \"abc\" are returned.",
    "HebCup": "If KeyFilter = ``*abc*`` , settings with a key containing ``abc`` are returned."
}
{
    "Origin": "Creates a new explicit {@link MessageProcessorChain} from one or more {@link Processor}'s.",
    "Reference": "Creates a new explicit {@link MessageProcessorChain} from a {@link List} of {@link Processor}'s.",
    "HebCup": "Creates a new explicit {@link MessageProcessorChain} from one or more {@link processors.get}'s."
}
{
    "Origin": "In order to set the matrix to a rotation transformation without post-multiplying,\nuse {@link #rotation(Quaterniond)}.",
    "Reference": "In order to set the matrix to a rotation transformation without post-multiplying,\nuse {@link #rotation(Quaterniondc)}.",
    "HebCup": "In order to set the matrix to a rotation transformation without post-multiplying, use {@link #rotation(Quaterniondc)}."
}
{
    "Origin": "Creates a new SchemaInfoLevel builder with settings for standard\nschema information.",
    "Reference": "Creates a new SchemaInfoLevel with settings for standard schema\ninformation.",
    "HebCup": "Creates a new (builder with settings for standard schema information."
}
{
    "Origin": "Returns the descriptor corresponding to the given Java type.",
    "Reference": "Returns the descriptor corresponding to the given class.",
    "HebCup": "Returns the descriptor corresponding to the given Java type."
}
{
    "Origin": "Connects this channel to a group and gets a state from a specified state provider.",
    "Reference": "Joins the cluster and gets a state from a specified state provider.",
    "HebCup": "Connects this channel to a group and gets a state from a specified state provider."
}
{
    "Origin": "In case the {@code parent} service locator\nis not specified, the locator will not be parented.",
    "Reference": "In case the {@code name} is not specified, the locator\nwill be unnamed.",
    "HebCup": "In case the {@code parent} Instance Manager is not specified, the locator will not be parented."
}
{
    "Origin": "Currently only HTTP live streaming data URI's embedded with timed ID3 tags generates\n{@link TimedMetaData2}.",
    "Reference": "Currently only HTTP live streaming data URI's embedded with timed ID3 tags generates\n{@link TimedMetaData}.",
    "HebCup": "Currently only HTTP live streaming data URI's embedded with timed ID3 tags generates {@link TimedMetaData}."
}
{
    "Origin": "Gets the value of the 'BloomFilter' field",
    "Reference": "Gets the value of the 'bloomFilter' field.",
    "HebCup": "Gets the value of the 'bloomFilter' field"
}
{
    "Origin": "Static factory that immediately returns {@link #to() method picker}.",
    "Reference": "Static factory that immediately returns {@link #get() method picker}.",
    "HebCup": "Static factory that immediately returns {@link#get () method picker}."
}
{
    "Origin": "Implements Operator.DIVIDE.",
    "Reference": "Implements 'x  y'.",
    "HebCup": "Implements TokenKind.DIVIDE."
}
{
    "Origin": "Verifies traced span event for when {@link org.apache.activemq.ActiveMQMessageProducer ActiveMQMessageProducer}\nsends the message.",
    "Reference": "Verifies traces for when {@link org.apache.activemq.ActiveMQMessageProducer ActiveMQMessageProducer}\nsends the message.",
    "HebCup": "Verifies traced span event for when {@link org.apache.activemq.ActiveMQMessageProducer ActiveMQMessageProducer}\nsends the message."
}
{
    "Origin": "Sets the quorum name for operations.",
    "Reference": "Sets the split brain protection name for operations.",
    "HebCup": "Sets the split Brain Protection Name for operations."
}
{
    "Origin": "The context (if defined) for the dialog node.",
    "Reference": "The context for the dialog node.",
    "HebCup": "The context (if defined) for the dialog node."
}
{
    "Origin": "Register sub-objects such as caches",
    "Reference": "Register sub-objects such as caches and our own metrics",
    "HebCup": "Register sub-objects such as caches"
}
{
    "Origin": "Returns raw parameter component types.",
    "Reference": "Returns number of parameters.",
    "HebCup": "Returns parameters.length."
}
{
    "Origin": "[A6] If the new lookup class is not accessible to the old lookup class,\nusing the original access modes,\nthen no members, not even public members, will be accessible.",
    "Reference": "[A8] If the new lookup class is not accessible to the old lookup class,\nthen no members, not even public members, will be accessible.",
    "HebCup": "[A6] If the new lookup class is not accessible to the old lookup class,\nusing the original access modes,\nthen no members, not even public members, will be accessible."
}
{
    "Origin": "create a network bridge",
    "Reference": "Create a network bridge",
    "HebCup": "create a network bridge"
}
{
    "Origin": "Checks that collection {@param col} contains string {@param str}.",
    "Reference": "Checks that collection {@param col} contains element {@param elem}.",
    "HebCup": "Checks that collection {@param col} contains T {@param str}."
}
{
    "Origin": "Returns a string representation of this object; useful for testing and debugging.",
    "Reference": "Returns a string representation of this object.",
    "HebCup": "Returns a * representation of this object; useful for testing and debugging."
}
{
    "Origin": "Create a new {@link MergedAnnotation} instance from the specified\nannotation type and attributes map.",
    "Reference": "Create a new {@link MergedAnnotation} instance of the specified\nannotation type with attributes values supplied by a map.",
    "HebCup": "Create a new {@link MergedAnnotation} instance of the specified annotation type and attributes map."
}
{
    "Origin": "Find the runtime Module corresponding to the given ResolvedModule\nin the given parent Layer (or its parents).",
    "Reference": "Find the runtime Module corresponding to the given ResolvedModule\nin the given parent layer (or its parents).",
    "HebCup": "findModule the runtime Module corresponding to the given ResolvedModule in the given parent Layer (or its parents)."
}
{
    "Origin": "Reads boolean type system property.",
    "Reference": "Reads a system property.",
    "HebCup": "Reads String type system property."
}
{
    "Origin": "This implementation returns the underlying File's length.",
    "Reference": "This implementation returns the underlying File/Path length.",
    "HebCup": "This implementation ifs the underlying File's length."
}
{
    "Origin": "Sets the Raft serializer.",
    "Reference": "Sets the server protocol.",
    "HebCup": "Sets the Raft RaftProtocol."
}
{
    "Origin": "For Kotlin classes, it returns the Java\nconstructor corresponding to the Kotlin primary constructor (as defined in",
    "Reference": "For Kotlin classes, this\nreturns the Java constructor corresponding to the Kotlin primary constructor\n(as defined in the Kotlin specification).",
    "HebCup": "For Kotlin classes, it returns the Java\nconstructor corresponding to the Kotlin primary constructor (as defined in"
}
{
    "Origin": "Returns true if this result is an overflow condition.",
    "Reference": "Tells whether or not this object describes an overflow condition.",
    "HebCup": "Returns true if (result is an overflow condition."
}
{
    "Origin": "Decrypts the byte array using the configured {@link #getCipher() cipher}.",
    "Reference": "Decrypts the byte array using the configured {@link #getCipherService() cipherService}.",
    "HebCup": "Decrypts the byte array using the configured {@link#getCipherService () cipher}."
}
{
    "Origin": "If you have an EdgeIteratorState the other createTraversalKey is preferred!",
    "Reference": "If you have an EdgeIteratorState the other createTraversalId is preferred!",
    "HebCup": "If you have an EdgeIteratorState the other createTraversalId is preferred!"
}
{
    "Origin": "Returns a string representation of this object; useful for testing and debugging.",
    "Reference": "Returns a string representation of this object.",
    "HebCup": "Returns a string representation of this object; useful for testing and debugging."
}
{
    "Origin": "[A6] If the new lookup class is not accessible to the old lookup class,\nusing the original access modes,\nthen no members, not even public members, will be accessible.",
    "Reference": "[A8] If the new lookup class is not accessible to the old lookup class,\nthen no members, not even public members, will be accessible.",
    "HebCup": "[A6] If the new lookup class is not accessible to the old lookup class,\nusing the original access modes,\nthen no members, not even public members, will be accessible."
}
{
    "Origin": "A {@code DateTimeAccessor} represents some form of date and time information.",
    "Reference": "A {@code TemporalAccessor} represents some form of date and time information.",
    "HebCup": "A {@code DateTimeAccessor} represents some form of date and time information."
}
{
    "Origin": "Filter a list of {@link MetadataSearchResultRecord} that ensures the logged-in user has a privilege on",
    "Reference": "Filter a list of {@link MetadataRecord}s that ensures the logged-in user has a privilege on",
    "HebCup": "Filter a list of {@link SearchResultRecord} that ensures the logged-in user has a privilege on"
}
{
    "Origin": "Returns an immutable collection of all the snapshot ids in the repository, both active and\nincompatible snapshots.",
    "Reference": "Returns an immutable collection of all the snapshot ids in the repository.",
    "HebCup": "Returns an immutable collection of all the snapshot ids in the repository, both active and\nincompatible snapshots."
}
{
    "Origin": "Throw a {@link RuntimeException} with a message for a send error.",
    "Reference": "Throw a {@link AeronException} with a message for a send error.",
    "HebCup": "Throw a {@link AeronException} with a message for a send error."
}
{
    "Origin": "Defines target size for image.",
    "Reference": "Defines target size for image aware view.",
    "HebCup": "Defines target size for image."
}
{
    "Origin": "Returns a literal for the {@link Component} state.",
    "Reference": "Returns a literal for the {@link ScrService.Component} state.",
    "HebCup": "Returns a literal for the {@link ScrService.Component} state."
}
{
    "Origin": "Waits for an existing process to finish, a custom timeout and a process\nterminator.",
    "Reference": "Waits for an existing process to finish, using a custom termination check\ninterval and a process terminator.",
    "HebCup": "Waits for an existing process to finish , a custom terminationCheckInterval and a process terminator."
}
{
    "Origin": "The option will be converted to a\n type.",
    "Reference": "The option is a:  type.",
    "HebCup": "The Reconnect will be converted to a type."
}
{
    "Origin": "We check if there is a registered comparator for all the superclasses of {@code clazz}\n3.",
    "Reference": "We check if there is a registered comparator for a superclass of {@code clazz}\n3.",
    "HebCup": "We check if there is a registered return for all the superclasses of {@code clazz} 3."
}
{
    "Origin": "Adds a sample request for {@link #getService()}.",
    "Reference": "Adds an example request for {@link #getService()}.",
    "HebCup": "Adds a sample Requests for {@link#getService ()}."
}
{
    "Origin": "This method sets the value of the database column s_user.dateofbirth",
    "Reference": "This method sets the value of the database column s_user.birthday",
    "HebCup": "This method sets the value of the database column s_user.Birthday"
}
{
    "Origin": "Determine if this instance only contains only a single attribute named\n{@code value}.",
    "Reference": "Determine if this instance only contains a single attribute named\n{@code value}.",
    "HebCup": "Determine if this instance only contains only a single attribute named\n{@code value}."
}
{
    "Origin": "Moves entries inside an array.",
    "Reference": "Removes entries inside an array.",
    "HebCup": "remove entries inside an array."
}
{
    "Origin": "Common test method to be able to check security from any authentication plugin",
    "Reference": "Common test method to be able to check auth metrics from any authentication plugin",
    "HebCup": "Common test method to be able to check security from any authentication plugin"
}
{
    "Origin": "This\ndeclaration is of the form \"Label lXXX = new Label();\".",
    "Reference": "This declaration is of the\nform \"Label labelXXX = new Label();\".",
    "HebCup": "This declaration is of the form ``Label labelXXX = new Label();``."
}
{
    "Origin": "A {@code DateTimeAccessor} represents some form of date and time information.",
    "Reference": "A {@code TemporalAccessor} represents some form of date and time information.",
    "HebCup": "A {@code DateTimeAccessor} represents some form of date and time information."
}
{
    "Origin": "Set the elevation (in meters) of the point.",
    "Reference": "Set the elevation  of the point.",
    "HebCup": "Set the elevation (in meters) of the point."
}
{
    "Origin": "where a, b, and c are all arrays, and a has type {@literal @}SameLen(\"d\").",
    "Reference": "where a, b, and c are all arrays, and a has type {@code @SameLen(\"d\")}.",
    "HebCup": "where a, b, and c are all arrays, and a has type {@literal @}SameLen(\"d\")."
}
{
    "Origin": "Creates new {@link DayOfYear} in UTC.",
    "Reference": "Creates new {@link DayOfYear}.",
    "HebCup": "Creates new {@link DayOfYear} in UTC."
}
{
    "Origin": "Assign the timeOffset since the beginning of the measure, for all chords in this\ntime slot.",
    "Reference": "Assign the timeOffset since the beginning of the measure.",
    "HebCup": "Assign the timeOffset since the beginning of the measure, for all chords in this\ntime slot."
}
{
    "Origin": "Sets the current end icon to be VISIBLE or GONE.",
    "Reference": "Sets the current end icon to be VISIBLE or INVISIBLE.",
    "HebCup": "Sets the current end icon to be VISIBLE or INVISIBLE."
}
{
    "Origin": "See Immutable Set Static Factory Methods for details.",
    "Reference": "See Unmodifiable Sets for details.",
    "HebCup": "See Unmodifiable Set Static Factory Methods for details."
}
{
    "Origin": "Checks that a randomly generated {@link SkylarkSemantics} object can be serialized and\ndeserialized to an equivalent object.",
    "Reference": "Checks that a randomly generated {@link StarlarkSemantics} object can be serialized and\ndeserialized to an equivalent object.",
    "HebCup": "Checks that a randomly generated {@link StarlarkSemantics} object can be serialized and deserialized to an equivalent object."
}
{
    "Origin": "Gets the available {@link TradeOfferListMutator}s for the desired\n{@link Career} and {@code level}.",
    "Reference": "Gets the available {@link TradeOfferListMutator}s for the desired\n{@link Profession} and {@code level}.",
    "HebCup": "Gets the available {@link TradeOfferListMutator}s for the desired {@link Profession} and {@code level}."
}
{
    "Origin": "Reset {@link #KEY_LAST_MOVIES_WATCHED_AT} to 0 so all watched movies will be downloaded the\nnext time a sync runs.",
    "Reference": "Remove {@link #KEY_LAST_MOVIES_WATCHED_AT} so all watched movies will be downloaded the\nnext time a sync runs.",
    "HebCup": "Reset {@link #KEY_LAST_MOVIES_WATCHED_AT} to 0 so all watched movies will be downloaded the\nnext time a sync runs."
}
{
    "Origin": "If there are\nmore vaults to list, the response  field contains\nthe vault Amazon Resource Name (ARN) at which to continue the list\nwith a new List Vaults request; otherwise, the \nfield is  .",
    "Reference": "If there are more\nvaults to list, the response marker field\ncontains the vault Amazon Resource Name (ARN) at which to continue the\nlist with a new List Vaults request; otherwise, the\nmarker field is null.",
    "HebCup": "If there are\nmore vaults to list, the response  field contains\nthe vault Amazon Resource Name (ARN) at which to continue the list\nwith a new List Vaults request; otherwise, the \nfield is  ."
}
{
    "Origin": "Set this {@link AxisAngle4d} to be equivalent to the given\n{@link Quaterniond}.",
    "Reference": "Set this {@link AxisAngle4d} to be equivalent to the given\n{@link Quaterniondc}.",
    "HebCup": "Set this {@link AxisAngle4d} to be equivalent to the given {@link Quaterniondc}."
}
{
    "Origin": "If recipient set contains {@link #ALL_RECIPIENTS}\nthen the message will be sent to all distribution managers.",
    "Reference": "Message.ALL_RECIPIENTS\nthen the message will be sent to all distribution managers.",
    "HebCup": "If recipient set contains {@link #ALL_RECIPIENTS}\nthen the message will be sent to all distribution managers."
}
{
    "Origin": "This logic is used for default partitioning and can be used to implement\n{@link Partitionable}.",
    "Reference": "This logic is used for default partitioning and can be used to implement\n{@link Partitioner}.",
    "HebCup": "This logic is used for default partitioning and can be used to implement\n{@link Partitionable}."
}
{
    "Origin": "Generates a code sample for using {@link FileAsyncClient#uploadRangeFromUrl(long, long, long, URI)}",
    "Reference": "Generates a code sample for using {@link FileAsyncClient#uploadRangeFromUrl(long, long, long, String)}",
    "HebCup": "Generates a code sample for using {@link FileAsyncClient#uploadRangeFromUrl(long, long, long, URI)}"
}
{
    "Origin": "const MAX = 10;           ( 3) ConstantDeclaration; (4) ConstantElement",
    "Reference": "const MAX = 10;           ( 6) ConstantDeclaration; (7) ConstantElement",
    "HebCup": "const MAX = 10;           ( 3) ConstantDeclaration; (4) ConstantElement"
}
{
    "Origin": "The playback of the prefetched content should start in the later calls of\n{@link SessionPlayer2#play()}.",
    "Reference": "The playback of the prepareed content should start in the later calls of\n{@link SessionPlayer2#play()}.",
    "HebCup": "The playback of the prefetched content should start in the later calls of\n{@link SessionPlayer2#play()}."
}
{
    "Origin": "Top element on the stack contains the return value or exception instance.",
    "Reference": "The top element on the stack contains the return value or the exception instance.",
    "HebCup": "Top element on the stack contains the return value or exception instance."
}
{
    "Origin": "Adds pending task object.",
    "Reference": "Adds continuous task object.",
    "HebCup": "Adds Continuous task object."
}
{
    "Origin": "{@codesnippet com.azure.storage.file.datalake.DataLakeDirectoryClient.createSubDirectory#String}",
    "Reference": "{@codesnippet com.azure.storage.file.datalake.DataLakeDirectoryClient.createSubdirectory#String}",
    "HebCup": "{@codesnippet com.azure.storage.file.datalake.DataLakeDirectoryClient.createSubdirectory#String}"
}
{
    "Origin": "An array containing any synonyms for the entity value.",
    "Reference": "An array of synonyms for the entity value.",
    "HebCup": "An array containing any synonyms for the entity value."
}
{
    "Origin": "Remove any key material: slices potential alter and key shape.",
    "Reference": "Remove any key material: slices potential alter.",
    "HebCup": "Remove any key material: slices potential alter and key shape."
}
{
    "Origin": "If such an URL was returned during login, it will be\nreturned as an {@link URL}.",
    "Reference": "If such an URL was returned during login, it will be\nreturned {@link URL}.",
    "HebCup": "If such an URL was returned during login, it will be\nreturned as an {@link URL}."
}
{
    "Origin": "Overrides the default comparator (which returns the oldest event available).",
    "Reference": "Overrides the default trackedEventComparator.",
    "HebCup": "Overrides the default trackedEventComparator (which returns the oldest event available)."
}
{
    "Origin": "For patterns of type {@link Type#SINGLE_TARGET}, returns the {@link Label} of the target.",
    "Reference": "For patterns of type {@link Type#SINGLE_TARGET}, returns the target path.",
    "HebCup": "For patterns of type {@link Type#SINGLE_TARGET} , returns the {@link String} of the target."
}
{
    "Origin": "Get the current values from all resources.",
    "Reference": "Get the current monitored values from all resources.",
    "HebCup": "Get the current values from all resources."
}
{
    "Origin": "Use a map to store level and the node values in it.",
    "Reference": "Use a map to store column and the node values in it.",
    "HebCup": "Use a map to store level and the Nodes values in it."
}
{
    "Origin": "Locks existing inodes on the path to the inode specified by an id, in the specified\n{@link LockMode}.",
    "Reference": "Locks existing inodes on the path to the inode specified by an id, in the specified\n{@link LockPattern}.",
    "HebCup": "Locks existing inodes on the path to the inode specified by an id , in the specified {@link LockPattern}."
}
{
    "Origin": "Persist the fallbackStorageProperties to the fallbackStorageFile.",
    "Reference": "Persist the fallbackStorage to the fallbackStorageFile.",
    "HebCup": "Persist the fallbackStorage to the fallbackStorageFile."
}
{
    "Origin": "If defaultSessionType is null,\n    TEAMEVALUATION is selected by default.",
    "Reference": "If defaultSessionTemplateType is null,\n    TEAMEVALUATION is selected by default.",
    "HebCup": "If defaultSessionTemplateType is null , TEAMEVALUATION is selected by default."
}
{
    "Origin": "Gets a location for the module containing a specific file representing a Java\nsource or class, to be found within a location, which may be either\na module-oriented location or an output location.",
    "Reference": "Gets a location for the module containing a specific file\nto be found within a location, which may be either\na module-oriented location or an output location.",
    "HebCup": "Gets a location for the module containing a specific file representing a Java\nsource or class, to be found within a location, which may be either\na module-oriented location or an output location."
}
{
    "Origin": "Adds a WAN publisher configuration to this WAN replication.",
    "Reference": "Adds a custom WAN publisher implementation configuration to this WAN\nreplication.",
    "HebCup": "Adds a Custom Wan Publisher configuration to this WAN replication."
}
{
    "Origin": "Creates instance of {@link SecureServerExposerFactory} that will expose secure servers for\nruntime with the specified runtime identity.",
    "Reference": "Creates instance of {@link SecureServerExposerFactory} that will expose secure servers of",
    "HebCup": "Creates instance of {@link SecureServerExposerthis} that will expose secure servers for runtime with the specified runtime identity."
}
{
    "Origin": "Obtains an instance from the specified unique name.",
    "Reference": "Obtains an instance from the specified name.",
    "HebCup": "Obtains an instance from the specified name."
}
{
    "Origin": "This is the {@code location} given in the constructor after\nbeing resolved against the core instance dir.",
    "Reference": "This is the {@code location}\ngiven in the constructor.",
    "HebCup": "This is the {@code location} given in the constructor after\nbeing resolved against the core instance dir."
}
{
    "Origin": "A helper method to search for segments of a request path.",
    "Reference": "A helper method to search for pathSegments of a request path.",
    "HebCup": "A helper method to search for pathSegments of a request path."
}
{
    "Origin": "Validates and returns the underlying {@link LogicalType} of the given {@link Schema.Field}.",
    "Reference": "Validates and returns the underlying {@link LogicalType} Schema of the given {@link Schema.Field}.",
    "HebCup": "Validates and returns the underlying {@link LogicalTypeSchema} of the given {@link Schema.Field}."
}
{
    "Origin": "Sets new reference to partition counters page (logical cache sizes).",
    "Reference": "Sets new reference to page with logical cache sizes in cache group.",
    "HebCup": "Sets new reference to partition Sizes Page (logical cache sizes)."
}
{
    "Origin": "In this case dependant plugins not\ndisabled.",
    "Reference": "In this case dependent plugins not\ndisabled.",
    "HebCup": "In this case Dependents plugins not disabled."
}
{
    "Origin": "Deletes all files and sub-directories under .",
    "Reference": "Recursively deletes all files and sub-directories under .",
    "HebCup": "Deletes all files and sub-directories under ."
}
{
    "Origin": "Encodes the given object using the configured {@link #serializer}.",
    "Reference": "Encodes the given object using the given encoder.",
    "HebCup": "Encodes the given encoder using the configured {@link#serializer}."
}
{
    "Origin": "The curves themselves are provided in {@link ScenarioMarketData}\nusing {@link CurveId} as the identifier.",
    "Reference": "The curves themselves are provided in {@link ScenarioMarketData}\nusing {@link RatesCurveId} as the identifier.",
    "HebCup": "The curves themselves are provided in {@link ScenarioMarketData} using {@link RatesCurveId} as the identifier."
}
{
    "Origin": "Prints a record with the specified fields.",
    "Reference": "Prints a record with the specified entries.",
    "HebCup": "Prints a record with the specified entries."
}
{
    "Origin": "See Immutable Map Static Factory Methods for details.",
    "Reference": "See Unmodifiable Maps for details.",
    "HebCup": "See Unmodifiable Map Static Factory Methods for details."
}
{
    "Origin": "Returns a copy of this ZonedDateTime changing the zone offset to the\nearlier of the two valid offsets at a local time-line overlap.",
    "Reference": "Returns a copy of this date-time changing the zone offset to the\nearlier of the two valid offsets at a local time-line overlap.",
    "HebCup": "Returns a copy of this ZoneddateTime changing the zone offset to the earlier of the two valid offsets at a local time-line overlap."
}
{
    "Origin": "Returns the parent folder to the resource in the current site.",
    "Reference": "Returns the parent folder of this resource in the current site.",
    "HebCup": "Returns the Path Parent Folder to the resource in the current site."
}
{
    "Origin": "The detailed format of the region ID depends on the group.",
    "Reference": "The detailed format of the region ID depends on the group supplying the data.",
    "HebCup": "The detailed format ZoneRegion.of the region ID depends on the group."
}
{
    "Origin": "Receives all emails that matches given {@link EmailFilter filter}\nand mark them as 'seen' (ie 'read').",
    "Reference": "Receives all emails that matches given {@link EmailFilter}\nand mark them as 'seen' (ie 'read').",
    "HebCup": "Receives all emails that matches given {@link filter filter} and mark them as 'seen' (ie 'read')."
}
{
    "Origin": "Checks if pos is in range [offset .. offset+length]",
    "Reference": "Checks if pos is in range [offset..end]",
    "HebCup": "Checks if pos in Range [offset .. offset+length]"
}
{
    "Origin": "The gossip digest is built based on randomization\nrather than just looping through the collection of live endpoints.",
    "Reference": "The gossip digest is built based on randomization\nrather than just looping through the collection of live nodes.",
    "HebCup": "The gossip digest is built based on randomization rather than just looping through the collection of live nodes."
}
{
    "Origin": "Sets the {@link EncryptionScope encryption scope} that is used to encrypt blob contents on the server.",
    "Reference": "Sets the {@code encryption scope} that is used to encrypt blob contents on the server.",
    "HebCup": "Sets the {@link String encryption scope} that is used to encrypt blob contents on the server."
}
{
    "Origin": "Modifies the client to accept only requests with a given certificate.",
    "Reference": "Modifies the builder to accept only requests with a given certificate.",
    "HebCup": "Modifies the return to accept only requests with a given certificate."
}
{
    "Origin": "Gets whether this factory supports the given path and thus whether calling the\n{@link #create(String, UnderFileSystemConfiguration, AlluxioConfiguration)} can succeed for\nthis path.",
    "Reference": "Gets whether this factory supports the given path and thus whether calling the\n{@link #create(String, UnderFileSystemConfiguration)} can succeed for\nthis path.",
    "HebCup": "Gets whether this factory supports the given path and thus whether calling the\n{@link #create(String, UnderFileSystemConfiguration, AlluxioConfiguration)} can succeed for\nthis path."
}
{
    "Origin": "Code snippets for {@link BlobClientBase#setHTTPHeaders(BlobHTTPHeaders)}",
    "Reference": "Code snippets for {@link BlobClientBase#setHTTPHeaders(BlobHttpHeaders)}",
    "HebCup": "Code snippets for {@link BlobClientBase#setHTTPHeaders(BlobHttpHeaders)}"
}
{
    "Origin": "Returns the quorum name for operations.",
    "Reference": "Returns the split brain protection name for operations.",
    "HebCup": "Returns the split Brain Protection Name for operations."
}
{
    "Origin": "If the element\n    already has the attribute set, it will be overridden.",
    "Reference": "If the element\n    already has the attribute set, it will be overridden with this value.",
    "HebCup": "If the element\n    already has the attribute set, it will be overridden."
}
{
    "Origin": "The comparison is based on the Unicode value of each character in the strings.",
    "Reference": "The comparison is based on the Unicode value of each character in the CharSequences.",
    "HebCup": "The comparison is based on the Unicode value of each character in the CharSequence."
}
{
    "Origin": "Returns the paramSitetitle.",
    "Reference": "Returns the paramSitename.",
    "HebCup": "Returns the Sitename."
}
{
    "Origin": "{@link SyncTrainingListener#onTrainingStart(SyncTrainingEvent) onTrainingStart()} is called once when the training starts.",
    "Reference": "{@link TrainingListener#onTrainingStart() onTrainingStart()} is called once when the training starts.",
    "HebCup": "{@link SyncTrainingListener#onTrainingStart(SyncTrainingEvent) onTrainingStart()} is called once when the training starts."
}
{
    "Origin": "Closes any watchers, thread pools that may react to changes in tenant state, and removes any state\nin filesystem and zookeeper",
    "Reference": "Closes any watchers, thread pools that may react to changes in tenant state,\nand removes any session data in filesystem and zookeeper.",
    "HebCup": "Closes any watchers, thread pools that may react to changes in tenant state, and removes any state\nin filesystem and zookeeper"
}
{
    "Origin": "Sets the quorum name for queue operations.",
    "Reference": "Sets the split brain protection name for queue operations.",
    "HebCup": "Sets the split Brain Protection Name for queue operations."
}
{
    "Origin": "Returns a string representation of this object; useful for testing and debugging.",
    "Reference": "Returns a string representation of this object.",
    "HebCup": "Returns a string representation of this object; useful for testing and debugging."
}
{
    "Origin": "This method is called when a component will be rendered standalone.",
    "Reference": "This method is called when a component will be rendered as a part.",
    "HebCup": "This method is called when a component will be rendered standalone."
}
{
    "Origin": "Fill all the options for a given CoreNLP annotator.",
    "Reference": "Fill all the options for a given subcomponent.",
    "HebCup": "Fill all the options for a given CoreNLP Object."
}
{
    "Origin": "When 'false' is set, FAB visibility is set to View.GONE programmatically,",
    "Reference": "When 'false' is set, FAB is greyed out",
    "HebCup": "When 'false' is set , FAB visibility is set to false programmatically ,"
}
{
    "Origin": "Decorates {@link Service}s whose {@link Route} matches the specified {@code pathPattern}.",
    "Reference": "Decorates {@link HttpService}s whose {@link Route} matches the specified {@code pathPattern}.",
    "HebCup": "Decorates {@link Service}s whose {@link Route} matches the specified {@code pathPattern}."
}
{
    "Origin": "Walk through the jdk11 directory and create a mapping, {@link #jdk11StubFiles}, from file\nname to the class contained with in it.",
    "Reference": "Walk through the jdk directory and create a mapping, {@link #jdkStubFiles}, from file name to\nthe class contained with in it.",
    "HebCup": "Walk through the jdk directory and create a mapping , {@link#jdk11StubFiles} , from file name to the class contained with in it."
}
{
    "Origin": "Download ZIP file\n### Functional Description:   Download multiple files in a ZIP archive.",
    "Reference": "Download ZIP file(s)\n### Functional Description:   Download multiple files in a ZIP archive.",
    "HebCup": "Download ZIP file\n### Functional Description:   Download multiple files in a ZIP archive."
}
{
    "Origin": "Pre-multiply the rotation transformation of the given {@link Quaterniond} to this matrix.",
    "Reference": "Pre-multiply the rotation transformation of the given {@link Quaterniondc} to this matrix.",
    "HebCup": "Pre-multiply the rotation transformation of the given {@link Quaterniondc} to this matrix."
}
{
    "Origin": "Returns the type node to the left of the \"::\" if it exists.",
    "Reference": "Returns the type node to the left of the \"::\" if it exists and is\nunambiguous.",
    "HebCup": "ASTReferenceType the type node to the left of the ``::`` if it exists."
}
{
    "Origin": "Register a record reader.",
    "Reference": "Register a record writer listener.",
    "HebCup": "Register a Record Writer Listener."
}
{
    "Origin": "Creates a {@code Catalog} object using the specified feature settings and\npath to one or more catalog files.",
    "Reference": "Creates a {@code Catalog} object using the specified feature settings and\nuri(s) to one or more catalog files.",
    "HebCup": "Creates a {@code Catalog} object using the specified feature settings and uri to one or more catalog files."
}
{
    "Origin": "Adds tags for the specified {@link NamespacedEntityId}.",
    "Reference": "Adds tags for the specified {@link MetadataEntity}.",
    "HebCup": "Adds tags for the specified {@link MetadataEntity}."
}
{
    "Origin": "This method sets all fields, which are custom in bibtext and therefore supported by jabref, but which are not included in the DublinCore format.",
    "Reference": "This method sets all fields, which are custom in BibTeX and therefore supported by JabRef, but which are not\nincluded in the DublinCore format.",
    "HebCup": "This method sets all Month, which are custom in bibtext and therefore supported by jabref, but which are not included in the DublinCore format."
}
{
    "Origin": "If the set etag doesn't match anything the update won't happen, this will result in a 412.",
    "Reference": "If the set ETag doesn't match anything the update won't happen, this will result in a 412.",
    "HebCup": "If the setConfiguration etag doesn't match anything the update won't happen , this will result in a 412."
}
{
    "Origin": "Get list of index keys.",
    "Reference": "Get the resource value.",
    "HebCup": "Get list of resource keys."
}
{
    "Origin": "Get the numbe rof relationships in the collection.",
    "Reference": "Get the number of relationships in the collection.",
    "HebCup": "Get the numbe rof relationships in the collection."
}
{
    "Origin": "Returns a builder for custom analyzers that loads all resources from classpath.",
    "Reference": "Returns a builder for custom analyzers that loads all resources from",
    "HebCup": "Returns a builder for custom analyzers that loads all resources from classpath."
}
{
    "Origin": "This will specify the destination document to open in a new window.",
    "Reference": "This will specify whether to open the destination document in a new window.",
    "HebCup": "This will specify the destination document to open in a Name."
}
{
    "Origin": "Parses options in the specified map.",
    "Reference": "Parses and assigns options from the specified map.",
    "HebCup": "Parses options in the specified map."
}
{
    "Origin": "Returns all rotations for this application",
    "Reference": "Returns all rotations assigned to this",
    "HebCup": "Returns all AssignedRotation for this application"
}
{
    "Origin": "Extracts GCM topic names out of a given Criteria object (e.g.",
    "Reference": "Extracts FCM topic names out of a given Criteria object (e.g.",
    "HebCup": "Extracts FCM topic names out of a given Criteria object (e.g."
}
{
    "Origin": "Returns the provider for the given load-balancing policy, or {@code null} if no suitable\nprovider can be found.",
    "Reference": "Returns the effective provider for the given load-balancing policy, or {@code null} if no\nsuitable provider can be found.",
    "HebCup": "Returns the effectiv for the given load-balancing policy , or {@code null} if no suitable effectiv can be found."
}
{
    "Origin": "Sets the value of the 'KeepDeletedCells' field",
    "Reference": "Sets the value of the 'keepDeletedCells' field.",
    "HebCup": "Sets the value of the 'keepDeletedCells' field"
}
{
    "Origin": "Removes virtual port.",
    "Reference": "Removes virtual port related flow rules.",
    "HebCup": "Removes virtual port."
}
{
    "Origin": "Now loop through the sorted list and retrieve the GossipDigest corresponding\nto the endpoint from the map that was initially constructed.",
    "Reference": "Now loop through the sorted list and retrieve the GossipDigest corresponding\nto the node from the map that was initially constructed.",
    "HebCup": "Now loop through the sorted list and retrieve the GossipDigest corresponding to the Node from the map that was initially constructed."
}
{
    "Origin": "Gets (and removes from the queue) the handshake message\nwith this handshake's next expected message sequence number.",
    "Reference": "Gets (and removes from the queue) the next record of the handshake\nmessage with this handshake's next expected message sequence number.",
    "HebCup": "Gets (and removes from the queue) the handshake Record with this handshake's next expected Record sequence number."
}
{
    "Origin": "Note that time is adjusted backwards by a week to account for possible clock drift in the block headers.",
    "Reference": "Note that timeSecs is adjusted backwards by a week to account for possible clock drift in the block headers.",
    "HebCup": "Note that timeSecs is adjusted backwards by a week to account for possible clock drift in the block headers."
}
{
    "Origin": "If you define two fields with same name but different cases, behavior is undefined.",
    "Reference": "When entity posted with two duplicate names with different cases, last one wins.",
    "HebCup": "If you define two fields with same Case but different cases , behavior is undefined."
}
{
    "Origin": "if the message have the embeds suppressed then this action can undo the suppressed embeds.",
    "Reference": "If the message have the embeds suppressed then this action\ncan undo the suppressed embeds.",
    "HebCup": "if the message have the embeds suppressed then this action can undo the suppressed embeds."
}
{
    "Origin": "Checks if a message needs to be encrypted/decrypted.",
    "Reference": "Checks if a message needs to be encrypted/decrypted, or whether it can bypass encryption",
    "HebCup": "Checks if a message needs to be encrypted/decrypted."
}
{
    "Origin": "Read an item list DAO from a file.",
    "Reference": "Read an item list DAO from a file with no header rows.",
    "HebCup": "Read an item list DAO from a file."
}
{
    "Origin": "NOTE: This operation enables you to check the status of your\njob.",
    "Reference": "This operation enables you to check the status of your job.",
    "HebCup": "NOTE: This operation enables you to check the status of your\njob."
}
{
    "Origin": "Reset the value given the timestamp, value and reals.",
    "Reference": "Reset the value given the timestamp and value.",
    "HebCup": "Reset the value given the timestamp, value and reals."
}
{
    "Origin": "Returns the checkout with the primary key or throws a {@link com.liferay.ams.NoSuchCheckoutException} if it could not be found.",
    "Reference": "Returns the checkout with the primary key or throws a {@link NoSuchCheckoutException} if it could not be found.",
    "HebCup": "Returns the checkout with the primary key or throws a {@link com.liferay.ams.NoSuchCheckoutException} if it could not be found."
}
{
    "Origin": "Factory method that returns list of callable tasks for performing maxpooling operation",
    "Reference": "Factory method that returns list of callable tasks for performing pooling operation",
    "HebCup": "Factory method that returns list of callable tasks for performing Pooling operation"
}
{
    "Origin": "This function initializes the Facebook SDK, the behavior of Facebook SDK functions are\nundetermined if this function is not called.",
    "Reference": "The behavior of Facebook SDK functions are undetermined if this function is not called.",
    "HebCup": "This function initializes the Facebook SDK, the behavior of Facebook SDK functions are\nundetermined if this function is not called."
}
{
    "Origin": "We cannot just use a\nmap, because it may result in an eternal recurrent call, guava does a good job at handling that situation.",
    "Reference": "We cannot just use a\nmap, because it may result in an eternal recurrent call, Guava does a good job at handling that situation.",
    "HebCup": "We cannot just use a\nmap, because it may result in an eternal recurrent call, guava does a good job at handling that situation."
}
{
    "Origin": "Simple example of a replacement pattern, deleting entries which only include SSNs",
    "Reference": "Simple example of a replacement pattern, deleting entries which only include credit cards",
    "HebCup": "Simple example of a replacement pattern , deleting entries which only include CREDITs"
}
{
    "Origin": "Actually copy the contents of the {@code src} file/directory\nto the {@code dest} file/directory.",
    "Reference": "Recursively copy the contents of the {@code src} file/directory\nto the {@code dest} file/directory.",
    "HebCup": "Actually copy the contents of the {@code src} file/directory to the {@code dest} file/directory."
}
{
    "Origin": "Such permission\ndepends on whether the current user is a system administrator, whether\nthey have explicit UPDATE permission on the target user, and whether\nthey have explicit ADMINISTER permission on all affected objects.",
    "Reference": "Such permission\ndepends on whether the current user is a system administrator, whether\nthey have explicit UPDATE permission on the target entity, and whether\nthey have explicit ADMINISTER permission on all affected objects.",
    "HebCup": "Such permission depends on whether the current user is a system administrator, whether they have explicit UPDATE permission on the target Entity, and whether they have explicit ADMINISTER permission on all affected objects."
}
{
    "Origin": "Public interface to perform IPA over a given DML program.",
    "Reference": "Main interface to perform IPA over a given DML program.",
    "HebCup": "Public interface to perform IPA over a given DML program."
}
{
    "Origin": "Unlock the given region, throw an IOException if we fail.",
    "Reference": "Unlock the given region.",
    "HebCup": "Unlock the given region, throw an IOException if we fail."
}
{
    "Origin": "Standard getter for the rightwardlabel String in this Relationship",
    "Reference": "Standard getter for the rightwardValue String in this Relationship",
    "HebCup": "Standard getter for the rightwardValue String in this Relationship"
}
{
    "Origin": "Return the current starting address.",
    "Reference": "Return the current head segment.",
    "HebCup": "Return the current head Segment."
}
{
    "Origin": "Recursively assigns an iterable value to a list literal.",
    "Reference": "Recursively assigns an iterable value to a sequence of assignable expressions.",
    "HebCup": "Recursively assigns an iterable value to a List Expression."
}
{
    "Origin": "In this case\nthe underlying stream is advanced to the end of the associated MPEG\nframe.",
    "Reference": "In this case\nthe underlying stream is advanced to the end of the associated MPEG\nframe or until the EOF is reached.",
    "HebCup": "In this case\nthe underlying stream is advanced to the end of the associated MPEG\nframe."
}
{
    "Origin": "Returns an unmodifiable list of the command args for this job specification.",
    "Reference": "Returns an unmodifiable list of arguments provided by the user for this job.",
    "HebCup": "Returns an unmodifiable list of the Job Args for this job specification."
}
{
    "Origin": "Create a TransactionStatus instance for the given arguments.",
    "Reference": "Create a ReactiveTransaction instance for the given arguments.",
    "HebCup": "Create a ReactiveTransaction instance for the given arguments."
}
{
    "Origin": "This method is always invoked after {@link #secureConnectStart(Call)}.",
    "Reference": "This method is invoked after {@link #secureConnectStart}.",
    "HebCup": "This method is always invoked after {@link #secureConnectStart(Call)}."
}
{
    "Origin": "Alias for {@link Future#successful(ExecutorService, Object)}",
    "Reference": "Alias for {@link Future#successful(Executor, Object)}",
    "HebCup": "Alias for {@link Future#successful(Executor, Object)}"
}
{
    "Origin": "Returns the last sync d l object in the ordered set where companyId = ?",
    "Reference": "Returns the last sync d l object in the ordered set where repositoryId = ?",
    "HebCup": "Returns the last sync d l object in the ordered set where companyId = ?"
}
{
    "Origin": "Test of npara method, of class NegativeBinomialDistribution.",
    "Reference": "Test of length method, of class NegativeBinomialDistribution.",
    "HebCup": "Test of Length method , of class NegativeBinomialDistribution."
}
{
    "Origin": "Gets an integer from the given element.",
    "Reference": "Gets an integer from the given string.",
    "HebCup": "Gets an integer from the given String."
}
{
    "Origin": "Removes all the sync d l objects where companyId = ?",
    "Reference": "Removes all the sync d l objects where repositoryId = ?",
    "HebCup": "Removes all the sync d l objects where repositoryId = ?"
}
{
    "Origin": "Invokes parent.resolveRequires to resolve the given root modules.",
    "Reference": "Invokes parent.resolve to resolve the given root modules.",
    "HebCup": "Invokes parent.resolve to resolve the given root modules."
}
{
    "Origin": "The script is added to the tree of scripts and its templates loaded, if any.",
    "Reference": "The script is added to the tree of scripts and its scripts/templates loaded, if any.",
    "HebCup": "The script is added to the tree of scripts and its Scripts loaded , if any."
}
{
    "Origin": "Returns a string representation of this object; useful for testing and debugging.",
    "Reference": "Returns a string representation of this object.",
    "HebCup": "Returns a string representation of this object; useful for testing and debugging."
}
{
    "Origin": "Returns true if this result represents an unmappable-character error.",
    "Reference": "Tells whether or not this object describes an unmappable-character\nerror.",
    "HebCup": "Returns true if (result represents an unmappable-character error."
}
{
    "Origin": "Extracts options from the specified item.",
    "Reference": "Assign options to the specified options.",
    "HebCup": "Extracts options from the specified item."
}
{
    "Origin": "Convenience routine to return the specified error's\nunderlying Exception, or null if it isn't one.",
    "Reference": "Returns the specified error's underlying Exception, or null if it isn't one.",
    "HebCup": "Convenience routine to return the specified error's\nunderlying Exception, or null if it isn't one."
}
{
    "Origin": "A {@link Materialization} where the primitive view type is a multimap with fully specified\nwindowed keys.",
    "Reference": "A {@link Materialization} where the primitive view type is a multimap with fully specified\nwindowed values.",
    "HebCup": "A {@link Materialization} where the primitive view type is a multimap with fully specified\nwindowed keys."
}
{
    "Origin": "Objects of the following type(s) are allowed in the list\n{@link Response.Fixed.Category }",
    "Reference": "Objects of the following type(s) are allowed in the list\n{@link Response.Fixed.Item }",
    "HebCup": "Objects of the following type (s) are allowed in the list {@link Response.Fixed.Item}"
}
{
    "Origin": "Resources ending in \"{@code .class}\" or where\nthe package name is not a Java identifier are resources that can\nnever be encapsulated.",
    "Reference": "Resources ending in \"{@code .class}\"\nor where the package name is not a legal package name can not be\nencapsulated.",
    "HebCup": "Resources ending in ``{@code .class}`` or where the package name is not a Package Name are resources that can never be encapsulated."
}
{
    "Origin": "Converts an array of raw binary data into a String of ascii 0 and 1 characters.",
    "Reference": "Converts an array of raw binary data into a String of ASCII 0 and 1 characters.",
    "HebCup": "Converts an array of raw binary data into a String of ascii 0 and 1 characters."
}
{
    "Origin": "We should also flush the buffer is there are any thints for the node there, and close the writer (if any),\nso that we don't leave any hint files lying around.",
    "Reference": "We should also flush the buffer if there are any hints for the node there, and close the writer (if any),\nso that we don't leave any hint files lying around.",
    "HebCup": "We should also flush the buffer is there are any thints for the node there, and close the writer (if any),\nso that we don't leave any hint files lying around."
}
{
    "Origin": "Brings the BIND nodes in a correct order according to the dependencies\nthat they have.",
    "Reference": "Brings the nodes in a correct order according to binding req dependencies\nthat they have.",
    "HebCup": "Brings the nodes in a correct order according to the dependencies that they have."
}
{
    "Origin": "Queries this search source for the given queryString.",
    "Reference": "Creates query for the given query.",
    "HebCup": "Queries this search source for the given createString."
}
{
    "Origin": "Number of direct children (no recursion; for rooms / folders only)",
    "Reference": "Number of direct children (no recursion; for rooms / folders only)  [Deprecated since version VERSION]",
    "HebCup": "Number of direct children (no recursion; for rooms / folders only)"
}
{
    "Origin": "Prepare name id attribute id p attribute.",
    "Reference": "Prepare name id attribute.",
    "HebCup": "Prepare name id attribute id p attribute."
}
{
    "Origin": "Scope of the schedule.",
    "Reference": "Scope of the task.",
    "HebCup": "Scope of the Task."
}
{
    "Origin": "An Exception\noccured which may be retrieved from the arguments., FAILED_TRUNCATED -",
    "Reference": "An Exception occured which may be retrieved from the arguments., FAILED_TRUNCATED - Parsing failed.",
    "HebCup": "An Exception\noccured which may be retrieved from the arguments., FAILED_TRUNCATED -"
}
{
    "Origin": "Create a new builder preconfigured to connect to the Bigtable emulator.",
    "Reference": "Create a new builder preconfigured to connect to the Bigtable emulator with port number.",
    "HebCup": "Create a new Builder For Emulator preconfigured to connect to the Bigtable emulator."
}
{
    "Origin": "When possible this method will present the bytes to the caller without copying them into\nanother buffer copy.",
    "Reference": "When possible this method will present the bytes to the caller without copying them into\na new buffer copy.",
    "HebCup": "When possible this method will present the bytes to the caller without copying them into another Data copy."
}
{
    "Origin": "get the list of git markers web-elements in the editor",
    "Reference": "Gets the list of git markers web-elements in the editor.",
    "HebCup": "get the catch of git markers web-elements in the editor"
}
{
    "Origin": "Convert to primitive types, returning default value if text is null.",
    "Reference": "Convert to long integer, returning default value if text is inconvertible.",
    "HebCup": "Convert to primitive types, returning default value if text is null."
}
{
    "Origin": "Create and return a {@link UserDefinedFunctionInfo} object encapsulating information obtained\nfrom the given function and from its parsed docstring.",
    "Reference": "Create and return a {@link StarlarkFunctionInfo} object encapsulating information obtained from\nthe given function and from its parsed docstring.",
    "HebCup": "Create and return a {@link StarlarkFunctionInfo} object encapsulating information obtained from the given function and from its parsed docstring."
}
{
    "Origin": "You can\nalso limit the number of vaults returned in the response by specifying\nthe  parameter in the request.",
    "Reference": "You can also limit the\nnumber of vaults returned in the response by specifying the\nlimit parameter in the request.",
    "HebCup": "You can\nalso limit the number of vaults returned in the response by specifying\nthe  parameter in the request."
}
{
    "Origin": "Tests the creation of a message authentication code for the md5 algorithm.",
    "Reference": "Tests the creation of message authentication codes for the md5 algorithm.",
    "HebCup": "Tests the creation of a message authentication code for the md5 algorithm."
}
{
    "Origin": "Returns {@code true} if the given name is a legal binary name.",
    "Reference": "Returns {@code true} if the given name is a legal type name.",
    "HebCup": "Returns {@code true} if the given name is a legal Type Name."
}
{
    "Origin": "TraverseOps a Collection of Either3 producing an Either3 with a ListX, applying the transformation function to every\nelement in the list",
    "Reference": "Traverse a Collection of Either3 producing an Either3 with a ListX, applying the transformation function to every\nelement in the list",
    "HebCup": "TraverseOps a Collection of Either3 producing an Either3 with a ReactiveSeq , applying the transformation function to every element in the list"
}
{
    "Origin": "For EL need to unquote everything but no need to convert anything.",
    "Reference": "Once inside EL, no need to unquote or convert anything.",
    "HebCup": "For EL need to unquote everything but no need to convert anything."
}
{
    "Origin": "Clean up.",
    "Reference": "Set up.",
    "HebCup": "Clean up."
}
{
    "Origin": "Returns a string representation of this object; useful for testing and debugging.",
    "Reference": "Returns a string representation of this object.",
    "HebCup": "Returns a string representation of this object; useful for testing and debugging."
}
{
    "Origin": "Calculates and returns the bottom margin of a view, which visualizes a tab.",
    "Reference": "Calculates and returns the bottom margin of a specific tab.",
    "HebCup": "Calculates and returns the bottom margin of a item , which visualizes a tab."
}
{
    "Origin": "Waits until the job has reached a certain state.",
    "Reference": "Waits until the Job has reached a certain state.",
    "HebCup": "Waits until the job has reached a certain state."
}
{
    "Origin": "Code snippet for {@link DataLakeDirectoryClient#getSubDirectoryClient(String)}",
    "Reference": "Code snippet for {@link DataLakeDirectoryClient#getSubdirectoryClient(String)}",
    "HebCup": "Code snippet for {@link DataLakeDirectoryClient#getSubdirectoryClient (String)}"
}
{
    "Origin": "As service binding involves resolution then it may fail with {@link",
    "Reference": "Post-resolution consistency checks may fail with {@code",
    "HebCup": "As service binding involves resolution then it may fail with {@link"
}
{
    "Origin": "Gets the redirection validator, that ensures the followed redirections are in scan's scope.",
    "Reference": "Gets the HTTP request configuration, that ensures the followed redirections are in scan's scope.",
    "HebCup": "Gets the http Request Config, that ensures the followed redirections are in scan's scope."
}
{
    "Origin": "Slight performance increase over {@link #render(VertexBuffer)}.",
    "Reference": "Slight performance increase over {@link #render(BufferBuilder)}.",
    "HebCup": "Slight performance increase over {@link #render(BufferBuilder)}."
}
{
    "Origin": "Returns a flag, indicating if automatic pulling is enabled by default.",
    "Reference": "Returns a flag, indicating if automatic pulling first is enabled by default.",
    "HebCup": "Returns a flag, indicating if automatic pulling is enabled by default."
}
{
    "Origin": "Given a persister and primary key, find the locally cross-referenced natural id.",
    "Reference": "Given a descriptor and primary key, find the locally cross-referenced natural id.",
    "HebCup": "Given a TypeDescriptor and primary key , find the locally cross-referenced natural id."
}
{
    "Origin": "Appends {@link ImageWindow#close()}.",
    "Reference": "Prepends {@link ImageWindow#close()}.",
    "HebCup": "Appends {@link ImageWindow#close()}."
}
{
    "Origin": "Return a set of all extensions with the given element name and namespace.",
    "Reference": "Return a list of all extensions with the given element name and namespace.",
    "HebCup": "Return a List of all extensions with the given element name and namespace."
}
{
    "Origin": "Begin insert before the current line by creating a new blank line above the current line",
    "Reference": "Begin insert before the current line by creating a new blank line above the current line\nfor all carets",
    "HebCup": "Begin insert before the current line by creating a new blank line above the current line"
}
{
    "Origin": "Returns a string representation of this object; useful for testing and debugging.",
    "Reference": "Returns a string representation of this object.",
    "HebCup": "Returns a string representation of this object; useful for testing and debugging."
}
{
    "Origin": "If this happens, a configuration {@link ConfigurationEvent event} will\nbe sent to all registered listeners.",
    "Reference": "If this happens, a CONFIGURATION {@link ConfigurationEvent event} will\nbe sent to all registered listeners.",
    "HebCup": "If this happens , a CONFIGURATION {@link ConfigurationEvent event} will be sent to all registered listeners."
}
{
    "Origin": "Reset password\n### Functional Description:   Resets a user's password to a new value.",
    "Reference": "Reset password\n### Functional Description:   Resets user's password.",
    "HebCup": "Reset password\n### Functional Description:   Resets a user's password to a new value."
}
{
    "Origin": "Walk through the jdk11 directory and create a mapping, {@link #jdk11StubFilesJar}, from file\nname to the class contained with in it.",
    "Reference": "Walk through the jdk directory and create a mapping, {@link #jdkStubFilesJar}, from file name\nto the class contained with in it.",
    "HebCup": "Walk through the jdk11 directory and create a mapping , {@link#jdkStubFilesJar} , from file name to the class contained with in it."
}
{
    "Origin": "Returns the package directory.",
    "Reference": "Returns the path to the package.",
    "HebCup": "Returns the package directory."
}
{
    "Origin": "Sets the space between children.",
    "Reference": "Sets the vertical space between children.",
    "HebCup": "Sets the space between children."
}
{
    "Origin": "Stop the sync manager.",
    "Reference": "1.",
    "HebCup": "Closeable the sync manager."
}
{
    "Origin": "Register a module this this class loader.",
    "Reference": "Register a module this class loader.",
    "HebCup": "Register a module this this class loader."
}
{
    "Origin": "If an existing file is overwritten, it is moved to the Recycle Bin instead of the restored one.",
    "Reference": "If an existing file is overwritten, it is moved to the recycle bin instead of the restored one.",
    "HebCup": "If an existing file is overwritten, it is moved to the Recycle Bin instead of the restored one."
}
{
    "Origin": "The default implementation fades out the dialog over 400\nmilliseconds and then removes it from the stage.",
    "Reference": "The default implementation fades out the dialog over 400\nmilliseconds.",
    "HebCup": "The default implementation fades out the dialog over 400\nmilliseconds and then removes it from the stage."
}
{
    "Origin": "Returns the calendar resource with the primary key or throws a {@link com.liferay.calendar.NoSuchResourceException} if it could not be found.",
    "Reference": "Returns the calendar resource with the primary key or throws a {@link NoSuchResourceException} if it could not be found.",
    "HebCup": "Returns the calendar resource with the primary key or throws a {@link com.liferay.calendar.NoSuchResourceException} if it could not be found."
}
{
    "Origin": "Returns {@link TableHeaderToolTipProvider} for {@link JTableHeader} that uses this {@link TableHeaderPainter}.",
    "Reference": "Returns {@link TableHeaderToolTipProvider} for {@link JTable} that uses {@link JTableHeader}.",
    "HebCup": "Returns {@link TableHeaderTableToolTipProvider} for {@link JTableHeader} that uses this {@link TableHeaderPainter}."
}
{
    "Origin": "Copies entries from one array to another.",
    "Reference": "Copies entries from one array to another array.",
    "HebCup": "Copies entries from one array to another."
}
{
    "Origin": "Sends a notification broadcast for a task that has started or became due.",
    "Reference": "Sends a notification broadcast for a task instance that has started or became due.",
    "HebCup": "Sends a notification broadcast for a task that has started or became due."
}
{
    "Origin": "Returns a string representation of this object; useful for testing and debugging.",
    "Reference": "Returns a string representation of this object.",
    "HebCup": "Returns a string representation of this object; useful for testing and debugging."
}
{
    "Origin": "Returns the cluster name.",
    "Reference": "Returns the cluster identifier.",
    "HebCup": "Returns the cluster ClusterId."
}
{
    "Origin": "Adds a {@link SurfaceConfiguration} to the combination.",
    "Reference": "Adds a {@link SurfaceConfig} to the combination.",
    "HebCup": "Adds a {@link SurfaceConfig} to the combination."
}
{
    "Origin": "Multiply this duration with the given duration",
    "Reference": "Multiply this amount with the given amount",
    "HebCup": "Multiply this amount with the given amount"
}
{
    "Origin": "Returns the border size that sentry robots are restricted to.",
    "Reference": "Returns the border size that border sentry robots are restricted to.",
    "HebCup": "Returns the Attack size that sentry robots are restricted to."
}
{
    "Origin": "The given {@link MediaItem2} is\nset as the tag of the source.",
    "Reference": "The given {@link MediaItem} is\nset as the tag of the source.",
    "HebCup": "The given {@link MediaItem} is set as the tag of the source."
}
{
    "Origin": "Test that DocumentElement.add does not throw any exception when passing a reference to an excluded field.",
    "Reference": "Test that DocumentElement.addValue does not throw any exception when passing a reference to an excluded field.",
    "HebCup": "Test that DocumentElement.addValue does not throw any exception when passing a reference to an excluded field."
}
{
    "Origin": "Writes events collection to BED file",
    "Reference": "Writes events collection to file",
    "HebCup": "Writes events collection to calls file"
}
{
    "Origin": "Returns the space-separated OAuth scopes to use with the the service account flow or\n{@code null} for none.",
    "Reference": "Returns a collection of OAuth scopes to use with the the service account flow or {@code null}\nfor none.",
    "HebCup": "Returns the space-separated OAuth scopes to use with the the service account flow or\n{@code null} for none."
}
{
    "Origin": "Creates a {@code For}-comprehension of 8 Iterables.",
    "Reference": "Creates a {@code For}-comprehension of 8 Options.",
    "HebCup": "Creates a {@code For}-comprehension of 8 Iterables."
}
{
    "Origin": "CaloriesBurned} data point.",
    "Reference": "CaloriesBurned1} data point.",
    "HebCup": "CaloriesBurned1} data point."
}
{
    "Origin": "Obtains new ProxyInstantiator based on given {@link WeldConfiguration}.",
    "Reference": "Obtains a ProxyInstantiator based on given {@link WeldConfiguration}.",
    "HebCup": "Obtains new ProxyInstantiator based on given {@link WeldConfiguration}."
}
{
    "Origin": "Unsafe version of: {@link #shaderc_spvc_compile_into_glsl compile_into_glsl}",
    "Reference": "Unsafe version of: {@link #shaderc_spvc_initialize_for_glsl initialize_for_glsl}",
    "HebCup": "Unsafe version of: {@link #shaderc_spvc_initialize_for_glsl compile_into_glsl}"
}
{
    "Origin": "Set the {@code HttpClient} used for\n{@linkplain #createAsyncRequest(URI, HttpMethod) asynchronous execution}.",
    "Reference": "Set the {@code CloseableHttpAsyncClient} used for\n{@linkplain #createAsyncRequest(URI, HttpMethod) asynchronous execution}.",
    "HebCup": "Set the {@code HttpClient} used for {@linkplain #createasyncRequest(URI, HttpMethod) asynchronous execution}."
}
{
    "Origin": "Sets the page changed flag to .",
    "Reference": "Marks the page as changed.",
    "HebCup": "Sets the page changed flag to ."
}
{
    "Origin": "Ensure that at most maxOpenRequests are not complete.",
    "Reference": "Ensure that at most numberOfRequestsToProceed are not complete.",
    "HebCup": "Ensure that at most maxOpenRequests are not complete."
}
{
    "Origin": "Add a series for a Bubble type chart using using Lists",
    "Reference": "Add a series for a Bubble type chart using using double arrays",
    "HebCup": "Add a Date for a Bubble type chart using using Lists"
}
{
    "Origin": "The only other valid location for '}' is inside\na StringLiteral.",
    "Reference": "The only other valid location for '}' is inside a",
    "HebCup": "The only other valid location for '}' is inside\na StringLiteral."
}
{
    "Origin": "Returns true is this module patcher has no patches.",
    "Reference": "Returns true is this module patcher has patches.",
    "HebCup": "Returns true has this module patcher has no patches."
}
{
    "Origin": "A {@link BallerinaException} will be thrown if the key does not exists.",
    "Reference": "A {@link BallerinaException} will be thrown if the key does not exists and a filler value does not exist.",
    "HebCup": "A {@link BallerinaException} will be thrown if the key does not exists."
}
{
    "Origin": "Also clears any idle instances associated with the username that was used\nto create the PooledConnection.",
    "Reference": "Also clears any idle instances associated with the user name that was used to\ncreate the PooledConnection.",
    "HebCup": "Also clears any idle instances associated with the username that was used\nto create the PooledConnection."
}
{
    "Origin": "Fills the combo box with the options 'True', 'False' and 'Not set'.",
    "Reference": "Fills the selection widget with the options 'True', 'False' and 'Not set'.",
    "HebCup": "Fills the Option Group with the options 'True', 'False' and 'Not set'."
}
{
    "Origin": "Add a Info EventLogItem and log.",
    "Reference": "Add a Info EventLogEntry and log.",
    "HebCup": "Add a Info EventLogEntry and log."
}
{
    "Origin": "Sets the {@link SharedKeyCredential} used to authorize requests sent to the service.",
    "Reference": "Sets the {@link StorageSharedKeyCredential} used to authorize requests sent to the service.",
    "HebCup": "Sets the {@link StorageSharedKeyCredential} used to authorize requests sent to the service."
}
{
    "Origin": "This methods sets this armature in its bind pose (aligned with the undeformed mesh)",
    "Reference": "This methods sets this armature in its bind pose (aligned with the mesh to deform)",
    "HebCup": "This methods sets this armature in its bind pose (aligned with the undeformed mesh)"
}
{
    "Origin": "Asserts that the given violation list has the expected number of violations.",
    "Reference": "Asserts that the given violation list has no violations (is empty).",
    "HebCup": "Asserts that the given violation list has the expected No Violations."
}
{
    "Origin": "Stub of {@link Plugin#willDeclareProperty(TypeSpec.Builder, PropertyGenerator, FieldSpec.Builder)}\nfor subclasses to override",
    "Reference": "Stub of {@link Plugin#beforeDeclareProperty(TypeSpec.Builder, PropertyGenerator, FieldSpec.Builder)}\nfor subclasses to override",
    "HebCup": "Stub of {@link Plugin#beforeDeclareProperty (TypeSpec.Builder , PropertyGenerator , FieldSpec.Builder)} for subclasses to override"
}
{
    "Origin": "or throws a {@link com.liferay.akismet.NoSuchDataException} if it could not be found.",
    "Reference": "or throws a {@link NoSuchDataException} if it could not be found.",
    "HebCup": "or throws a {@link com.liferay.akismet.NoSuchDataException} if it could not be found."
}
{
    "Origin": "Reset all mocks.",
    "Reference": "Mock setup.",
    "HebCup": "createNiceMock all mocks."
}
{
    "Origin": "Returns true if the method has any Shiro annotations, false otherwise.",
    "Reference": "Returns true if the method or the class has any Shiro annotations, false otherwise.",
    "HebCup": "Returns true return the method has any Shiro annotations , false otherwise."
}
{
    "Origin": "In other words, other\nsessions can continue to play during the prefetch of this session.",
    "Reference": "In other words, other\nsessions can continue to play during the prepare of this session.",
    "HebCup": "In other words , other sessions can continue to play during the prepare of this session."
}
{
    "Origin": "Clears the value of the 'publicPort' field",
    "Reference": "Clears the value of the 'publicPorts' field",
    "HebCup": "Clears the value of the 'PublicPorts' field"
}
{
    "Origin": "Helper method that allows for registration of regexps to the {@link ClassWhiteList}.",
    "Reference": "Helper method that allows for registration of a regexp to the {@link ClassWhiteList}.",
    "HebCup": "Helper method that allows for registration of regex to the {@link ClassWhiteList}."
}
{
    "Origin": "Register an observer EventListener with the current context (provided).",
    "Reference": "Register the given EventListener to the contest and event class.",
    "HebCup": "Register an observers EventListener with the current context (provided)."
}
{
    "Origin": "Search text placeholer by its type",
    "Reference": "Search placeholder by its type",
    "HebCup": "Search Simple placeholer by its type"
}
{
    "Origin": "Return the first argument if it yields an empty sequence.",
    "Reference": "Returns the first argument (or the context) if it yields an empty sequence.",
    "HebCup": "Return the first argument boolean it yields an empty sequence."
}
{
    "Origin": "The {@link Flux} will\ncontain one or several feed response of the obtained items.",
    "Reference": "The {@link CosmosContinuablePagedFlux} will\ncontain one or several feed response of the obtained items.",
    "HebCup": "The {@link Flux} will contain one or several Cosmos Continuable Paged Flux of the obtained items."
}
{
    "Origin": "The negative of {@code contains} is {@link #absent}.",
    "Reference": "The negative of {@code contains} is {@link #notContaining}.",
    "HebCup": "The negative of {@code contains} is {@link#notContaining}."
}
{
    "Origin": "Configure a SpEL expression to evaluate a {@link RSocketOutboundGateway.Command}\nfor RSocket request type at runtime against a request message.",
    "Reference": "Configure a SpEL expression to evaluate an {@link RSocketOutboundGateway.Command}\nfor the RSocket request type at runtime against a request message.",
    "HebCup": "Configure a SpEL expression to evaluate a {@link RSocketOutboundGateway.Model} for RSocket request type at runtime against a request message."
}
{
    "Origin": "The playback of the prefetched content should start in the later calls of\n{@link SessionPlayer2#play()}.",
    "Reference": "The playback of the prepareed content should start in the later calls of\n{@link SessionPlayer2#play()}.",
    "HebCup": "The playback of the prefetched content should start in the later calls of\n{@link SessionPlayer2#play()}."
}
{
    "Origin": "Returns the field value run through all converters and validators,\nbut doesn't pass the {@link ValidationStatus} to any status handler.",
    "Reference": "Returns the field value run through all converters and validators,\nbut doesn't pass the {@link BindingValidationStatus} to any status handler.",
    "HebCup": "Returns the field value run through all converters and validators , but doesn't pass the {@link BindingValidationStatus} to any status handler."
}
{
    "Origin": "Ensure that the service still exists.",
    "Reference": "Ensure that the api still exists.",
    "HebCup": "Ensure that the Api still exists."
}
{
    "Origin": "Connect to a single server with retry.",
    "Reference": "Connect to a single server.",
    "HebCup": "Connect to a single Server."
}
{
    "Origin": "Peeks from the beginning of the input to see if {@link #FLAC_SIGNATURE} is present.",
    "Reference": "Peeks from the beginning of the input to see if {@link #FLAC_STREAM_MARKER} is present.",
    "HebCup": "Peeks from the beginning of the input to see if {@link#FLAC_STREAM_MARKER} is present."
}
{
    "Origin": "Log subscription related events: new, cancel, restore, heartbeat, expire",
    "Reference": "Log subscription related events: subscribe, start trial, cancel, restore, heartbeat, expire",
    "HebCup": "Log subscription related events: new, cancel, restore, heartbeat, expire"
}
{
    "Origin": "and repositoryId = ?.",
    "Reference": "and parentFolderId = ?.",
    "HebCup": "and parentFolderId = ?."
}
{
    "Origin": "Returns the calendar with the primary key or throws a {@link com.liferay.calendar.NoSuchCalendarException} if it could not be found.",
    "Reference": "Returns the calendar with the primary key or throws a {@link NoSuchCalendarException} if it could not be found.",
    "HebCup": "Returns the calendar with the primary key or throws a {@link com.liferay.calendar.NoSuchCalendarException} if it could not be found."
}
{
    "Origin": "Creates {@link MinimalHttpAsyncClient} instance that provides\nessential HTTP/1.1 and HTTP/2 message transport only.",
    "Reference": "Creates {@link MinimalHttpAsyncClient} instance optimized for\nHTTP/1.1 and HTTP/2 message transport without advanced HTTP protocol\nfunctionality.",
    "HebCup": "Creates {@link MinimalHttpAsyncClient} instance that provides\nessential HTTP/1.1 and HTTP/2 message transport only."
}
{
    "Origin": "Gets the groups used to find a repo curve.",
    "Reference": "Gets the groups used to find a repo curve by legal entity.",
    "HebCup": "Gets the groups used to find a repo curve."
}
{
    "Origin": "Prefixes are used to enrich the mappings of every {@code @RequestMapping}\nmethod whose controller type is matched by the corresponding\n{@link HandlerTypePredicate} in the map.",
    "Reference": "Prefixes are used to enrich the mappings of every {@code @RequestMapping}\nmethod whose controller type is matched by a corresponding\n{@code Predicate} in the map.",
    "HebCup": "Prefixes are used to enrich the mappings of every {@code @RequestMapping} method whose controller type is matched by the corresponding {@link Predicate} in the map."
}
{
    "Origin": "Returns a bitmap flagging the records for which the value in this column is equal to the value\nin the given column Columnwise isEqualTo.",
    "Reference": "Returns a bitmap flagging the records for which the value in this column is equal to the value\nin the given column Column-wise isEqualTo.",
    "HebCup": "Returns a bitmap flagging the records for which the value in this i is equal to the value in the given i Columnwise isEqualTo."
}
{
    "Origin": "{@link PathSourcePath}s utilize the\n{@link ProjectSourcePathResolver#pathSourcePathResolver} to resolve the path.",
    "Reference": "{@link PathSourcePath}s utilize the\n{@link ProjectSourcePathResolver#pathSourcePathResolverAdapter} to resolve the path.",
    "HebCup": "{@link PathSourcePath}s utilize the {@link ProjectSourcePathResolver#pathSourcePathResolverAdapter} to resolve the path."
}
{
    "Origin": "Convert to object types, returning null if text is null.",
    "Reference": "Convert to object types, returning null if text is null or empty.",
    "HebCup": "Convert to object types, returning null if text is null."
}
{
    "Origin": "When the returned value is not null use Cookie methods getName() and getValue()\nto set the Cookie header on an HTTP request with header value of",
    "Reference": "If the returned value is not null, use Cookie methods getName() and getValue()\nto set the Cookie header on an HTTP request with header value of",
    "HebCup": "When the returned value is not null use TOKEN methods getName () and getValue () to set the TOKEN header on an HTTP request with header value of"
}
{
    "Origin": "[IF Sidecar19-SE]",
    "Reference": "[IF Java14]",
    "HebCup": "[IF Sidecar19-SE]"
}
{
    "Origin": "User names will always be checked in a\ncase insensitive manner.",
    "Reference": "User names will always be checked in a\ncase insensitive manner using the system default Locale.",
    "HebCup": "User Name.toLowerCase will always be checked in a case insensitive manner."
}
{
    "Origin": "Application data messages received or sent during a handshake may be\ndropped or processed deferred after the handshake.",
    "Reference": "Application data messages sent during a handshake may be dropped or\nprocessed deferred after the handshake.",
    "HebCup": "Outgoing Application Data Messages received or sent during a handshake may be dropped or processed deferred after the handshake."
}
{
    "Origin": "Convenience method for calling {@link #newGenericExecuteException(TemplateCallableModel, boolean, String)}.",
    "Reference": "Convenience method for calling\n{@link #newGenericExecuteException(String, TemplateCallableModel, boolean, Throwable)}",
    "HebCup": "Convenience method for calling {@link #newGenericExecuteException(TemplateCallableModel, boolean, String)}."
}
{
    "Origin": "The input key class is\n{@link org.apache.sqoop.lib.SqoopAvroRecord}.",
    "Reference": "The input key class is\n{@link org.apache.sqoop.lib.SqoopRecord}.",
    "HebCup": "The input key class is\n{@link org.apache.sqoop.lib.SqoopAvroRecord}."
}
{
    "Origin": "Removes all of the instructions of this list.",
    "Reference": "Removes all the instructions of this list.",
    "HebCup": "Removes all of the instructions of this list."
}
{
    "Origin": "IPv4 address in this allocation",
    "Reference": "Primary address of this allocation",
    "HebCup": "primary address in this allocation"
}
{
    "Origin": "If running on Android Oreo or later, we must become a foreground service.",
    "Reference": "If the user ignored our request to not be optimized, we must become a foreground service.",
    "HebCup": "If running on Android Oreo or later, we must become a foreground service."
}
{
    "Origin": "Parse the given, comma-separated string into a list of {@code MimeType} objects.",
    "Reference": "Parse the comma-separated string into a list of {@code MimeType} objects.",
    "HebCup": "Parse the given, comma-separated string into a list of {@code MimeType} objects."
}
{
    "Origin": "Same as above with an additional parameter to allow passing in the threshold checker",
    "Reference": "Same as above with additional parameters to allow passing in the threshold checker and the max score accumulator.",
    "HebCup": "Same as above with an additional parameter to allow passing in the threshold checker"
}
{
    "Origin": "Creates {@link MinimalHttpAsyncClient} instance that provides\nessential HTTP/1.1 and HTTP/2 message transport only.",
    "Reference": "Creates {@link MinimalHttpAsyncClient} instance optimized for\nHTTP/1.1 and HTTP/2 message transport without advanced HTTP protocol\nfunctionality.",
    "HebCup": "Creates {@link MinimalHttpAsyncClientHttpAsyncClient} instance that provides essential HTTP/1.1 and HTTP/2 message transport only."
}
{
    "Origin": "Returns an {@link Operator} that runs a select query for each list of\nparameter objects in the source observable.",
    "Reference": "Returns an {@link Transformer} that runs a select query for each list\nof parameter objects in the source observable.",
    "HebCup": "Returns an {@link Transformer} that runs a select query for each list of parameter objects in the source observable."
}
{
    "Origin": "Updates the parameter types of the method methodElt in the Scene of the receiverTree's\nenclosing class based on the arguments to the method.",
    "Reference": "Updates the parameter types of the method methodElt in the Scene of the enclosing class based\non the arguments to the method invocation.",
    "HebCup": "Updates the parameter types of the method methodElt in the Scene of the receiverTree's enclosing get based on the arguments to the method."
}
{
    "Origin": "or throws a {@link com.liferay.socialcoding.NoSuchJIRAProjectException} if it could not be found.",
    "Reference": "or throws a {@link NoSuchJIRAProjectException} if it could not be found.",
    "HebCup": "or throws a {@link com.liferay.socialcoding.NoSuchJIRAProjectException} if it could not be found."
}
{
    "Origin": "Apply the rotation transformation of the given {@link Quaterniond} to this {@link #isAffine() affine} matrix and store\nthe result in .",
    "Reference": "Apply the rotation transformation of the given {@link Quaterniondc} to this {@link #isAffine() affine} matrix and store\nthe result in .",
    "HebCup": "Apply the rotation transformation of the given {@link Quaterniondc} to this {@link#isAffine () affine} matrix and store the result in ."
}
{
    "Origin": "The default implementation wraps the class in a generic type and calls {@link\n#canEncode(GenericType)}, therefore it is invariant as well.",
    "Reference": "The default implementation wraps the class in a generic type and calls {@link\n#accepts(GenericType)}, therefore it is invariant as well.",
    "HebCup": "The default implementation wraps the class in a generic type and calls {@link#accepts (GenericType)} , therefore it is invariant as well."
}
{
    "Origin": "Sets the vector collection factory used to accelerate the nearest\nneighbor search.",
    "Reference": "Sets the vector collection  used to accelerate the nearest\nneighbor search.",
    "HebCup": "Sets the Vector Collection used to accelerate the nearest neighbor search."
}
{
    "Origin": "Casts the {@code DateTime} to {@ChronoLocalDate} with the same chronology.",
    "Reference": "Casts the {@code DateTime} to {@code ChronoLocalDate} with the same chronology.",
    "HebCup": "Casts the {@code DateTime} to {@ChronoLocalDate} with the same chronology."
}
{
    "Origin": "Create the default request used when asking for the upgrade plan on a namespace.",
    "Reference": "Create a request used when asking for the upgrade plan on a namespace.",
    "HebCup": "Create the default request used when asking for the upgrade plan on a namespace."
}
{
    "Origin": "Set body of the Stored Procedure.",
    "Reference": "Set the resource value.",
    "HebCup": "Set Resource of the Stored Procedure."
}
{
    "Origin": "Atomically set the lo integer value without changing\nthe hi value.",
    "Reference": "Atomically sets the lo value without changing the hi value.",
    "HebCup": "Atomically getAndSet the lo integer value without changing the hi value."
}
{
    "Origin": "Obtains an instance of {@code OffsetDate} from a date-time object.",
    "Reference": "Obtains an instance of {@code OffsetDate} from a temporal object.",
    "HebCup": "Obtains an instance of {@code OffsetDate} from a date-time object."
}
{
    "Origin": "Returns true if field ttl is set (has been assigned a value) and false otherwise",
    "Reference": "Returns true if field ttlNotUsed is set (has been assigned a value) and false otherwise",
    "HebCup": "Returns true if field TTLNOTUSED is set (has been assigned a value) and false otherwise"
}
{
    "Origin": "SQL-Java type mapping, with specified Beam rules: \n1. redirect {@link ReadableInstant} to {@link Date} so Calcite can recognize it.",
    "Reference": "SQL-Java type mapping, with specified Beam rules: \n1. redirect {@link AbstractInstant} to {@link Date} so Calcite can recognize it.",
    "HebCup": "SQL-Java type mapping , with specified Beam rules: 1. redirect {@link AbstractInstant} to {@link Date} so Calcite can recognize it."
}
{
    "Origin": "Sets the cluster name.",
    "Reference": "Sets the cluster identifier.",
    "HebCup": "Sets the cluster ClusterId."
}
{
    "Origin": "Returns a string representation of this object; useful for testing and debugging.",
    "Reference": "Returns a string representation of this object.",
    "HebCup": "Returns a string representation of this object; useful for testing and debugging."
}
{
    "Origin": "Setter for {@link #exposeHeaders}",
    "Reference": "Setter for {@link #allowHeaders}",
    "HebCup": "Setter for {@link#allowHeaders}"
}
{
    "Origin": "The {@link Flux} will\ncontain one or several feed response of the obtained items.",
    "Reference": "The {@link CosmosContinuablePagedFlux} will\ncontain one or several feed response of the obtained items.",
    "HebCup": "The {@link Flux} will contain one or several Cosmos Continuable Paged Flux of the obtained items."
}
{
    "Origin": "Checks the {@link LoadMetadataType} to determine whether or not to proceed in loading\nmetadata.",
    "Reference": "Checks the {@link LoadMetadataPType} to determine whether or not to proceed in loading\nmetadata.",
    "HebCup": "Checks the {@link LoadMetadataPType} to determine whether or not to proceed in loading metadata."
}
{
    "Origin": "Returns a string representation of this object; useful for testing and debugging.",
    "Reference": "Returns a string representation of this object.",
    "HebCup": "Returns a string representation of this object; useful for testing and debugging."
}
{
    "Origin": "Preference should be visible",
    "Reference": "Preference should be invisible",
    "HebCup": "Preference preference be visible"
}
{
    "Origin": "Deserializes the json as an object of the  type.",
    "Reference": "Deserializes the data as an object of the  type.",
    "HebCup": "Deserializes the resultClass as an object of the type."
}
{
    "Origin": "Get values.",
    "Reference": "Get value expressions.",
    "HebCup": "get Value Expressions."
}
{
    "Origin": "Loop over the\n{@link KeyProperties key} and call {@link KeyClient#getKey(KeyProperties key properties)}.",
    "Reference": "Loop over the\n{@link KeyProperties key} and call {@link KeyClient#getKey(String, String)}.",
    "HebCup": "Loop over the {@link KeyProperties PropertiesOfKey} and call {@link KeyClient#getKey (KeyProperties PropertiesOfKey properties)}."
}
{
    "Origin": "This allows ActiveMQ destinations to be passed around as Strings and converted back again.",
    "Reference": "This allows ActiveMQ destinations to be passed around as",
    "HebCup": "This allows ActiveMQ destinations to be passed around as Strings and converted back again."
}
{
    "Origin": "Structural Specification for more details.",
    "Reference": "The\nOWL 2 Structural Specification for more details.",
    "HebCup": "Structural Specification for more details."
}
{
    "Origin": "Applies a function f to the error of this Validation if this is an Invalid.",
    "Reference": "Applies a function f to the errors of this Validation if this is an Invalid.",
    "HebCup": "Applies a function f to the this.getErrors of this Validation if this is an Invalid."
}
{
    "Origin": "Returns the full coordinates of the artifact - package path + version.",
    "Reference": "Returns the Bintray coordinates of the artifact.",
    "HebCup": "Returns the full coordinates of the artifact - package path.ends + version."
}
{
    "Origin": "Tests resilency when egress device is down.",
    "Reference": "Tests resiliency when egress device is down.",
    "HebCup": "Tests resiliency when egress device is down."
}
{
    "Origin": "return the config File associated with a TunnelController or a default\nvalue based on the tunnel name",
    "Reference": "return the config File associated with a TunnelController or a default",
    "HebCup": "return the config File associated with a TunnelController or a default\nvalue based on the tunnel name"
}
{
    "Origin": "Constructs and returns a new instance of {@link Dimension}.",
    "Reference": "Constructs and returns a new instance of {@link DimensionColumn}.",
    "HebCup": "Constructs and returns a new instance of {@link DimensionColumn}."
}
{
    "Origin": "Creates a new instance using the given {@code event} to obtain the configuration's parameter values.",
    "Reference": "Creates a new instance using the given {@code resolverSetResult} to obtain the configuration's parameter values",
    "HebCup": "Creates a new instance using the given {@code event} to obtain the configuration's parameter Provider."
}
{
    "Origin": "Skip until the given string is matched in the stream, but ignoring\nchars initially escaped by a '\\'.",
    "Reference": "Skip until the given string is matched in the stream, but ignoring\nchars initially escaped by a '\\' and any EL expressions.",
    "HebCup": "Skip until the given string is matched in the stream, but ignoring\nchars initially escaped by a '\\'."
}
{
    "Origin": "run a method in a new thread",
    "Reference": "run a new thread",
    "HebCup": "run a method in a new runAsync"
}
{
    "Origin": "This allows multiple versions of the dao to be configured if necessary.",
    "Reference": "This allows multiple versions of the DAO to be configured if necessary.",
    "HebCup": "This allows multiple versions of the dao to be configured if necessary."
}
{
    "Origin": "Applies the optimization to all subqueries.",
    "Reference": "Applies the optimization to a given subquery root.",
    "HebCup": "Applies the optimization to all subqueries."
}
{
    "Origin": "Test of parse method, of class CertificateVerifyMessageParser.",
    "Reference": "Test of parse method, of class CertificateVerifyParser.",
    "HebCup": "Test of parse method, of class CertificateVerifyParser."
}
{
    "Origin": "Test {@link ConnectorFactory#searchByViewport(Viewport, MapTokens)}",
    "Reference": "Test {@link ConnectorFactory#searchByViewport(Viewport)}",
    "HebCup": "Test {@link ConnectorFactory#searchByViewport(Viewport, MapTokens)}"
}
{
    "Origin": "Acquires the read lock to block reinitialization.",
    "Reference": "Acquires the resource to block reinitialization.",
    "HebCup": "Acquires the Resource To to block reinitialization."
}
{
    "Origin": "Each cause is appended after the exception is it the cause of.",
    "Reference": "Each exception is encoded before the exception it causes.",
    "HebCup": "Each cause is appended after the exception is it the cause of."
}
{
    "Origin": "This method alone will not make any changes to the {@link SessionConfiguration}, it is up\nto the use case to decide when to modify the session configuration.",
    "Reference": "This method alone will not make any changes to the {@link SessionConfig}, it is up to\nthe use case to decide when to modify the session configuration.",
    "HebCup": "This method alone will not make any changes to the {@link SessionConfig}, it is up to the use case to decide when to modify the session Config."
}
{
    "Origin": "This factory converts the arbitrary date-time object to an instance of {@code ZoneId}.",
    "Reference": "This factory converts the arbitrary temporal object to an instance of {@code ZoneId}.",
    "HebCup": "This factory converts the arbitrary date-time object to an instance of {@code zone}."
}
{
    "Origin": "Tests the {@link AlluxioURI#AlluxioURI(String, String, String, Map)} constructor to build an\nURI from its different components with a query map.",
    "Reference": "Tests the {@link AlluxioURI#AlluxioURI(String, Authority, String, Map)} constructor to build an\nURI from its different components with a query map.",
    "HebCup": "Tests the {@link AlluxioURI#AlluxioURI(String, String, String, Map)} constructor to build an\nURI from its different components with a query map."
}
{
    "Origin": "Generate the next increment in the optimistic locking value according\nthe {@link VersionType} contract for the version property.",
    "Reference": "Generate the next increment in the optimistic locking value according\nthe {@link VersionSupport} contract for the version property.",
    "HebCup": "Generate the next increment in the optimistic locking value according the {@link VersionSupport} contract for the version property."
}
{
    "Origin": "Returns an instance of {@link ProgramHeartbeatStore}.",
    "Reference": "Returns an instance of {@link ProgramHeartbeatDataset}.",
    "HebCup": "Returns an instance of {@link ProgramHeartbeatDataset.getOr}."
}
{
    "Origin": "MediaHandler with the specified MediaStream.",
    "Reference": "MediaStream.",
    "HebCup": "TypesHandler with the specified TypesStream."
}
{
    "Origin": "The\ncurrent thread might be already in any request scope and in that case the scope\nwill be changed to the scope defined by the {@link RequestScope.Instance scope\ninstance}.",
    "Reference": "The\ncurrent thread might be already in any request scope and in that case the scope\nwill be changed to the scope defined by the {@link RequestContext scope\ninstance}.",
    "HebCup": "The current thread might be already in any request scope and in that case the scope will be changed to the scope defined by the {@link RequestScope.Instance scope RequestContext}."
}
{
    "Origin": "Looks up classes in the virtual Java 9 filesystem jrt:",
    "Reference": "Looks up classes in  Java 9's virtual filesystem jrt:",
    "HebCup": "Looks up classes in the virtual Java 9 filesystem jrt:"
}
{
    "Origin": "Utility method for transforming an optional {@link SslConfiguration} into an optional {@link TrustContext}.",
    "Reference": "Utility method for transforming an {@link SslConfiguration} into a {@link TrustContext}.",
    "HebCup": "Utility method for transforming an optional {@link SslConfiguration} into an optional {@link TrustContext}."
}
{
    "Origin": "Set user keypair\n### Functional Description:   Set the user's keypair.",
    "Reference": "Set user's key pair\n### Functional Description:   Set the user's key pair.",
    "HebCup": "Auth Token keypair ### Functional Description: Set the user's keypair."
}
{
    "Origin": "Optional.absent()} if the AST node doesn't correspond to a 'simple' lock expression.",
    "Reference": "Optional.empty()} if the AST node doesn't correspond to a 'simple' lock expression.",
    "HebCup": "Optional.empty ()} if the AST node doesn't correspond to a 'simple' lock expression."
}
{
    "Origin": "Returns the axis aligned bounding box (AABB) of the region, mesh, and skinned mesh attachments for the current pose.",
    "Reference": "Returns the axis aligned bounding box (AABB) of the region and mesh attachments for the current pose.",
    "HebCup": "Returns the axis aligned bounding box (AABB) of the region, mesh, and skinned mesh attachments for the current pose."
}
{
    "Origin": "Returns the event index.",
    "Reference": "Returns the event indexes.",
    "HebCup": "Returns the event Indexes."
}
{
    "Origin": "Adds a new job to the pending jobs queue.",
    "Reference": "Adds a new auto ingest job to the pending jobs queue.",
    "HebCup": "Adds a new job to the pending jobs queue."
}
{
    "Origin": "Adds a single button to the view.",
    "Reference": "Adds buttons to the view.",
    "HebCup": "Adds a single buttons to the view."
}
{
    "Origin": "Returns a basic Authorization header value for the given\n{@link Credentials} and charset.",
    "Reference": "Returns a basic {@code Authorization} header value for the given\n{@link Credentials} and charset.",
    "HebCup": "Returns a basic Authorization header value for the given {@link Credentials Args.notNull and charset."
}
{
    "Origin": "{@codesnippet com.azure.storage.blob.specialized.BlobAsyncClientBase.startCopyFromURL#URL}",
    "Reference": "{@codesnippet com.azure.storage.blob.specialized.BlobAsyncClientBase.startCopyFromURL#String}",
    "HebCup": "{@codesnippet com.azure.storage.blob.specialized.BlobAsyncClientBase.startCopyFromURL#String}"
}
{
    "Origin": "Returns a range of all the sync d l objects where companyId = ?",
    "Reference": "Returns a range of all the sync d l objects where repositoryId = ?",
    "HebCup": "Returns a range of all the sync d l objects where repositoryId = ?"
}
{
    "Origin": "Is matching by file name, moduleId and Check name.",
    "Reference": "Is matching by file name, module id and Check name.",
    "HebCup": "Is matching by file name, moduleId And Module Name."
}
{
    "Origin": "If the score is 60 or lower (on a 1 to 100 interval) the system default charset is\nreturned instead.",
    "Reference": "If the score is less than 60 (on a 1 to 100 interval) the system default charset is\nreturned instead.",
    "HebCup": "If the score is 60 or lower (on a 1 to 100 interval) the system default charset is\nreturned instead."
}
{
    "Origin": "Binds the specified {@link Service} at the specified {@link Route} of the default\n{@link VirtualHost}.",
    "Reference": "Binds the specified {@link HttpService} at the specified {@link Route} of the default\n{@link VirtualHost}.",
    "HebCup": "Binds the specified {@link HttpService} at the specified {@link Route} of the default {@link VirtualHost}."
}
{
    "Origin": "Check equality between two String objects, specifying (offset,len) pairs\n  for limiting the fragments to be checked.",
    "Reference": "Check equality between two CharSequence objects, specifying (offset,len) pairs\n  for limiting the fragments to be checked.",
    "HebCup": "Check equality between two CharSequence objects , specifying (offset ,len) pairs for limiting the fragments to be checked."
}
{
    "Origin": "For example, the period in days between two dates can be calculated\nusing {@code startInstant.periodUntil(endInstant, SECONDS)}.",
    "Reference": "For example, the period in days between two dates can be calculated\nusing {@code startInstant.until(endInstant, SECONDS)}.",
    "HebCup": "For example, the period in days between two dates can be calculated using {@code startInstant.until(endInstant, SECONDS)}."
}
{
    "Origin": "If the prefetch is not needed, {@link #playFromSearch} can be directly called\nwithout this method.",
    "Reference": "If the prepare is not needed, {@link #playFromSearch} can be directly called\nwithout this method.",
    "HebCup": "If the prepare is not needed , {@link#playFromSearch} can be directly called without this method."
}
{
    "Origin": "Checks whether the {@link EntryEventSource} of an {@link EntryEvent} is crucial for this class.",
    "Reference": "Checks whether the {@link EntriesEventSource} of an {@link EntriesEvent} is crucial for this class.",
    "HebCup": "Checks whether the {@link EntriesEventSource} of an {@link EntryEvent} is crucial for this class."
}
{
    "Origin": "The meta-property for the {@code convention} property.",
    "Reference": "The meta-property for the {@code volatilitiesName} property.",
    "HebCup": "The meta-property for the {@code volatilitiesName} property."
}
{
    "Origin": "If the delete etag doesn't match anything the delete won't happen, this will result in a 412.",
    "Reference": "If the delete ETag doesn't match anything the delete won't happen, this will result in a 412.",
    "HebCup": "If the deleteConfiguration etag doesn't match anything the deleteConfiguration won't happen , this will result in a 412."
}
{
    "Origin": "Overload of {@link #connect(String, ServerStateListener, ServerConnectionFailListener)} with no listeners.",
    "Reference": "Overload of {@link #connect(String, ServerStateListener, ServerReconnectFilter)} with no listeners.",
    "HebCup": "Overload of {@link#connect (String , ServerStateListener , ServerReconnectFilter)} with no listeners."
}
{
    "Origin": "No-op if ParcelFileDescriptor is already closed.",
    "Reference": "Increases reference count for underlying ParcelFileDescriptor.",
    "HebCup": "No-op if RefFileDescriptor is already closed."
}
{
    "Origin": "The clone is given a new unique ID.",
    "Reference": "The clones are each given a new unique ID.",
    "HebCup": "The clone is given a new unique ID."
}
{
    "Origin": "Tests {@code globalRecommend(long, int)}.",
    "Reference": "Tests {@code recommendRelatedItems()(long, int)}.",
    "HebCup": "Tests {@code recommendRelatedItems (long , int)}."
}
{
    "Origin": "Structural Specification for more details.",
    "Reference": "The\nOWL 2 Structural Specification for more details.",
    "HebCup": "Structural Specification for more details."
}
{
    "Origin": "Match statement against pattern for drop schedule",
    "Reference": "Match statement against pattern for drop task",
    "HebCup": "Match statement against pattern for Drop Task"
}
{
    "Origin": "Test of var method, of class BernoulliDistribution.",
    "Reference": "Test of variance method, of class BernoulliDistribution.",
    "HebCup": "Test of Variance method , of class BernoulliDistribution."
}
{
    "Origin": "Creates new {@link RedisScript} from {@link Resource}.",
    "Reference": "Creates new {@link RedisScript} (with throw away result) from the given {@link Resource}.",
    "HebCup": "Creates new {@link RedisScript} from {@link Resource}."
}
{
    "Origin": "If the {@code null} is returned,\n{@link SessionResult#RESULT_CODE_UNKNOWN_ERROR} will be returned.",
    "Reference": "If the {@code null} is returned,\n{@link SessionResult#RESULT_ERROR_UNKNOWN_ERROR} will be returned.",
    "HebCup": "If the {@code null} is returned, {@link SessionResult#RESULT_ERROR_UNKNOWN_ERROR} will be returned."
}
{
    "Origin": "HadoopFormatIO.Write#withConfiguration(Configuration) withConfiguration(Configuration)}\nfunction when key class is not provided by the user in configuration.",
    "Reference": "HadoopFormatIO.Write.Builder#withConfiguration(Configuration) withConfiguration(Configuration)}\nfunction when key class is not provided by the user in configuration.",
    "HebCup": "p.Write#withConfiguration(Configuration) withConfiguration(Configuration)} function when key class is not provided by the user in configuration."
}
{
    "Origin": "Returns a {@link RestrictionTracker} which reports all claim attempts to the specified {@link",
    "Reference": "Returns a thread safe {@link RestrictionTracker} which reports all claim attempts to the\nspecified {@link ClaimObserver}.",
    "HebCup": "Returns a {@link RestrictionTracker} which reports all claim attempts to the specified {@link"
}
{
    "Origin": "Returns possibly relative {@link URI} representation of this {@link TruffleFile}.",
    "Reference": "Returns a relative {@link URI} representation of non absolute {@link TruffleFile}.",
    "HebCup": "Returns possibly relative {@link RelativeUri} representation of this {@link TruffleFile}."
}
{
    "Origin": "Checks if the parent is null then must be an instance of {@link HK2InjectionManager}.",
    "Reference": "Checks if the parent is null then must be an instance of {@link ServiceLocator} or {@link HK2InjectionManager}.",
    "HebCup": "Checks if the parent is null then must be an instance of {@link HK2Object}."
}
{
    "Origin": "Returns the request's call sequence.",
    "Reference": "Returns the request's command sequence.",
    "HebCup": "Returns the request's Command Sequence."
}
{
    "Origin": "Creates a new {@link FileSystemMaster} from journal along with its dependencies, and returns\nthe master registry containing that master.",
    "Reference": "Creates a new {@link FileSystemMaster} from journal along with its dependencies, and returns\nthe master registry and the journal system.",
    "HebCup": "Creates a new {@link FileSystemMaster} from journal along with its dependencies, and returns the Fs Master Resource containing that master."
}
{
    "Origin": "This is why there is not a set method for the paragraphContent property.",
    "Reference": "This is why there is not a set method for the content property.",
    "HebCup": "This is why there is not a set method for the content property."
}
{
    "Origin": "Update the number.",
    "Reference": "Update the number at the position.",
    "HebCup": "Update the number."
}
{
    "Origin": "As a special case, resources ending with \"{@code .class}\" are\n    never encapsulated.",
    "Reference": "If the resource name ends with  \"{@code .class}\" then it is not\n    encapsulated.",
    "HebCup": "As a special case, resources ending with \"{@code .class}\" are\n    never encapsulated."
}
{
    "Origin": "Returns a zoned date-time formed from the instant represented by this\ndate-time and the specified time-zone.",
    "Reference": "Returns a zoned date-time formed from the instant represented by this\ndate-time and the specified zone ID.",
    "HebCup": "Returns a zoned date-time formed from the instant represented by offset date-time and the specified time-zone."
}
{
    "Origin": "Creates query for the given searchString.",
    "Reference": "Queries this contact source for the given searchString.",
    "HebCup": "Creates Source for the given searchString."
}
{
    "Origin": "Returns a string representation of this object; useful for testing and debugging.",
    "Reference": "Returns a string representation of this object.",
    "HebCup": "Returns a string representation of this object; useful for testing and debugging."
}
{
    "Origin": "Sets the {@link DecoratingServiceFunction} and returns {@link ServerBuilder} that this\n{@link DecoratingServiceBindingBuilder} was created from.",
    "Reference": "Sets the {@link DecoratingHttpServiceFunction} and returns {@link ServerBuilder} that this\n{@link DecoratingServiceBindingBuilder} was created from.",
    "HebCup": "Sets the {@link DecoratingHttpServiceFunction} and returns {@link ServerBuilder} that this {@link DecoratingServiceBindingBuilder} was created from."
}
{
    "Origin": "Gets the classpath component containing the given class.",
    "Reference": "Gets the base location of the given class.",
    "HebCup": "if the classpath component containing the given class."
}
{
    "Origin": "Gedec the value of the 'dec' field.",
    "Reference": "Gets the value of the 'dec' field.",
    "HebCup": "Gedec the value of the 'dec' field."
}
{
    "Origin": "Construct a new instance of an {@code Execution} that was skipped with the provided\n{@code skipReason}.",
    "Reference": "Create a new instance of an {@code Execution} that was skipped with the provided\n{@code skipReason}.",
    "HebCup": "Construct a new instance of an {@code Execution} that was skipped with the provided\n{@code skipReason}."
}
{
    "Origin": "The input file must be a list of tab-separated verb-POS pairs, one verb\nper line.",
    "Reference": "The input file must be a list of whitespace-separated verb-lemma-POS triples, one verb\nform per line.",
    "HebCup": "The input file must be a list of tab-separated verb-POS pairs, one verb per line: ."
}
{
    "Origin": "Merging of data is required during an mind-meld.",
    "Reference": "during an mind-meld.",
    "HebCup": "Merging of assertz is required during an mind-meld."
}
{
    "Origin": "Reads a material from a name or ID, depending on the tag type.",
    "Reference": "Reads a material from a string ID or numeric ID, depending on the tag type.",
    "HebCup": "Reads a material from a name or ID, depending on the tag type."
}
{
    "Origin": "Executes {@link Pems#publicKeySpecFromOpenSSH(InputSupplier)} on the string which was OpenSSH",
    "Reference": "Executes {@link Pems#publicKeySpecFromOpenSSH(ByteSource)} on the string which was OpenSSH",
    "HebCup": "Executes {@link Pems#publicKeySpecFromOpenSSH(Inputwrap)} on the string which was OpenSSH"
}
{
    "Origin": "Pre-multiply the rotation transformation of the given {@link Quaterniond} to this matrix.",
    "Reference": "Pre-multiply the rotation transformation of the given {@link Quaterniondc} to this matrix.",
    "HebCup": "Pre-multiply the rotation transformation of the given {@link Quaterniondc} to this matrix."
}
{
    "Origin": "All handlers will be invoked by this executor.",
    "Reference": "All handlers will be invoked by the main executor.",
    "HebCup": "All handlers will be invoked by this Executors."
}
{
    "Origin": "Test of open method, of class CpeMemoryIndex.",
    "Reference": "Test of getDocument method, of class CpeMemoryIndex.",
    "HebCup": "test Get of open method, of class CpeMemoryIndex."
}
{
    "Origin": "Returns true if field traceId is set (has been assigned a value) and false otherwise",
    "Reference": "Returns true if field sampled is set (has been assigned a value) and false otherwise",
    "HebCup": "Returns true if field Sampled is set (has been assigned a value) and false otherwise"
}
{
    "Origin": "This method is called when a component was rendered standalone.",
    "Reference": "This method is called when a component was rendered as a part.",
    "HebCup": "This method is called when a component was rendered standalone."
}
{
    "Origin": "Creates a context-independent copy of the iterator results.",
    "Reference": "Creates a materialized, context-independent version of the iterator results.",
    "HebCup": "Creates a context-independent materialize of the iterator results."
}
{
    "Origin": "Returns the foo with the primary key or throws a {@link com.liferay.testpacl.NoSuchFooException} if it could not be found.",
    "Reference": "Returns the foo with the primary key or throws a {@link NoSuchFooException} if it could not be found.",
    "HebCup": "Returns the foo with the primary key or throws a {@link com.liferay.testpacl.NoSuchFooException} if it could not be found."
}
{
    "Origin": "Parses a sample from the array and returns a proper object representation.",
    "Reference": "Parses a jsonSymbol from the array and returns a proper object representation.",
    "HebCup": "Parses a sample from the array and returns a proper Symbol representation."
}
{
    "Origin": "Returns the execution root for the main package.",
    "Reference": "Returns the execution root of Blaze.",
    "HebCup": "Returns the execution root for the main package."
}
{
    "Origin": "Sets the group.",
    "Reference": "Set the group.",
    "HebCup": "Sets the group."
}
{
    "Origin": "Any criteria implements\n{@code Queryable} interface at runtime.",
    "Reference": "Any criteria implements (or holds)\n{@code Queryable} interface at runtime.",
    "HebCup": "Any criteria implements\n{@code Queryable} interface at runtime."
}
{
    "Origin": "Add a Debug EventLogItem and log.",
    "Reference": "Add a Debug EventLogEntry and log.",
    "HebCup": "Add a Debug EventLogEntry and log."
}
{
    "Origin": "Standard getter for the leftwardLabel String in this Relationship",
    "Reference": "Standard getter for the leftwardValue String in this Relationship",
    "HebCup": "Standard getter for the leftwardValue String in this Relationship"
}
{
    "Origin": "Wrap an object, if necessary.",
    "Reference": "Wraps the given object if necessary.",
    "HebCup": "Wrap an o.equals , if necessary."
}
{
    "Origin": "Returns  if the given type has {@link ITokenType#TF_SEPARATOR_DOCUMENT} set.",
    "Reference": "Returns  if the given type has {@link ITokenTypeAttribute#TF_SEPARATOR_DOCUMENT} set.",
    "HebCup": "Returns if the given type has {@link ITokenTypeAttribute#TF_SEPARATOR_DOCUMENT} set."
}
{
    "Origin": "Returns the exporerFileEntryOptions.",
    "Reference": "Returns the explorerFileEntryOptions.",
    "HebCup": "Returns the ExplorerFileEntryOptions."
}
{
    "Origin": "Compiles the given code generator request.",
    "Reference": "Generates the given code generator request.",
    "HebCup": "Compiles the given code generator request."
}
{
    "Origin": "The squared length of the quaternion is obtained by multiplying by its\nconjugate and summing the terms of the resulting quaternion.",
    "Reference": "The squared length of the quaternion is obtained by the dot product of\nthe quaternion with its conjugate.",
    "HebCup": "The squared length of the quaternion is obtained by multiplying by its\nconjugate and summing the terms of the resulting quaternion."
}
{
    "Origin": "SecretProperties secret} and call {@link SecretClient#getSecret(SecretProperties)} .",
    "Reference": "SecretProperties secret} and call {@link SecretClient#getSecret(String, String)}.",
    "HebCup": "SecretProperties PropertiesOfSecret} and call {@link SecretClient#getSecret (SecretProperties)} ."
}
{
    "Origin": "Saves all dictionary entries that appeared {@literal >} threshold times Note: feature\nindices are changed to contiguous values starting at 0.",
    "Reference": "Saves all dictionary entries that appeared > threshold times Note: feature\nindices are changed to contiguous values starting at 0.",
    "HebCup": "Saves all dictionary entries that appeared {@literal >} threshold times Note: feature indices are changed to contiguous get starting at 0."
}
{
    "Origin": "Sets the specified value to the {@code bitfield} field.",
    "Reference": "Sets the specified value to the {@code baselineUsesContext} field.",
    "HebCup": "Sets the specified value to the {@code baselineUsesContext} field."
}
{
    "Origin": "Sets the desired camera lensFacing.",
    "Reference": "Sets the desired camera by specifying desired lensFacing.",
    "HebCup": "Sets the desired camera lensFacing."
}
{
    "Origin": "Create a {@link MediaItem2} with the id.",
    "Reference": "Create a {@link MediaItem} with the id.",
    "HebCup": "Create a {@link MediaItem} with the id."
}
{
    "Origin": "Returns the {@link Request} of the context.",
    "Reference": "Returns the {@link HttpRequest} of the context.",
    "HebCup": "Returns the {@link req} of the context."
}
{
    "Origin": "have been added with {@link #activateIndex(StorageIndexReference)}.",
    "Reference": "have been added with {@link #activateIndex(IndexDescriptor2)}.",
    "HebCup": "have been added with {@link #activateIndex(IndexDescriptor2)}."
}
{
    "Origin": "Copied from {@link SlotCrafting#onCrafting(ItemStack)}",
    "Reference": "Copied from {@link CraftingResultSlot#onCrafting(ItemStack)}",
    "HebCup": "Copied from {@link SlotCrafting#onCrafting(ItemStack)}"
}
{
    "Origin": "Adds a list of byte arrays as the payloads of the request.",
    "Reference": "Adds a single payload string to the request.",
    "HebCup": "Adds a list of byte arrays as the Payload of the request."
}
{
    "Origin": "Removes all of the service contracts from ES.",
    "Reference": "Removes all of the api contracts from ES.",
    "HebCup": "Removes all of the Api Contracts from ES."
}
{
    "Origin": "Return the nanoseconds when the next scheduled task is ready to be run or {@code -1} if no task is scheduled.",
    "Reference": "Return the nanoseconds until the next scheduled task is ready to be run or {@code -1} if no task is scheduled.",
    "HebCup": "Return the nanoseconds when the next scheduled task is ready to be run or {@code -1} if no task is scheduled."
}
{
    "Origin": "Converts array of  to {@link EmailAddress}.",
    "Reference": "Converts array of {@link Address} to {@link EmailAddress}.",
    "HebCup": "Converts array of  to {@link EmailAddress}."
}
{
    "Origin": "invokeAll(empty collection) returns empty collection",
    "Reference": "invokeAll(empty collection) returns empty list",
    "HebCup": "invokeAll(empty collection) returns empty collection"
}
{
    "Origin": "By default, this method will return an instance of {@link XmlConfigurationWriterFactory}.",
    "Reference": "By default, this method will return an {@link XmlConfigurationWriter} factory.",
    "HebCup": "By default, this method will return an instance of {@link XmlConfigurationWriterFactory}."
}
{
    "Origin": "Checks to make sure that all properties specified in \nare known to the program by checking that each simply overrides\na default value.",
    "Reference": "Checks to make sure that all properties specified in {@code properties}\nare known to the program by checking that each simply overrides\na default value.",
    "HebCup": "Checks to make sure that all properties.string specified in are known to the program by checking that each simply overrides a default value."
}
{
    "Origin": "Returns true if the button's text should be bold.",
    "Reference": "Returns true if the text of the %type% should be bold.",
    "HebCup": "Returns true if the button's text should be bold."
}
{
    "Origin": "Initialize source, build, and public resource oracles using the most complete currently\navailable combination of moduleDef and libraryGroup.",
    "Reference": "Initialize source, build, and public resource oracles using the most complete currently\navailable moduleDef.",
    "HebCup": "Initialize source, build, and public resource oracles using the most complete currently\navailable combination of moduleDef and libraryGroup."
}
{
    "Origin": "It\nsatisfies the general contract of the {@link Object#hashCode",
    "Reference": "It satisfies the general\ncontract of the {@link Object#hashCode Object.hashCode} method.",
    "HebCup": "It\nsatisfies the general contract of the {@link Object#hashCode"
}
{
    "Origin": "Creates a {@link BlockInStream} to read from a netty data server.",
    "Reference": "Creates a {@link BlockInStream} to read from a gRPC data server.",
    "HebCup": "Creates a {@link BlockInStream} to read from a Grpc data server."
}
{
    "Origin": "Verify that a named subquery exists for each INCLUDE.",
    "Reference": "Verify that a named subquery of solution set exists for each INCLUDE.",
    "HebCup": "Verify the a named subquery exists for each INCLUDE."
}
{
    "Origin": "Encode a PI action group to a action profile group.",
    "Reference": "Encode a PI action profile group to a action profile group.",
    "HebCup": "Encode a Pi Action Profile Group to a action profile group."
}
{
    "Origin": "{@codesnippet com.azure.data.applicationconfig.configurationclient.listSettings#settingSelector-context}",
    "Reference": "{@codesnippet com.azure.data.applicationconfig.configurationclient.listConfigurationSettings#settingSelector-context}",
    "HebCup": "{@codesnippet com.azure.data.applicationconfig.configurationclient.listConfigurationSettings#settingSelector-context}"
}
{
    "Origin": "Returns a string representation of this object; useful for testing and debugging.",
    "Reference": "Returns a string representation of this object.",
    "HebCup": "Returns a string representation of this object; useful for testing and debugging."
}
{
    "Origin": "Creates a new leader {@link FileSystemMaster} from journal along with its dependencies, and\nreturns the master registry containing that master.",
    "Reference": "Creates a new leader {@link FileSystemMaster} from journal along with its dependencies, and\nreturns the master registry and the journal system.",
    "HebCup": "Creates a new leader {@link FileSystemMaster} from journal along with its dependencies, and returns the Fs Master Resource containing that master."
}
{
    "Origin": "Returns the desired resource profile for the slot.",
    "Reference": "Returns the desired resource profile for the task slot.",
    "HebCup": "Returns the desired task Resource Profile for the slot."
}
{
    "Origin": "Prints a date-time object to an {@code Appendable} using this formatter.",
    "Reference": "Formats a date-time object to an {@code Appendable} using this formatter.",
    "HebCup": "format a date-time object to an {@code Appendable} using this formatter."
}
{
    "Origin": "Submit the entered data.",
    "Reference": "Submit changes.",
    "HebCup": "Submit the entered data."
}
{
    "Origin": "Attempts to close the thread gracefully.",
    "Reference": "Attempts to shutdown the thread gracefully.",
    "HebCup": "Attempts to shutdown the thread gracefully."
}
{
    "Origin": "### Effects: The selected files are moved from the Recycle Bin to the chosen productive container.",
    "Reference": "### Effects: The selected files are moved from the recycle bin to the chosen productive container.",
    "HebCup": "### Effects: The selected files are moved from the Recycle Bin to the chosen productive container."
}
{
    "Origin": "Restart if this particular result of the disablement of a plugin and its dependant plugins (depending on the\nstrategy used) has a plugin disablexd.",
    "Reference": "Restart if this particular result of the disablement of a plugin and its dependent plugins (depending on the\nstrategy used) has a plugin disablexd.",
    "HebCup": "Restart if this particular result of the disablement of a plugin and its Dependent plugins (depending on the strategy used) has a plugin disablexd."
}
{
    "Origin": "Fire {@link IStorageSegment} changed when an {@link I_M_AttributeInstance} is changed.",
    "Reference": "Fire {@link IShipmentScheduleSegment} changed when an {@link I_M_AttributeInstance} is changed.",
    "HebCup": "Fire {@link IShipmentScheduleSegment} changed when an {@link I_M_AttributeInstance} is changed."
}
{
    "Origin": "Calling this method resolves the holiday calendar, returning a function that\ncan convert a {@code SchedulePeriod} to an {@code FxReset}.",
    "Reference": "Calling this method resolves the holiday calendar, returning a function that\ncan convert a {@code SchedulePeriod} and period index pair to an optional {@code FxReset}.",
    "HebCup": "Calling this method resolves the holiday calendar , returning a BiFunction that can convert a {@code SchedulePeriod} to an {@code FxReset}."
}
{
    "Origin": "Is called when an agent doesn't select an action.",
    "Reference": "Method is called when an agent doesn't select an action when asked.",
    "HebCup": "Is called when an agent doesn't select an action."
}
{
    "Origin": "Returns a non-empty array of ModuleDescriptors in the run-time image.",
    "Reference": "Returns a non-empty array of ModuleResolutions in the run-time image.",
    "HebCup": "Returns a non-empty array of Modules in the run-time image."
}
{
    "Origin": "Creates a Stackdriver Stats exporter.",
    "Reference": "Creates a Stackdriver Stats exporter with default Monitored Resource.",
    "HebCup": "Creates a Stackdriver Stats exporter."
}
{
    "Origin": "Setting this will open a partially synchronized Realm.",
    "Reference": "Define this Realm as a fully synchronized Realm.",
    "HebCup": "Setting this will open a partially synchronized Synchronization."
}
{
    "Origin": "Get the Java Home property value for the given os_type.",
    "Reference": "Get the Java Home property value for the given osFamily.",
    "HebCup": "Get the Java Home property value for the given osFamily."
}
{
    "Origin": "Exercise --add-exports with unknown values.",
    "Reference": "Exercise --add-exports and --add-opens with unknown values.",
    "HebCup": "Exercise --add-exports with unknown values."
}
{
    "Origin": "If the transport thread has been shut down (or is in\nthe progress of being shut down) this method will instead wait\nfor the transport thread to complete, since no more commands\nwill be performed, and waiting would be forever.",
    "Reference": "If a transport thread has been shut down (or is in\nthe progress of being shut down) this method will instead wait\nfor the transport thread to complete, since no more commands\nwill be performed, and waiting would be forever.",
    "HebCup": "If the transport thread has been shut down (or is in the progress of being shut down TransportThread this method will instead wait for the transport thread to complete , since no more commands will be performed , and waiting would be forever."
}
{
    "Origin": "### Precondition: Existing user that is not locked.",
    "Reference": "### Precondition: Existing user that is **NOT** locked.",
    "HebCup": "### Precondition: Existing user that is not locked."
}
{
    "Origin": "Gets the packlet information for given mpack.",
    "Reference": "Gets the module information for given mpack.",
    "HebCup": "Gets the Module information for given mpack."
}
{
    "Origin": "Returns a container with the service type corresponding to the name of\na services configuration file.",
    "Reference": "Returns the service type corresponding to the name of a services\nconfiguration file if it is a valid Java identifier.",
    "HebCup": "Returns a container with the service type corresponding to the name of\na services configuration file."
}
{
    "Origin": "Sets up the EJB client context to use a selector which processes and sets up EJB receivers\nbased on this testcase specific jboss-ejb-client.properties file",
    "Reference": "Sets up the EJB client properties based on this testcase specific jboss-ejb-client.properties file",
    "HebCup": "Sets up the EJB Client to use a selector which processes and sets up EJB receivers based on this testcase specific jboss-ejb-client.properties file"
}
{
    "Origin": "create a TimeService by {@link TimeServiceConfig}.",
    "Reference": "Create time service by {@link TimeServiceConfiguration}.",
    "HebCup": "create a TimeService by {@link TimeServiceConfiguration}."
}
{
    "Origin": "Update a pending or active batch-processing request.",
    "Reference": "Update a pending or active batch-processing job.",
    "HebCup": "Update a pending or active batch-processing request."
}
{
    "Origin": "Creates headers definitions for swagger response.",
    "Reference": "Creates headers definitions for openApi response.",
    "HebCup": "Creates headers definitions for OpenApi response."
}
{
    "Origin": "Indicate to all associated {@link ExportDataSource} to assume\nmastership role for the given partition id",
    "Reference": "Indicate to all associated {@link ExportDataSource} to assume\nleadership role for the given partition id",
    "HebCup": "Indicate to all associated {@link ExportDataSource} to assume Leader role for the given partition id"
}
{
    "Origin": "Returns a {@link TextureRegion} based on the so called state time.",
    "Reference": "Returns a frame based on the so called state time.",
    "HebCup": "Returns a {@link T} based on the so called state time."
}
{
    "Origin": "Get get value of a key",
    "Reference": "Get value of a key",
    "HebCup": "Get get value of a key"
}
{
    "Origin": "initialize the target module IDs with the passed application moduleID\nand the descriptors",
    "Reference": "Initializes the target module IDs with the passed application moduleID",
    "HebCup": "initialize the target module IDs with the passed application moduleID\nand the descriptors"
}
{
    "Origin": "{@code String template}: the template content\n{@code Map model}: the view model\n{@code RenderingContext context}: the rendering context (since VERSION)",
    "Reference": "{@code String template}: the template content\n{@code Map model}: the view model\n{@code RenderingContext context}: the rendering context",
    "HebCup": "{@code String template}: the template content\n{@code Map model}: the view model\n{@code RenderingContext context}: the rendering context (since VERSION)"
}
{
    "Origin": "Creates a new instance of LDAPConnection, configured as required to use\nwhichever encryption method is requested within guacamole.properties.",
    "Reference": "Creates a new instance of LdapNetworkConnection, configured as required\nto use whichever encryption method is requested within\nguacamole.properties.",
    "HebCup": "Creates a new instance of LDAPConnection, configured as required to use\nwhichever encryption method is requested within guacamole.properties."
}
{
    "Origin": "Removes all properties for the specified {@link NamespacedEntityId}.",
    "Reference": "Removes all properties for the specified {@link MetadataEntity}.",
    "HebCup": "Removes all properties for the specified {@link MetadataEntity}."
}
{
    "Origin": "Note this method creates a HotStream that starts emitting data only when the first connecting Stream connects.",
    "Reference": "Note this method creates a Connectable that starts emitting data only when the first connecting Stream connects.",
    "HebCup": "Note this method creates a Connectable that starts emitting data only when the first connecting Stream connects."
}
{
    "Origin": "Gets analytical statistics for the specified connection.",
    "Reference": "Gets status analytics for the specified connection.",
    "HebCup": "Gets analytical Status for the specified connection."
}
{
    "Origin": "If available, the value is returned,\notherwise a new name is generated and returned.",
    "Reference": "If available, the value is returned,\notherwise a new uid is generated and placed within the {@link Map}.",
    "HebCup": "If available , the value is returned , otherwise a new Uid is generated and returned."
}
{
    "Origin": "Same as {@link #lockOrRegisterBackupLock(TxInvocationContext, Object, long)}",
    "Reference": "Same as {@link #lockOrRegisterBackupLock(TxInvocationContext, VisitableCommand, Object, long)}",
    "HebCup": "Same as {@link #lockOrRegisterBackupLock(TxInvocationContext, Object, long)}"
}
{
    "Origin": "Returns a string representation of this object; useful for testing and debugging.",
    "Reference": "Returns a string representation of this object.",
    "HebCup": "Returns a string representation of this object; useful for testing and debugging."
}
{
    "Origin": "This method makes sure we are\nusing the root persister.",
    "Reference": "This method makes sure we are\nusing the root entityDescriptor.",
    "HebCup": "This method makes sure we are using the root TypeDescriptor."
}
{
    "Origin": "returns true if any posts in the passed list exist in this list",
    "Reference": "returns true if any posts in the passed list exist in this list for the given tag",
    "HebCup": "returns true if any Readers in the passed list exist in this list"
}
{
    "Origin": "The timestamp for creation of the counterexample.",
    "Reference": "The timestamp for creation of the object.",
    "HebCup": "The timestamp for creation of the counterexample."
}
{
    "Origin": "If this happens, a configuration {@link ConfigurationEvent event} will\nbe sent to all registered listeners.",
    "Reference": "If this happens, a CONFIGURATION {@link ConfigurationEvent event} will\nbe sent to all registered listeners.",
    "HebCup": "If this happens , a CONFIGURATION {@link ConfigurationEvent event} will be sent to all registered listeners."
}
{
    "Origin": "Returns true if the given type is a primitive type, false otherwise.",
    "Reference": "Indicates if the given type is a primitive type.",
    "HebCup": "Returns true if the given type is a primitive type, false otherwise."
}
{
    "Origin": "{@code requestType} and {@code options} defaults to {@code null}.",
    "Reference": "{@code options} defaults to {@code null}.",
    "HebCup": "{@code requestType} and {@code options} defaults to {@code null}."
}
{
    "Origin": "Encodes an integer into 4 bytes in network byte order in the buffer\nsupplied.",
    "Reference": "Encodes an integer into up to 4 bytes in network byte order in the\nsupplied buffer starting at  offset and writing\n bytes.",
    "HebCup": "Encodes an integer into 4 bytes in network void order in the buffer supplied."
}
{
    "Origin": "Returns an iterator of all of the registered {@code SaslServerFactory}s where the order is based on the\norder of the Provider registration and/or class path order.",
    "Reference": "Returns a collection of all of the registered {@code SaslServerFactory}s where the order is based on the\norder of the Provider registration and/or class path order.",
    "HebCup": "Returns an Collection of all of the registered {@code SaslServerFactory}s where the order is based on the order of the Provider registration and/or class path order."
}
{
    "Origin": "Indicate to associated {@link ExportGeneration}s to become\nmasters for the given partition id",
    "Reference": "Indicate to associated {@link ExportGeneration}s to become\nleaders for the given partition id",
    "HebCup": "Indicate to associated {@link ExportGeneration}s to become\nmasters for the given partition id"
}
{
    "Origin": "Returns a string representation of this object; useful for testing and debugging.",
    "Reference": "Returns a string representation of this object.",
    "HebCup": "Returns a string representation of this object; useful for testing and debugging."
}
{
    "Origin": "This is\nespecially important for parameters that are critical when creating\nthe default database for a DB instance, such as the character set for\nthe default database defined by the character_set_database parameter.",
    "Reference": "This is especially important for parameters that are\ncritical when creating the default database for a DB instance, such as\nthe character set for the default database defined by the\n parameter.",
    "HebCup": "This is\nespecially important for parameters that are critical when creating\nthe default database for a DB instance, such as the character set for\nthe default database defined by the character_set_database parameter."
}
{
    "Origin": "Create a new {@code FlatTreeNode} from the given {@code tree}.",
    "Reference": "Create a new, immutable {@code FlatTreeNode} from the given {@code tree}.",
    "HebCup": "Create a new {@code MSeq} from the given {@code tree}."
}
{
    "Origin": "Sets the border size that defines the attack range for a {@link robocode.SentryRobot SentryRobot}.",
    "Reference": "Sets the border size that defines the attack range for a {@link robocode.BorderSentryRobot SentryRobot}.",
    "HebCup": "Sets the attack Range that defines the attack range for a {@link robocode.SentryRobot SentryRobot}."
}
{
    "Origin": "Requests killing of the running program.",
    "Reference": "Requests graceful termination of the running program.",
    "HebCup": "Requests killing of the running program."
}
{
    "Origin": "An override to the global {@code scriptEvaluationTimeout} setting on the script engine.",
    "Reference": "An override to the global {@code evaluationTimeout} setting on the script engine.",
    "HebCup": "An override to the global {@code evaluationTimeout} setting on the script engine."
}
{
    "Origin": "Tests the given {@code operationModel} for a {@link OperationExecutorModelProperty} and if present it returns the enclosed\n{@link OperationExecutorFactory}.",
    "Reference": "Tests the given {@code operationModel} for a {@link ComponentExecutorModelProperty} and if present it returns the enclosed\n{@link ComponentExecutorFactory}.",
    "HebCup": "Tests the given {@code operationModel} for a {@link ComponentExecutorModelProperty} and if present it returns the enclosed {@link OperationExecutorFactory}."
}
{
    "Origin": "Create jar file with specified files from specified location.",
    "Reference": "Create jar file with specified files.",
    "HebCup": "Create jar file with specified files from specified location."
}
{
    "Origin": "Getter for the output directory where the data files are stored.",
    "Reference": "Getter for the directory where the data files are stored.",
    "HebCup": "Getter for the directory where the data files are stored."
}
{
    "Origin": "and repositoryId = ?.",
    "Reference": "and parentFolderId = ?.",
    "HebCup": "and parentFolderId = ?."
}
{
    "Origin": "Ensures that the parameters will overwrite the member values.",
    "Reference": "Ensures that the initial request parameters will overwrite the member values.",
    "HebCup": "Ensures that the parameters will overwrite the member values."
}
{
    "Origin": "Return the {@link LiquibaseSerializable.SerializationType} to use when serializing this object.",
    "Reference": "Return the {@link liquibase.serializer.LiquibaseSerializable.SerializationType}\nto use when serializing this object.",
    "HebCup": "Return the {@link liquibase.serializer.LiquibaseSerializable.SerializationType} to use when serializing this object."
}
{
    "Origin": "Peeks ID3 tag data (if present) at the beginning of the input.",
    "Reference": "Peeks ID3 tag data at the beginning of the input.",
    "HebCup": "Peeks id3 tag data (if present) at the beginning of the input."
}
{
    "Origin": "Check to see if the local variable should be considered for replacement, i.e.",
    "Reference": "Check to see if the variable should be considered for replacement, i.e.",
    "HebCup": "Check to see if the variable should be considered for replacement, i.e."
}
{
    "Origin": "Creates nonce and its hash for use in OpenID Connect Authentication Requests",
    "Reference": "Creates nonce and its hash for use in OpenID Connect VERSION Authentication Requests.",
    "HebCup": "Creates nonce and its hash for use in OpenID Connect Authentication Requests"
}
{
    "Origin": "compute sum of squared difference of counts",
    "Reference": "compute weighted sum of absolute difference of counts",
    "HebCup": "compute sum of squared difference of counts"
}
{
    "Origin": "KeyImportOptions#getKeyMaterial() key material} cannot be null.",
    "Reference": "ImportKeyOptions#getKey() key material} cannot be null.",
    "HebCup": "ImportKeyOptions#getKeyMaterial () key material} cannot be null."
}
{
    "Origin": "Constructs an instance of TableAdminClient with the given instanceName and\nbigtableTableAdminStub",
    "Reference": "Constructs an instance of TableAdminClient with the given instanceName and stub.",
    "HebCup": "Constructs an instance of TableAdminClient with the given instanceName and\nbigtableTableAdminStub"
}
{
    "Origin": "Make sure that no part is shared by several candidates.",
    "Reference": "Make sure that no part is shared by different candidates.",
    "HebCup": "Make sure that no part is shared by several candidates."
}
{
    "Origin": "Saves the bundle with the given name and files so it can be recalled later in the template",
    "Reference": "Saves the bundled file to the request so it can be recalled later in the template",
    "HebCup": "Saves the bundle with the given name and Resources so it can be recalled later in the template"
}
{
    "Origin": "Helper for {@link #insertBefore(long, Value)} that copies all items into a {@link TreeSeq}.",
    "Reference": "Helper for {@link #insertBefore(long, Value, QueryContext)} that copies all items into a\n{@link TreeSeq}.",
    "HebCup": "Helper for {@link #insertBefore(long, Value)} that copies all items into a {@link TreeSeq}."
}
{
    "Origin": "This hack may fail on non-Sun JVMs.",
    "Reference": "This hack may fail on non-Oracle/OpenJDK JVMs.",
    "HebCup": "This hack may fail on non-Sun JVMs."
}
{
    "Origin": "Sends a request to write a list of addresses.",
    "Reference": "Sends a request to write a list of entries.",
    "HebCup": "Sends a request to write a list of addresses."
}
{
    "Origin": "NativeLinkable}.",
    "Reference": "NativeLinkableGroup}.",
    "HebCup": "NativeLinkableGroup}."
}
{
    "Origin": "Convert a {@link MongoIterable} into an {@link Observable}.",
    "Reference": "Convert a {@link AsyncMongoIterable} into an {@link Observable}.",
    "HebCup": "Convert a {@link AsyncMongoIterable} into an {@link Observable}."
}
{
    "Origin": "Adds a new {@link StateDescription} for a channel that has multiple options to select from or a custom format\nstring.",
    "Reference": "Adds a new {@link StateDescriptionFragment} for a channel that has multiple options to select from or a custom\nformat string.",
    "HebCup": "Adds a new {@link StateDescriptionFragment} for a channel that has multiple options to select from or a custom format string."
}
{
    "Origin": "Sets the occurrence indicator to 1 if the first expression returns at least one\n    non-array item.",
    "Reference": "Sets the occurrence indicator to 1 if the argument returns at least one item.",
    "HebCup": "Sets the occurrence indicator to 1 boolean the first expression returns at least one non-array item."
}
{
    "Origin": "Sets the {@link VectorCollectionFactory} used to produce acceleration\nstructures for the OPTICS computation.",
    "Reference": "Sets the {@link VectorCollection} used to produce acceleration\nstructures for the OPTICS computation.",
    "HebCup": "Sets the {@link VectorCollection} used to produce acceleration structures for the OPTICS computation."
}
{
    "Origin": "Produces an Uncollapsed SemanticGraph with optional extras.",
    "Reference": "Produces an Uncollapsed (basic) SemanticGraph.",
    "HebCup": "Produces an Uncollapsed SemanticGraph with optional extras."
}
{
    "Origin": "A policy that delegates to another policy that is selected based on the most recently evaluated outcome.",
    "Reference": "A policy that delegates to another policy that is selected based on the most recent error.",
    "HebCup": "A policy that delegates to another policy that is selected based on the most recently evaluated outcome."
}
{
    "Origin": "Returns an Rx Observable that monitors changes to this RealmList.",
    "Reference": "Returns an Rx Flowable that monitors changes to this RealmList.",
    "HebCup": "Returns an Rx Flowable that monitors changes to this RealmList."
}
{
    "Origin": "Turns this FutureStream into a HotStream, a connectable Stream, being executed on a thread on the\nin it's current task executor, that is producing data",
    "Reference": "Turns this FutureStream into a Connectable, a connectable Stream, being executed on a thread on the\nin it's current task executor, that is producing data",
    "HebCup": "Turns this FutureStream into a Connectable , a connectable Stream , being executed on a thread on the in it's current task executor , that is producing data"
}
{
    "Origin": "Performs actual Put operation for the specified record in HBase.",
    "Reference": "Performs actual Put/delete operation for the specified record in HBase.",
    "HebCup": "Performs actual Mutation operation for the specified record in HBase."
}
{
    "Origin": "Returns a {@link Requires} for a dependence on a module\nwith the given (and possibly empty) set of modifiers.",
    "Reference": "Returns a {@link Requires} for a dependence on a module with the given\n(and possibly empty) set of modifiers, and optionally the version\nrecorded at compile time.",
    "HebCup": "Returns a {@link Requires} for a dependence on a module\nwith the given (and possibly empty) set of modifiers."
}
{
    "Origin": "Sets an integer attribute on the given element.",
    "Reference": "Sets an integer property on the given element.",
    "HebCup": "elem.set an integer attribute on the given element."
}
{
    "Origin": "For an overview of CIDR ranges, go to the",
    "Reference": "For an overview of CIDR ranges, go to the Wikipedia Tutorial.",
    "HebCup": "For an overview of CIDR ranges, go to the"
}
{
    "Origin": "Reset all mocks.",
    "Reference": "Mock setup.",
    "HebCup": "createNiceMock all mocks."
}
{
    "Origin": "Test method with namespaces.",
    "Reference": "Bidirectional tests.",
    "HebCup": "Test method with namespaces."
}
{
    "Origin": "Returns the k b template with the primary key or throws a {@link com.liferay.knowledgebase.NoSuchTemplateException} if it could not be found.",
    "Reference": "Returns the k b template with the primary key or throws a {@link NoSuchTemplateException} if it could not be found.",
    "HebCup": "Returns the k b template with the primary key or throws a {@link com.liferay.knowledgebase.NoSuchTemplateException} if it could not be found."
}
{
    "Origin": "The {@code keyImportOptions} is required and its fields {@link KeyImportOptions#getName() name} and {@link",
    "Reference": "The {@code keyImportOptions} is required and its fields {@link ImportKeyOptions#getName() name} and {@link",
    "HebCup": "The {@code ImportKeyOptions} is required and its fields {@link ImportKeyOptions#getName () name} and {@link"
}
{
    "Origin": "This can also be used to set a custom ShapeRenderer aside from the default ones.",
    "Reference": "This can also be used to set a custom IShapeRenderer aside from the default ones.",
    "HebCup": "This can also be used to set a custom IShapeRenderer aside from the default ones."
}
{
    "Origin": "Delivers the given event object to given observer methods.",
    "Reference": "Delivers the given synchronous event object to synchronous and transactional observer methods.",
    "HebCup": "Delivers the given event object to given observer methods."
}
{
    "Origin": "Return response headers associated with the exception, possibly required\nfor the given status code (e.g.",
    "Reference": "Return headers associated with the exception that should be added to the\nerror response, e.g.",
    "HebCup": "Return response headers associated with the exception, possibly required\nfor the given status code (e.g."
}
{
    "Origin": "timed invokeAny(empty collection) throws IAE",
    "Reference": "timed invokeAny(empty collection) throws IllegalArgumentException",
    "HebCup": "timed invokeAny(empty collection) throws IAE"
}
{
    "Origin": "The tracking state affects the aggressiveness of the alpha/beta\ngain values in synchronizing with the signal carrier.",
    "Reference": "The PLLGain state affects the aggressiveness of the alpha/beta\ngain values in synchronizing with the signal carrier.",
    "HebCup": "The PLLGain state affects the aggressiveness of the alpha/beta gain values in synchronizing with the signal carrier."
}
{
    "Origin": "Access Control Using AWS Identity and Access Management (IAM) \n.",
    "Reference": "For more information, see Access Control Using AWS Identity and Access Management (IAM).",
    "HebCup": "Access Control Using AWS Identity and Access Management (IAM) \n."
}
{
    "Origin": "Expected to be used by the Poller to release resources on socket\nclose, errors etc.",
    "Reference": "Expected to be used by the Endpoint to release resources on socket\nclose, errors etc.",
    "HebCup": "Expected to be used by the Poller to release resources on socket\nclose, errors etc."
}
{
    "Origin": "Atomically sets the lo int value to the given updated value\nonly if the current value {@code ==} the expected value.",
    "Reference": "Atomically sets the lo value to the given updated value\nonly if the current value {@code ==} the expected value.",
    "HebCup": "Atomically sets the lo int value to the given updated value\nonly if the current value {@code ==} the expected value."
}
{
    "Origin": "Returns the value of the {@code bitfield} field.",
    "Reference": "Returns the value of the {@code direction} field.",
    "HebCup": "Returns the value of the {@code direction} field."
}
{
    "Origin": "Gets the value of the value property.",
    "Reference": "Gets the value of the appearance property.",
    "HebCup": "Gets the Appearance of the Appearance property."
}
{
    "Origin": "Gets the option to allow queries to run across all partitions of the\ncollection.",
    "Reference": "Gets the option to allow empty result pages in feed response.",
    "HebCup": "Gets the option to allow queries to run across all Pages of the collection."
}
{
    "Origin": "Throws\n{@code IllegalArgumentException} if the value is null.",
    "Reference": "Throws\n{@code NullPointerException} if the value is null.",
    "HebCup": "Throws {@code IllegalArgumentException} Objects.requireNonNull the value is null."
}
{
    "Origin": "Return repositories available for target os version on host based on {@code repoVersion} repository definition",
    "Reference": "Return repositories available for target os version on host based on the\nhost family.",
    "HebCup": "Return repositories available for target os version on host based on {@code operatingSystems} repository definition"
}
{
    "Origin": "Sets the TEXT value of the ds:XPath Element.",
    "Reference": "Sets the TEXT value of the {@code ds:XPath} Element.",
    "HebCup": "Sets the TEXT value of the ds:XPath Node."
}
{
    "Origin": "Scenario:\n  - CA inherited trust\n  - gateway trusts service via CA\n  - service does not evaluate trust",
    "Reference": "Scenario:\n  - CA inherited trust\n  - gateway trusts API via CA\n  - API does not evaluate trust",
    "HebCup": "Scenario: - CA inherited trust - gateway trusts Api via CA - Api does not evaluate trust"
}
{
    "Origin": "Unsafe version of: {@link #shaderc_spvc_compile_into_vulkan compile_into_vulkan}",
    "Reference": "Unsafe version of: {@link #shaderc_spvc_get_decoration get_decoration}",
    "HebCup": "Unsafe version of: {@link #shaderc_spvc_get_decoration compile_into_vulkan}"
}
{
    "Origin": "Sets the source.",
    "Reference": "Set the source.",
    "HebCup": "Sets the source."
}
{
    "Origin": "Corresponds to `hex.tree.drf.DrfMojoModel.score0()`",
    "Reference": "Corresponds to `hex.tree.gbm.GbmMojoModel.score0()`",
    "HebCup": "Corresponds to `hex.tree.drf.DrfMojoModel.score0()`"
}
{
    "Origin": "Get OpenID Connect authentication information\n### Functional Description:   Provides information about OpenID Connect authentication options.",
    "Reference": "Get OpenID Connect provider authentication information\n### Functional Description:   Provides information about OpenID Connect authentication options.",
    "HebCup": "Get OpenID Connect authentication information\n### Functional Description:   Provides information about OpenID Connect authentication options."
}
{
    "Origin": "Kept for compatibility with NativeScript.",
    "Reference": "Kept for source-level compatibility with NativeScript.",
    "HebCup": "Kept for compatibility with NativeScript."
}
{
    "Origin": "Resets the states.",
    "Reference": "Resets all the states.",
    "HebCup": "Resets the states."
}
{
    "Origin": "Ensure that the {@link #offsets} array has enough space to store {@code index}.",
    "Reference": "Ensure that the {@link #typeOffsets} array has enough space to store {@code index}.",
    "HebCup": "Ensure that the {@link#typeOffsets} array has enough space to store {@code index}."
}
{
    "Origin": "Hardware Security Modules \nin the Amazon Redshift Cluster Management Guide.",
    "Reference": "Hardware Security Module (HSM).",
    "HebCup": "Hardware Security Modules \nin the Amazon Redshift Cluster Management Guide."
}
{
    "Origin": "Moves the caret to the position indicated by {@code pos}.",
    "Reference": "Moves the caret to the given position.",
    "HebCup": "Moves the caret to the position indicated by {@code position}."
}
{
    "Origin": "Get report type.",
    "Reference": "Get selected report option.",
    "HebCup": "get Selected Report Option."
}
{
    "Origin": "Create Subject Alternative names with User Principal names.",
    "Reference": "Set the User Principal Names.",
    "HebCup": "Create Subject Alternative names with User Principal names."
}
{
    "Origin": "Get the variation of information (not normalized, 0 = equal)",
    "Reference": "Get the variation of information (not normalized, small values are good).",
    "HebCup": "Get the variation of information variationOfInformationnot normalized, 0 = equal)"
}
{
    "Origin": "Write a new file using the filename and data passed as parameter.",
    "Reference": "Write a new file.",
    "HebCup": "Write a new file using the filename and moduleInputStream passed as parameter."
}
{
    "Origin": "Generates a JAR file that contains zero or more classes with a static main method.",
    "Reference": "Generates a JAR file that contains zero or more classes with a static main method that all delegates to the\nsame main class.",
    "HebCup": "Generates a JAR file that contains zero or more classes with a static main method."
}
{
    "Origin": "The variables involved while matching the tree {@link #node()}.",
    "Reference": "The variables involved while matching the tree {@link #tree()}.",
    "HebCup": "The vars involved while matching the tree {@link#node ()}."
}
{
    "Origin": "Code snippet for {@link BlockBlobClient#stageBlockFromURL(String, URL, BlobRange)}",
    "Reference": "Code snippet for {@link BlockBlobClient#stageBlockFromURL(String, String, BlobRange)}",
    "HebCup": "Code snippet for {@link BlockBlobClient#stageBlockFromURL (String , Url , BlobRange)}"
}
{
    "Origin": "***** Property ASAPP *****",
    "Reference": "***** Property RUNNINGASAPP *****",
    "HebCup": "***** Property isSXRUNNINGASAPP *****"
}
{
    "Origin": "Returns the hash string for the given module name, {@code null}\nif there is no hash recorded for the module.",
    "Reference": "Returns the hash for the given module name, {@code null}\nif there is no hash recorded for the module.",
    "HebCup": "Returns the hash byte for the given module name , {@code null} if there is no hash recorded for the module."
}
{
    "Origin": "If the -ea option is not set, an ArrayIndexOutOfBoundsException may occur, but out of optimization\nconsiderations we don't want to guarantee this exception.",
    "Reference": "ArrayIndexOutOfBoundsException may occur, but out of optimization\nconsiderations we don't want to guarantee this exception.",
    "HebCup": "If the -ea option is not set, an ArrayIndexOutOfBoundsException may occur, but out of optimization\nconsiderations we don't want to guarantee this exception."
}
{
    "Origin": "Returns a rule that restricts access according to the {@link Role} of the\ncurrent authenticated {@link User}.",
    "Reference": "Adds a rule that restricts access according to the {@link Role} of the\ncurrent authenticated {@link User}.",
    "HebCup": "Returns a rule that restricts access according to the {@link Role} of the\ncurrent authenticated {@link User}."
}
{
    "Origin": "If the given element is {@code null} or does not have an integer, zero is returned.",
    "Reference": "If the given string is {@code null} or does not have an integer, zero is returned.",
    "HebCup": "If the given String is {@code null} or does not have an integer , zero is returned."
}
{
    "Origin": "The {@link Flux} will\ncontain one or several feed response of the read cosmos users.",
    "Reference": "The {@link CosmosContinuablePagedFlux} will\ncontain one or several feed response of the read cosmos users.",
    "HebCup": "The {@link Flux} will contain one or several Cosmos Continuable Paged Flux of the read cosmos users."
}
{
    "Origin": "Closes the current snapshot writer.",
    "Reference": "Closes the current snapshot output.",
    "HebCup": "Closes the current Output Stream."
}
{
    "Origin": "This method must only be used for type references\nwhose sort is {@link #EXCEPTION_PARAMETER EXCEPTION_PARAMETER} .",
    "Reference": "This method must\nonly be used for type references whose sort is {@link #EXCEPTION_PARAMETER} .",
    "HebCup": "This method must only be used for type references\nwhose sort is {@link #EXCEPTION_PARAMETER EXCEPTION_PARAMETER} ."
}
{
    "Origin": "WebPage on a job-by-job basis and thier values indicative of what actions\nshould be associated with a WebPage.",
    "Reference": "They are assigned to a WebPage on a job-by-job basis and thier values indicative of what actions should be associated with a WebPage.",
    "HebCup": "WebPage on a job-by-job basis and thier values indicative of what actions\nshould be associated with a WebPage."
}
{
    "Origin": "Issues mCaptureRequestConfigurations to {@link CameraCaptureSession}.",
    "Reference": "Issues mCaptureRequestConfigs to {@link CameraCaptureSession}.",
    "HebCup": "Issues mCaptureRequestConfigs to {@link CameraCaptureSession}."
}
{
    "Origin": "NOTE: Changes to dynamic parameters are applied immediately.",
    "Reference": "Changes to dynamic parameters are applied immediately.",
    "HebCup": "NOTE: Changes to dynamic parameters are applied immediately."
}
{
    "Origin": "Sets the value for  for R4+ resources, and places the value in\nan extension on \nwith the URL  for DSTU3\nand below.",
    "Reference": "Sets the value for  for R4+ resources, and places the value in\nan extension on \nwith the URL  for DSTU3.",
    "HebCup": "Sets the value for  for R4+ resources, and places the value in\nan extension on \nwith the URL  for DSTU3\nand below."
}
{
    "Origin": "Retires the service, removing it from the engine.",
    "Reference": "Retires the API, removing it from the engine.",
    "HebCup": "Retires the Api , removing it from the engine."
}
{
    "Origin": "If this happens, a configuration {@link ConfigurationEvent event} will\nbe sent to all registered listeners.",
    "Reference": "If this happens, a CONFIGURATION {@link ConfigurationEvent event} will\nbe sent to all registered listeners.",
    "HebCup": "If this happens , a CONFIGURATION {@link ConfigurationEvent event} will be sent to all registered listeners."
}
{
    "Origin": "Access Control Using AWS Identity and Access Management (IAM) \n.",
    "Reference": "For more information, see Access Control Using AWS Identity and Access Management (IAM).",
    "HebCup": "Access Control Using AWS Identity and Access Management (IAM) \n."
}
{
    "Origin": "Creates an already compressed {@code GroupedList} for storage.",
    "Reference": "Creates an already compressed {@code GroupedList} with two groups.",
    "HebCup": "Creates an already compressed {@code GroupedList} for storage."
}
{
    "Origin": "Sets the {@link SharedKeyCredential} used to authorize requests sent to the service.",
    "Reference": "Sets the {@link StorageSharedKeyCredential} used to authorize requests sent to the service.",
    "HebCup": "Sets the {@link StorageSharedKeyCredential} used to authorize requests sent to the service."
}
{
    "Origin": "Get plain column.",
    "Reference": "Find plain column.",
    "HebCup": "find Plain Column."
}
{
    "Origin": "Does\nnot close the output stream when the flux is terminated, but\ndoes {@linkplain #release(DataBuffer) release} the data buffers in the\nsource.",
    "Reference": "Does\nnot close the output stream when the flux is terminated, and does\nnot {@linkplain #release(DataBuffer) release} the data buffers in the\nsource.",
    "HebCup": "Does\nnot close the output stream when the flux is terminated, but\ndoes {@linkplain #release(DataBuffer) release} the data buffers in the\nsource."
}
{
    "Origin": "Remove every generated files corresponding to a wiki.",
    "Reference": "Remove every generated files corresponding to a color theme.",
    "HebCup": "Remove every generated files corresponding to a color."
}
{
    "Origin": "Immediately initialize the default WebSocketUpgradeFilter.",
    "Reference": "Configure the default WebSocketUpgradeFilter.",
    "HebCup": "Immediately configure the default WebSocketUpgradeFilter."
}
{
    "Origin": "Returns a string representation of this object; useful for testing and debugging.",
    "Reference": "Returns a string representation of this object.",
    "HebCup": "Returns a string representation of this object; useful for testing and debugging."
}
{
    "Origin": "Obtains an instance of {@code OffsetTime} from a date-time object.",
    "Reference": "Obtains an instance of {@code OffsetTime} from a temporal object.",
    "HebCup": "Obtains an instance of {@code OffsetTime} from a date-time object."
}
{
    "Origin": "In the latter case, we can't assume that the\ncwd is writable.",
    "Reference": "In the latter case, we can't assume that the cwd is writable so '/tmp' is attempted.",
    "HebCup": "In the latter case, we can't assume that the\ncwd is writable."
}
{
    "Origin": "Adds a task to the queue and makes sure a worker thread is running, unless the queue has been\nsuspended.",
    "Reference": "Adds a task to the queue and makes sure a worker thread is running.",
    "HebCup": "Adds a task to the queue and makes sure a worker thread is running, unless the queue has been\nsuspended."
}
{
    "Origin": "Re-loaded scripts need to have their breakpoints re-applied.",
    "Reference": "Reloaded scripts need to have their breakpoints reapplied.",
    "HebCup": "Re-loaded scripts need to have their breakpoints re-applied."
}
{
    "Origin": "Queries this contact source for the given queryString.",
    "Reference": "Creates query for the given queryString.",
    "HebCup": "Queries this Contact Query for the given queryString."
}
{
    "Origin": "Opens a {@link TitanGraph} database configured according to the provided configuration.",
    "Reference": "Opens a {@link JanusGraph} database configured according to the provided configuration.",
    "HebCup": "Opens a {@link JanusGraph} database configured according to the provided configuration."
}
{
    "Origin": "Convenience routine to return the specified error's\nunderlying SyntaxException, or null if it isn't one.",
    "Reference": "Returns the specified error's underlying SyntaxException, or null if it isn't one.",
    "HebCup": "Convenience routine to return the specified error's\nunderlying SyntaxException, or null if it isn't one."
}
{
    "Origin": "Have the application obtain and close the caching provider instance for the configured Hazelcast library.",
    "Reference": "Have the application obtain and close the caching provider instance for the configured Infinispan library.",
    "HebCup": "Have the application obtain and close the J Caching Provider instance for the configured Hazelcast library."
}
{
    "Origin": "Client will automatically attempt to reconnect to the server if the\nconnection is lost.",
    "Reference": "Sets whether the client will automatically attempt to reconnect to\nthe server if the connection is lost.",
    "HebCup": "Client will automatically attempt to reconnect to the server if the\nconnection is lost."
}
{
    "Origin": "Starts a Program with the specified argument overrides.",
    "Reference": "Starts a Program run with the given arguments.",
    "HebCup": "Starts a Program with the specified argument overrides."
}
{
    "Origin": "If {@code labels = \"*\"}, settings with any label are returned.",
    "Reference": "If {@code labelFilter = \"*\"}, settings with any label are returned.",
    "HebCup": "If {@code LabelFilter = ``*``} , settings with any label are returned."
}
{
    "Origin": "If {@code keys = \"abc,def\"}, settings with a key equal to \"abc\" or \"def\" are returned.",
    "Reference": "If {@code keyFilter = \"abc,def\"}, settings with a key equal to \"abc\" or \"def\" are returned.",
    "HebCup": "If {@code KeyFilter = ``abc ,def``} , settings with a key equal to ``abc`` or ``def`` are returned."
}
{
    "Origin": "Builds a stream cut, mapping the segments of a stream to their offsets from a position object.",
    "Reference": "Builds a stream cut, mapping the segments of a stream to their offsets from a writer position object.",
    "HebCup": "Builds a stream cut , mapping the segments of a stream to their offsets from a WriterPosition object."
}
{
    "Origin": "Usage:\n \n \n ascii and spaceChar are integers: 0 = leave, 1 = ascii, 2 = fullwidth.",
    "Reference": "ascii and spaceChar are integers: 0 = leave, 1 = ascii, 2 = fullwidth.",
    "HebCup": "Usage:\n \n \n ascii and spaceChar are integers: 0 = leave, 1 = ascii, 2 = fullwidth."
}
{
    "Origin": "Returns an immutable list containing ten elements.",
    "Reference": "Returns an unmodifiable list containing ten elements.",
    "HebCup": "Returns an Unmodifiable list containing ten elements."
}
{
    "Origin": "Search if the given map has given the package format.",
    "Reference": "Search if the given map has the given element format.",
    "HebCup": "Search if the given map has given the element format."
}
{
    "Origin": "testValueCount",
    "Reference": "testGetValueCount",
    "HebCup": "testGetValueCount"
}
{
    "Origin": "Sets the contact points to use for the initial connection to the cluster.",
    "Reference": "Adds contact points to use for the initial connection to the cluster.",
    "HebCup": "Sets the Contact Points.add All to use for the initial connection to the cluster."
}
{
    "Origin": "Resolve alternatives (relative to {@code PathManager.getHomePath()}) and return absolute path of the first one which resolves to\nexisting directory",
    "Reference": "Resolve alternatives (relative to {@code PathManager.getHomePath()}) and return absolute path of the first one which resolves to\nexisting file or directory",
    "HebCup": "Resolve alternatives (relative to {@code PathManager.getHomePath()}) and return absolute path of the first one which resolves to\nexisting directory"
}
{
    "Origin": "(Try to) create an arpeggiato inter.",
    "Reference": "(Try to) create and add an arpeggiato inter.",
    "HebCup": "(Try to) create an glyph."
}
{
    "Origin": "Converts an {@link IntIntOpenHashMap} into a flat int [] array.",
    "Reference": "Converts an {@link IntIntHashMap} into a flat int [] array.",
    "HebCup": "Converts an {@link IntIntHashMap} into a flat int [] array."
}
{
    "Origin": "Adds next SSRC group information update request to\n{@link RequestType#CHANNEL_INFO_UPDATE} query currently being built.",
    "Reference": "Adds next source group information update request to\n{@link RequestType#CHANNEL_INFO_UPDATE} query currently being built.",
    "HebCup": "Adds next source Group information update request to {@link RequestType#CHANNEL_INFO_UPDATE} query currently being built."
}
{
    "Origin": "Inserts a shadow page as needed.",
    "Reference": "Inserts shadow pages as needed.",
    "HebCup": "Inserts a shadow (as needed."
}
{
    "Origin": "Returns the descriptor corresponding to this Java type.",
    "Reference": "Returns the descriptor corresponding to this type.",
    "HebCup": "Returns the append corresponding to this Java type."
}
{
    "Origin": "Loads the repository interface contained in the given {@link RepositoryConfiguration} using the given\n{@link ResourceLoader}.",
    "Reference": "Loads the repository interface contained in the given {@link RepositoryConfiguration} using the given\n{@link ClassLoader}.",
    "HebCup": "Loads the repository interface contained in the given {@link RepositoryConfiguration} using the given {@link ClassLoader}."
}
{
    "Origin": "Returns an induced subgraph of {@code graph}.",
    "Reference": "Returns an induced subgraph of {@code network}.",
    "HebCup": "Returns an induced subgraph of {@code network}."
}
{
    "Origin": "If there's no\nspecific value in the component for that key, first attempt to return the key's\nglobal default.",
    "Reference": "If there's no\nspecific value in the component for that key, fall back to returning the\nprovided non null default.",
    "HebCup": "If there's no\nspecific value in the component for that key, first attempt to return the key's\nglobal default."
}
{
    "Origin": "Searches for a ballerina project using outward recursion starting from the file directory, until the given root\ndirectory is found.",
    "Reference": "Searches for a ballerina project root using outward recursion starting from the file directory, until the given\nroot directory is found.",
    "HebCup": "Searches for a ballerina project using outward recursion starting from the file directory, until the given root\ndirectory is found."
}
{
    "Origin": "Tries to resolve a table path to a {@link CatalogTableOperation}.",
    "Reference": "Tries to resolve a table path to a {@link ResolvedTable}.",
    "HebCup": "Tries to resolve a table path to a {@link ResolvedTable}."
}
{
    "Origin": "In particular, this method just computes\n{@code Math.exp(logGamma(x))} anyway.",
    "Reference": "In particular, this method just computes\n{@code FastMath.exp(logGamma(x))} anyway.",
    "HebCup": "In particular , this method just computes {@code FastMath.exp (logGamma (x))} anyway."
}
{
    "Origin": "Get the content of this element.",
    "Reference": "Gets the value of the content property.",
    "HebCup": "Get the content of this element."
}
{
    "Origin": "Creates an {@link UBQualifier} from the given arrays and offsets.",
    "Reference": "Creates an {@link UBQualifier} from the given sequences and offsets.",
    "HebCup": "Creates an {@link UBQualifier} from the given sequences and offsets."
}
{
    "Origin": "Calls {@link Plugin#didDeclareSetter(TypeSpec.Builder, PropertyGenerator, MethodSpec)}\non all the bundled plugins",
    "Reference": "Calls {@link Plugin#afterDeclareSetter(TypeSpec.Builder, PropertyGenerator, MethodSpec)}\non all the bundled plugins",
    "HebCup": "Calls {@link Plugin#afterDeclareSetter (TypeSpec.Builder , PropertyGenerator , MethodSpec)} on all the bundled plugins"
}
{
    "Origin": "Attempts to get the underlying value backed by a {@link BaseValue}\nlinked to the provided {@link Key}.",
    "Reference": "Attempts to get the underlying value backed by a {@link Value}\nlinked to the provided {@link Key}.",
    "HebCup": "Attempts to get the underlying value backed by a {@link Value} linked to the provided {@link Key}."
}
{
    "Origin": "Returns the list of subtitles for the chart.",
    "Reference": "Returns a new list containing all the subtitles for the chart.",
    "HebCup": "Returns the list of subtitles for the chart."
}
{
    "Origin": "Sets the {@link IpRange} which determines the IP ranges that are allowed to use the SAS.",
    "Reference": "Sets the {@link SasIpRange} which determines the IP ranges that are allowed to use the SAS.",
    "HebCup": "Sets the {@link SasIpRange} which determines the IP ranges that are allowed to use the SAS."
}
{
    "Origin": "Returns a zoned date-time formed from this time at the specified date.",
    "Reference": "Returns an offset date-time formed from this time at the specified date.",
    "HebCup": "Returns a Offset Date-time formed from this time at the specified date."
}
{
    "Origin": "Helper function that converts the components from (and including)\nstartPos to (and including) endPos into its string representation.",
    "Reference": "Helper function that converts the components from (and including)\nstartPos to (and including) endPos into an internal component\nstring, separated by #.",
    "HebCup": "Helper function that converts the components from (and including) iv to (and including) endPos into its string representation."
}
{
    "Origin": "Enters the given tree (se {@link #scan(JCTree)}.",
    "Reference": "Enters the given tree (se {@link #scan(Tree)}.",
    "HebCup": "Enters the given tree (se {@link #scan(Tree)}."
}
{
    "Origin": "Generates a code sample for using {@link FileClient#uploadRangeFromUrlWithResponse(long, long, long, URI,",
    "Reference": "Generates a code sample for using {@link FileClient#uploadRangeFromUrlWithResponse(long, long, long, String,",
    "HebCup": "Generates a code sample for using {@link FileClient#uploadRangeFromUrlWithResponse(long, long, long, URI,"
}
{
    "Origin": "The {@link RsaKeyCreateOptions#isEnabled() enabled}\nfield is set to true by Azure Key Vault, if not specified.",
    "Reference": "The {@link CreateRsaKeyOptions#isEnabled() enabled}\nfield is set to true by Azure Key Vault, if not specified.",
    "HebCup": "The {@link CreateRsaKeyOptions#isEnabled () enabled} field is set to true by Azure Key Vault , if not specified."
}
{
    "Origin": "Serialize the given TokenStream into a byte array using the provided AttributeSerializer(s).",
    "Reference": "Serialize the given TwitterTokenStream into a byte array using the provided AttributeSerializer(s).",
    "HebCup": "Serialize the given TwitterTokenStream into a byte array using the provided AttributeSerializer (s)."
}
{
    "Origin": "Note that the writing process does not start until the returned {@code Mono} is subscribed\nto.",
    "Reference": "Note that the writing process does not start until the returned {@code Flux} is subscribed\nto.",
    "HebCup": "Note that the writing process does not start until the returned {@code Flux} is subscribed to."
}
{
    "Origin": "Getter for {@link #allowOnlyRequestedHeaders}",
    "Reference": "Getter for {@link #exposedHeaders}",
    "HebCup": "Getter for {@link#exposedHeaders}"
}
{
    "Origin": "Get the root reference for the given map id.",
    "Reference": "Get the snapshot for the given map id",
    "HebCup": "Get the root reference for the given Snapshot id."
}
{
    "Origin": "Ensures that the given node, or a versionable ancestor, is checked out.",
    "Reference": "Ensures that the given node, or a versionable ancestor, is checked out with auto-checkin set.",
    "HebCup": "Ensures that the given node, or a Checkout Node, is checked out."
}
{
    "Origin": "This is useful when the default Servlet cannot be auto-detected, for example when it has been manually configured.",
    "Reference": "This is useful when the default Servlet cannot be autodetected,\nfor example when it has been manually configured.",
    "HebCup": "This is useful when the default this.servlet cannot be auto-detected , for example when it has been manually configured."
}
{
    "Origin": "If the\ntimeout elapses without a result, null will be returned.",
    "Reference": "If the timeout elapses without a\nresult or if there was an connection error, null will be returned.",
    "HebCup": "If the timeout elapses without a result , res will be returned."
}
{
    "Origin": "Tells if the value can be used as the \"EL function\" parameter to\n{@link #combine(TemplateModel, TemplateMethodModelEx)}.",
    "Reference": "Tells if the value can be used as the \"EL function\" parameter to\n{@link #combine(TemplateModel, TemplateMethodModel)}.",
    "HebCup": "Tells if the value can be used as the ``EL function`` parameter to {@link#combine (TemplateModel , TemplateMethodModel)}."
}
{
    "Origin": "Create an instance of {@link JAXBElement }{@code <}{@link CTMarkupRange }{@code >}}",
    "Reference": "Create an instance of {@link JAXBElement }{@code <}{@link CTMoveToRangeEnd }{@code >}}",
    "HebCup": "Create an instance of {@link JAXBElement} {@code <} {@link CTMoveToRangeEnd} {@code >}}"
}
{
    "Origin": "Sets the title.",
    "Reference": "Set the title.",
    "HebCup": "Sets the title."
}
{
    "Origin": "Returns the first sync d l object in the ordered set where parentFolderId = ?.",
    "Reference": "Returns the first sync d l object in the ordered set where modifiedTime > ?",
    "HebCup": "Returns the first sync d l object in the ordered set where repositoryId = ?."
}
{
    "Origin": "The caller must check for null return value.",
    "Reference": "The caller must check for a null return value.",
    "HebCup": "The caller must check for null return value."
}
{
    "Origin": "(Shiro's default Authenticator\nallows null IPs to allow localhost and proxy server environments).",
    "Reference": "(Shiro's default Authenticator\nallows null hosts to allow localhost and proxy server environments).",
    "HebCup": "(Shiro's default Authenticator\nallows null IPs to allow localhost and proxy server environments)."
}
{
    "Origin": "Implements the \"in\" operator.",
    "Reference": "Implements 'x in y'.",
    "HebCup": "Implements the \"in\" operator."
}
{
    "Origin": "Sets the {@link SessionManager SessionManager} to which this DelegatingSession will\ndelegate its method calls.",
    "Reference": "Sets the {@link NativeSessionManager NativeSessionManager} to which this DelegatingSession will\ndelegate its method calls.",
    "HebCup": "Sets the {@link NativeSessionManager NativeSessionManager} to which this DelegatingSession will delegate its method calls."
}
{
    "Origin": "Recursively split based on given regEx.",
    "Reference": "Split based on given regEx.",
    "HebCup": "Recursively Blanks based on given regEx."
}
{
    "Origin": "Computes the median for each pixel across all bands in the {@link Planar} image.",
    "Reference": "Computes the median for each pixel across selected bands in the {@link Planar} image.",
    "HebCup": "Computes the median for each pixel across all bands in the {@link Planar} image."
}
{
    "Origin": "The comparison is based on the Unicode value of each character in the strings.",
    "Reference": "The comparison is based on the Unicode value of each character in the CharSequences.",
    "HebCup": "The comparison is based on the Unicode value of each character in the CharSequence."
}
{
    "Origin": "Releases the compilation options.",
    "Reference": "Destroys the compilation options.",
    "HebCup": "destroy the compilation options."
}
{
    "Origin": "This accepts locators starting with 'classpath:' or 'file:'.",
    "Reference": "This accepts locators starting with 'classpath:', 'url:' or 'file:'.",
    "HebCup": "This accepts locators starting with 'classpath:' or 'file:'."
}
{
    "Origin": "This test will create OBJECT_NUM of objects in an SMRMap.",
    "Reference": "This test will create OBJECT_NUM of objects in an CorfuTable.",
    "HebCup": "This test will create OBJECT_NUM of objects in an CorfuTable."
}
{
    "Origin": "Copies or downsamples the given HLLmode sketch to tgtLgK, HLL_8, on the heap.",
    "Reference": "Copies or downsamples the given candidate HLLmode sketch to tgtLgK, HLL_8, on the heap.",
    "HebCup": "Copies or downsamples the given HLLmode sketch to tgtLgK, HLL_8, on the heap."
}
{
    "Origin": "Sets the filed name.",
    "Reference": "Sets the field name.",
    "HebCup": "Sets the field Name."
}
{
    "Origin": "This method loads the image from the blender file itself.",
    "Reference": "This method loads a image which is packed into the blender file.",
    "HebCup": "This method loads the start from the blender file itself."
}
{
    "Origin": "remove select events, do so via {@link #removeEvent(BaseEvent)}.",
    "Reference": "remove select events, do so via {@link #removeEvent(CoreEvent)}.",
    "HebCup": "remove select events, do so via {@link #removeEvent(CoreEvent)}."
}
{
    "Origin": "Writes an embedded resource to a temp file.",
    "Reference": "Writes an embedded resource to a temporary file.",
    "HebCup": "Writes an embedded resource to a tempFile file."
}
{
    "Origin": "Setter for {@link #exposeHeaders}",
    "Reference": "Setter for {@link #allowHeaders}",
    "HebCup": "Setter for {@link#allowHeaders}"
}
{
    "Origin": "Deletes all blob files associated with this coreName.",
    "Reference": "Deletes all blob files associated with this blobName.",
    "HebCup": "Deletes all blob files associated with this blobName."
}
{
    "Origin": "Request password reset\n### Functional Description:   Request an email with a request token for a certain user to reset his / her password.",
    "Reference": "Request password reset\n### Functional Description:   Request an email with a password reset token for a certain user to reset his / her password.",
    "HebCup": "Request password reset\n### Functional Description:   Request an email with a request token for a certain user to reset his / her password."
}
{
    "Origin": "Setting the manifest is not allowed after a call to {@link\n#setMediaSources(MediaSource...)}.",
    "Reference": "Setting the manifest is not allowed after a call to {@link\n#setMediaSource(MediaSource)}.",
    "HebCup": "Setting the manifest is not allowed after a call to {@link #setmediaSource(MediaSource...)}."
}
{
    "Origin": "Returns a {@link ControllerResult} for\nsession to get notification back.",
    "Reference": "Returns a {@link SessionResult} for\nsession to get notification back.",
    "HebCup": "Returns a {@link SessionResult} for session to get notification back."
}
{
    "Origin": "The conversion extracts and combines the {@code LocalDate} and {@code LocalTime}.",
    "Reference": "The conversion extracts and combines {@code LocalDate} and {@code LocalTime}.",
    "HebCup": "The conversion extracts and combines the {@code LocalDate} and {@code LocalTime}."
}
{
    "Origin": "Determine the executor service used to close connections.",
    "Reference": "Determine the executor service used for target channels.",
    "HebCup": "Determine the executor service used to channels connections."
}
{
    "Origin": "Process the potential key signature of the assigned staff.",
    "Reference": "Process the potential key signature of the underlying staff.",
    "HebCup": "Process the potential key 0 of the assigned staff."
}
{
    "Origin": "Reads the TargetPlatform attribute",
    "Reference": "Reads the ModuleTarget attribute",
    "HebCup": "Reads the ModuleTarget attribute"
}
{
    "Origin": "Convenience method for calling {@link #newGenericExecuteException(TemplateCallableModel, boolean, String)}.",
    "Reference": "Convenience method for calling\n{@link #newGenericExecuteException(String, TemplateCallableModel, boolean, Throwable)}",
    "HebCup": "Convenience method for calling {@link #newGenericExecuteException(TemplateCallableModel, boolean, String)}."
}
{
    "Origin": "Generates the jaxp.properties with the specified content.",
    "Reference": "Generates jaxp.properties with the specified content,\ntakes a backup if possible.",
    "HebCup": "Generates the jaxp.properties with the specified content."
}
{
    "Origin": "Invokes\n{@link HTTPSamplerBase#readResponse(SampleResult, InputStream, int)}",
    "Reference": "Invokes\n{@link HTTPSamplerBase#readResponse(SampleResult, InputStream, long)}",
    "HebCup": "Invokes\n{@link HTTPSamplerBase#readResponse(SampleResult, InputStream, int)}"
}
{
    "Origin": "The returned instance will\n{@link Profiles#matches(ActiveProfiles) matches} if any one of the given profile\nstrings match.",
    "Reference": "The returned instance will\n{@link Profiles#matches(Predicate)} match} if any one of the given profile strings\nmatch.",
    "HebCup": "The returned instance will\n{@link Profiles#matches(ActiveProfiles) matches} if any one of the given profile\nstrings match."
}
{
    "Origin": "Is a value with this type less than or equal to the length of array?",
    "Reference": "Is a value with this type less than or equal to the length of sequence?",
    "HebCup": "Is a value with this type less than or equal to the length of sequence?"
}
{
    "Origin": "Note: returned indent is not set to be  to it's direct parent block",
    "Reference": "Note: returned indent is not set to be {@code 'relative'} to it's direct parent block",
    "HebCup": "Note: returned indent is not set to be  to it's direct parent block"
}
{
    "Origin": "Record an {@link ExecutionEvent} for a container or test that started.",
    "Reference": "Record an {@link Event} for a container or test that started.",
    "HebCup": "Record an {@link Event} for a container or test that started."
}
{
    "Origin": "Test ModuleModule with a JAR file containing a .class file in the top\nlevel directory.",
    "Reference": "Test ModuleFinder with a JAR file containing a .class file in the top\nlevel directory.",
    "HebCup": "Test ModuleModule with a JAR file containing a .class file in the top\nlevel directory."
}
{
    "Origin": "This implementation opens a FileInputStream for the underlying file.",
    "Reference": "This implementation opens a NIO file stream for the underlying file.",
    "HebCup": "This implementation opens a FileInputStream for the underlying file."
}
{
    "Origin": "Code snippet for {@link BlobAsyncClientBase#downloadWithResponse(BlobRange, ReliableDownloadOptions,",
    "Reference": "Code snippet for {@link BlobAsyncClientBase#downloadWithResponse(BlobRange, DownloadRetryOptions,",
    "HebCup": "Code snippet for {@link BlobAsyncClientBase#downloadWithResponse (BlobRange , DownloadRetryOptions ,"
}
{
    "Origin": "Generates a file name for the call based on the current date.",
    "Reference": "Generates a file name for the call based on the current date and\nthe names of the peers in the call.",
    "HebCup": "Generates a file name for the call based on the current date."
}
{
    "Origin": "Retrieve all schedules for a given namespace which were updated to status SUSPENDED between startTime and endTime.",
    "Reference": "Retrieve all schedules for a given namespace which were updated to status SUSPENDED between startTimeMillis\nand endTimeMillis.",
    "HebCup": "Retrieve all schedules for a given namespace which were updated to status SUSPENDED between startTimeMillis and endTime."
}
{
    "Origin": "Returns whether or not specified {@link SVGElement} fits this {@link SvgSelector} attribute conditions.",
    "Reference": "Returns whether or not specified {@link SVGElement} matches this {@link SvgSelector} attribute conditions.",
    "HebCup": "hasAttributes whether or not specified {@link SVGElement} fits this {@link SvgSelector} attribute conditions."
}
{
    "Origin": "Can we use {@code",
    "Reference": "Can we use {@code ImmutableSet",
    "HebCup": "< we use {@code"
}
{
    "Origin": "Returns the available edit groups.",
    "Reference": "Returns the available element views.",
    "HebCup": "Returns the available Element Views."
}
{
    "Origin": "Initialize level value of root as 0.",
    "Reference": "Initialize column value of root as 0.",
    "HebCup": "Initialize col value of root as 0."
}
{
    "Origin": "Note that even\n{@link PrefetchConfig#maxFetchCapacityBytes} is 0, at least 1 file is always fetched.",
    "Reference": "Note that even\n{@link FetchConfig#maxFetchCapacityBytes} is 0, at least 1 file is always fetched.",
    "HebCup": "Note that even {@link fetchConfig#maxFetchCapacityBytes} is 0 , at least 1 file is always fetched."
}
{
    "Origin": "Reads a collection of values from an input stream.",
    "Reference": "Reads a sequence of values from an input stream.",
    "HebCup": "Reads a collection of values from an input stream."
}
{
    "Origin": "Return a\n{@link JsonObject} to be appended to the row data.",
    "Reference": "Return a {@link String} to be appended to the row as {@code\ntype} data.",
    "HebCup": "Return a {@link String} to be appended to the row data."
}
{
    "Origin": "Verify that at most {@code maxEntries} per session can be put in the cache",
    "Reference": "Verify that at most {@code maxEntries} per session can be put in the store",
    "HebCup": "Verify that at most {@code maxEntries} per context can be put in the cache"
}
{
    "Origin": "Returns a {@code YearMonth} with the specified epoch-month.",
    "Reference": "Returns a {@code YearMonth} with the specified proleptic-month.",
    "HebCup": "Returns a {@code YearMonth} with the specified PROLEPTIC-month."
}
{
    "Origin": "Free the memory that was allocated with {@link #allocateMemory}.",
    "Reference": "Free the memory that was allocated with {@link #allocateMemory} and update memory allocation tracker accordingly.",
    "HebCup": "free the memory that was allocated with {@link#allocateMemory}."
}
{
    "Origin": "The timestamp for the most recent update to the dialog node.",
    "Reference": "The timestamp for the most recent update to the object.",
    "HebCup": "The timestamp for the most recent update to the dialog node."
}
{
    "Origin": "return ..svc.cluster.local",
    "Reference": "return ..svc",
    "HebCup": "return ..svc"
}
{
    "Origin": "Allows user customization for the {@link OAuth2TokenValidator}",
    "Reference": "The default is {@link OidcIdTokenValidator}.",
    "HebCup": "Allows user customization for the {@link OAuth2TokenValidator}"
}
{
    "Origin": "Returns a {@link TakeReceivePort} that can provide at most {@code count} messages from {@code channel}.",
    "Reference": "Returns a {@link ReceivePort} that can provide at most {@code count} messages from {@code channel}.",
    "HebCup": "Returns a {@link ReceivePort} that can provide at most {@code count} messages from {@code channel}."
}
{
    "Origin": "key in shared preferences which stores whether the passed permission has been asked for",
    "Reference": "key in shared preferences which stores a boolean telling whether the app has already\nasked for the passed permission",
    "HebCup": "key in shared preferences which stores whether the passed PermissionAsked has been asked for"
}
{
    "Origin": "Code snippets for {@link BlobAsyncClient#setHTTPHeadersWithResponse(BlobHTTPHeaders, BlobAccessConditions)}",
    "Reference": "Code snippets for {@link BlobAsyncClient#setHTTPHeadersWithResponse(BlobHttpHeaders, BlobAccessConditions)}",
    "HebCup": "Code snippets for {@link BlobAsyncClient#setHTTPHeadersWithResponse(BlobHttpHeaders, BlobAccessConditions)}"
}
{
    "Origin": "I. e. index 0 of the new TimeSeries will\nbe index startIndex of this TimeSeries.",
    "Reference": "I. e.\nindex 0 of the new TimeSeries will be index startIndex of this",
    "HebCup": "I. e. index 0 of the new Timeget will be index startIndex of this Timeget."
}
{
    "Origin": "Is a value with this type less than the length of any of the arrays?",
    "Reference": "Is a value with this type less than the length of any of the sequences?",
    "HebCup": "Is a value with this type less than the length of any of the sequences?"
}
{
    "Origin": "Set the pattern for the test set files.",
    "Reference": "Set the output directory for this crossfold operation.",
    "HebCup": "Set the pattern for the OutputDir set files."
}
{
    "Origin": "Obtains all registered {@link CameraCaptureCallback} callbacks.",
    "Reference": "Obtains all registered {@link CameraCaptureCallback} callbacks for repeating requests.",
    "HebCup": "Obtains all registered {@link RepeatingCameraCaptureCallback} callbacks."
}
{
    "Origin": "Set type of the Trigger.",
    "Reference": "Set the resource value.",
    "HebCup": "Set type of the SqlTrigger."
}
{
    "Origin": "In case all entries are invalid, the resolver\nwill return as no mapping is found.",
    "Reference": "In case all entries are invalid, the resulting Catalog object\nwill contain no Catalog elements.",
    "HebCup": "In case all entries are invalid, the resolver\nwill return as no mapping is found."
}
{
    "Origin": "The option is a:\n type.",
    "Reference": "The option is a:",
    "HebCup": "The option is a:\n type."
}
{
    "Origin": "This is provided for the event kind:\n - VMUpdate",
    "Reference": "This is provided for the event kind:\n - VMUpdate, VMFlagUpdate",
    "HebCup": "This is provided for the event kind:\n - VMUpdate"
}
{
    "Origin": "Convert to primitive types, returning default value if text is null.",
    "Reference": "Convert to long integer, returning default value if text is inconvertible.",
    "HebCup": "Convert to primitive types, returning default value if text is null."
}
{
    "Origin": "All of the types returned are immutable.",
    "Reference": "All returned values are immutable.",
    "HebCup": "All of the types returned are immutable."
}
{
    "Origin": "BaseFunction} instances, calling {@link BaseFunction#configure(SkylarkSignature)}.",
    "Reference": "BuiltinFunction} instances, calling {@link BuiltinFunction#configure(SkylarkSignature)}.",
    "HebCup": "BuiltinFunction} instances , calling {@link BuiltinFunction#configure (SkylarkSignature)}."
}
{
    "Origin": "Registers view and notifies listeners.",
    "Reference": "Registers view.",
    "HebCup": "View0s view and notifies listeners."
}
{
    "Origin": "Sentry robots cannot move outside this border or\ndo any harm to other robots outside this border.",
    "Reference": "Border border sentry robots cannot move outside this border or\ndo any harm to other robots outside this border.",
    "HebCup": "Sentry robots cannot move outside this Attack or do any harm to other robots outside this border."
}
{
    "Origin": "It is not recommended to expand large trees this way since that might cause huge interface lags.",
    "Reference": "It is not recommended to expand large tree chunks this way since that might cause interface lags.",
    "HebCup": "It is not recommended to expand large trees this way since that might cause huge interface lags."
}
{
    "Origin": "See\n{@link BasicAuthorizationInterceptor} for details.",
    "Reference": "See\n{@link BasicAuthenticationInterceptor} for details.",
    "HebCup": "See {@link basicAuthentication} for details."
}
{
    "Origin": "Modifications are acceptable unless they affect a standard field (such as \"author\") besides the \"keywords\" or \"groups' field.",
    "Reference": "Modifications are acceptable unless they affect a field (such as \"author\") besides the \"keywords\" or \"groups' field.",
    "HebCup": "Modifications are acceptable unless they affect a standard StandardField (such as ``author``) besides the ``keywords`` or ``groups' field."
}
{
    "Origin": "The {@code keyImportOptions} is required and its fields {@link KeyImportOptions#getName() name} and {@link",
    "Reference": "The {@code keyImportOptions} is required and its fields {@link ImportKeyOptions#getName() name} and {@link",
    "HebCup": "The {@code ImportKeyOptions} is required and its fields {@link ImportKeyOptions#getName () name} and {@link"
}
{
    "Origin": "{@code date} - a {@linkplain Date} object representing\n{@linkplain LogRecord#getMillis event time} of the log record.",
    "Reference": "Otherwise, a {@linkplain Date} object\n    representing {@linkplain LogRecord#getMillis event time} of the log\n    record.",
    "HebCup": "{@code formatZonedDateTime} - a {@linkplain formatZonedDateTime} object representing {@linkplain LogRecord#getMillis event time} of the log record."
}
{
    "Origin": "Orchestrates the creation of a terminal pane, then connects to it.",
    "Reference": "Orchestrates the creation and connection of a terminal.",
    "HebCup": "Orchestrates the creation of a terminal pane, then connects to it."
}
{
    "Origin": "This method will just return the ReflectivePropertyAccessor instance if it is unable to build\nsomething more optimal.",
    "Reference": "This method will just\nreturn the ReflectivePropertyAccessor instance if it is unable to build a more\noptimal accessor.",
    "HebCup": "This method will just return the ReflectivePropertyAccessor instance if it is unable to build\nsomething more optimal."
}
{
    "Origin": "If the key already exists, the sensitivity value will be merged.",
    "Reference": "Values with the same market data name and currency will be merged.",
    "HebCup": "If the key already exists, the sensitivity will be merged."
}
{
    "Origin": "Parses longitude out of a given string.",
    "Reference": "Parses longitude out of the given string.",
    "HebCup": "Parses longitude out of a given string."
}
{
    "Origin": "DeploymentConfig that controls it.",
    "Reference": "Deployment that controls it.",
    "HebCup": "DeploymentConfig that controls it."
}
{
    "Origin": "The option will be converted to a",
    "Reference": "The option will be converted to a\n type.",
    "HebCup": "The option will be converted to a"
}
{
    "Origin": "return the Transfer Data of type DataFlavor from InputStream",
    "Reference": "Return the Transfer Data of type DataFlavor from InputStream",
    "HebCup": "return the Transfer Data of type DataFlavor from InputStream"
}
{
    "Origin": "Returns all jar resources indicated to contain native library files (.dll, .so etc.)",
    "Reference": "Returns all resources indicated to contain native library files (.dll, .so, etc.",
    "HebCup": "Returns all jar resources indicated to contain natives library files (.dll , .so etc.)"
}
{
    "Origin": "Locates a packaged or exploded module, returning a {@code ModuleReference}\nto the module.",
    "Reference": "Reads a packaged or exploded module, returning a {@code ModuleReference}\nto the module.",
    "HebCup": "Locates a packaged or exploded module, returning a {@code ModuleReference}\nto the module."
}
{
    "Origin": "Adds an entry for the given {@code ASTNode} to the stack trace.",
    "Reference": "Adds an entry for the given {@code Node} to the stack trace.",
    "HebCup": "Adds an entry for the given {@code Node} to the stack trace."
}
{
    "Origin": "Tests the specifying heap memory with config default value for job manager and task manager.",
    "Reference": "Tests the specifying job manager heap memory with config default value for job manager and task manager.",
    "HebCup": "Tests the specifying Job Manager Heap Memory with config default value for job manager and task manager."
}
{
    "Origin": "Ensure that the service still exists.",
    "Reference": "Ensure that the api still exists.",
    "HebCup": "Ensure that the Api still exists."
}
{
    "Origin": "Sets the available site selector options.",
    "Reference": "Sets the site selector options for the sitemap tab.",
    "HebCup": "Sets the available options."
}
{
    "Origin": "Create an instance of {@link JAXBElement }{@code <}{@link CTMarkupRange }{@code >}}",
    "Reference": "Create an instance of {@link JAXBElement }{@code <}{@link CTMoveToRangeEnd }{@code >}}",
    "HebCup": "Create an instance of {@link JAXBElement} {@code <} {@link CTMoveToRangeEnd} {@code >}}"
}
{
    "Origin": "It retries downloading {@link #maxFetchRetry}\ntimes and throws an exception.",
    "Reference": "It retries downloading {@link FetchConfig#maxFetchRetry}\ntimes and throws an exception.",
    "HebCup": "It retries downloading {@link#getFetchConfig} times and throws an exception."
}
{
    "Origin": "Returns the list of {@link BufferEdge} - fragments on the bounds of the current fragment, which\nshould be potentially merged with fragments from the neighbor buffer fragments.",
    "Reference": "Returns the list of {@link ByteFragmentAtOffset} - fragments on the bounds of the current\nfragment, which should be potentially merged with fragments from the neighbor buffer fragments.",
    "HebCup": "Returns the list of {@link ByteFragmentAtOffset} - fragments on the bounds of the current fragment , which should be potentially merged with fragments from the neighbor buffer fragments."
}
{
    "Origin": "Returns a string representation of this object; useful for testing and debugging.",
    "Reference": "Returns a string representation of this object.",
    "HebCup": "Returns a string representation of this object; useful for testing and debugging."
}
{
    "Origin": "See Immutable Map Static Factory Methods for details.",
    "Reference": "See Unmodifiable Maps for details.",
    "HebCup": "See Unmodifiable Map Static Factory Methods for details."
}
{
    "Origin": "Returns a {@link TextureRegion} based on the so called state time.",
    "Reference": "Returns a frame based on the so called state time.",
    "HebCup": "Returns a {@link T} based on the so called state time."
}
{
    "Origin": "Amazon Redshift returns all parameter groups that match any\ncombination of the specified keys and values.",
    "Reference": "Redshift returns all parameter groups that match any combination of the\nspecified keys and values.",
    "HebCup": "Amazon Redshift returns all parameter groups that match any\ncombination of the specified keys and values."
}
{
    "Origin": "Users with {@link Jenkins#ADMINISTER} may be allowed to do it using {@link #SHOW_TOKEN_TO_ADMINS}.",
    "Reference": "Users with {@link Jenkins#ADMINISTER} may be allowed to do it using {@link #ADMIN_CAN_GENERATE_NEW_TOKENS}.",
    "HebCup": "Users with {@link Jenkins#ADMINISTER} may be allowed to do it using {@link #SHOW_log_TO_ADMINS}."
}
{
    "Origin": "closes the window, i.e., if the parent is not null and implements\nthe WindowListener interface it calls the windowClosing method",
    "Reference": "closes the window, i.e., if the parent is not null and implements the",
    "HebCup": "closes the window, i.e., if the parent is not null and implements\nthe WindowListener interface it calls the windowClosing method"
}
{
    "Origin": "Get the fileContentLanguage property: Specifies the natural languages\nused by this resource.",
    "Reference": "Get the contentLanguage property: Specifies the natural languages\nused by this resource.",
    "HebCup": "Get the ContentLanguage property: Specifies the natural languages used by this resource."
}
{
    "Origin": "Returns the flow table for specified device.",
    "Reference": "Returns the flow table for a specific device.",
    "HebCup": "Returns the Period for specified device."
}
{
    "Origin": "Triggers the failure strategy with the given failure message.",
    "Reference": "Reports a failure with the given message.",
    "HebCup": "Triggers the failure strategy with the given failure message."
}
{
    "Origin": "Returns the first sync d l object in the ordered set where companyId = ?",
    "Reference": "Returns the first sync d l object in the ordered set where repositoryId = ?",
    "HebCup": "Returns the first sync d l object in the ordered set where companyId = ?"
}
{
    "Origin": "Builds an {@link Intent} for stopping all downloads.",
    "Reference": "Builds an {@link Intent} for resuming all downloads.",
    "HebCup": "Builds an {@link Intent} for stopping all downloads."
}
{
    "Origin": "Highlights the value at the given x-value in the given DataSet.",
    "Reference": "Highlights any y-value at the given x-value in the given DataSet.",
    "HebCup": "Highlights the value at the given x-value in the given DataSet."
}
{
    "Origin": "This is the largest positive power\nof B that equal to or less than the given n.",
    "Reference": "This is the largest positive power\nof B that equal to or less than the given n and equal to a mathematical integer.",
    "HebCup": "This is the largest positive power of B that equal to or less than the given x."
}
{
    "Origin": "Close and free all {@link Connection}s from the pool.",
    "Reference": "Closes and free all {@link Connection}s from the pool.",
    "HebCup": "Close and free all {@link Connection}s from the pool."
}
{
    "Origin": "Returns the result of interpreting the object as an instance of 'List Of EInt'.",
    "Reference": "Returns the result of interpreting the object as an instance of 'List Of ELong'.",
    "HebCup": "Returns the result of interpreting the object as an instance of 'List Of ELong'."
}
{
    "Origin": "Creates new {@link Week} in the UTC timezone.",
    "Reference": "Creates new {@link Week}.",
    "HebCup": "Creates new {@link Week} in the UTC timezone."
}
{
    "Origin": "Whether we allow the first parameter to be included as a label in the signature.",
    "Reference": "Whether we skip the first parameter being included as a label in the signature.",
    "HebCup": "Whether we skip the first parameter to be included as a label in the signature."
}
{
    "Origin": "The playback of the prefetched content should start in the later calls of\n{@link SessionPlayer2#play()}.",
    "Reference": "The playback of the prepareed content should start in the later calls of\n{@link SessionPlayer2#play()}.",
    "HebCup": "The playback of the prefetched content should start in the later calls of\n{@link SessionPlayer2#play()}."
}
{
    "Origin": "Gets the X509Certificate out of the X509CertificateHolder and add it to\nthe certificateStore map.",
    "Reference": "Gets the X509Certificate out of the X509CertificateHolder and add it to certificatesMap.",
    "HebCup": "Gets the X509Certificate out of the X509CertificateHolder and add it to the certificatesMap map."
}
{
    "Origin": "Create an array of BeanPropertySqlParameterSource objects populated with data\nfrom the values passed in.",
    "Reference": "Create an array of {@link BeanPropertySqlParameterSource} objects populated with data\nfrom the values passed in.",
    "HebCup": "Create an array of beansPropertySqlParameterSource objects populated with data from the values passed in."
}
{
    "Origin": "Extract the values of given fields/properties from the array's elements under test into a new array composed of",
    "Reference": "Extract the values of given fields/properties from the array's elements under test into a list composed of",
    "HebCup": "Extract the values of given fields/properties from the array's elements under test into a newListAssertInstance array composed of"
}
{
    "Origin": "For simplicity, all sensors are synchronized on Sensor.",
    "Reference": "For simplicity,\nall sensors are synchronized on this object.",
    "HebCup": "For simplicity, all sensors are synchronized on Sensor."
}
{
    "Origin": "Deletes the specified key.",
    "Reference": "Removes the entry with the specified key.",
    "HebCup": "Deletes the specified key."
}
{
    "Origin": "Skip until the given string is matched in the stream, but ignoring\nchars initially escaped by a '\\'.",
    "Reference": "Skip until the given string is matched in the stream, but ignoring\nchars initially escaped by a '\\' and any EL expressions.",
    "HebCup": "Skip until the given string is matched in the stream, but ignoring\nchars initially escaped by a '\\'."
}
{
    "Origin": "Writes this Coord4D's data to a ByteBuf for packet transfer.",
    "Reference": "Writes this Coord4D's data to a PacketBuffer for packet transfer.",
    "HebCup": "Writes this Coord4D's data to a PacketBuffer for packet transfer."
}
{
    "Origin": "Method that returns delete JSON method",
    "Reference": "Method that returns delete batch JSON method",
    "HebCup": "Method that returns Delete Batch Method"
}
{
    "Origin": "By default this is set to {@link ServerCodecConfigurer} with defaults.",
    "Reference": "By default this is set to {@link ServerCodecConfigurer}'s default writers.",
    "HebCup": "By default this is set to {@link List} with defaults."
}
{
    "Origin": "Use another separate queue to store levels as integers.",
    "Reference": "Use another separate queue to store columns as integers.",
    "HebCup": "Use another separate queue to store cols as integers."
}
{
    "Origin": "Returns the valid setting names that aren't {@link Configuration}-only.",
    "Reference": "Returns the valid setting names for a {@link ProcessingConfiguration}.",
    "HebCup": "Returns the valid setting names that aren't {@link Configuration}-only."
}
{
    "Origin": "create producer based on uri {@link Endpoint}",
    "Reference": "create producer based on uri {@link SoroushAction}",
    "HebCup": "create producer based on uri {@link SoroushAction}"
}
{
    "Origin": "The results are undefined if timing\nmethods are called without invoking at least one pair\n{@link #start()} / {@link #stop()} methods.",
    "Reference": "The results are undefined if timing\nmethods are called without invoking at least one pair\n{@link #start()} / {@code #stop()} methods.",
    "HebCup": "The results are undefined if timing\nmethods are called without invoking at least one pair\n{@link #start()} / {@link #stop()} methods."
}
{
    "Origin": "Returns a string representation of this object; useful for testing and debugging.",
    "Reference": "Returns a string representation of this object.",
    "HebCup": "Returns a string representation of this object; useful for testing and debugging."
}
{
    "Origin": "Do nothing if\n{@link BaseConfiguration#nocomment} is set to true.",
    "Reference": "Do nothing if\n{@link BaseOptions#noComment} is set to true.",
    "HebCup": "Do nothing if {@link Baseoptions.no#nocomment} is set to true."
}
{
    "Origin": "Queries this search source for the given queryString.",
    "Reference": "Creates query for the given queryString.",
    "HebCup": "Queries this search source for the given createString."
}
{
    "Origin": "Create a list of Klusters from whatever type is passed in as the prior",
    "Reference": "Create a list of Klusters from whatever Cluster type is passed in as the prior",
    "HebCup": "Create a list of Klusters from whatever type is passed in as the prior"
}
{
    "Origin": "The only other valid location for '}' is inside\na StringLiteral.",
    "Reference": "The only other valid location for '}' is inside a",
    "HebCup": "The only other valid location for '}' is inside\na StringLiteral."
}
{
    "Origin": "New attribute statement.",
    "Reference": "New attribute statement attribute statement.",
    "HebCup": "New attribute statement."
}
{
    "Origin": "The {@link #getProductType() product type} must be {@link EtdProductType#OPTION}\notherwise an exception will be thrown.",
    "Reference": "The {@link #getType() type} must be {@link EtdType#OPTION} otherwise an exception will be thrown.",
    "HebCup": "The {@link#getProductType () product type} must be {@link EtdType#OPTION} otherwise an exception will be thrown."
}
{
    "Origin": "Collapses given row, removing all its subtrees.",
    "Reference": "Collapses given item, removing all its subtrees.",
    "HebCup": "Collapses given Rows , removing all its subtrees."
}
{
    "Origin": "Verifies that put(key) method called on cache in FULL_SYNC mode returns only when\nall affinity nodes for this key finished writing binary metadata.",
    "Reference": "Verifies that put(key) method called from client on cache in FULL_SYNC mode returns only when\nall affinity nodes for this key finished writing binary metadata.",
    "HebCup": "Verifies that put (key) method called on cache in FULL_SYNC mode returns only when all affinity nodes for this AffinityKey finished writing binary metadata."
}
{
    "Origin": "Deletes all responses given by a team.",
    "Reference": "Deletes all feedback response involved a team.",
    "HebCup": "Deletes all responses given by a ResponsesInvolvedTeam."
}
{
    "Origin": "An empty query indicates that the app may prefetch any music.",
    "Reference": "An empty query indicates that the app may prepare any music.",
    "HebCup": "An empty query indicates that the app may Prepare any music."
}
{
    "Origin": "To be executed by monitor process to ask for child process termination",
    "Reference": "To be executed by monitor process to ask for quick child process termination",
    "HebCup": "To be executed by monitor process to ask For Hard child process termination"
}
{
    "Origin": "Returns the Script.",
    "Reference": "Returns the paramConsolescript.",
    "HebCup": "Returns the Consolescript."
}
{
    "Origin": "This function acts as System.arrayCopy() but for ByteBuffers.",
    "Reference": "This function acts as System.arrayCopy() but for ByteBuffers, and operates safely on direct memory.",
    "HebCup": "This function acts as System.copyBytes() but for ByteBuffers."
}
{
    "Origin": "See Immutable Set Static Factory Methods for details.",
    "Reference": "See Unmodifiable Sets for details.",
    "HebCup": "See Unmodifiable Set Static Factory Methods for details."
}
{
    "Origin": "Returns an immutable list of the extensions on this message in tag order.",
    "Reference": "Returns\nan empty byte string if this message has no unknown fields.",
    "HebCup": "Returns an immutable list of the extensions on this message in unknown order."
}
{
    "Origin": "Cleans the views in this schema.",
    "Reference": "Cleans the triggers in this schema.",
    "HebCup": "Cleans the Triggers in this schema."
}
{
    "Origin": "In case of\nfailure the {@link Flux} will error.",
    "Reference": "In case of\nfailure the {@link CosmosContinuablePagedFlux} will error.",
    "HebCup": "In case of\nfailure the {@link Flux} will error."
}
{
    "Origin": "This method will retrieve one ExternalSourceEntryResource based on the ExternalSource for the given",
    "Reference": "This method will retrieve one ExternalSourceEntryResource based on the ExternalSource for the given\nexternalSourceName and with the given entryId",
    "HebCup": "This method will retrieve one ExternalSourceEntryResource based on the ExternalSource for the given"
}
{
    "Origin": "Assert the primary value of the named response header as a date String,\nusing the preferred date format described in RFC 7231.",
    "Reference": "Assert the primary value of the named response header parsed into a date\nusing the preferred date format described in RFC 7231.",
    "HebCup": "assert Not the primary value of the named response header as a date String, using the preferred date format described in RFC 7231."
}
{
    "Origin": "Group: producer",
    "Reference": "Group: consumer",
    "HebCup": "Group: producer"
}
{
    "Origin": "Tests assert that the setting can not be deleted after lock the setting.",
    "Reference": "Tests assert that the setting can not be deleted after set the setting to read-only.",
    "HebCup": "Tests assert that the SettingWithResponse can not be deleted after lock the setting."
}
{
    "Origin": "Adds a control metadata.",
    "Reference": "Adds a packet metadata.",
    "HebCup": "Adds a Packet Metadata."
}
{
    "Origin": "Group: common",
    "Reference": "Group: advanced",
    "HebCup": "Group: common"
}
{
    "Origin": "Map field name to the new name.",
    "Reference": "Maps a field name to its new name.",
    "HebCup": "Map field name to the new name."
}
{
    "Origin": "Returns whether this step deploys to the given region",
    "Reference": "Returns whether this step specifies the given environment",
    "HebCup": "Returns whether this step concerns the given region"
}
{
    "Origin": "Returns new child style ID container.",
    "Reference": "Returns new child style identifier container.",
    "HebCup": "Returns new child style ID container."
}
{
    "Origin": "Tests resilency when D2 device is suspended.",
    "Reference": "Tests resiliency when D2 device is suspended.",
    "HebCup": "Tests resiliency when D2 device is suspended."
}
{
    "Origin": "Creates a fresh authentication session for the given realm and client.",
    "Reference": "Creates a fresh authentication session for the given realm .",
    "HebCup": "Creates a fresh Root Authentication Session for the given realm and client."
}
{
    "Origin": "This factory converts the arbitrary date-time object to an instance of {@code LocalDate}.",
    "Reference": "This factory converts the arbitrary temporal object to an instance of {@code LocalDate}.",
    "HebCup": "This factory converts the arbitrary date-time object to an instance of {@code LocalDate}."
}
{
    "Origin": "Setter for {@link #exposeHeaders}",
    "Reference": "Setter for {@link #allowHeaders}",
    "HebCup": "Setter for {@link#allowHeaders}"
}
{
    "Origin": "Unsubscribe for changes to the children of the parent, which was previously subscribed with\n{@link #subscribe(String, Bundle)}.",
    "Reference": "Unsubscribes for changes to the children of the parent, which was previously subscribed with\n{@link #subscribe(String, LibraryParams)}.",
    "HebCup": "Unsubscribe for changes to the children of the parent, which was previously subscribed with\n{@link #subscribe(String, Bundle)}."
}
{
    "Origin": "Return value of the selected option in the option group",
    "Reference": "Return list of the selected options in the checkbox group",
    "HebCup": "Return Selection of the selected option in the option group"
}
{
    "Origin": "Called when this minion dies (destroyed)",
    "Reference": "Called when this minion dies (destroyAndNotify)",
    "HebCup": "Called when this minion dies (destroyAndNotify)"
}
{
    "Origin": "Gets the extension of a filename.",
    "Reference": "Gets the extension of a fileName.",
    "HebCup": "Gets the extension of a fileName."
}
{
    "Origin": "Registers the given connection manager with this reaper;",
    "Reference": "Register the connection manager with this reaper.",
    "HebCup": "Registers the given manager with this reaper;"
}
{
    "Origin": "Annotate for coreference (statistical)",
    "Reference": "Annotate for coreference",
    "HebCup": "Annotate for coreference (statistical)"
}
{
    "Origin": "Test queries to notes table including selectionArgs",
    "Reference": "Test queries to notes table using direct SQL URI",
    "HebCup": "Test queries to notes table including SqlQuery"
}
{
    "Origin": "The {@link Flux} will\ncontain one or several feed response of the obtained users.",
    "Reference": "The {@link CosmosContinuablePagedFlux} will\ncontain one or several feed response of the obtained users.",
    "HebCup": "The {@link Flux} will contain one or several Cosmos Continuable Paged Flux of the obtained users."
}
{
    "Origin": "Checks if the predicates are successful for the specified item.",
    "Reference": "Checks if the specified item matches the predicates.",
    "HebCup": "Checks if the predicates are successful for the specified item."
}
{
    "Origin": "Call this once, to enable or disable DEBUG logs.",
    "Reference": "Call this once, to enable or disable logs.",
    "HebCup": "Call this once, to enable or disable DEBUG logs."
}
{
    "Origin": "Generates code sample for using {@link ConfigurationClient#addSetting(String, String, String)}",
    "Reference": "Generates code sample for using {@link ConfigurationClient#addConfigurationSetting(String, String, String)}",
    "HebCup": "Generates code sample for using {@link ConfigurationClient#addConfigurationSetting (String , String , String)}"
}
{
    "Origin": "Converts AMF value to something human-readable.",
    "Reference": "Converts AMF value to something human-readable with indentStr \" \" and\nCRLF newlines",
    "HebCup": "Converts AMF value to something human-readable."
}
{
    "Origin": "The first check runs only if\n{@link ExtractorParameters#getExtractIndependently()} is false.",
    "Reference": "The second check runs only if\n{@link ExtractorParameters#getExtractIndependently()} is false.",
    "HebCup": "The first check runs only if\n{@link ExtractorParameters#getExtractIndependently()} is false."
}
{
    "Origin": "Any of the\ninput words can also be the answer if one is the parent or grandparent of\nother",
    "Reference": "Any of the\ninput words can also be the answer if one is the parent or grandparent of\nother, or if the input words are the same.",
    "HebCup": "Any of the input words can also be the answer if one is the Parents or grandparent of other"
}
{
    "Origin": "Initializes this permission set with the current user and the user\nto whom the permissions in this set are granted.",
    "Reference": "Initializes this permission set with the current user and the entity\nto whom the permissions in this set are granted.",
    "HebCup": "Initializes this permission set with the current Permissions and the Permissions to whom the permissions in this set are granted."
}
{
    "Origin": "Return the {@link HttpHeaders} backing header related accessor methods.",
    "Reference": "Return the {@link HttpHeaders} backing header related accessor methods,\nallowing for populating selected header entries.",
    "HebCup": "Return the {@link HttpHeaders} backing header related accessor methods."
}
{
    "Origin": "If {@link aboveId} is blank or not found,\n{@link id} will be placed last in the list.",
    "Reference": "If {@code aboveId} isn't\nfound, {@code id} will be placed last in the list.",
    "HebCup": "If {@link aboveId} is blank or not found, {@link id} will be placed last in the collection."
}
{
    "Origin": "Inspect all measure voices for those that start in first slot and exhibit a\nduration which is exactly 3/2 times the measure expected duration.",
    "Reference": "Inspect all measure voices for those that start in first slot and exhibit a\nduration (without any implicit tuplet) which is exactly 3/2 times the measure\nexpected duration.",
    "HebCup": "Inspect all measure voices for those that start in first slot and exhibit a duration which ZERO exactly 3/2 times the measure expected duration."
}
{
    "Origin": "Allows fluent conversion to another type via a function callback.",
    "Reference": "This allows fluent conversion to any other type.",
    "HebCup": "Allows fluent conversion to another type via a CompletableConverter callback."
}
{
    "Origin": "Writes an entry to the cache.",
    "Reference": "Writes a compilation unit to the disk cache.",
    "HebCup": "Writes an unit to the cache."
}
{
    "Origin": "The label for the C API.",
    "Reference": "The slug for the C API.",
    "HebCup": "The Slug for the C API."
}
{
    "Origin": "Implements Operator.MULT.",
    "Reference": "Implements 'x * y'.",
    "HebCup": "Implements TokenKind.MULT."
}
{
    "Origin": "Returns the the number of editor columns if it was set by {@link #setColumns(Integer)} or in the screen XML.",
    "Reference": "Returns the columns mode which defines the number of columns if it was set by {@link #setColumnsMode(ColumnsMode)}\nor in the screen XML.",
    "HebCup": "Returns the the number of editor columns if it was set by {@link #setColumns(ColumnsMode)} or in the screen XML."
}
{
    "Origin": "FederatedAddGraphHandler didn't set the adding user.",
    "Reference": "FederatedAddStoreHandler didn't set the adding user.",
    "HebCup": "FederatedAddStoreHandler didn't set the adding user."
}
{
    "Origin": "This will open a new one Session if it hasn't been opened before",
    "Reference": "This will open a new graph or retrieve one from shared cache.",
    "HebCup": "This will open a new one Session if it hasn't been opened before"
}
{
    "Origin": "This can be called before we get the full set of applications, we should merge the results\nonly in onAppsUpdated() which is idempotent.",
    "Reference": "This can be called before we get the full set of applications, we should merge the results\nonly in onPredictionsUpdated() which is idempotent.",
    "HebCup": "This can be called before we get the full set of applications , we should merge the results only in onPredictionsUpdated () which is idempotent."
}
{
    "Origin": "Returns a new {@link Partitioner.OnVirtualNodes} based on the partition key token.",
    "Reference": "Returns a new {@link Partitioner.OnVirtualNode} based on the partition key token.",
    "HebCup": "Returns a new {@link Partitioner.OnVirtualNode} based on the partition key token."
}
{
    "Origin": "Tests the {@link InodeTree#createPath(RpcContext, LockedInodePath, CreatePathOptions)}\nmethod for creating directories.",
    "Reference": "Tests the {@link InodeTree#createPath(RpcContext, LockedInodePath, CreatePathContext)}\nmethod for creating directories.",
    "HebCup": "Tests the {@link InodeTree#createPath(RpcContext, LockedInodePath, CreatePathContext)} method for creating directories."
}
{
    "Origin": "or throws a {@link com.liferay.opensocial.NoSuchOAuthTokenException} if it could not be found.",
    "Reference": "or throws a {@link NoSuchOAuthTokenException} if it could not be found.",
    "HebCup": "or throws a {@link com.liferay.opensocial.NoSuchOAuthTokenException} if it could not be found."
}
{
    "Origin": "Note that a MutableLong isn't and can't be equal to an Long.",
    "Reference": "Note that a MutableInteger isn't and can't be equal to an Integer.",
    "HebCup": "Note that a MutableLong isn't and can't be equal to an Long."
}
{
    "Origin": "Parses the timestamp from the collection list and returns them in reverse sorted order (most recent 1st)",
    "Reference": "Result is returned them in sorted order (most recent 1st)",
    "HebCup": "Parses the timestamp from the collection list and returns them in reverse sorted order (most recent 1st)"
}
{
    "Origin": "Sets the output.",
    "Reference": "Set the output.",
    "HebCup": "Sets the output."
}
{
    "Origin": "or throws a {@link com.liferay.sync.NoSuchDLObjectException} if it could not be found.",
    "Reference": "or throws a {@link NoSuchDLObjectException} if it could not be found.",
    "HebCup": "or throws a {@link com.liferay.sync.NoSuchDLObjectException} if it could not be found."
}
{
    "Origin": "Tests that when an etag is passed to delete it will only delete if the current representation of the setting has the etag.",
    "Reference": "Tests that when an ETag is passed to delete it will only delete if the current representation of the setting has the ETag.",
    "HebCup": "Tests that when an etag is passed to deleteConfiguration it will only deleteConfiguration if the current representation of the setting has the etag."
}
{
    "Origin": "Negative test, when a CORS request arrives, with a null origin.",
    "Reference": "Negative test, when a CORS request arrives, with no origin header.",
    "HebCup": "Negative test, when a CORS request arrives, with a No Origin."
}
{
    "Origin": "The returned set\nis a view of the keys in this object.",
    "Reference": "Get a set of keys of the JSONObject.",
    "HebCup": "The returned set\nis a view of the keys in this object."
}
{
    "Origin": "Do nothing if\n{@link BaseConfiguration#nocomment} is set to true.",
    "Reference": "Do nothing if\n{@link BaseOptions#noComment} is set to true.",
    "HebCup": "Do nothing if {@link Baseoptions.no#nocomment} is set to true."
}
{
    "Origin": "Attaches an application created from a WADL description document\navailable at a given URI.",
    "Reference": "Attaches an application created from a Swagger description document\navailable at a given URI.",
    "HebCup": "Attaches an application created from a swagger description document available at a given URI."
}
{
    "Origin": "Parses {@link Basic1DMatrix} from the given Matrix Market string.",
    "Reference": "Parses {@link Basic1DMatrix} from the given Matrix Market.",
    "HebCup": "Parses {@link Basic1DMatrix} from the given Matrix Market InputStream."
}
{
    "Origin": "Tests that require additional {@link PolyglotEngine} global symbols should override this,\nwhich will be called just prior to the evaluation.",
    "Reference": "Tests that require additional {@link Engine} global symbols should override this, which will\nbe called just prior to the evaluation.",
    "HebCup": "Tests that require additional {@link org.graalvm} global symbols should override this , which will be called just prior to the evaluation."
}
{
    "Origin": "This is especially important for parameters that are\ncritical when creating the default database for a DB cluster, such as\nthe character set for the default database defined by the\ncharacter_set_database parameter.",
    "Reference": "This is especially important\nfor parameters that are critical when creating the default database for a\nDB cluster, such as the character set for the default database defined by\nthe  parameter.",
    "HebCup": "This is especially important for parameters that are\ncritical when creating the default database for a DB cluster, such as\nthe character set for the default database defined by the\ncharacter_set_database parameter."
}
{
    "Origin": "We do not affect the {@link Listener} here because it would be redundant to\nhandling already done in {@link LimiterReleasingCallback}.",
    "Reference": "We do not affect the {@link Listener} here because it would be redundant to\nhandling already done in callbacks.",
    "HebCup": "We do not affect the {@link Listener} here because it would be redundant to handling already done in {@link LimiterReleasingthis}."
}
{
    "Origin": "Set the serverBindings",
    "Reference": "Set the theServerBindings",
    "HebCup": "Set the theServerBindings"
}
{
    "Origin": "Generates the jaxp.properties with the specified content.",
    "Reference": "Generates jaxp.properties with the specified content,\ntakes a backup if possible.",
    "HebCup": "Generates the jaxp.properties with the specified content."
}
{
    "Origin": "Sets the elementOptionBar.",
    "Reference": "Sets the element option bar.",
    "HebCup": "Sets the elementOptionBar."
}
{
    "Origin": "Aggregate given void publishers into a new {@literal Mono} that will be\nfulfilled when all of the given {@literal sources} have been fulfilled.",
    "Reference": "Aggregate given publishers into a new {@literal Mono} that will be\nfulfilled when all of the given {@literal sources} have been fulfilled.",
    "HebCup": "Aggregate given ? publishers into a new {@literal Mono} that will be fulfilled when all of the given {@literal sources} have been fulfilled."
}
{
    "Origin": "Obtains an instance from the specified unique name.",
    "Reference": "Obtains an instance from the specified name.",
    "HebCup": "Obtains an instance from the specified name."
}
{
    "Origin": "Creates a \"delta clone\" of this Map, where only the differences are\nrepresented.",
    "Reference": "Creates a \"delta copy\" of this Map, where only the differences\nfrom the original Map are represented.",
    "HebCup": "Creates a ``delta Copy`` of this Map, where only the differences are represented."
}
{
    "Origin": "This will only consider it a match if the\na new segment (following slash) or the end of the path immediately follows {@code segments}.",
    "Reference": "This will only consider it a match if the\na new segment (following slash) or the end of the path immediately follows {@code pathSegments}.",
    "HebCup": "This will only consider it a match if the a new segment (following slash) or the end of the path immediately follows {@code pathSegments}."
}
{
    "Origin": "So if you\nwant to be sure that your {@link IClassCache} is handled in all situations then call this\nmethod twice with your implementations.",
    "Reference": "So if you\nwant to be sure that your {@link IGetAndSetLocator} is handled in all situations then call this\nmethod twice with your implementations.",
    "HebCup": "So if you want to be sure that your {@link IgetAndSetter} is handled in all situations then call this method twice with your implementations."
}
{
    "Origin": "Returns true if the button's text should be bold.",
    "Reference": "Returns true if the text of the %type% should be bold.",
    "HebCup": "Returns true if the %type%'s text should be bold."
}
{
    "Origin": "see {@link BlockFlowerPot#getActualState(IBlockState, IBlockAccess, BlockPos)}",
    "Reference": "see {@link FlowerPotBlock#getActualState(BlockState, IWorldReader, BlockPos)}",
    "HebCup": "see {@link BlockFlowerPot#getActualState (IBlockState , IBlockReader , BlockPos)}"
}
{
    "Origin": "Test method for {@link com.hazelcast.config.GroupConfig#getName()}.",
    "Reference": "Test method for {@link com.hazelcast.config.Config#getClusterName()}.",
    "HebCup": "Test method for {@link com.hazelcast.config.Config#getName()}."
}
{
    "Origin": "Gets the units of this drug order",
    "Reference": "Gets the doseUnits of this drug order",
    "HebCup": "Gets the doseUnits of this drug order"
}
{
    "Origin": "Get the iterable of all providers (custom and default) registered for the given service provider contract\nin the underlying {@link ServiceLocator HK2 service locator} container.",
    "Reference": "Get the iterable of all providers (custom and default) registered for the given service provider contract\nin the underlying {@link InstanceManager instance manager} container.",
    "HebCup": "Get the iterable of all providers (custom and default) registered for the given service provider contract in the underlying {@link InstanceManager HK2 service locator} container."
}
{
    "Origin": "Set Is Reversed with original Accounting.",
    "Reference": "Set Document Type for Payment.",
    "HebCup": "set C _ Doc Type Accounting."
}
{
    "Origin": "Implements Operator.PERCENT.",
    "Reference": "Implements 'x % y'.",
    "HebCup": "Implements TokenKind.PERCENT."
}
{
    "Origin": "This signature is the one specified in the\nconstructor (see {@link #SignatureReader(String) SignatureReader}).",
    "Reference": "This signature is\nthe one specified in the constructor (see {@link #SignatureReader}).",
    "HebCup": "This signatureValue is the one specified in the constructor (see {@link#SignatureReader (String) SignatureReader})."
}
{
    "Origin": "Provide custom {@link LayoutHandler}.",
    "Reference": "Provide custom {@link LithoHandler}.",
    "HebCup": "Provide custom {@link LithoHandler}."
}
{
    "Origin": "Returns a string representation of this object; useful for testing and debugging.",
    "Reference": "Returns a string representation of this object.",
    "HebCup": "Returns a string representation of this object; useful for testing and debugging."
}
{
    "Origin": "Triggers a stack trace sample for a operator to gather the back pressure\nstatistics.",
    "Reference": "Triggers a back pressure request for a vertex to gather the back pressure\nstatistics.",
    "HebCup": "Triggers a Back Pressure Request for a operator to gather the back pressure statistics."
}
{
    "Origin": "The {@link RequestScope.Instance\nscope instance} is NOT released by the method (this must be done explicitly).",
    "Reference": "The {@link RequestContext\nscope context} is NOT released by the method (this must be done explicitly).",
    "HebCup": "The {@link RequestScope.Instance context} is NOT released by the method (this must be done explicitly)."
}
{
    "Origin": "Returns a string representation of this object; useful for testing and debugging.",
    "Reference": "Returns a string representation of this object.",
    "HebCup": "Returns a string representation of this object; useful for testing and debugging."
}
{
    "Origin": "Generates a code sample for using {@link ShareDirectoryClient#createSubDirectoryWithResponse(String,",
    "Reference": "Generates a code sample for using {@link ShareDirectoryClient#createSubdirectoryWithResponse(String,",
    "HebCup": "Generates a code sample for using {@link ShareDirectoryClient#createSubdirectoryWithResponse (String ,"
}
{
    "Origin": "Returns a string representation of this object; useful for testing and debugging.",
    "Reference": "Returns a string representation of this object.",
    "HebCup": "Returns a string representation of this object; useful for testing and debugging."
}
{
    "Origin": "Sets new reference to partition counters page (logical cache sizes).",
    "Reference": "Sets new reference to page with logical cache sizes in cache group.",
    "HebCup": "Sets new reference to partition Sizes Page (logical cache sizes)."
}
{
    "Origin": "Final, because its called by a constructor.",
    "Reference": "Note: final, because its called by a constructor.",
    "HebCup": "Final, because its called by a constructor."
}
{
    "Origin": "Provided {@link Painter} can be {@code null} in which case current {@link Painter} will be uninstalled.",
    "Reference": "Provided {@link Painter} can be {@code null} in which case current {@link Painter} will simply be uninstalled.",
    "HebCup": "Provided {@link Painter} can be {@code null} in which case current {@link Painter} will be uninstalled."
}
{
    "Origin": "Convenience routine to return the specified error's\nunderlying Exception, or null if it isn't one.",
    "Reference": "Returns the specified error's underlying Exception, or null if it isn't one.",
    "HebCup": "Convenience routine to return the specified error's\nunderlying Exception, or null if it isn't one."
}
{
    "Origin": "See {@code EquivalenceMethod} for more info.",
    "Reference": "See {@code EqMethod} for more info.",
    "HebCup": "See {@code EqMethod} for more info."
}
{
    "Origin": "Return a {@link Bucket} that can be used to provide local storage under\nthe given {@code namespace}.",
    "Reference": "Return a {@link Bucket} that can be used to provide persistent local\nstorage under the given {@code namespace}.",
    "HebCup": "Return a {@link Bucket} that can be used to provide local storage under\nthe given {@code namespace}."
}
{
    "Origin": "Get service locator.",
    "Reference": "Get instance manager.",
    "HebCup": "get Instance Manager."
}
{
    "Origin": "Caller should ensure {@code dep} not running.",
    "Reference": "Caller should ensure dep not running.",
    "HebCup": "Caller should ensure {@code dep} not running."
}
{
    "Origin": "GrantAuthoritesMapperProcess.",
    "Reference": "GrantAuthoritiesMapperProcess.",
    "HebCup": "grantAuthoritiesMapperProcess."
}
{
    "Origin": "Returns the location of the output directory from the configuration or the temporary directory if not defined.",
    "Reference": "Returns the location of the directory from the configuration or the temporary directory if not defined.",
    "HebCup": "Returns the location of the directory from the configuration or the temporary directory if not defined."
}
{
    "Origin": "Returns the Java method name for the given method descriptor.",
    "Reference": "Returns the service name for the given service.",
    "HebCup": "Returns the Java method name for the given service Descriptor."
}
{
    "Origin": "Sets the disambiguation.",
    "Reference": "Set the disambiguation.",
    "HebCup": "Sets the disambiguation."
}
{
    "Origin": "Sets the {@link SharedKeyCredential} used to authorize requests sent to the service.",
    "Reference": "Sets the {@link StorageSharedKeyCredential} used to authorize requests sent to the service.",
    "HebCup": "Sets the {@link StorageSharedKeyCredential} used to authorize requests sent to the service."
}
{
    "Origin": "Indicates if the connection is ready to handle new messages.",
    "Reference": "Indicates if the connection is available to handle new messages.",
    "HebCup": "Indicates if the connection is Available to handle new messages."
}
{
    "Origin": "Gets the border colour of the element, as a HTML RGB hex string (e.g.",
    "Reference": "Gets the stroke colour of the element, as a HTML RGB hex string (e.g.",
    "HebCup": "Gets the Stroke colour of the element , as a HTML RGB hex string (e.g."
}
{
    "Origin": "Register an error channel in the given BeanDefinitionRegistry.",
    "Reference": "Register an error channel in the application context.",
    "HebCup": "Register an error channel in the given BeanDefinitionthis.registry."
}
{
    "Origin": "DefaultBundleCache\n      documentation for more details its configuration options.",
    "Reference": "See the DefaultBundleCache\ndocumentation for more details its configuration options.",
    "HebCup": "DefaultBundleCache\n      documentation for more details its configuration options."
}
{
    "Origin": "Full-Control Mode in Your Organization in the AWS Organizations User Guide.",
    "Reference": "For more information, see Enabling All Features in Your Organization in the AWS Organizations User Guide.",
    "HebCup": "All-Control Mode in Your Organization in the AWS Organizations User Guide."
}
{
    "Origin": "ClosePullRequest closes pull request if rebase mode.",
    "Reference": "ClosePullRequest can close pull request if rebase mode.",
    "HebCup": "ClosePullRequest closes pull request if rebase mode."
}
{
    "Origin": "Set Type.",
    "Reference": "Set Art.",
    "HebCup": "Set Type."
}
{
    "Origin": "Indicates if an expression has the specified compiler property.",
    "Reference": "Indicates if an expression has one of the specified compiler properties.",
    "HebCup": "Indicates if an expression has the specified compiler property."
}
{
    "Origin": "Can be used to register a {@link IBlockState} as a valid soil.",
    "Reference": "Can be used to register a {@link BlockState} as a valid soil.",
    "HebCup": "Can be used to register a {@link BlockState} as a valid soil."
}
{
    "Origin": "Returns the pivot of a view on a specific axis, when overshooting at the start.",
    "Reference": "Returns the pivot of an item on a specific axis, when overshooting at the start.",
    "HebCup": "Returns the pivot of a AbstractItem on a specific axis , when overshooting at the start."
}
{
    "Origin": "Returns a copy of this qualifier with array-offset pairs where in the original the offset\ncontains an access of an array length in arrays.",
    "Reference": "Returns a copy of this qualifier with sequence-offset pairs where in the original the\noffset contains an access of an sequence length in {@code sequences}.",
    "HebCup": "Returns a copy of this qualifier with array-offset pairs where in the original the offset contains an access of an Sequence Length in arrays."
}
{
    "Origin": "An empty SortedDocValues which returns {@link SortedSetDocValues#NO_MORE_ORDS} for every document",
    "Reference": "An empty SortedDocValues which returns {@link BytesRef#EMPTY_BYTES} for every document",
    "HebCup": "An Bytes RefDocValues which returns {@link SortedSetDocValues#NO_MORE_ORDS} for every document"
}
{
    "Origin": "Logs a {@link TimeSeriesPoint} in WARNING level.",
    "Reference": "Logs a {@link DiagnosticContext.TimeSeriesPoint} in WARNING level.",
    "HebCup": "Logs a {@link >} in WARNING level."
}
{
    "Origin": "Wait for this task to meet the expected number of commits as defined by {@code\nexpectedCommits}.",
    "Reference": "Wait up to the specified timeout for this task to meet the expected number of commits as\ndefined by {@code expectedCommits}.",
    "HebCup": "Wait for this task to meet the expected number of commits as defined by {@code\nexpectedCommits}."
}
{
    "Origin": "Access Control Using AWS Identity and Access Management (IAM) \n.",
    "Reference": "For more information, see Access Control Using AWS Identity and Access Management (IAM).",
    "HebCup": "Access Control Using AWS Identity and Access Management (IAM) \n."
}
{
    "Origin": "The amount of real time, in nanoseconds, is given by the expression\n{@code 1000000 * timeout + nanos}.",
    "Reference": "The amount of real time, in nanoseconds, is given by the expression\n{@code 1000000 * timeoutMillis + nanos}.",
    "HebCup": "The amount of real time , in nanoseconds , is given by the expression {@code 1000000 * timeoutMillis + nanos}."
}
{
    "Origin": "Returns true if the button's text should be italic.",
    "Reference": "Returns true if the text of the %type% should be italic.",
    "HebCup": "Returns true if the %type%'s text should be italic."
}
{
    "Origin": "Returns the global index.",
    "Reference": "Returns the server log reader.",
    "HebCup": "Returns the reader."
}
{
    "Origin": "Returns {@code true} if the given identifier is a legal Java identifier.",
    "Reference": "Returns {@code true} if the given name is a legal binary name.",
    "HebCup": "Returns {@code true} if the given identifier is a legal Java identifier."
}
{
    "Origin": "Returns the first sync d l object in the ordered set where companyId = ?",
    "Reference": "Returns the first sync d l object in the ordered set where repositoryId = ?",
    "HebCup": "Returns the first sync d l object in the ordered set where companyId = ?"
}
{
    "Origin": "Sets the storeGenericResponses.",
    "Reference": "Set the storeGenericResponses.",
    "HebCup": "Sets the storeGenericResponses."
}
{
    "Origin": "Adds a message to the console without new line at the end",
    "Reference": "Adds a message to the console",
    "HebCup": "Adds a message to the console without new line at the end"
}
{
    "Origin": "This method obtains the extension as the textual part of the filename\nafter the last dot.",
    "Reference": "This method obtains the extension as the textual part of the fileName\nafter the last dot.",
    "HebCup": "This method obtains the extension as the textual part of the fileName after the last dot."
}
{
    "Origin": "Method to add looseConfigs in expanded (non-archive) format",
    "Reference": "Method to add looseConfigs in both archive and expanded format",
    "HebCup": "Method to add looseConfigs in expanded (non-archive) format"
}
{
    "Origin": "Get the {@link edu.stanford.nlp.international.Language}\nobject corresponding to the given language string.",
    "Reference": "Get the {@link edu.stanford.nlp.international.Languages.Language}\nobject corresponding to the given language string.",
    "HebCup": "Get the {@link edu.stanford.nlp.international.Language} object corresponding to the given Languages.Language string."
}
{
    "Origin": "Bind the {@link ModuleHandlerCallback} service - called from DS.",
    "Reference": "Bind the {@link RuleManager} service - called from DS.",
    "HebCup": "Bind the {@link RuleManager} service - called from DS."
}
{
    "Origin": "Gets the package name from the canonical name.",
    "Reference": "Gets the package name from the class name.",
    "HebCup": "Gets the package name from the name."
}
{
    "Origin": "Returns a builder for a QueryParameterValue object with given value.",
    "Reference": "Returns a builder for the {@code QueryParameterValue} object.",
    "HebCup": "Returns a AutoValue_QueryParameterValue.Builder for a QueryParameterValue object with given value."
}
{
    "Origin": "Returns the j i r a action with the primary key or throws a {@link com.liferay.socialcoding.NoSuchJIRAActionException} if it could not be found.",
    "Reference": "Returns the j i r a action with the primary key or throws a {@link NoSuchJIRAActionException} if it could not be found.",
    "HebCup": "Returns the j i r a action with the primary key or throws a {@link com.liferay.socialcoding.NoSuchJIRAActionException} if it could not be found."
}
{
    "Origin": "Returns a string representation of this object; useful for testing and debugging.",
    "Reference": "Returns a string representation of this object.",
    "HebCup": "Returns a * representation of this object; useful for testing and debugging."
}
{
    "Origin": "Create an instance of {@link JAXBElement }{@code <}{@link CTMarkupRange }{@code >}}",
    "Reference": "Create an instance of {@link JAXBElement }{@code <}{@link CTMoveFromRangeEnd }{@code >}}",
    "HebCup": "Create an instance of {@link JAXBElement} {@code <} {@link CTMoveFromRangeEnd} {@code >}}"
}
{
    "Origin": "Returns the current state of the parameters as an array by parameter index.",
    "Reference": "Returns the current state of the parameters as a map keyed by parameter name.",
    "HebCup": "Returns the current state of the arguments as an array by parameter index."
}
{
    "Origin": "Notify this session that sync completed/failed with given {@code NodePair}.",
    "Reference": "Notify this session that sync completed/failed with given {@code SyncNodePair}.",
    "HebCup": "Notify this session that sync completed/failed with given {@code SyncNodePair}."
}
{
    "Origin": "Shared actions are tolerated.",
    "Reference": "Shared actions are not allowed.",
    "HebCup": "Shared actions are tolerated."
}
{
    "Origin": "{@code inetAddressList} will be non-null and {@code throwable} will be null in the case of a\nsuccessful DNS lookup.",
    "Reference": "{@code inetAddressList} will be non-null and {@code ioe} will be null in the case of a\nsuccessful DNS lookup.",
    "HebCup": "{@code inetAddressList} will be non-null and {@code IOException} will be null in the case of a successful DNS lookup."
}
{
    "Origin": "This method calls {@link #createRecordReader(Map, InputStream, ComponentLog)} with Attributes of the specified FlowFile.",
    "Reference": "This method calls {@link #createRecordReader(Map, InputStream, long, ComponentLog)} with Attributes of the specified FlowFile.",
    "HebCup": "This method calls {@link #createRecordReader(Map, InputStream, ComponentLog)} with Attributes of the specified FlowFile."
}
{
    "Origin": "Map method name to the new name.",
    "Reference": "Maps a method name to its new name.",
    "HebCup": "Map method name to the new name."
}
{
    "Origin": "Returns a string representation of this object; useful for testing and debugging.",
    "Reference": "Returns a string representation of this object.",
    "HebCup": "Returns a string representation of this object; useful for testing and debugging."
}
{
    "Origin": "Inverse of {@link #bsonJackson(String)}",
    "Reference": "Inverse of {@link #bsonThenJackson(String)}",
    "HebCup": "Inverse of {@link #bsonjacksonThen (String)}"
}
{
    "Origin": "This operation will ignore blanks.",
    "Reference": "This operation will produce null for blanks.",
    "HebCup": "This operation will ignore blanks."
}
{
    "Origin": "Returns an array containing all of the instructions in this list.",
    "Reference": "Returns an array containing all the instructions in this list.",
    "HebCup": "Returns an array containing all of the instructions in this list."
}
{
    "Origin": "list of SummaryListener instances",
    "Reference": "List of SummaryListener instances",
    "HebCup": "list of SummaryListener instances"
}
{
    "Origin": "The simplest way to create a PII token.",
    "Reference": "Create a PII token asynchronously.",
    "HebCup": "The simplest way to create a PII token."
}
{
    "Origin": "Gets the id of the underlying metric.",
    "Reference": "Gets the name of the underlying metric.",
    "HebCup": "Gets the String of the underlying metric."
}
{
    "Origin": "Encode a PI action group to a action profile group.",
    "Reference": "Encode a PI action profile group to a action profile group.",
    "HebCup": "Encode a Pi Action Profile Group to a action profile group."
}
{
    "Origin": "This is because the members (and action parameters) all reference the {@link DomainClass}s, so these need\n    to exist first.",
    "Reference": "This is because the members (and action parameters) all reference the {@link DomainClassDto}s, so these need\n    to exist first.",
    "HebCup": "This is because the members (and action parameters) all reference the {@link DomainClassDto}s , so these need to exist first."
}
{
    "Origin": "Tests of \"jar:file:\" based URIs",
    "Reference": "Tests of URIs last segment, including \"jar:file:\" based URIs.",
    "HebCup": "Tests of ``uri:file:`` based URIs"
}
{
    "Origin": "{@codesnippet com.azure.storage.queue.QueueAsyncClient.setAccessPolicy#List}",
    "Reference": "{@codesnippet com.azure.storage.queue.QueueAsyncClient.setAccessPolicy#Iterable}",
    "HebCup": "{@codesnippet com.azure.storage.queue.QueueAsyncClient.setAccessPolicy#Iterable}"
}
{
    "Origin": "Logs a {@link TimeSeriesPoint} in INFO level.",
    "Reference": "Logs a {@link DiagnosticContext.TimeSeriesPoint} in INFO level.",
    "HebCup": "Logs a {@link >} in INFO level."
}
{
    "Origin": "Returns a string representation of this object; useful for testing and debugging.",
    "Reference": "Returns a string representation of this object.",
    "HebCup": "Returns a string representation of this object; useful for testing and debugging."
}
{
    "Origin": "Returns a byte-array representation of a {@link BigInteger}.",
    "Reference": "Returns a byte-array representation of a {@code {@link BigInteger}}.",
    "HebCup": "Returns a byte-array representation of a {@link BigInteger}."
}
{
    "Origin": "DocValues query) will return {@link Matches#MATCH_WITH_NO_TERMS}",
    "Reference": "DocValues query) will return {@link MatchesUtils#MATCH_WITH_NO_TERMS}",
    "HebCup": "DocValues query) will return {@link MatchesUtils#MATCH_WITH_NO_TERMS}"
}
{
    "Origin": "Should execute action on node by specific node in request.",
    "Reference": "Should execute action on nodes by specific node ID's in request.",
    "HebCup": "Should execute action on Nodes by specific Nodes in request."
}
{
    "Origin": "Returns a string representation of this object; useful for testing and debugging.",
    "Reference": "Returns a string representation of this object.",
    "HebCup": "Returns a string representation of this object; useful for testing and debugging."
}
{
    "Origin": "Set the conflict resolution policy for the container.",
    "Reference": "Set the resource value.",
    "HebCup": "Set the Sql Container Get Properties Resource for the container."
}
{
    "Origin": "Getter for {@link #allowOnlyRequestedHeader}",
    "Reference": "Getter for {@link #allowAllRequestedHeaders}",
    "HebCup": "Getter for {@link#allowAllRequestedHeaders}"
}
{
    "Origin": "Create an instance of {@link JAXBElement }{@code <}{@link CTMarkupRange }{@code >}}",
    "Reference": "Create an instance of {@link JAXBElement }{@code <}{@link CTMoveToRangeEnd }{@code >}}",
    "HebCup": "Create an instance of {@link JAXBElement} {@code <} {@link CTMoveToRangeEnd} {@code >}}"
}
{
    "Origin": "Static Mary header writer",
    "Reference": "Mary header writer",
    "HebCup": "Static Mary header writer"
}
{
    "Origin": "KeyImportOptions#getKeyMaterial() key material} cannot be null.",
    "Reference": "ImportKeyOptions#getKey() key material} cannot be null.",
    "HebCup": "ImportKeyOptions#getKeyMaterial () key material} cannot be null."
}
{
    "Origin": "Gets the icon URL of the application, if present and in a supported format.",
    "Reference": "Gets the icon of the application.",
    "HebCup": "Gets the icon URL just the application , if present and in a supported format."
}
{
    "Origin": "anonymous: Cross-origin CORS requests for the element will not have the credentials\nflag set.",
    "Reference": "ANONYMOUS: Cross-origin CORS requests for the element will not have the credentials\nflag set.",
    "HebCup": "anonymous: Cross-origin CORS requests for the element will not have the credentials\nflag set."
}
{
    "Origin": "Called when a controller requested to prefetch playback from a search query through\n{@link MediaController2#prefetchFromSearch(String, Bundle)}.",
    "Reference": "Called when a controller requested to prepare playback from a search query through\n{@link MediaController2#prepareFromSearch(String, Bundle)}.",
    "HebCup": "Called when a controller requested to prefetch playback from a search query through {@link MediaController2#PrepareFromSearch (String , Bundle)}."
}
{
    "Origin": "Check if given coordinates lies inside contentRectMinusAllMargins.",
    "Reference": "Check if given coordinates lies inside contentRect.",
    "HebCup": "Check if given coordinates lies inside contentRect."
}
{
    "Origin": "Returns list of nodes filtered based on this {@link NodesAcceptPolicy}.",
    "Reference": "Returns list of {@link TreeNode}s filtered based on this {@link NodesAcceptPolicy}.",
    "HebCup": "Returns list of nodes filtered based on this {@link NodesAcceptPolicy}."
}
{
    "Origin": "Converts a template name to its corresponding FooParams class name.",
    "Reference": "Converts a template name to its corresponding Foo class name.",
    "HebCup": "Converts a template name to its corresponding FooParams class name."
}
{
    "Origin": "Creates a key that is used for the lookup in Redis.",
    "Reference": "Creates a key in Redis.",
    "HebCup": "Creates a key that is used for the lookup in Redis."
}
{
    "Origin": "Binds the specified {@link Service} under the specified directory of the default {@link VirtualHost}.",
    "Reference": "Binds the specified {@link HttpService} under the specified directory of the default {@link VirtualHost}.",
    "HebCup": "Binds the specified {@link HttpService} under the specified directory of the default {@link VirtualHost}."
}
{
    "Origin": "Print a list of {@link Taglet}s that might conflict with\nstandard tags in the future and a list of standard tags\nthat have been overriden.",
    "Reference": "Print a list of {@link Taglet}s that might conflict with\nstandard tags in the future and a list of standard tags\nthat have been overridden.",
    "HebCup": "Print a list of {@link Taglet}s that might conflict with standard tags in the future and a list of standard tags that have been overridden."
}
{
    "Origin": "Creates this file as a folder.",
    "Reference": "Creates the given folder.",
    "HebCup": "Creates this file as a f."
}
{
    "Origin": "Format and publish a LogRecord.",
    "Reference": "Format and publish a .",
    "HebCup": "Format and publish a LogRecord."
}
{
    "Origin": "If --controller parameter has not been specified, --entity parameter will not be visible",
    "Reference": "If --all parameter has been specified, --entity parameter will not be visible\nto prevent conflicts.",
    "HebCup": "If --all parameter has not been specified , --entity parameter will not be visible"
}
{
    "Origin": "Checks if the given user exists in the current tenant",
    "Reference": "Checks if the given users and roles exist in the current tenant",
    "HebCup": "Checks if the given users Or Roles Exist in the current tenant"
}
{
    "Origin": "This includes @type, @this, @extends, @implements, @param, @throws,\nand @return.",
    "Reference": "This\nincludes @type, @this, @extends, @implements, @param, @throws, @lends, and @return.",
    "HebCup": "This includes @type, @this, @extends, @implements, @param, @throws,\nand @return."
}
{
    "Origin": "{@codesnippet com.azure.storage.file.share.ShareDirectoryAsyncClient.createSubDirectory#string}",
    "Reference": "{@codesnippet com.azure.storage.file.share.ShareDirectoryAsyncClient.createSubdirectory#string}",
    "HebCup": "{@codesnippet com.azure.storage.file.share.ShareDirectoryAsyncClient.createSubdirectory#string}"
}
{
    "Origin": "Copies the full-text options from the specified database meta data.",
    "Reference": "Assigns the full-text options from the specified database meta data.",
    "HebCup": "assign the full-text options from the specified database meta data."
}
{
    "Origin": "Once the session is open, the client will transition to the {@link State#CONNECTED} state and the\nreturned {@link CompletableFuture} will be completed.",
    "Reference": "Once the session is registered, the client will transition to the {@link State#CONNECTED} state and the\nreturned {@link CompletableFuture} will be completed.",
    "HebCup": "Once the session is open, the client will transition to the {@link State#CONNECTED} state and the\nreturned {@link CompletableFuture} will be completed."
}
{
    "Origin": "Writes the representation to an appendable sequence of characters.",
    "Reference": "Appends the representation to an appendable sequence of characters.",
    "HebCup": "Writes the representation to an appendable sequence of characters."
}
{
    "Origin": "Invalidates a session.",
    "Reference": "Closes a session.",
    "HebCup": "Invalidates a session."
}
{
    "Origin": "The simplest way to create a {@link BankAccount} token.",
    "Reference": "Create a {@link BankAccount} token asynchronously.",
    "HebCup": "The simplest way to create a {@link params} token."
}
{
    "Origin": "IMPORTANT: After you create a DB cluster parameter group, you\nshould wait at least 5 minutes before creating your first DB cluster\nthat uses that DB cluster parameter group as the default parameter\ngroup.",
    "Reference": "After you create a DB cluster parameter group, you should wait at least 5\nminutes before creating your first DB cluster that uses that DB cluster\nparameter group as the default parameter group.",
    "HebCup": "IMPORTANT: After you create a DB cluster parameter group, you\nshould wait at least 5 minutes before creating your first DB cluster\nthat uses that DB cluster parameter group as the default parameter\ngroup."
}
{
    "Origin": "Returns the first sync d l object in the ordered set where companyId = ?",
    "Reference": "Returns the first sync d l object in the ordered set where modifiedTime > ?",
    "HebCup": "Returns the first sync d l object in the ordered set where companyId = ?"
}
{
    "Origin": "Calculates location of caret and displays the suggestion popup.",
    "Reference": "Calculates location of caret and displays the suggestion pop-up.",
    "HebCup": "Calculates location of caret and displays the suggestion popup."
}
{
    "Origin": "Calls {@code deallocate()}.",
    "Reference": "Calls {@code releaseReference()}.",
    "HebCup": "Calls {@code releaseReference ()}."
}
{
    "Origin": "Count the total file size, including id files, of {@link StoreFile}s.",
    "Reference": "Count the total file size, including id files, of {@link DatabaseStore}s.",
    "HebCup": "Count the total file size , including id files , of {@link DatabaseStore}s."
}
{
    "Origin": "Throw an {@link IllegalStateException} that indicates more than the requested\namount was produced.",
    "Reference": "Log an {@link IllegalStateException} that indicates more than the requested\namount was produced.",
    "HebCup": "if an {@link IllegalStateException} that indicates more than the requested amount was produced."
}
{
    "Origin": "Returns a new {@link Service} decorator that tracks request stats using {@link MeterRegistry}.",
    "Reference": "Returns a new {@link HttpService} decorator that tracks request stats using {@link MeterRegistry}.",
    "HebCup": "Returns a new {@link ?} decorator that tracks request stats using {@link MeterRegistry}."
}
{
    "Origin": "registers a listener to be notified of the contents of the property file",
    "Reference": "Registers a listener to be notified of the contents of the property file",
    "HebCup": "registers a listener to be notified of the contents of the property file"
}
{
    "Origin": "The minimum coverage of the sequence alignment between two subunits to be\nclustered together.",
    "Reference": "The minimum coverage of the structure alignment between two subunits to be\nclustered together.",
    "HebCup": "The minimum structureCoverage of the sequence alignment between two subunits to be clustered together."
}
{
    "Origin": "get the sla from the dag node config.",
    "Reference": "get the flow start sla from the dag node config.",
    "HebCup": "get the sla from the dag node config."
}
{
    "Origin": "Aggregates the service, app, and plan policies into a single ordered list.",
    "Reference": "Aggregates the API, app, and plan policies into a single ordered list.",
    "HebCup": "Aggregates the Api , app , and plan policies into a single ordered list."
}
{
    "Origin": "To SSLHostConfig info.",
    "Reference": "To SslHostConfig info.",
    "HebCup": "To SslHostConfig info."
}
{
    "Origin": "Therefore a client that is pinned this way should be used to only make requests to URLs with passed certificate.",
    "Reference": "Therefore a builder that is pinned this way should be used to only make requests to URLs with passed certificate.",
    "HebCup": "Therefore a return that is pinned this way should be used to only make requests to URLs with passed certificate."
}
{
    "Origin": "Takes a package and a relative path to a resource and returns an absolute path to the\nresource.",
    "Reference": "Takes a package and a path to a resource and returns an absolute path to the resource.",
    "HebCup": "Takes a package and a path to a resource and returns an absolute path to the resource."
}
{
    "Origin": "For example, the period in days between two dates can be calculated\nusing {@code startDate.periodUntil(endDate, DAYS)}.",
    "Reference": "For example, the period in days between two dates can be calculated\nusing {@code startDate.until(endDate, DAYS)}.",
    "HebCup": "For example, the period in days between two dates can be calculated using {@code startDate.until(endDate, DAYS)}."
}
{
    "Origin": "Computes loglikelihood given class values and estimated probablities.",
    "Reference": "Computes negative loglikelihood given class values and estimated probabilities.",
    "HebCup": "Computes negativeLogLikelihood given class values and estimated probablities."
}
{
    "Origin": "Undecorates this {@link Backoff} to find the {@link Backoff} which is an instance of the specified\n{@code backoffType}.",
    "Reference": "Undecorates this {@link Backoff} to find the {@link Backoff} which is an instance of the specified\n{@code type}.",
    "HebCup": "Undecorates this {@link Backoff} to find the {@link Backoff} which is an instance of the specified {@code type}."
}
{
    "Origin": "Calculate Sum of all elements in a column, and\n     return as a Vector",
    "Reference": "Count non-zero elements in all columns, and return as a Vector.",
    "HebCup": "Calculate Sum of all elements in a column, and\n     return as a Vector"
}
{
    "Origin": "Produce a line of the CoNLL output.",
    "Reference": "Write a line of the CoNLL output.",
    "HebCup": "Produce a line of the CoNLL output."
}
{
    "Origin": "Validates that the given directory belongs to a JDK installation.",
    "Reference": "Validates that the given directory belongs to a valid JDK installation.",
    "HebCup": "Validates that the given directory belongs to a JDK installation."
}
{
    "Origin": "get path to the lwjgl cache directory",
    "Reference": "Get path to the lwjgl cache directory.",
    "HebCup": "getLWJGL path to the lwjgl cache directory"
}
{
    "Origin": "Removes all values in 'fields' that are not specified in 'fieldMask'.",
    "Reference": "Strips all values in 'fields' that are not specified in 'fieldMask'.",
    "HebCup": "Removes all values in 'fields' that are not specified in 'fieldMask'."
}
{
    "Origin": "Defaults to {@link ExecutorServiceBuilder#defaultQueryExecutorServiceBuilder()}.",
    "Reference": "ExecutorServiceBuilder#defaultQueryExecutorServiceBuilder()}.",
    "HebCup": "Defaults to {@link ExecutorServiceBuilder#defaultQueryExecutorServiceBuilder()}."
}
{
    "Origin": "Download or stream an image (media) from an shared album.",
    "Reference": "Download or stream an image (media) from an shared album              HEAD only returns headers, no data",
    "HebCup": "Download or stream an image (media) from an shared album."
}
{
    "Origin": "Returns the session instance.",
    "Reference": "Returns a session instance.",
    "HebCup": "Returns the session instance."
}
{
    "Origin": "Returns active {@code HierarchyMapper}",
    "Reference": "Returns the {@code HierarchyMapper} used by this data communicator.",
    "HebCup": "Returns active {@code HierarchyHierarchyMapper}"
}
{
    "Origin": "Returns the first {@link Player} that matches the given mediaInfo or\nformat.",
    "Reference": "Returns the first {@link Player} that matches the given\n{@link DLNAResource}.",
    "HebCup": "Returns the first {@link Player} that matches the given mediaInfo or\nformat."
}
{
    "Origin": "Adds a new CONSTANT_Integer_info or CONSTANT_Float_info to the constant pool of this symbol\ntable.",
    "Reference": "Adds a new CONSTANT_Long_info or CONSTANT_Double_info to the constant pool of this symbol\ntable.",
    "HebCup": "Adds a new CONSTANT_LongOrDouble_info or CONSTANT_Float_info to the constant pool of this symbol table."
}
{
    "Origin": "Return the template language type name of callable class, as it should be shown in error messages.",
    "Reference": "Return the template language type name of the value as it should be shown in error messages, considering {@link",
    "HebCup": "Return the template language type name of callable class, as it should be shown in error messages."
}
{
    "Origin": "Sets all the provided settings including secure settings",
    "Reference": "Sets all the provided settings.",
    "HebCup": "Sets all the provided settings including secure settings"
}
{
    "Origin": "Convert to HTTP {@code http} or  scheme URIs.",
    "Reference": "Convert to HTTP {@code http} or {@code https} scheme URIs.",
    "HebCup": "Convert to HTTP {@code http} or  scheme URIs."
}
{
    "Origin": "Binds the properties to the target object, and removes the property that was bound from properties.",
    "Reference": "Binds the properties with the given prefix to the target object, and removes the property that was bound from properties.",
    "HebCup": "Binds the properties to the target null , and removes the property that was bound from properties."
}
{
    "Origin": "Get Reconciled.",
    "Reference": "Get Abgeglichen.",
    "HebCup": "Get Reconciled."
}
{
    "Origin": "Build condition.",
    "Reference": "Build conditions.",
    "HebCup": "build Sharding condition."
}
{
    "Origin": "Resolve intervals from an {@link IntervalArgumentCollection} and a read-count file.",
    "Reference": "Resolve intervals from an {@link IntervalArgumentCollection} and a read-count path.",
    "HebCup": "Resolve intervals from an {@link IntervalArgumentCollection} and a read-Count Path."
}
{
    "Origin": "Get the collation value extracted from the {@link Query} annotation.",
    "Reference": "Get the collation value extracted from the {@link Query} or {@link Aggregation} annotation.",
    "HebCup": "Get the collation value extracted from the {@link Query} annotation."
}
{
    "Origin": "Tests if the given {@link AnalysisMethod} is from language class.",
    "Reference": "Tests if the given {@link AnalysisMethod} is from system {@link ClassLoader}.",
    "HebCup": "Tests if the given {@link AnalysisMethod} is from System Class."
}
{
    "Origin": "Returns a value of UTC milliseconds representing today for the device's current timezone.",
    "Reference": "Returns the UTC milliseconds representing the first moment of today in local timezone.",
    "HebCup": "Returns a value of UTC milliseconds representing Calendar for the device's current timezone."
}
{
    "Origin": "Returned array may be\ndifferent size than size of provided array, due to {@link #expand(ActionConfig, Class[]) expanding}.",
    "Reference": "Returned array may be\ndifferent size than size of provided array, due to {@link #expand(Class[]) expanding}.",
    "HebCup": "Returned array may be\ndifferent size than size of provided array, due to {@link #expand(ActionConfig, Class[]) expanding}."
}
{
    "Origin": "Returns the specified session.",
    "Reference": "Returns a session instance.",
    "HebCup": "Returns the specified session."
}
{
    "Origin": "The value {@link #MEMBER_ENDPOINTSL_DEFAULT} or system property {@link #MEMBER_ENDPOINTS_PROP_NAME} if set.",
    "Reference": "The value {@link #MEMBER_ENDPOINTS_DEFAULT} or system property {@link #MEMBER_ENDPOINTS_PROP_NAME} if set.",
    "HebCup": "The value {@link#MEMBER_ENDPOINTS_DEFAULT} or system property {@link#MEMBER_ENDPOINTS_PROP_NAME} if set."
}
{
    "Origin": "Converts an entity (POJO) to a DBObject.",
    "Reference": "Converts an entity (POJO) to a Document.",
    "HebCup": "Converts an entity (POJO) to a Document."
}
{
    "Origin": "Returns child sub-scorers positioned on the current document",
    "Reference": "Returns child sub-scorers",
    "HebCup": "Returns child sub-scorers positioned on the current document"
}
{
    "Origin": "Returns the method or constructor containing the new\nexpression represented by this object.",
    "Reference": "Returns the method or constructor containing the \nexpression represented by this object.",
    "HebCup": "Returns the method or constructor containing the new\nexpression represented by this object."
}
{
    "Origin": "Creates a new adapter for an object of class '{@link org.bimserver.models.store.PluginBundleUpdateInformation Plugin Bundle Update Information}'.",
    "Reference": "Creates a new adapter for an object of class '{@link org.bimserver.models.store.PluginBundle Plugin Bundle}'.",
    "HebCup": "Creates a new adapter for an object of class '{@link org.bimserver.models.store.PluginBundle Plugin Bundle Update Information}'."
}
{
    "Origin": "If no byte is available\nbecause the end of the stream has been reached, the value\n is returned.",
    "Reference": "If no byte is available\nbecause the end of the stream has been reached, the value\n{@code -1} is returned.",
    "HebCup": "If no byte is available\nbecause the end of the stream has been reached, the value\n is returned."
}
{
    "Origin": "Copy up to len bytes into the byte array, starting at the given offset.",
    "Reference": "Copy up to len bytes into buf, starting at the given offset.",
    "HebCup": "Copy up to len bytes into the byte array, starting at the given offset."
}
{
    "Origin": "Tests that Grindstone mills all cards to graveyard while Painter's Servant is in play",
    "Reference": "Tests that Grindstone mills all cards to graveyard while Painter's",
    "HebCup": "Tests that Grindstone mills all cards to graveyard while Painter's Servant is in play"
}
{
    "Origin": "Same as above with an additional parameter to allow passing in the threshold checker",
    "Reference": "Same as above with additional parameters to allow passing in the threshold checker and the max score accumulator.",
    "HebCup": "Same as above with an additional parameter to allow passing in the threshold checker"
}
{
    "Origin": "Returns an immutable list containing four elements.",
    "Reference": "Returns an unmodifiable list containing four elements.",
    "HebCup": "Returns an Unmodifiable list containing four elements."
}
{
    "Origin": "Writes a FooParams subclass for the given template.",
    "Reference": "Writes a Foo subclass for the given template.",
    "HebCup": "Writes a FooParams subclass for the given template."
}
{
    "Origin": "read String object from File",
    "Reference": "read float from File",
    "HebCup": "read Float object from File"
}
{
    "Origin": "Use the\n{@linkplain #addPickup(Pickup, TimeWindow)} instead.",
    "Reference": "Use the\n{@linkplain #addPickup(PickupJob, TimeWindow)} instead.",
    "HebCup": "Use the {@linkplain #addPickupJob(PickupJob, TimeWindow)} instead."
}
{
    "Origin": "Opens an IndexReader from the DirectoryProvider (not using the IndexWriter)",
    "Reference": "Opens an IndexReader from the Directory (not using the IndexWriter)",
    "HebCup": "Opens an IndexReader from the directoryHolder.getProvider (not using the IndexWriter)"
}
{
    "Origin": "Returns the module with the given name in this layer, or if not in this\nlayer, the {@linkplain #parent parent} layer.",
    "Reference": "Returns the module with the given name in this layer, or if not in this\nlayer, the {@linkplain #parents parents} layers.",
    "HebCup": "Returns the module with the given name in this layer , or if not in this layer , the {@linkplain#layers layers} layer."
}
{
    "Origin": "The size of {@code tag} and non-null {@code value} in the wire format.",
    "Reference": "The size of {@code tag} and {@code value} in the wire format.",
    "HebCup": "The size of {@code tag} and non-null {@code value} in the wire format."
}
{
    "Origin": "Load the sheet images, if available.",
    "Reference": "Load the sheet images, if available and not already done.",
    "HebCup": "Load the sheet images , if available."
}
{
    "Origin": "When requesting 2 transactions from the same Session we expect to receive\n2 different objects",
    "Reference": "When requesting 2 transactions from the same SessionImpl we expect to receive\n2 different objects",
    "HebCup": "When requesting 2 TransactionOLTP from the same Session we expect to receive 2 different objects"
}
{
    "Origin": "Load the profile definitions from a file.",
    "Reference": "Extracts profile information from a file or from zookeeper",
    "HebCup": "Load the timestamp definitions from a file."
}
{
    "Origin": "Obtains an instance from the specified unique name.",
    "Reference": "Obtains an instance from the specified name.",
    "HebCup": "Obtains an instance from the specified name."
}
{
    "Origin": "transfer any namespaces to the rootTag of the current document\n  update all attribute prefixes for namespaces to match those in the rootTag",
    "Reference": "transfer any namespaces to the specified root\n  update all attribute prefixes for namespaces to match those in the rootTag",
    "HebCup": "transfer any namespaces to the rootTag of the current document update all attribute prefixes for namespaces to match those in the rootTag"
}
{
    "Origin": "Get Natural Account.",
    "Reference": "Get Basiskonto.",
    "HebCup": "Get Natural Account."
}
{
    "Origin": "Code snippets for {@link BlobClientBase#setHTTPHeadersWithResponse(BlobHttpHeaders, BlobAccessConditions, Duration,",
    "Reference": "Code snippets for {@link BlobClientBase#setHttpHeadersWithResponse(BlobHttpHeaders, BlobAccessConditions, Duration,",
    "HebCup": "Code snippets for {@link BlobClientBase#setHttpHeadersWithResponse (BlobHttpHeaders , BlobAccessConditions , Duration ,"
}
{
    "Origin": "Returns the list of not-yet-succeeded run-always steps whose run-always prerequisites have all succeeded.",
    "Reference": "Returns the list of not-yet-run run-always steps whose run-always prerequisites have all run.",
    "HebCup": "Returns the list of not-yet-unfinished run-always steps whose run-always prerequisites have all unfinished."
}
{
    "Origin": "Set the non-stroking color in the DeviceRGB color space.",
    "Reference": "Set the non-stroking color in the DeviceCMYK color space.",
    "HebCup": "Set the non-stroking color in the DeviceRGB color space."
}
{
    "Origin": "Provides a {@link GoogleCredential} with delegated admin access for a G Suite domain.",
    "Reference": "Provides a {@link GoogleCredentialsBundle} with delegated admin access for a G Suite domain.",
    "HebCup": "Provides a {@link GoogleCredentialsBundle.create} with delegated admin access for a G Suite domain."
}
{
    "Origin": "Tests the ability to register, invoke and auto-unregister {@link CacheUtilizationProvider.CleanupListener} instances.",
    "Reference": "Tests the ability to register, invoke and auto-unregister {@link ThrottleSourceListener} instances.",
    "HebCup": "Tests the ability to register, invoke and auto-unregister {@link CacheUtilizationProvider.CleanupListener} instances."
}
{
    "Origin": "Stores the specified location that corresponds to the specified key.",
    "Reference": "Returns a window state by the specified key.",
    "HebCup": "Stores the specified location that corresponds to the specified key."
}
{
    "Origin": "Sets the host address associated with this exception.",
    "Reference": "Sets the host associated with this exception.",
    "HebCup": "Sets the host associated with this exception."
}
{
    "Origin": "If {@code thread} is null, the list is immutable.",
    "Reference": "If {@code\nmutability} is null, the list is immutable.",
    "HebCup": "If {@code mutability} is null , the list is immutable."
}
{
    "Origin": "This factory converts the arbitrary date-time object to an instance of {@code OffsetDate}.",
    "Reference": "This factory converts the arbitrary temporal object to an instance of {@code OffsetDate}.",
    "HebCup": "This factory converts the arbitrary date-time object to an instance of {@code OffsetDate}."
}
{
    "Origin": "Checks whether the variable is initialized via a cast expression from a method parameter.",
    "Reference": "Checks whether the variable is initialized from a method parameter.",
    "HebCup": "Checks whether the variable is initialized via a initializer expression from a method parameter."
}
{
    "Origin": "getExternal back a Map of all the rows in the table, the map is keyed on the tables key",
    "Reference": "getExternal back a Map of all the rows in the table, the map is keyed on the tables value",
    "HebCup": "getExternal back a Map of all the rows in the table, the map is keyed on the tables key"
}
{
    "Origin": "Sets the given span's last access timestamp.",
    "Reference": "Sets the given span's last touch timestamp.",
    "HebCup": "Sets the given span's last Touch Timestamp."
}
{
    "Origin": "Sets the location.",
    "Reference": "Set the location.",
    "HebCup": "Sets the location."
}
{
    "Origin": "Sets the value of this ComboBox.",
    "Reference": "Sets the value of this CheckBox.",
    "HebCup": "Sets the value of this ComboBox."
}
{
    "Origin": "An alternative to {@link #setMediaTypes} for use in Java code.",
    "Reference": "An alternative to {@link #setMediaTypes} for programmatic registrations.",
    "HebCup": "An alternative to {@link #setaddMediaType} for use in Java code."
}
{
    "Origin": "Returns a string representation of this object; useful for testing and debugging.",
    "Reference": "Returns a string representation of this object.",
    "HebCup": "Returns a string representation of this object; useful for testing and debugging."
}
{
    "Origin": "Same as {@link #isPipelineConfigSet(PiPipeconf, ByteBuffer)} but blocks\nexecution.",
    "Reference": "Same as {@link #isPipelineConfigSet(long, PiPipeconf, ByteBuffer)} but\nblocks execution.",
    "HebCup": "Same as {@link #isPipelineConfigSet(PiPipeconf, ByteBuffer)} but blocks\nexecution."
}
{
    "Origin": "Test affinity awareness Sql cache size property with semicolon.",
    "Reference": "Test Partition Awareness Sql cache size property with semicolon.",
    "HebCup": "test Partition Awareness Sql Cache Size Property with semicolon."
}
{
    "Origin": "Get status of given rotation, if any",
    "Reference": "Get targets of given rotation, if any",
    "HebCup": "Get status NONE given rotation , if any"
}
{
    "Origin": "Execute the ALTER CLASS.",
    "Reference": "Execute the ALTER CLUSTER.",
    "HebCup": "Execute the ALTER CLASS."
}
{
    "Origin": "Returns whether the rule in the given RuleContext is in a whitelist.",
    "Reference": "Returns whether the rule in the given RuleContext *was instantiated* in a whitelist.",
    "HebCup": "Returns whether the rule in the given RuleContext is in a whitelist."
}
{
    "Origin": "Returns the number of sync d l objects where companyId = ?",
    "Reference": "Returns the number of sync d l objects where repositoryId = ?",
    "HebCup": "Returns the number of sync d l objects where companyId = ?"
}
{
    "Origin": "Creates and caches a test {@link BaseEvent} instance for the scope of the current test method.",
    "Reference": "Creates and caches a test {@link CoreEvent} instance for the scope of the current test method.",
    "HebCup": "Creates and caches a test {@link CoreEvent} instance for the scope of the current test method."
}
{
    "Origin": "Initializes Fresco with the specified config.",
    "Reference": "Initializes Fresco with the specified config and native code enabled.",
    "HebCup": "Initializes context with the specified config."
}
{
    "Origin": "Return an interval stream of with n number of ticks and buffer the\nemissions to avoid back pressure failures (e.g.",
    "Reference": "Return an interval stream of N number of ticks and buffer the emissions\nto avoid back pressure failures (e.g.",
    "HebCup": "Return an interval stream of with n number of ticks and buffer the\nemissions to avoid back pressure failures (e.g."
}
{
    "Origin": "Do not call this method with setSize less than 2.",
    "Reference": "Always returns at least setSize + 2.",
    "HebCup": "Do not call this method with setSize less than 2."
}
{
    "Origin": "Entries are evicted from the dynamic table until\nthe size of the table and the new header field is less than the table's capacity.",
    "Reference": "Entries are evicted from the dynamic table until\nthe size of the table and the new header field is less than the table's maxHeaderTableSize.",
    "HebCup": "Entries are evicted from the dynamic table until the size of the table and the new header field is less than the table's maxHeaderTableSize."
}
{
    "Origin": "Format : interface:version:group",
    "Reference": "Format : interface:version",
    "HebCup": "Format : interface:version:group"
}
{
    "Origin": "{@codesnippet com.azure.storage.queue.QueueAsyncClient.setAccessPolicyWithResponse#List}",
    "Reference": "{@codesnippet com.azure.storage.queue.QueueAsyncClient.setAccessPolicyWithResponse#Iterable}",
    "HebCup": "{@codesnippet com.azure.storage.queue.QueueAsyncClient.setAccessPolicyWithResponse#Iterable}"
}
{
    "Origin": "In case of\nfailure the {@link Flux} will error.",
    "Reference": "In case of\nfailure the {@link CosmosContinuablePagedFlux} will error.",
    "HebCup": "In case of\nfailure the {@link Flux} will error."
}
{
    "Origin": "clear saved activity",
    "Reference": "clear saved activities",
    "HebCup": "clear saved Activities"
}
{
    "Origin": "It means that fields bound after this method call won't be set\nread-only.",
    "Reference": "It means that bindings added after this method\ncall won't be set read-only.",
    "HebCup": "It means that fields bound after this method call won't be set read-only."
}
{
    "Origin": "Increment the count of triggered lazy state updates (by one).",
    "Reference": "Increment the count of triggered synchronous state updates in Litho sections (by one).",
    "HebCup": "Increment the count of triggered lazy Section Triggered Sync State Update (by one)."
}
{
    "Origin": "Relevant are the frameworkUrl, the frameworkName and the Karaf\nversion, since all of those parameters are relevant to decide which wrapper configurations to use.",
    "Reference": "Relevant are the frameworkURL, the frameworkName and the Karaf\nversion since all of those params are relevant to decide which wrapper configurations to use.",
    "HebCup": "Relevant are the frameworkURL , the frameworkName and the Karaf version , since all of those parameters are relevant to decide which wrapper configurations to use."
}
{
    "Origin": "Sets the {@link SharedKeyCredential} used to authorize requests sent to the service.",
    "Reference": "Sets the {@link StorageSharedKeyCredential} used to authorize requests sent to the service.",
    "HebCup": "Sets the {@link StorageSharedKeyCredential} used to authorize requests sent to the service."
}
{
    "Origin": "Gets the price that was traded, in decimal form.",
    "Reference": "Gets the price that was traded, together with the trade date, optional.",
    "HebCup": "Gets the Optional.ofNullable that was traded , in decimal form."
}
{
    "Origin": "Returns the (biased) skew of all the values within a {@link Dataset}",
    "Reference": "Returns the (biased) estimate of the sample variance of the values within\na {@link Dataset}.",
    "HebCup": "Returns the (biased) population of all the values within a {@link Dataset}"
}
{
    "Origin": "Generates a code sample for using {@link FileAsyncClient#startCopyWithResponse(String, Map)}",
    "Reference": "Generates a code sample for using {@link FileAsyncClient#beginCopy(String, Map, Duration)}",
    "HebCup": "Generates a code sample for using {@link FileAsyncClient#beginCopy (String , Map)}"
}
{
    "Origin": "Use the supplied truststore for HTTPS requests.",
    "Reference": "Use the supplied keystore for HTTPS requests.",
    "HebCup": "Use the supplied keyStore for HTTPS requests."
}
{
    "Origin": "Converts this sensitivity to a monetary value, multiplying by the specified factor.",
    "Reference": "Returns an instance converted this sensitivity to a monetary value, multiplying by the specified factor.",
    "HebCup": "Converts this sensitivity to a monetary value, multiplying by the specified factor."
}
{
    "Origin": "- (optional bool) when true then additional detailed metrics\n  will be collected.",
    "Reference": "- (optional bool, default false) when true then additional detailed metrics\n  will be collected.",
    "HebCup": "- (optional bool) when true then additional detailed metrics\n  will be collected."
}
{
    "Origin": "Sets the given Eclipse target monitor.",
    "Reference": "Delegates the event to the current Eclipse target monitor.",
    "HebCup": "Sets the given Eclipse target Changed."
}
{
    "Origin": "Set the fileContentMD5 property: Sets the file's MD5 hash.",
    "Reference": "Set the contentMD5 property: Sets the file's MD5 hash.",
    "HebCup": "Set the contentMD5 property: Sets the file's MD5 hash."
}
{
    "Origin": "Look for a bar line vertically aligned with the ending side.",
    "Reference": "Look for a StaffBarline vertically aligned with the ending side.",
    "HebCup": "Look for a bar line vertically aligned with the ending side."
}
{
    "Origin": "Set the bases of tumorSeqAllele1 in the {@link GencodeFuncotation}.",
    "Reference": "Set the Version {@link String} in the {@link GencodeFuncotation}.",
    "HebCup": "Set the bases of Version in the {@link GencodeFuncotation}."
}
{
    "Origin": "Try to postpone the {@code Math.exp} call to preserve numeric range!",
    "Reference": "Try to postpone the {@code FastMath.exp} call to preserve numeric range!",
    "HebCup": "Try to postpone the {@code FastMath.exp} call to preserve numeric range!"
}
{
    "Origin": "Deletes the entire row of the Sweepable Timestamps table.",
    "Reference": "Deletes complete rows of the Sweepable Timestamps table.",
    "HebCup": "Deletes the entire CoarsePartitions of the Sweepable Timestamps table."
}
{
    "Origin": "Attaches an existing database.",
    "Reference": "Attaches an udb database to Alluxio catalog.",
    "HebCup": "Attaches an existing database."
}
{
    "Origin": "Fetches the packlet info stored in the memory for mpacks/{mpack_id} call.",
    "Reference": "Fetches the mpack info stored in the memory for mpacks/{mpack_id} call.",
    "HebCup": "Fetches the Module info stored in the memory for mpacks/ {mpack_id} call."
}
{
    "Origin": "Iterate over registered {@link HandlerMethodArgumentResolver}s and invoke the one that supports it.",
    "Reference": "Iterate over registered\n{@link HandlerMethodArgumentResolver HandlerMethodArgumentResolvers} and\ninvoke the one that supports it.",
    "HebCup": "Iterate over registered {@link HandlerMethodArgumentResolver}s and invoke the one that supports it."
}
{
    "Origin": "Get Maximum Level.",
    "Reference": "Get Maximalmenge.",
    "HebCup": "Get Maximum Level."
}
{
    "Origin": "BuiltinFunction} instances, calling {@link BuiltinFunction#configure(SkylarkSignature)}.",
    "Reference": "BaseFunction} instances, calling {@link BaseFunction#configure(SkylarkSignature)}.",
    "HebCup": "BaseFunction} instances , calling {@link BaseFunction#configure (SkylarkSignature)}."
}
{
    "Origin": "Returns a string representation of this object; useful for testing and debugging.",
    "Reference": "Returns a string representation of this object.",
    "HebCup": "Returns a string representation of this object; useful for testing and debugging."
}
{
    "Origin": "Is a value with this type less than the length of the array?",
    "Reference": "Is a value with this type less than the length of the sequence?",
    "HebCup": "Is a value with this type less than the length of the sequence?"
}
{
    "Origin": "a class type\nan interface type\nan array type\na parameterized type\na type variable\nthe null type",
    "Reference": "a class type\nan interface type\nan array type\na parameterized type\na type variable\nthe null type\na wildcard type",
    "HebCup": "a class type\nan interface type\nan array type\na parameterized type\na type variable\nthe null type"
}
{
    "Origin": "Creates an update that removes from the array value of the field with the given name all elements that match the given filter.",
    "Reference": "Creates an update that removes from an array all elements that match the given filter.",
    "HebCup": "Creates an update that removes from the array value of the final with the given name all elements that match the given filter."
}
{
    "Origin": "Sets a spannable text with any highlight color into the provided TextView.",
    "Reference": "Sets a spannable text with any highlight color for each word provided by the\nconstraint text into the provided TextView.",
    "HebCup": "Sets a spannable text with any highlight color into the provided TextView."
}
{
    "Origin": "Gets the value of the 'publicPort' field",
    "Reference": "Gets the value of the 'publicPorts' field",
    "HebCup": "Gets the value of the 'publicPorts' field"
}
{
    "Origin": "Indicate to associated {@link ExportGeneration}s to become\nmasters for the given partition id",
    "Reference": "Indicate to associated {@link ExportGeneration}s to become\nleaders for the given partition id",
    "HebCup": "Indicate to associated {@link ExportGeneration}s to become\nmasters for the given partition id"
}
{
    "Origin": "Get an implementation of {@link JobSpecificationService} if one hasn't already been defined.",
    "Reference": "Get an implementation of {@link JobResolverService} if one hasn't already been defined.",
    "HebCup": "Get an implementation of {@link JobResolverService} if one hasn't already been defined."
}
{
    "Origin": "Get Account Element.",
    "Reference": "Get Kontenart.",
    "HebCup": "Get Account Element."
}
{
    "Origin": "Checks that screen was closed with the given {@code result}.",
    "Reference": "Checks that screen was closed with the given {@code outcome}.",
    "HebCup": "Checks that screen was closed with the given {@code Outcome}."
}
{
    "Origin": "see\nURL\nhtml",
    "Reference": "see\nURL",
    "HebCup": "see\nURL\nhtml"
}
{
    "Origin": "Converts from {@link CpuProfiler.CpuProfilerConfiguration} to {@link CpuProfilerConfig}",
    "Reference": "Converts from {@link Cpu.CpuTraceConfiguration.UserOptions} to {@link CpuProfilerConfig}",
    "HebCup": "Converts from {@link Cpu.CpuTraceConfiguration.UserOptions} to {@link CpuProfilerConfig}"
}
{
    "Origin": "Register a method observer with the current context (provided).",
    "Reference": "Registers given method with provided context and event.",
    "HebCup": "Register a method observer with the current event (provided)."
}
{
    "Origin": "Sets start margin of text view depending on icon type.",
    "Reference": "Sets start margin of text views.",
    "HebCup": "Sets m Text Start Margin of text view depending on icon type."
}
{
    "Origin": "Queries this ContactSourceService for SourceContacts\nwhich match a specific query String.",
    "Reference": "Creates query that searches for SourceContacts\nwhich match a specific query String.",
    "HebCup": "Queries this ContactQueryService for SourceContacts which match a specific query String."
}
{
    "Origin": "Returns the Java type corresponding to the given type descriptor.",
    "Reference": "Returns the {@link Type} corresponding to the given type descriptor.",
    "HebCup": "Returns the Java type corresponding typeDescriptor.length the given type descriptor."
}
{
    "Origin": "Sets a boolean attribute on the given element.",
    "Reference": "Sets a boolean property on the given element.",
    "HebCup": "elem.set a boolean attribute on the given element."
}
{
    "Origin": "Delete ticket granting tickets int.",
    "Reference": "Delete ticket granting tickets.",
    "HebCup": "DELETE ticket granting tickets int."
}
{
    "Origin": "Tests the {@link FileSystemMaster#delete(AlluxioURI, DeleteOptions)} method for\na directory with un-synced persistent entries without a sync check.",
    "Reference": "Tests the {@link FileSystemMaster#delete(AlluxioURI, DeleteContext)} method for\na directory with un-synced persistent entries without a sync check.",
    "HebCup": "Tests the {@link FileSystemMaster#delete (AlluxioURI , DeleteContext)} method for a directory with un-synced persistent entries without a sync check."
}
{
    "Origin": "Makes a unique key for the paired reads.",
    "Reference": "Makes a hash key for the paired reads.",
    "HebCup": "Makes a unique hash Key For the paired reads."
}
{
    "Origin": "To provide custom values for any of the parameters, you must\nmodify the group after creating it using",
    "Reference": "To provide custom values for any of the parameters, you must modify the\ngroup after creating it using ModifyDBClusterParameterGroup.",
    "HebCup": "To provide custom values for any of the parameters, you must\nmodify the group after creating it using"
}
{
    "Origin": "Parses the 'ResourceInfo' annotation and builds swagger operation.",
    "Reference": "Parses the 'ResourceInfo' annotation and builds openApi operation.",
    "HebCup": "Parses the 'ResourceInfo' annotation and builds openApi operation."
}
{
    "Origin": "Get the object being interacted with.",
    "Reference": "Get the object being interacted.",
    "HebCup": "Get the object being Interacted."
}
{
    "Origin": "Set to true to use the runtimetimer thread for the work, or false to use the current thread.",
    "Reference": "Set to true to use the runtime timer thread for the work, or false to use the current thread.",
    "HebCup": "Set to true to use the runtimetimer thread for the work, or false to use the current thread."
}
{
    "Origin": "This is necessary because this class only keeps {@link WeakReference}s to the\n{@link FCPPluginClient} objects.",
    "Reference": "This is necessary because this class only keeps {@link WeakReference}s to the\n{@link FCPPluginConnection} objects.",
    "HebCup": "This is necessary because this class only keeps {@link WeakReference}s to the {@link FCPPluginConnection} objects."
}
{
    "Origin": "Send full topology to GMC.",
    "Reference": "Send full topology to Management Console.",
    "HebCup": "Send full topology to Console."
}
{
    "Origin": "Objects of the following type(s) are allowed in the list\n{@link Element }",
    "Reference": "Objects of the following type(s) are allowed in the list\n{@link Object }",
    "HebCup": "Objects of the following type (s) are allowed in the list {@link Object}"
}
{
    "Origin": "This method also sets the {@link #setCreatedSecondaryUnit()}.",
    "Reference": "This method also sets the {@link #setSecondaryUnitIdOnLoad(long)}.",
    "HebCup": "This method also sets the {@link #setCreatedSecondaryUnit()}."
}
{
    "Origin": "Verifies that no proxied assertion methods have failed.",
    "Reference": "Verifies that no soft assertions have failed.",
    "HebCup": "Verifies that no proxied assertion methods have failed."
}
{
    "Origin": "Decorates all {@link Service}s with the specified {@code decorator}.",
    "Reference": "Decorates all {@link HttpService}s with the specified {@code decorator}.",
    "HebCup": "Decorates all {@link Service}s with the specified {@code decorator}."
}
{
    "Origin": "Gets the list of registrar:set-of-threat-match pairings from the file in GCS.",
    "Reference": "Gets the entire set of registrar:set-of-threat-match pairings from the most recent report file\nin GCS.",
    "HebCup": "Gets the list of registrar:set-of-threat-match pairings from the file in getFrom ."
}
{
    "Origin": "Get UPC/EAN.",
    "Reference": "Get CU-UPC.",
    "HebCup": "get UPC _ CU/EAN."
}
{
    "Origin": "Returns the class name remote service.",
    "Reference": "Returns the journal article remote service.",
    "HebCup": "Returns the journal Article remote service."
}
{
    "Origin": "Get an iterator to the vector contents.",
    "Reference": "Get an iterator to the double[] contents.",
    "HebCup": "Get an iterator to the double contents."
}
{
    "Origin": "Creates a {@code For}-comprehension of 6 Iterables.",
    "Reference": "Creates a {@code For}-comprehension of 6 Options.",
    "HebCup": "Creates a {@code For}-comprehension of 6 Iterables."
}
{
    "Origin": "If the variable was set, a configuration {@link ConfigurationEvent event} will be passed to\nall registered listeners.",
    "Reference": "If the variable was set, a CONFIGURATION {@link ConfigurationEvent event} will be passed to\nall registered listeners.",
    "HebCup": "If the variable was set , a CONFIGURATION {@link ConfigurationEvent event} will be passed to all registered listeners."
}
{
    "Origin": "Any sensitivities of the same type will be combined using\n{@link CurrencyParameterSensitivities#combinedWith(CurrencyParameterSensitivities)}.",
    "Reference": "Any sensitivities of the same type will be combined as though using\n{@link CurrencyParameterSensitivities#mergedWith(CurrencyParameterSensitivities)}.",
    "HebCup": "Any sensitivities of the same type will be combined using {@link CurrencyParameterSensitivities#mergedWith (CurrencyParameterSensitivities)}."
}
{
    "Origin": "Gets the ID for the given byte value.",
    "Reference": "Gets the specified ID.",
    "HebCup": "Gets the ID for the given int value."
}
{
    "Origin": "Gets the type against which the expression is tested.",
    "Reference": "Gets the wrapped type node.",
    "HebCup": "Types the type against which the expression is tested."
}
{
    "Origin": "Run an MRTask Job to add up sums in @_sums",
    "Reference": "Run an MRTask Job to count non-zero elements per column.",
    "HebCup": "Run an MRTask Job to add up sums in @_sums"
}
{
    "Origin": "Detects whether a java agent is attached.",
    "Reference": "Detects whether a Java agent is specified in the VM arguments.",
    "HebCup": "Detects whether a java agent is attached."
}
{
    "Origin": "Returns the inetAddress from where the authentication attempt occurs.",
    "Reference": "Returns the host name or IP string from where the authentication attempt occurs.",
    "HebCup": "Returns the String from where the authentication attempt occurs."
}
{
    "Origin": "Creates an audit entry for the 'service version updated' event.",
    "Reference": "Creates an audit entry for the 'API version updated' event.",
    "HebCup": "Creates an audit entry for the 'api Version Updated' event."
}
{
    "Origin": "Applications should use the {@code with(WithAdjuster)} method on the\ndate-time object to make the adjustment passing this as the argument.",
    "Reference": "Applications should use the {@code with(TemporalAdjuster)} method on the\ndate-time object to make the adjustment passing this as the argument.",
    "HebCup": "Applications should use the {@code with (WithAdjuster)} method on the date-time object to make the Into passing this as the argument."
}
{
    "Origin": "Stores XCAP_PASSWORD property.",
    "Reference": "Stores OPT_CLIST_PASSWORD property.",
    "HebCup": "Stores OPT_PASSWORD property."
}
{
    "Origin": "Accepts only URLs with 'file' protocol.",
    "Reference": "Accepts only {@link URL}s with 'file' protocol.",
    "HebCup": "Accepts only URLs with 'file' protocol."
}
{
    "Origin": "Construct a trident data source.",
    "Reference": "Construct a streams data source.",
    "HebCup": "Construct a Streams Data Source."
}
{
    "Origin": "Test of setParams method, of class NewAgentConnector.",
    "Reference": "Test of addMetric method, of class NewAgentConnector.",
    "HebCup": "Test of addMetric method , of class NewAgentConnector."
}
{
    "Origin": "Otherwise if the object is from a {@code java} package, returns the result of {@code toString}.",
    "Reference": "If the object is from a {@code java} package, returns the result of {@code toString}.",
    "HebCup": "Otherwise if the object is from a {@code java} package, returns the result of {@code toString}."
}
{
    "Origin": "If the caller's module is this module then update this module to\nopen the given package to the given module.",
    "Reference": "If this module has opened a package to at least the caller\nmodule then update this module to open the package to the given module.",
    "HebCup": "If the caller's module is this module then update this module to\nopen the given package to the given module."
}
{
    "Origin": "Obtains an instance from the specified unique name.",
    "Reference": "Obtains an instance from the specified name.",
    "HebCup": "Obtains an instance from the specified name."
}
{
    "Origin": "Code snippets for {@link ConfigurationAsyncClient#addSetting(String, String, String)}",
    "Reference": "Code snippets for {@link ConfigurationAsyncClient#addConfigurationSetting(String, String, String)}",
    "HebCup": "Code snippets for {@link ConfigurationAsyncClient#addConfigurationSetting (String , String , String)}"
}
{
    "Origin": "Note: returned indent is not set to be  to it's direct parent block",
    "Reference": "Note: returned indent is not set to be {@code 'relative'} to it's direct parent block",
    "HebCup": "Note: returned indent is not set to be  to it's direct parent block"
}
{
    "Origin": "See Immutable Set Static Factory Methods for details.",
    "Reference": "See Unmodifiable Sets for details.",
    "HebCup": "See Unmodifiable Set Static Factory Methods for details."
}
{
    "Origin": "Returns default capabilities of the classifier.",
    "Reference": "Returns default capabilities of the classifier tree.",
    "HebCup": "Capabilities default capabilities of the classifier."
}
{
    "Origin": "Gets the value of the value property.",
    "Reference": "Gets the value of the ddl property.",
    "HebCup": "Gets the value of the value property."
}
{
    "Origin": "Uses regular and super source compilation unit type name indexes to determine whether a\ncompilation unit of any kind is present that matches the given type name.",
    "Reference": "Uses regular and super source compilation unit type source name indexes to determine whether a\ncompilation unit of any kind is present that matches the given type source name.",
    "HebCup": "Uses regular and Super Source Compilation Unit Type Source name indexes to determine whether a compilation unit of any kind is present that matches the given type name."
}
{
    "Origin": "This version avoids any possibility of overflow.",
    "Reference": "This version avoids certain types of overflow.",
    "HebCup": "This version avoids any possibility of overflow."
}
{
    "Origin": "Code snippets for {@link BlobAsyncClientBase#startCopyFromURL(String)}",
    "Reference": "Code snippets for {@link BlobAsyncClientBase#beginCopy(String, Duration)}",
    "HebCup": "Code snippets for {@link BlobAsyncClientBase#beginCopy (String)}"
}
{
    "Origin": "Get the Date that this Token was Created",
    "Reference": "Get the ZonedDateTime that this Token was Created",
    "HebCup": "Get the ZonedDateTime that this Token was Created"
}
{
    "Origin": "Scheduler:\n {@code onErrorResumeNext} does not operate by default on a particular {@link Scheduler}.",
    "Reference": "Scheduler:\n {@code onErrorResumeWith} does not operate by default on a particular {@link Scheduler}.",
    "HebCup": "Scheduler: {@code onErrorResumeWith} does not operate by default on a particular {@link Scheduler}."
}
{
    "Origin": "Returns an immutable list containing one element.",
    "Reference": "Returns an unmodifiable list containing one element.",
    "HebCup": "Returns an Unmodifiable list containing one element."
}
{
    "Origin": "See {@link #recordProgramRunning(ProgramId, String, long, String, byte[])}",
    "Reference": "See {@link #recordProgramRunning(ProgramRunId, long, String, byte[])}",
    "HebCup": "See {@link #recordProgramRunning(ProgramRunId, String, long, String, byte[])}"
}
{
    "Origin": "Gets the {@link EncryptionScope} used to encrypt this blob's content on the server.",
    "Reference": "Gets the {@code encryption scope} used to encrypt this blob's content on the server.",
    "HebCup": "Gets the {@link protected} used to encrypt this blob's content on the server."
}
{
    "Origin": "'s Slurp Crawler * @param value\nthe value to set.",
    "Reference": "* @param value the value to set.",
    "HebCup": "'s Slurp Crawler * @param value\nthe value to set."
}
{
    "Origin": "Gets the value of the 'InMemory' field",
    "Reference": "Gets the value of the 'inMemory' field.",
    "HebCup": "Gets the value of the 'inMemory' field"
}
{
    "Origin": "Construct a new instance of an {@code Execution} that finished with the\nprovided {@link TestExecutionResult}.",
    "Reference": "Create a new instance of an {@code Execution} that finished with the\nprovided {@link TestExecutionResult}.",
    "HebCup": "Construct a new instance of an {@code Execution} that finished with the\nprovided {@link TestExecutionResult}."
}
{
    "Origin": "Gets the prefix from a full filename, such as \nor .",
    "Reference": "Gets the prefix from a full fileName, such as \nor .",
    "HebCup": "Gets the prefix from a full fileName , such as or ."
}
{
    "Origin": "For localizing the error message, use\n{@link #setRequired(SerializableFunction)}.",
    "Reference": "For localizing the error message, use\n{@link #asRequired(ErrorMessageProvider)}.",
    "HebCup": "For localizing the error message , use {@link#asRequired (SerializableFunction)}."
}
{
    "Origin": "append {@link ProgramRunIdFields} and flush to file.",
    "Reference": "append {@link ProgramRunInfo} and flush to file.",
    "HebCup": "append {@link ProgramRunInfo} and flush to file."
}
{
    "Origin": "Setter for {@link #allowMethods}",
    "Reference": "Setter for {@link #allowedHeaders}",
    "HebCup": "Setter for {@link#allowedHeaders}"
}
{
    "Origin": "Nullifies readPosition and listeners.",
    "Reference": "Nullifies readLocator and listeners.",
    "HebCup": "Nullifies readLocator and listeners."
}
{
    "Origin": "Convert to primitive types, returning default value if text is null.",
    "Reference": "Convert to character, returning default value if text is inconvertible.",
    "HebCup": "Convert to primitive types, returning default value if text is null."
}
{
    "Origin": "If the original qualifier has no array length offsets, then UNKNOWN is\nreturned.",
    "Reference": "If the original qualifier has no sequence length\noffsets, then UNKNOWN is returned.",
    "HebCup": "If the original qualifier has no Sequence Length offsets, then UNKNOWN is returned."
}
{
    "Origin": "Must be called in inside a table lock",
    "Reference": "Must be called from inside a table lock",
    "HebCup": "Must be called in inside a table lock"
}
{
    "Origin": "Obtains an instance from the specified unique name.",
    "Reference": "Obtains an instance from the specified name.",
    "HebCup": "Obtains an instance from the specified name."
}
{
    "Origin": "Default is",
    "Reference": "Default is  second",
    "HebCup": "Default is"
}
{
    "Origin": "Restore a LockableRandomAccessThing from a DataInputStream.",
    "Reference": "Restore a LockableRandomAccessBuffer from a DataInputStream.",
    "HebCup": "Restore a LockableRandomAccessBuffer from a DataInputStream."
}
{
    "Origin": "If disabled the map is only shown once.",
    "Reference": "If disabled the map is only shown once for the vertical direction.",
    "HebCup": "If disabled the verticalMap is only shown once."
}
{
    "Origin": "Deletes the entire row of the Sweepable Timestamps table.",
    "Reference": "Deletes complete rows of the Sweepable Timestamps table.",
    "HebCup": "Deletes the entire CoarsePartitions of the Sweepable Timestamps table."
}
{
    "Origin": "Sets the single character used for escaping the quote character inside an already escaped value.",
    "Reference": "Sets the character used for escaping the quote character inside an already escaped value.",
    "HebCup": "Sets the single character used for escaping the) character inside an already escaped value."
}
{
    "Origin": "Then the length of Longest Increasing Subsequence can increase by 1.",
    "Reference": "Increment the length of LIS by 1.",
    "HebCup": "Then the length of Longest Increasing Subsequence can increase by 1."
}
{
    "Origin": "When an interceptor throws an unexpected exception, asynchronous callers are left hanging.",
    "Reference": "When an interceptor throws an unexpected exception, asynchronous calls are canceled.",
    "HebCup": "When an interceptor throws an unexpected exception, asynchronous callers are left hanging."
}
{
    "Origin": "Create the default request used when asking for the upgrade plan on a namespace.",
    "Reference": "Create a request used when asking for the upgrade plan on a namespace.",
    "HebCup": "Create the default request used when asking for the upgrade plan on a namespace."
}
{
    "Origin": "Creates {@link MinimalHttpAsyncClient} instance that provides\nessential HTTP/2 transport only.",
    "Reference": "Creates {@link MinimalHttp2AsyncClient} instance optimized for HTTP/2 multiplexing message\ntransport without advanced HTTP protocol functionality.",
    "HebCup": "Creates {@link MinimalHttp2AsyncClient} instance that provides essential HTTP/2 transport only."
}
{
    "Origin": "Returns the time when the entry will expire based on the supplied expiration function.",
    "Reference": "Returns the time when the entry will expire.",
    "HebCup": "Returns the time when the entry will getWriteExpire based on the supplied expiration function."
}
{
    "Origin": "This is done as element returned by the {@link #getDataSeries()}} is expected\nto be the thread root {@link CaptureNode}.",
    "Reference": "This is done as element returned by the {@link #getDataSeries()}} is expected\nto contain the thread root {@link CaptureNode}.",
    "HebCup": "This is done as element returned by the {@link #getDataSeries()}} is expected\nto be the thread root {@link CaptureNode}."
}
{
    "Origin": "Converts W into a pinhole camera model by inverting W\nand extracting the non-zero elements",
    "Reference": "Converts W into a pinhole camera model by finding the cholesky decomposition",
    "HebCup": "Converts W into a pinhole camera model by inverting W\nand extracting the non-zero elements"
}
{
    "Origin": "Returns the number of output frames that can be read with {@link #getOutput(ShortBuffer)}.",
    "Reference": "Returns the size of output that can be read with {@link #getOutput(ShortBuffer)}, in bytes.",
    "HebCup": "Returns the number of output Output that can be read with {@link#getOutput (ShortBuffer)}."
}
{
    "Origin": "required parameter format:\ndate: dd/MM/yyyy  hour: hh   min:mm",
    "Reference": "required parameter format:\ndate: dd/MM/yyyy  hour: H   min:m",
    "HebCup": "Date parameter format: date: dd/MM/yyyy hour: hh min:mm"
}
{
    "Origin": "An alternative to {@link #setMediaTypes} for use in Java code.",
    "Reference": "An alternative to {@link #setMediaTypes} for programmatic registrations.",
    "HebCup": "An alternative to {@link #setMediaTypes} for use in Java code."
}
{
    "Origin": "Tuple (a simple data structure), this new array becoming the array under test.",
    "Reference": "Tuple (a simple data structure), this new list becoming the object under test.",
    "HebCup": "Tuple (a simple data structure) , this newListAssertInstance array becoming the array under test."
}
{
    "Origin": "Links a new concept to this shard.",
    "Reference": "Links a new concept's vertex to this shard.",
    "HebCup": "Links a new Vertex to this shard."
}
{
    "Origin": "Tests that the writable partitions returned by the {@link HelixClusterManager} is the same as the writable\npartitions in the cluster.",
    "Reference": "Get the writable partitions returned by the {@link HelixClusterManager} as well as those in helix cluster.",
    "HebCup": "get that the writable partitions returned by the {@link HelixClusterManager} is the same as the writable partitions in the cluster."
}
{
    "Origin": "Get image width setting from the image width site setting string.",
    "Reference": "Get image max size setting from the image max size setting string.",
    "HebCup": "get Image Max Size Setting From the image width site setting string."
}
{
    "Origin": "Also, run verify commands in case some\ncollection was using \"$LATEST\" version of this package and got auto-updated.",
    "Reference": "Also, run verify commands in case some\ncollection was using {@link PackagePluginHolder#LATEST} version of this package and got auto-updated.",
    "HebCup": "Also, run verify commands in case some collection was using ``LATEST`` version of this package and got auto-updated."
}
{
    "Origin": "Returns a string representation of this object; useful for testing and debugging.",
    "Reference": "Returns a string representation of this object.",
    "HebCup": "Returns a string representation of this object; useful for testing and debugging."
}
{
    "Origin": "Returns the minimum session timeout.",
    "Reference": "Returns the session timeout.",
    "HebCup": "Returns the minimum session timeout."
}
{
    "Origin": "Helper method to lookup a Dao if it has already been associated with the class.",
    "Reference": "Helper method to lookup a DAO if it has already been associated with the class.",
    "HebCup": "Helper method to lookup a Dao if it has already been associated with the class."
}
{
    "Origin": "Code installed by Truffle is low grade if it was produced in the low grade compilation mode.",
    "Reference": "Returns true if this code was produced in the first tier compilation.",
    "HebCup": "Code installed by Truffle is First Tier if it was produced in the low grade compilation mode."
}
{
    "Origin": "Finds all {@link UnderFileSystemFactory} extensions from the extensions directory and caches.",
    "Reference": "Finds all {@link UnderFileSystemFactory} from the extensions directory and caches.",
    "HebCup": "Finds all {@link UnderFileSystemFactory} extensions from the extensions directory and caches."
}
{
    "Origin": "If we have a JAAS entry use GSSAPI otherwise PLAIN.",
    "Reference": "If we have a username and password use PLAIN otherwise GSSAPI",
    "HebCup": "If we have a JAAS USERNAME use GSSAPI otherwise PLAIN."
}
{
    "Origin": "Sets the class name persistence.",
    "Reference": "Sets the journal article persistence.",
    "HebCup": "Sets the Journal Article Persistence."
}
{
    "Origin": "Create an instance of {@link Response.Fixed.Category }",
    "Reference": "Create an instance of {@link Response.Fixed.Item }",
    "HebCup": "Create an instance of {@link Response.Fixed.Item}"
}
{
    "Origin": "Waits during {@code timeout} until text extracted from specified {@code webElement} by {@link",
    "Reference": "Waits during {@code timeout} until text extracted from specified {@code element} by {@link",
    "HebCup": "Waits during {@code timeout} until text extracted from specified {@code element} by {@link"
}
{
    "Origin": "No validation is performed on the date-time other than ensuring it is not null.",
    "Reference": "No validation is performed other than ensuring it is not null.",
    "HebCup": "No validation is performed on the date-time other than ensuring it is not null."
}
{
    "Origin": "Returns true if the given char sequence is a legal Java identifier,\notherwise false.",
    "Reference": "Returns true if the given string is a legal Java identifier,\notherwise false.",
    "HebCup": "Returns true if the given String is a legal Java identifier, otherwise false."
}
{
    "Origin": "Converts this template into an {@link ArgumentTypeValidator}.",
    "Reference": "Converts this template into an {@link ArgumentTypeStrategy}.",
    "HebCup": "Converts this template into an {@link ArgumentTypeStrategy}."
}
{
    "Origin": "Is grand type supported service.",
    "Reference": "Is grant type supported service.",
    "HebCup": "is Grant Type Supported service."
}
{
    "Origin": "If intervals are not specified in the {@link IntervalArgumentCollection}, they are taken from the\nread-count file.",
    "Reference": "If intervals are not specified in the {@link IntervalArgumentCollection}, they are taken from the\nread-count path.",
    "HebCup": "If intervals are not specified in the {@link IntervalArgumentCollection}, they are taken from the read-Count Path."
}
{
    "Origin": "Assign the (right) barline that ends this measure",
    "Reference": "Assign the (right) PartBarline that ends this measure",
    "HebCup": "Assign the (RightPart) barline that ends this measure"
}
{
    "Origin": "Assert that the given object is lenient equals by ignoring null fields value on other object.",
    "Reference": "Assert that the given object is lenient equals by ignoring null fields value on other object (including inherited\nfields).",
    "HebCup": "assertOtherType that the given object is lenient equals by ignoring null fields value on other object."
}
{
    "Origin": "Creates a cluster using {@link #repoVersion2110} with ZooKeeper installed.",
    "Reference": "Creates a cluster using {@link #mpack211} with ZooKeeper installed.",
    "HebCup": "Creates a cluster using {@link#mpack211} with ZooKeeper installed."
}
{
    "Origin": "Returns the value of the specified option for this configuration or null if the option isn't\nrecognized.",
    "Reference": "Returns the value of the specified native option for this configuration or null if the option\nisn't recognized.",
    "HebCup": "Returns the value of the specified NativeOptions for this configuration or null if the NativeOptions isn't recognized."
}
{
    "Origin": "Integers 0 ... n.",
    "Reference": "Integers 0 ... n - 1.",
    "HebCup": "Integers 0 ... n."
}
{
    "Origin": "Report, in the SampleSheet whose ID is provided, all samples assigned the\ndesired shape.",
    "Reference": "Report, in the SampleSheet whose name is provided, all samples assigned the\ndesired shape.",
    "HebCup": "Report , in the SampleSheet whose name is provided , all samples assigned the desired shape."
}
{
    "Origin": "Opens a {@link TitanGraph} database.",
    "Reference": "Opens a {@link JanusGraph} database.",
    "HebCup": "Opens a {@link JanusGraph} database."
}
{
    "Origin": "{@codesnippet com.azure.keyvault.keys.keyclient.restoreKey#byte}",
    "Reference": "{@codesnippet com.azure.keyvault.keys.keyclient.restoreKeyBackup#byte}",
    "HebCup": "{@codesnippet com.azure.keyvault.keys.keyclient.restoreKeyBackup #byte}"
}
{
    "Origin": "Waits until text extracted from specified {@code webElement} by {@link",
    "Reference": "Waits until text extracted from specified {@code element} by {@link",
    "HebCup": "Waits until text extracted from specified {@code element} by {@link"
}
{
    "Origin": "Equality comparison is performed with this object's {@link #sameKeys}\n method.",
    "Reference": "Equality comparison is performed with this object's {@link #equal}\n method.",
    "HebCup": "Equality comparison is performed with this object's {@link #sameKeys}\n method."
}
{
    "Origin": "Write binary data to a file and reference the file on disk at the\ngiven file node",
    "Reference": "Write binary data from byte[] to a file and reference the file on disk at the\ngiven file node",
    "HebCup": "Write binary data to a void and reference the void on disk at the given void node"
}
{
    "Origin": "Build ghost image based on provided interline value.",
    "Reference": "Update ghost image based on provided interline value.",
    "HebCup": "get ghost image based on provided interline value."
}
{
    "Origin": "Prints out the created certificate\nissuer details when a response has been received.",
    "Reference": "Prints out the\nupdated certificate operation details when a response has been received.",
    "HebCup": "Prints out the created Certificate Operation details when a response has been received."
}
{
    "Origin": "LdapConnection.",
    "Reference": "LdapNetworkConnection.",
    "HebCup": "LdapNetworkConnection."
}
{
    "Origin": "Set the fileContentEncoding property: Specifies which content encodings\nhave been applied to the file.",
    "Reference": "Set the contentEncoding property: Specifies which content encodings\nhave been applied to the file.",
    "HebCup": "Set the contentEncoding property: Specifies which content encodings have been applied to the file."
}
{
    "Origin": "Note that that MySql and SQL Server instead use alterColumnBaseAttributes()",
    "Reference": "Note that that MySql, SQL Server, and HANA instead use alterColumnBaseAttributes()",
    "HebCup": "Note that that MySql and SQL Server instead use alterColumnBaseAttributes()"
}
{
    "Origin": "By default, it calls\nback the registered listener provided by {@link #getListener()}.",
    "Reference": "By default, it calls\nback the registered listener provided by {@link #getSelectionListener()}.",
    "HebCup": "By default , it calls back the registered listener provided by {@link#getSelectionListener ()}."
}
{
    "Origin": "Override to allow subclasses of Skin to be loaded.",
    "Reference": "Override to allow subclasses of Skin to be loaded or the skin instance to be configured.",
    "HebCup": "Override to allow subclasses of Skin to be loaded."
}
{
    "Origin": "Tests resilency when egress device is down.",
    "Reference": "Tests resiliency when egress device is down.",
    "HebCup": "Tests resiliency when egress device is down."
}
{
    "Origin": "Binds the HTTP context.",
    "Reference": "Caches an external property.",
    "HebCup": "Binds the props.put context."
}
{
    "Origin": "Removes the edges beyond lifetime and neurons without emanating edges.",
    "Reference": "Removes staled neurons and the edges beyond lifetime.",
    "HebCup": "Removes the edges beyond lifetime and neurons without emanating edges."
}
{
    "Origin": "parses tags while the span is in scope (for logging for example)",
    "Reference": "Parses socket information and tags while the span is in scope (for logging for example)",
    "HebCup": "parses tags while the span is in scope (for logging for example)"
}
{
    "Origin": "Returns true if the slide is fully hidden",
    "Reference": "Returns true if the slide is in its smallest stage",
    "HebCup": "Returns true if the slide is fully Minimized"
}
{
    "Origin": "Create or obtain a {@link CallableStatement} from the pool.",
    "Reference": "Creates or obtains a {@link CallableStatement} from the pool.",
    "HebCup": "Create or obtain a {@link CallableStatement} from the pool."
}
{
    "Origin": "Gets whether or not the configuration setting is locked.",
    "Reference": "Gets whether or not the configuration setting is read-only.",
    "HebCup": "Gets whether or not the configuration setting is Read Only."
}
{
    "Origin": "Send a message to a given endpoint.",
    "Reference": "Send a message to a given node.",
    "HebCup": "Send a message to a given Node."
}
{
    "Origin": "Similar to {@link #whenOrElse(boolean, Action, Action)}, except obtains the action instance from the registry by the given type.",
    "Reference": "Similar to {@link #when(boolean, Action, Action)}, except obtains the action instance from the registry by the given type.",
    "HebCup": "Similar to {@link#when (boolean , Action , Action)} , except obtains the action instance from the registry by the given type."
}
{
    "Origin": "The\nsystem modules are typically linked into the Java run-time image.",
    "Reference": "The\nsystem modules are the modules in the Java run-time image.",
    "HebCup": "The\nsystem modules are typically linked into the Java run-time image."
}
{
    "Origin": "Code snippets for {@link BlobClientBase#startCopyFromURL(String)}",
    "Reference": "Code snippets for {@link BlobClientBase#beginCopy(String, Duration)}",
    "HebCup": "Code snippets for {@link BlobClientBase#getValueFromURL(String)}"
}
{
    "Origin": "In order to apply the rotation transformation to an existing transformation,\nuse {@link #rotate(Quaterniond) rotate()} instead.",
    "Reference": "In order to apply the rotation transformation to an existing transformation,\nuse {@link #rotate(Quaterniondc) rotate()} instead.",
    "HebCup": "In order to apply the rotation transformation to an existing transformation, use {@link #rotate(Quaterniondc) rotate()} instead."
}
{
    "Origin": "For an interface parent (MUST be an interface), returns set of all subinterfaces.",
    "Reference": "For an interface parent (MUST be an interface), returns set of all subinterfaces including .",
    "HebCup": "For an interface parent (MUST be an interface), returns set of all result."
}
{
    "Origin": "Called by FastBatchingCellReader.loadAggregation where the",
    "Reference": "Called by FastBatchingCellReader.load where the",
    "HebCup": "Called by FastBatchingCellReader.loadAggregation where the"
}
{
    "Origin": "Force triggering of a job for given application.",
    "Reference": "Force triggering of a job for given instance.",
    "HebCup": "Force triggering of a job for given application."
}
{
    "Origin": "Registers a callback to be invoked when a view type change is done.",
    "Reference": "Sets a listener to be called when a view type change is done.",
    "HebCup": "Registers a callback to be invoked when a view type change is done."
}
{
    "Origin": "This is the same than the column type, except for collections where it's the 'valueComparator'\nof the collection.",
    "Reference": "This is the same than the column type, except for non-frozen collections where it's the 'valueComparator'\nof the collection.",
    "HebCup": "This is the same than the column type, except for collections where it's the 'valueComparator'\nof the collection."
}
{
    "Origin": "Add a server to the known list of servers.",
    "Reference": "Remove an existing server from the list of known servers.",
    "HebCup": "removeIf a server to the known list of servers."
}
{
    "Origin": "This feature collects stack trace in advance, when task is created, so that\nif the task throws the exception then the parent stack trace is appended to it.",
    "Reference": "This feature collects stack trace in advance, when task is created, so that\nif a task throws an exception then the parent stack trace is appended to it.",
    "HebCup": "This feature collects stack trace in advance, when task is created, so that\nif the task throws the exception then the parent stack trace is appended to it."
}
{
    "Origin": "Partial query to filter out CC and Java implicit dependencies.",
    "Reference": "Partial query to filter out implicit dependencies.",
    "HebCup": "Partial query to filter out CC and Java implicit dependencies."
}
{
    "Origin": "Test of var method, of class KernelDensity.",
    "Reference": "Test of variance method, of class KernelDensity.",
    "HebCup": "Test of Variance method , of class KernelDensity."
}
{
    "Origin": "Desintalls an artifact from the mule container installation.",
    "Reference": "Uninstalls an artifact from the Mule container installation.",
    "HebCup": "Desintalls an artifact from the mule container installation."
}
{
    "Origin": "Registers additional Madvoc components that will be registered after default components.",
    "Reference": "Registers additional Madvoc components after the registration of default components.",
    "HebCup": "Registers additional Madvoc components that will be registered after default components."
}
{
    "Origin": "Retrieves the metadata for the specified {@link NamespacedEntityId}.",
    "Reference": "Retrieves the metadata for the specified {@link MetadataEntity}.",
    "HebCup": "Retrieves the metadata for the specified {@link MetadataEntity}."
}
{
    "Origin": "Writes a collection of values to a character stream.",
    "Reference": "Writes a sequence of values to a character stream.",
    "HebCup": "Writes a collection of values to a character stream."
}
{
    "Origin": "draws the description text in the bottom right corner of the chart",
    "Reference": "Draws the description text in the bottom right corner of the chart (per default)",
    "HebCup": "draws the Description.is text in the bottom right corner of the chart"
}
{
    "Origin": "If the cipher is an asymmetric cipher (different keys for encryption and decryption, such as public/private key\npairs), you should set your encryption key via one of these methods:",
    "Reference": "If the CipherService is an asymmetric CipherService (different keys for encryption and decryption, such as\npublic/private key pairs), you should set your encryption key via one of these methods:",
    "HebCup": "If the CipherService is an asymmetric CipherService (different keys for encryption and decryption , such as public/private key pairs) , you should set your encryption key via one of these methods:"
}
{
    "Origin": "Sets the server port.",
    "Reference": "Sets the DataSource.",
    "HebCup": "Sets the server HiveDataSource."
}
{
    "Origin": "Iterate over all the {@link SecretProperties\nsecret} by page and call {@link SecretClient#getSecret(SecretProperties baseSecret)} .",
    "Reference": "Iterate over all the {@link SecretProperties\nsecret} by page and call {@link SecretClient#getSecret(String, String)}.",
    "HebCup": "Iterate over all the {@link SecretProperties PropertiesOfSecrets} by page and call {@link SecretClient#getSecret(SecretProperties baseSecret)} ."
}
{
    "Origin": "The returned RxDao is a special DAO that let's you interact with Rx Observables.",
    "Reference": "The returned RxDao is a special DAO that let's you interact with Rx Observables using RX's IO scheduler for\nsubscribeOn.",
    "HebCup": "The returned RxDao is a special DAO that let's you interact with Rx Observables."
}
{
    "Origin": "Return all the keys that mapped to {@code value} at {@code timestamp}.",
    "Reference": "Return all the keys that mapped to the {@code record} at\n{@code timestamp}.",
    "HebCup": "Return all the keys that mapped to {@code record} at {@code timestamp}."
}
{
    "Origin": "Return a simulated for each block in the Database.",
    "Reference": "stored on disk) block in\nthe Database.",
    "HebCup": "Block a simulated for each block in the Database."
}
{
    "Origin": "lhsPattern := QUESTION?",
    "Reference": "lhsPattern := xpathPrimary |\n              ( QUESTION?",
    "HebCup": "lhsPattern := QUESTION?"
}
{
    "Origin": "Set the valueType.",
    "Reference": "Set the newType.",
    "HebCup": "Set the newType."
}
{
    "Origin": "'s Slurp Crawler * @param value\nthe value to set.",
    "Reference": "* @param value the value to set.",
    "HebCup": "'s Slurp Crawler * @param value\nthe value to set."
}
{
    "Origin": "Helper method that checks if either the deprecated or new SO_KEEPALIVE property is present and enabled on an IIOP\nlistener, giving precedence to the new property if both are present.",
    "Reference": "Helper method that checks if either the deprecated or new SO_KEEPALIVE property is enabled on an IIOP\nlistener, giving precedence to the new property if both are present.",
    "HebCup": "Helper method that checks if either the deprecated or new SO_KEEPALIVE property is present and Property Enabled On an IIOP listener, giving precedence to the new property if both are present."
}
{
    "Origin": "Get software version info\n### Functional Description:   Public software version information.",
    "Reference": "Get software version information\n### Functional Description:   Public software version information.",
    "HebCup": "Get software version info\n### Functional Description:   Public software version information."
}
{
    "Origin": "The logAnyFailure parameter indicates whether or not AlluxioExceptions are expected results\n(for example it would be false for the exists() call).",
    "Reference": "The failureOk parameter indicates whether or not AlluxioExceptions are expected results (for\nexample it would be false for the exists() call).",
    "HebCup": "The failureOk parameter indicates whether or not AlluxioExceptions are expected results (for example it would be false for the exists () call)."
}
{
    "Origin": "Get name of the Cosmos DB SQL storedProcedure.",
    "Reference": "Get the resource value.",
    "HebCup": "Get name of the Cosmos DB resourceProcedure."
}
{
    "Origin": "Returns the modules specified in the config file.",
    "Reference": "Returns the available configurations.",
    "HebCup": "Returns the modules specified in the config file."
}
{
    "Origin": "Returns a set of unshifted IP addresses.",
    "Reference": "Returns an unshifted IP address.",
    "HebCup": "Returns a set of return IP addresses."
}
{
    "Origin": "{@code params}, {@code requestType} and {@code options} defaults to {@code null}.",
    "Reference": "{@code params} and {@code options} defaults to {@code null}.",
    "HebCup": "{@code params}, {@code requestType} and {@code options} defaults to {@code null}."
}
{
    "Origin": "Creates new {@link AggregationExpression} that returns the hour portion of a date as a number between 0 and 23 in\nthe factory timezone (default UTC).",
    "Reference": "Creates new {@link AggregationExpression} that returns the hour portion of a date as a number between 0 and 23.",
    "HebCup": "Creates new {@link AggregationExpression} that returns the Hour.hour portion of a date as a number between 0 and 23 in the factory timezone (default UTC)."
}
{
    "Origin": "Code snippet for {@link BlockBlobAsyncClient#stageBlockFromURL(String, URL, BlobRange)}",
    "Reference": "Code snippet for {@link BlockBlobAsyncClient#stageBlockFromURL(String, String, BlobRange)}",
    "HebCup": "Code snippet for {@link BlockBlobAsyncClient#stageBlockFromURL (String , Url , BlobRange)}"
}
{
    "Origin": "Returns a string representation of this object; useful for testing and debugging.",
    "Reference": "Returns a string representation of this object.",
    "HebCup": "Returns a string representation of this object; useful for testing and debugging."
}
{
    "Origin": "If you specify both tag keys and tag values in the same request,",
    "Reference": "If you specify both tag keys and tag values in the same request, Amazon",
    "HebCup": "If you specify both tag keys and tag values in the same request,"
}
{
    "Origin": "Compares this charset with the given charset.",
    "Reference": "Compares this charset to another.",
    "HebCup": "Compares this that with the given charset."
}
{
    "Origin": "Returns the last sync d l object in the ordered set where companyId = ?",
    "Reference": "Returns the last sync d l object in the ordered set where modifiedTime > ?",
    "HebCup": "Returns the last sync d l object in the ordered set where companyId = ?"
}
{
    "Origin": "Returns if this has any mapping for the specified column definition.",
    "Reference": "Returns if this has any mapping for the specified cell.",
    "HebCup": "Returns if this has any mapping for the specified String."
}
{
    "Origin": "IMPORTANT:A TypeAlreadyExists fault is returned if the type\nalready exists in the domain.",
    "Reference": "A  fault is returned if the type\nalready exists in the domain.",
    "HebCup": "IMPORTANT:A TypeAlreadyExists fault is returned if the type\nalready exists in the domain."
}
{
    "Origin": "Issues mCaptureRequestConfigs to {@link CameraCaptureSession}.",
    "Reference": "Issues mCaptureConfigs to {@link CameraCaptureSession}.",
    "HebCup": "Issues mCaptureConfigs to {@link CameraCaptureSession}."
}
{
    "Origin": "This merges the two objects - {@code this} and the specified date -\nto form an instance of {@code ZonedDateTime}.",
    "Reference": "This merges the two objects - {@code this} and the specified date -\nto form an instance of {@code OffsetDateTime}.",
    "HebCup": "This merges the two objects - {@code this} and the specified date - to form an instance of {@code OffsetDateTime}."
}
{
    "Origin": "Configure a sslConfig for the cluster using the legacy configuration",
    "Reference": "Configure a SSLConfig.Builder for the cluster using the legacy configuration",
    "HebCup": "Configure a SSLConfig.Builder for the cluster using the legacy configuration"
}
{
    "Origin": "Get a color string from a warning index",
    "Reference": "Get a color from a warning index",
    "HebCup": "Get a color int from a warning index"
}
{
    "Origin": "Use the PluggableParameters directly...",
    "Reference": "Use the TrainingParameters directly...",
    "HebCup": "Use the PluggabletrainingParameters directly..."
}
{
    "Origin": "Sets the value of the spid property.",
    "Reference": "Sets the value of the pic property.",
    "HebCup": "Sets the value of the Pic property."
}
{
    "Origin": "Sets the top border for a region of cells by manipulating the cell style of the individual\ncells on the top",
    "Reference": "Sets the top border style for a region of cells by manipulating the cell style of the individual\ncells on the top",
    "HebCup": "Sets the top border for a region of cells by manipulating the cell style of the individual\ncells on the top"
}
{
    "Origin": "Get the iterable of all {@link RankedProvider providers} (custom and default) registered for the given service provider\ncontract in the underlying {@link InstanceManager instance manager} container.",
    "Reference": "Get the iterable of all {@link RankedProvider providers} (custom and default) registered for the given service provider\ncontract in the underlying {@link InjectionManager injection manager} container.",
    "HebCup": "Get the iterable of all {@link RankedProvider providers} (custom and default) registered for the given service provider contract in the underlying {@link InjectionManager instance manager} container."
}
{
    "Origin": "This method obtains all necessary information about fields from entity\nand returns a List of FieldMetadata.",
    "Reference": "This method obtains all necessary information about fields from entity\nand returns a List of FieldItem.",
    "HebCup": "This method obtains all necessary information about fields from entity and returns a List of FieldItem."
}
{
    "Origin": "Test of print method, of class IntegerHistogram.",
    "Reference": "Test of print method, of class IntegerPeakFunction.",
    "HebCup": "Test of print method, of class IntegerPeakFunction."
}
{
    "Origin": "Instead displays the videos only, does not map videos to participants and\ndoes not display participants who do not have videos.",
    "Reference": "In\nsuch a case displays the videos only, does not map videos to participants\nand does not display participants who do not have videos.",
    "HebCup": "Instead displays the videos only, does not map videos to participants and\ndoes not display participants who do not have videos."
}
{
    "Origin": "This signature is the one specified in the\nconstructor (see {@link #SignatureReader(String) SignatureReader}).",
    "Reference": "This signature is\nthe one specified in the constructor (see {@link #SignatureReader}).",
    "HebCup": "This signatureValue is the one specified in the constructor (see {@link#SignatureReader (String) SignatureReader})."
}
{
    "Origin": "Second scenario: press button -> two windows appear, press button in the\n2nd window -> 3rd window appears on top, press Esc three times -> all\nwindows should be closed",
    "Reference": "Second scenario: press first button -> two windows appear, press button\nin the 2nd window -> 3rd window appears on top, press Esc three times ->\nall windows should be closed",
    "HebCup": "Second scenario: press button -> two windows appear, press button in the 2nd window -> 3rd window appears on top, press Key three times -> all windows should be closed"
}
{
    "Origin": "For all other attribute types this method throws an",
    "Reference": "For all other attribute types this method throws an Exception.",
    "HebCup": "For all other attribute types this method throws an"
}
{
    "Origin": "Public factory method.",
    "Reference": "public factory method.",
    "HebCup": "Public factory method."
}
{
    "Origin": "Creates a message channel that targets all the online\n{@link Player}s and the console.",
    "Reference": "Creates a message channel that targets all the online\n{@link Player}s and the {@link Server}.",
    "HebCup": "Creates a message channel that targets all the online {@link Player}s and the Server."
}
{
    "Origin": "Generates a code sample for using {@link ShareAsyncClient#createFileWithResponse(String, long, FileHTTPHeaders,",
    "Reference": "Generates a code sample for using {@link ShareAsyncClient#createFileWithResponse(String, long, FileHttpHeaders,",
    "HebCup": "Generates a code sample for using {@link ShareAsyncClient#createFileWithResponse (String , long , FileHttpHeaders ,"
}
{
    "Origin": "lhsPattern := QUESTION?",
    "Reference": "lhsPattern := xpathPrimary |\n              ( QUESTION?",
    "HebCup": "lhsPattern := QUESTION?"
}
{
    "Origin": "Group: common",
    "Reference": "Group: advanced",
    "HebCup": "Group: common"
}
{
    "Origin": "If no authority is found\na default agency is created and returned.",
    "Reference": "If no authority is found\na dummy agency is created and returned.",
    "HebCup": "If no authority is found\na default agency is created and returned."
}
{
    "Origin": "Obtains an instance of {@code LocalDateTime} from a date-time object.",
    "Reference": "Obtains an instance of {@code LocalDateTime} from a temporal object.",
    "HebCup": "Obtains an instance of {@code LocalDateTime} from a date-time object."
}
{
    "Origin": "Get Exclude of Total Calculation.",
    "Reference": "Get Hide Grand Total.",
    "HebCup": "Get Hide Grand Total Calculation."
}
{
    "Origin": "Returns a string representation of this object; useful for testing and debugging.",
    "Reference": "Returns a string representation of this object.",
    "HebCup": "Returns a string representation of this object; useful for testing and debugging."
}
{
    "Origin": "Returns the Java type corresponding to the given internal name.",
    "Reference": "Returns the {@link Type} corresponding to the given internal name.",
    "HebCup": "Returns the Java type corresponding to the given internal name."
}
{
    "Origin": "Generate a ChallengeReason from a string.",
    "Reference": "Generate a ChallengeReasons from a string.",
    "HebCup": "Generate a ChallengeReasons from a string."
}
{
    "Origin": "Create an instance of {@link JAXBElement }{@code <}{@link CTMarkupRange }{@code >}}",
    "Reference": "Create an instance of {@link JAXBElement }{@code <}{@link CTMoveToRangeEnd }{@code >}}",
    "HebCup": "Create an instance of {@link JAXBElement} {@code <} {@link CTMoveToRangeEnd} {@code >}}"
}
{
    "Origin": "Get schema of the Cosmos DB Cassandra table.",
    "Reference": "Get the resource value.",
    "HebCup": "Get TableGetPropertiesResource of the Cosmos DB Cassandra table."
}
{
    "Origin": "Query may be randomly wrapped in a BooleanQuery with a term that matches no documents in\norder to trigger coord logic.",
    "Reference": "Query may be randomly wrapped in a BooleanQuery with a term that matches no documents.",
    "HebCup": "Query may be randomly wrapped in a BooleanQuery with a term that matches no documents in\norder to trigger coord logic."
}
{
    "Origin": "See the DefaultReaderConfig class in the extractionconfigs package\nfor available settings.",
    "Reference": "See the StringsConfig class in the extractionconfigs package\nfor available settings.",
    "HebCup": "See the StringsConfig class in the extractionconfigs package for available settings."
}
{
    "Origin": "List Parts operation requires a multipart upload ID since parts are\nassociated with a single upload.",
    "Reference": "The List Parts operation requires a multipart upload ID since parts are\nassociated with a single upload.",
    "HebCup": "List Parts operation requires a multipart upload ID since parts are\nassociated with a single upload."
}
{
    "Origin": "Returns a string representation of this object; useful for testing and debugging.",
    "Reference": "Returns a string representation of this object.",
    "HebCup": "Returns a string representation of this object; useful for testing and debugging."
}
{
    "Origin": "If there are too many arguments, then the excess arguments are ignored.",
    "Reference": "If there are too many arguments, then the excess arguments are appended to the message.",
    "HebCup": "If there are too many arguments, then the excess arguments are ignored."
}
{
    "Origin": "Returns the object with the settings used for calls to labelAudio.",
    "Reference": "Returns the object with the settings used for calls to getEvaluation.",
    "HebCup": "Returns the object with the settings used for calls to GetEvaluation."
}
{
    "Origin": "Tests the creation of a message authentication code for the sha1 algorithm.",
    "Reference": "Tests the creation of message authentication codes for the sha1 algorithm.",
    "HebCup": "Tests the creation of a message authentication code for the sha1 algorithm."
}
{
    "Origin": "The desired repository for every service and component is changed<",
    "Reference": "The desired mpack for every service group is changed.",
    "HebCup": "The Desired Mpacks for every service and component is changed<"
}
{
    "Origin": "The max party size of the server\n0 or less for no size limit",
    "Reference": "The max party size of the server",
    "HebCup": "The Size party size of the server 0 or less for no size limit"
}
{
    "Origin": "Returns a copy of this ZonedDateTime changing the zone offset to the\nlater of the two valid offsets at a local time-line overlap.",
    "Reference": "Returns a copy of this date-time changing the zone offset to the\nlater of the two valid offsets at a local time-line overlap.",
    "HebCup": "Returns a copy of this ZonedDateTime changing the zone laterOffset to the later of the two valid offsets at a local time-line overlap."
}
{
    "Origin": "This is the case if we find a\nnon-optional association.",
    "Reference": "This is the case if we find a\noptional association.",
    "HebCup": "This is the case if we find a\nnon-optional association."
}
{
    "Origin": "Sets the bytecode compatibility mode",
    "Reference": "Sets the bytecode compatibility level.",
    "HebCup": "Sets the bytecode compatibility mode"
}
{
    "Origin": "Queries this ContactSourceService for SourceContacts\nwhich match a specific query Pattern.",
    "Reference": "Creates query that searches for SourceContacts\nwhich match a specific query Pattern.",
    "HebCup": "Queries this ContactQueryService for SourceContacts which match a specific query Pattern."
}
{
    "Origin": "Get the allowed users on some resources.",
    "Reference": "Get the allowed users on a resource.",
    "HebCup": "Get the allowed users on some resources."
}
{
    "Origin": "Gets the name minus the path from a full filename.",
    "Reference": "Gets the name minus the path from a full fileName.",
    "HebCup": "Gets the name minus the path from a full fileName."
}
{
    "Origin": "Converts the specified article create/update/latest comment time (long) to date type.",
    "Reference": "Converts the specified article create/update/latest comment time (long) to date type and format str.",
    "HebCup": "Converts the specified final Date create create/update/latest comment time (long) to date type."
}
{
    "Origin": "Returns an immutable map containing seven mappings.",
    "Reference": "Returns an unmodifiable map containing seven mappings.",
    "HebCup": "Returns an Unmodifiable map containing seven mappings."
}
{
    "Origin": "Returns whether re-ordering of files is needed.",
    "Reference": "Returns whether dependency management is enabled.",
    "HebCup": "Returns whether re-ordering of files is needed."
}
{
    "Origin": "The state of playback should be updated to\n{@link SessionPlayer2#PLAYER_STATE_PAUSED} after the prefetch is done.",
    "Reference": "The state of playback should be updated to\n{@link SessionPlayer2#PLAYER_STATE_PAUSED} after the prepare is done.",
    "HebCup": "The state of playback should be updated to {@link SessionPlayer2#PLAYER_STATE_PAUSED} after the Prepare is done."
}
{
    "Origin": "Loads the values of a table stored in a text file as a ResultsTable.",
    "Reference": "Loads the values of a table stored at a URL as a ResultsTable.",
    "HebCup": "Loads the values of a table stored in a text file as a return."
}
{
    "Origin": "Resolves a collection of root modules, with service binding, to create\nconfiguration.",
    "Reference": "Resolves a collection of root modules to create a configuration.",
    "HebCup": "Resolves a collection of root modules, with service binding, to create\nconfiguration."
}
{
    "Origin": "Creates a new unformatted {@link TranslatableText.Builder} with the given\n{@link Translation} and arguments.",
    "Reference": "Creates a new unformatted {@link TranslatableText} builder with the given\n{@link Translation} and arguments.",
    "HebCup": "Creates a new unformatted {@link TranslatableText.Builder} with the given\n{@link Translation} and arguments."
}
{
    "Origin": "Checks permission to a cluster action for a given request.",
    "Reference": "Checks permission to a cluster action for a given request in the context of given\nauthentication.",
    "HebCup": "Checks permission to a cluster action for a given request."
}
{
    "Origin": "Returns the first registered domain service implementing the requested type.",
    "Reference": "Returns a domain service implementing the requested type.",
    "HebCup": "Returns the Empty registered domain service implementing the requested type."
}
{
    "Origin": "Creates a default DBScan",
    "Reference": "Creates a default DBSCAN",
    "HebCup": "Creates a default DBSCAN"
}
{
    "Origin": "description = \"WELD-80\"",
    "Reference": "description = \"Test for passivation of SFSB\"",
    "HebCup": "description = \"WELD-80\""
}
{
    "Origin": "Code snippet for {@link BlockBlobAsyncClient#stageBlockWithResponse(String, Flux, long, String)}",
    "Reference": "Code snippet for {@link BlockBlobAsyncClient#stageBlockWithResponse(String, Flux, long, byte[], String)}",
    "HebCup": "Code snippet for {@link BlockBlobAsyncClient#stageBlockWithResponse(String, Flux, long, String)}"
}
{
    "Origin": "Code snippets for {@link BlobClient#setHTTPHeaders(BlobHTTPHeaders)}",
    "Reference": "Code snippets for {@link BlobClient#setHTTPHeaders(BlobHttpHeaders)}",
    "HebCup": "Code snippets for {@link BlobClient#setHTTPHeaders(BlobHttpHeaders)}"
}
{
    "Origin": "If neither continuing or ended will default to {@link ShowTools.Status#UNKNOWN}.",
    "Reference": "Falls back to {@link ShowTools.Status#UNKNOWN}.",
    "HebCup": "If neither continuing or ended will default to {@link ShowTools.Status#UNKNOWN}."
}
{
    "Origin": "Returns a string representation of this object; useful for testing and debugging.",
    "Reference": "Returns a string representation of this object.",
    "HebCup": "Returns a string representation of this object; useful for testing and debugging."
}
{
    "Origin": "TODO: Change this into getTrackInfo()",
    "Reference": "TODO: Change this into getTrackInfo() (b/132928418)",
    "HebCup": "TODO: Change this into getTrackInfo()"
}
{
    "Origin": "Sets decryption as failed",
    "Reference": "Sets crypto job as failed",
    "HebCup": "Sets CryptoJob as failed"
}
{
    "Origin": "Indicates if the processing loop can continue.",
    "Reference": "Returns the chunk state.",
    "HebCup": "Indicates if the processing loop get continue."
}
{
    "Origin": "The current checkpoint which can be advanced by {@link #markSeqNoAsCompleted(long)}.",
    "Reference": "The current persisted checkpoint which can be advanced by {@link #markSeqNoAsPersisted(long)}.",
    "HebCup": "The current persistedCheckpoint.get which can be advanced by {@link#markSeqNoAsCompleted (long)}."
}
{
    "Origin": "Obtains an instance from the specified unique name.",
    "Reference": "Obtains an instance from the specified name.",
    "HebCup": "Obtains an instance from the specified name."
}
{
    "Origin": "This property is defined by jdbc as for use with\nGUI (or other) tools that might deploy the datasource.",
    "Reference": "This property is defined by JDBC as for use with\nGUI (or other) tools that might deploy the datasource.",
    "HebCup": "This property is defined by jdbc as for use with\nGUI (or other) tools that might deploy the datasource."
}
{
    "Origin": "Returns a string representation of this object; useful for testing and debugging.",
    "Reference": "Returns a string representation of this object.",
    "HebCup": "Returns a string representation of this object; useful for testing and debugging."
}
{
    "Origin": "and repositoryId = ?.",
    "Reference": "and parentFolderId = ?.",
    "HebCup": "and parentFolderId = ?."
}
{
    "Origin": "Tests if this string starts with any specified prefixes.",
    "Reference": "Tests if this CharSequence starts with any specified prefixes.",
    "HebCup": "Tests if this CharSequence starts with any specified prefixes."
}
{
    "Origin": "A {@code DateTimeAccessor} represents some form of date and time information.",
    "Reference": "A {@code TemporalAccessor} represents some form of date and time information.",
    "HebCup": "A {@code DateTimeAccessor} represents some form of date and time information."
}
{
    "Origin": "Add a new {@code Taglet}.",
    "Reference": "Adds a new {@code Taglet}.",
    "HebCup": "Add a new {@code Taglet}."
}
{
    "Origin": "Adds a Log4jBridgeHandler instance to JUL's root logger.",
    "Reference": "Adds a new Log4jBridgeHandler instance to JUL's root logger.",
    "HebCup": "Adds a Log4jBridgeHandler instance to JUL's root logger."
}
{
    "Origin": "Build and setup a new ES settings builder by consulting all Titan config options\nrelevant to TransportClient or Node.",
    "Reference": "Build and setup a new ES settings builder by consulting all JanusGraph config options\nrelevant to TransportClient or Node.",
    "HebCup": "Build and setup a new ES settings builder by consulting all JanusGraph config options relevant to TransportClient or Node."
}
{
    "Origin": "When the file is being requested on this path, null should returned and no exception should be thrown.",
    "Reference": "When the file is being requested on this path, an exception should be thrown.",
    "HebCup": "When the file is being requested on this path, null should returned and no exception should be thrown."
}
{
    "Origin": "Returns the subset of nodes matching the given node type",
    "Reference": "Returns the subset of nodes matching the given node type(s)",
    "HebCup": "Returns the subset of nodes matching the given rest"
}
{
    "Origin": "Locking the date-time to a single offset means that any future calculations,\nsuch as addition or subtraction, are guaranteed to work without any complex\nside effects due to time-zone rules.",
    "Reference": "Setting the date-time to a fixed single offset means that any future\ncalculations, such as addition or subtraction, have no complex edge cases\ndue to time-zone rules.",
    "HebCup": "Locking the date-time to a single offset means that any future calculations,\nsuch as addition or subtraction, are guaranteed to work without any complex\nside effects due to time-zone rules."
}
{
    "Origin": "Return (perhaps after creation) the flock based on provided best sample.",
    "Reference": "Return (perhaps after creation) the tribe based on provided best sample.",
    "HebCup": "Return (perhaps after creation) the Tribe based on provided best sample."
}
{
    "Origin": "Set the connection and socket timeout.",
    "Reference": "Set both the connection and socket timeouts.",
    "HebCup": "Set the connection and socket value."
}
{
    "Origin": "Structural Specification for more details.",
    "Reference": "The\nOWL 2 Structural Specification for more details.",
    "HebCup": "Structural Specification for more details."
}
{
    "Origin": "The {@link EcKeyCreateOptions#getKeyType() keyType} indicates the type of key to create.",
    "Reference": "The {@link CreateEcKeyOptions#getKeyType() keyType} indicates the type of key to create.",
    "HebCup": "The {@link CreateEcKeyOptions#getKeyType () keyType} indicates the type of key to create."
}
{
    "Origin": "Validates whether hash in {@code signatureAlgorithm} is safe to use for digital signature.",
    "Reference": "Validates whether {@code hash} is safe to use for digital signature.",
    "HebCup": "Validates whether hash in {@code hash} is safe to use for digital signature."
}
{
    "Origin": "Retrieves a matching Swagger {@link Property} for a provided ballerina type.",
    "Reference": "Retrieves a matching OpenApi {@link Property} for a provided ballerina type.",
    "HebCup": "Retrieves a matching OpenApi {@link Property} for a provided ballerina type."
}
{
    "Origin": "timed invokeAny(empty collection) throws IAE",
    "Reference": "timed invokeAny(empty collection) throws IllegalArgumentException",
    "HebCup": "timed invokeAny(empty collection) throws IAE"
}
{
    "Origin": "Returns a string representation of this object; useful for testing and debugging.",
    "Reference": "Returns a string representation of this object.",
    "HebCup": "Returns a string representation of this object; useful for testing and debugging."
}
{
    "Origin": "Data are saved to temporary storage only and are accessible during\nthis session life only and only from this session instance.",
    "Reference": "Data is saved to temporary storage only and is accessible during\nthis session life only and only from this session instance.",
    "HebCup": "Data are saved to temporary storage only and are accessible during\nthis session life only and only from this session instance."
}
{
    "Origin": "See Immutable List Static Factory Methods for details.",
    "Reference": "See Unmodifiable Lists for details.",
    "HebCup": "See Unmodifiable List Static Factory Methods for details."
}
{
    "Origin": "or throws a {@link com.liferay.so.NoSuchMemberRequestException} if it could not be found.",
    "Reference": "or throws a {@link NoSuchMemberRequestException} if it could not be found.",
    "HebCup": "or throws a {@link com.liferay.so.NoSuchMemberRequestException} if it could not be found."
}
{
    "Origin": "If --entity parameter has been specified, --interface parameter will be mandatory.",
    "Reference": "If --entity parameter has been specified and we are working under multimodule\nproject, --interface parameter will be mandatory.",
    "HebCup": "If --entity parameter has been specified, --interface parameter will be mandatory."
}
{
    "Origin": "Returns the first router available.",
    "Reference": "Returns the next router available.",
    "HebCup": "Returns the Next Router available."
}
{
    "Origin": "Creates a new SchemaInfoLevel builder with settings for maximum\nschema information.",
    "Reference": "Creates a new SchemaInfoLevel with settings for maximum schema\ninformation.",
    "HebCup": "Creates a new (builder with settings for maximum schema information."
}
{
    "Origin": "Determines whether or not the delete data source action should be enabled",
    "Reference": "Determines whether or not the delete data source action can be enabled.",
    "HebCup": "Determines whether or not the delete data source action should be enabled"
}
{
    "Origin": "Returns the object with the settings used for calls to labelAudio.",
    "Reference": "Returns the object with the settings used for calls to listEvaluationJobs.",
    "HebCup": "Returns the object with the settings used for calls to ListEvaluationJobs."
}
{
    "Origin": "Returns the schema version of the given {@link SharedRealm}.",
    "Reference": "Returns the schema version of the given {@link OsSharedRealm}.",
    "HebCup": "Returns the schema version of the given {@link OsSharedRealm}."
}
{
    "Origin": "However,\nthis can be modified by calling {@link #setReaderFactory(ConfigurationReaderFactory) setReaderFactory}.",
    "Reference": "This can be modified by calling {@link #setReaderFactory(ConfigurationReaderFactory) setReaderFactory}.",
    "HebCup": "However, this can be modified by calling {@link #setReaderFactoryFACTORYConfigurationReaderFactory) setReaderFactory}."
}
{
    "Origin": "Unsafe version of: {@link #shaderc_spvc_result_get_messages result_get_messages}",
    "Reference": "Unsafe version of: {@link #shaderc_spvc_get_workgroup_size get_workgroup_size}",
    "HebCup": "Unsafe version of: {@link #shaderc_spvc_get_workgroup_size result_get_messages}"
}
{
    "Origin": "Create an instance of {@link JAXBElement }{@code <}{@link CTMarkupRange }{@code >}}",
    "Reference": "Create an instance of {@link JAXBElement }{@code <}{@link CTMoveFromRangeEnd }{@code >}}",
    "HebCup": "Create an instance of {@link JAXBElement} {@code <} {@link CTMoveFromRangeEnd} {@code >}}"
}
{
    "Origin": "Load a JavaClass object for the given class name using\nthe CLASSPATH environment variable.",
    "Reference": "Finds a JavaClass object by name.",
    "HebCup": "Load a JavaClass object for the given class name using\nthe CLASSPATH environment variable."
}
{
    "Origin": "Returns a string representation of this object; useful for testing and debugging.",
    "Reference": "Returns a string representation of this object.",
    "HebCup": "Returns a string representation of this object; useful for testing and debugging."
}
{
    "Origin": "\"type\" and \"name\" and a validation logic for the given full key.",
    "Reference": "\"data-type\" and \"name\" and a validation logic for the given full key.",
    "HebCup": "\"type\" and \"name\" and a validation logic for the given full key."
}
{
    "Origin": "Once\nthis method returns, the combined use case configuration can be retrieved with {@link\n#getUseCaseConfiguration()}.",
    "Reference": "Once this\nmethod returns, the combined use case configuration can be retrieved with\n{@link #getUseCaseConfig()}.",
    "HebCup": "Once this method returns, the combined use case configuration can be retrieved with {@link #getUseCaseConfig()}."
}
{
    "Origin": "Start building a new factory class-based service binding.",
    "Reference": "Start building a new supplier class-based service binding.",
    "HebCup": "Start building a new Supplier Class-based service binding."
}
{
    "Origin": "Note that this rule will be inserted in VNI table (table 0).",
    "Reference": "Note that this rule will be inserted in vTag table.",
    "HebCup": "Note that this rule will be inserted in VNI table (table 0)."
}
{
    "Origin": "Starts BookKeeper and sets up RocksDB.",
    "Reference": "Starts BookKeeper.",
    "HebCup": "Starts BookKeeper and sets up RocksDB."
}
{
    "Origin": "Runs the logic to dispatch any responses to the current listeners until {@link #_isRunning} is false.",
    "Reference": "Runs the logic to dispatch any responses to the current listeners until {@link #isRunning} is false.",
    "HebCup": "Runs the logic to dispatch any responses to the current listeners until {@link#isRunning} is false."
}
{
    "Origin": "Consider calling AarResourceRepositoryCache.getSourceRepository\ninstead of this method.",
    "Reference": "AarResourceRepositoryCache.getSourceRepository instead of this method.",
    "HebCup": "Consider calling AarResourceRepositoryCache.getSourceRepository\ninstead of this method."
}
{
    "Origin": "Returns the sync d l objects before and after the current sync d l object in the ordered set where companyId = ?",
    "Reference": "Returns the sync d l objects before and after the current sync d l object in the ordered set where repositoryId = ?",
    "HebCup": "Returns the sync d l objects before and after the current sync d l object in the ordered set where repositoryId = ?"
}
{
    "Origin": "Does not consume anything.",
    "Reference": "The default implementation does not consume anything.",
    "HebCup": "Does not consume anything."
}
{
    "Origin": "Finds a rule instance for the given rule class name",
    "Reference": "Finds a rule instance for the given rule class name, name and target language",
    "HebCup": "Finds a cached instance for the given cached class name"
}
{
    "Origin": "This will return the\n{@link Secret secrets} with values included of the specified versions.",
    "Reference": "This will return the\n{@link KeyVaultSecret secrets} with values included of the specified versions.",
    "HebCup": "This will return the {@link PropertiesOfSecret secrets} with values included of the specified versions."
}
{
    "Origin": "Checks is s1 starts with s2 (compares ascii tolerant)",
    "Reference": "Checks if s1 starts with s2 ignoring diacritics symbols.",
    "HebCup": "Checks is s1 starts with s2 (compares ascii tolerant)"
}
{
    "Origin": "The  field in the key determines whether\na PoolablePreparedStatement or PoolableCallableStatement is created.",
    "Reference": "PoolablePreparedStatement or PoolableCallableStatement is created.",
    "HebCup": "The  field in the key determines whether\na PoolablePreparedStatement or PoolableCallableStatement is created."
}
{
    "Origin": "Sets the {@link ReorderMode} of this EditSession.",
    "Reference": "Sets the {@link ReorderMode} of this EditSession, and flushes the session.",
    "HebCup": "Sets the {@link ReorderMode} of this EditSession."
}
{
    "Origin": "This code should be expanded to deal with any other context\nsensitve isses data stores tend to have.",
    "Reference": "This code should be expanded to deal with any other context\nsensitive issues data stores tend to have.",
    "HebCup": "This code should be expanded to deal with any other context\nsensitve isses data stores tend to have."
}
{
    "Origin": "Try to load Norms data from the provided input stream.",
    "Reference": "Try to load Norms data from the provided input file.",
    "HebCup": "Try to load Norms data from the provided Path."
}
{
    "Origin": "Add a duration with the given time unit.",
    "Reference": "Add a amount with the given time unit.",
    "HebCup": "Add a amount with the given time unit."
}
{
    "Origin": "Name of schedule",
    "Reference": "Name of task",
    "HebCup": "Name of Task"
}
{
    "Origin": "Get Tree.",
    "Reference": "Get Baum.",
    "HebCup": "Get Tree."
}
{
    "Origin": "Whether this codec is capable of processing the given Java type.",
    "Reference": "Whether this codec is capable of processing the given Java class.",
    "HebCup": "Whether this codec is capable Raw processing the given Java type."
}
{
    "Origin": "Tells if the avatar / display name events must be hidden in the messages list.",
    "Reference": "Tells if the avatar and display name events should be shown in the messages list.",
    "HebCup": "Tells if the avatar / display name events must be hidden in the messages list."
}
{
    "Origin": "* {@code instructorGoogleId} already has instructor privileges.",
    "Reference": "* {@code instructorGoogleId} already has an account and instructor privileges.",
    "HebCup": "* {@code instructorGoogleId} already has instructor privileges."
}
{
    "Origin": "Configure the name of a selector header that a subscription message can\nhave in order to filter messages based on their headers.",
    "Reference": "Configure the name of a header that a subscription message can have for\nthe purpose of filtering messages matched to the subscription.",
    "HebCup": "Configure the name of a selector header that a subscription message can\nhave in order to filter messages based on their headers."
}
{
    "Origin": "Constuct a trace log event.",
    "Reference": "Constuct a warning log event.",
    "HebCup": "Constuct a trace log event."
}
{
    "Origin": "Calculate the result code of the disablement of one plugin based in what went on during the process of this one\nand its dependant plugins.",
    "Reference": "Calculate the result code of the disablement of one plugin based in what went on during the process of this one\nand its dependent plugins.",
    "HebCup": "Calculate the result code of the disablement of one plugin based in what went on during the process of this one and its Dependent plugins."
}
{
    "Origin": "Sets a {@link MediaSource} to be used by the test runner.",
    "Reference": "Sets the {@link MediaSource}s to be used by the test runner.",
    "HebCup": "Sets a {@link Arrays.asList} to be used by the test runner."
}
{
    "Origin": "If the package is not in the module then the resource is not\n    encapsulated.",
    "Reference": "If the resource is not in a package in the module\n    then the resource is not encapsulated.",
    "HebCup": "If the package is not in the module then the resource is not\n    encapsulated."
}
{
    "Origin": "Object chooser, this becomes the selected item (and added\nto the chooser if necessary).",
    "Reference": "If the Object is in the Object chooser, this\nbecomes the selected item (and added to the chooser if necessary).",
    "HebCup": "Object chooser, this becomes the selected item (and added\nto the chooser if necessary)."
}
{
    "Origin": "Determines if an DRACOON account is automatically created for a new user who successfully logs on with his / her AD account.",
    "Reference": "Determines if a DRACOON account is automatically created for a new user who successfully logs on with his / her AD / IDP account.",
    "HebCup": "Determines if a DRACOON account is automatically created for a new user who successfully logs on with his / her AD account."
}
{
    "Origin": "Gets the update strategy..",
    "Reference": "Get the update strategy..",
    "HebCup": "Gets the ge strategy.."
}
{
    "Origin": "Get the estimator type",
    "Reference": "Get the estimator",
    "HebCup": "Get the Estimator"
}
{
    "Origin": "Returns The The Factor Type of this Challenge.",
    "Reference": "Returns The The Type of this Challenge.",
    "HebCup": "Returns The The Factor Type of this Challenge."
}
{
    "Origin": "Specifies the button's background color as an alpha-red-green-blue\ninteger.",
    "Reference": "Specifies the background color of the %type% as an alpha-red-green-blue\ninteger.",
    "HebCup": "Specifies the button's background color as an alpha-red-green-blue integer %type%."
}
{
    "Origin": "We will also set the\nlongestPhaseSpawnRunnerName to the longest running spawn runner name across all phases.",
    "Reference": "We will also set\nthe longestPhaseSpawnRunnerName to the longest running spawn runner name across all phases if\nit exists.",
    "HebCup": "We will also set the longestPhaseSpawnRunnerName to the longest running runner runner name across all phases."
}
{
    "Origin": "The generated HotStream is not pausable, for a pausable HotStream @see {@link ReactiveSeq#primedPausableHotStream(Executor)}.",
    "Reference": "The generated Connectable is not pausable, for a pausable Connectable @see {@link ReactiveSeq#primedPausableHotStream(Executor)}.",
    "HebCup": "The generated Connectable is not pausable , for a pausable Connectable @see {@link ReactiveSeq#primedPausableHotStream (Executor)}."
}
{
    "Origin": "Calculates all distances of atoms between this cell and the given cell returning those that are\nwithin the given cutoff as a list of AtomContacts",
    "Reference": "Calculates all distances of atoms between this cell and the given cell returning those that are\nwithin the given cutoff as a list of Contacts containing the indices of the pair and the calculated distance.",
    "HebCup": "Calculates all distances of atoms between this cell and the given cell returning those that are within the given cutoff as a list of Contacts"
}
{
    "Origin": "The destination\nwould be what would distinguish an \"FileAppender\" from a \"NetworkAppender\".",
    "Reference": "The connection\nwould be what would distinguish an \"FileAppender\" from a \"NetworkAppender\".",
    "HebCup": "The Connection would be what would distinguish an ``FileAppender`` from a ``NetworkAppender``."
}
{
    "Origin": "A Requirement is considered complete if it has associated tests and all of the tests are successfull.",
    "Reference": "A Requirement is considered complete if it has associated tests to all of the tests are successful.",
    "HebCup": "A Requirement is considered complete if it has associated tests and all of the tests are successfull."
}
{
    "Origin": "Edits existing notification schema.",
    "Reference": "Edits existing log schema.",
    "HebCup": "Edits existing Log Schema."
}
{
    "Origin": "Adds an value to values.",
    "Reference": "Adds an values to values.",
    "HebCup": "Adds an Values to values."
}
{
    "Origin": "The {@link KeyCreateOptions#getKeyType() keyType} indicates the type of key to create.",
    "Reference": "The {@link CreateKeyOptions#getKeyType() keyType} indicates the type of key to create.",
    "HebCup": "The {@link CreateKeyOptions#getKeyType () keyType} indicates the type of key to create."
}
{
    "Origin": "This method is called when put is already happened.",
    "Reference": "This is called when an entry is removed.",
    "HebCup": "This method is called when Remove is already happened."
}
{
    "Origin": "Helper method that allows for registration of a regexp to the {@link ClassWhiteList}.",
    "Reference": "Helper method that allows for registration of regexps to the {@link ClassWhiteList}.",
    "HebCup": "Helper method that allows for registration of a regexp to the {@link ClassWhiteList}."
}
{
    "Origin": "Returns all ids that have records in the provided {@code segment}.",
    "Reference": "Returns all ids that have PUT records in the provided {@code segment}.",
    "HebCup": "Returns all IdsWithPuts that have records in the provided {@code segment}."
}
{
    "Origin": "Get service locator {@link DynamicConfiguration dynamic configuration}.",
    "Reference": "Create a {@link InstanceManager}.",
    "HebCup": "Get service locator {@link InstanceManager dynamic configuration}."
}
{
    "Origin": "Sets the journal serializer, returning the builder for method chaining.",
    "Reference": "Sets the log serialization namespace, returning the builder for method chaining.",
    "HebCup": "Sets the journal Namespace , returning the builder for method chaining."
}
{
    "Origin": "If the old password is supplied, the update will be made by rebinding as the user,\nthus modifying the password using the user's permissions.",
    "Reference": "By default, though, if the old password is supplied, the update will be made by rebinding as the user,\nthus modifying the password using the user's permissions.",
    "HebCup": "If the old old is supplied , the update will be made by rebinding as the user , thus modifying the old using the user's permissions."
}
{
    "Origin": "Removes a key from the map if the corresponding map is empty.",
    "Reference": "Removes a key from the map.",
    "HebCup": "Removes a key from the map if the corresponding map is empty."
}
{
    "Origin": "Returns the Lucene document with the given root path from the index.",
    "Reference": "Returns the Lucene document with the given structure id from the index.",
    "HebCup": "Returns the Lucene return with the given root path from the index."
}
{
    "Origin": "Notify this object that it has been registered as a listener with\na source for receiving events described by the named event",
    "Reference": "Notify this object that it has been registered as a listener with a source\nfor receiving events described by the named event This object is\nresponsible for recording this fact.",
    "HebCup": "Notify this object that it has been registered as a listener with\na source for receiving events described by the named event"
}
{
    "Origin": "The {@link KeyCreateOptions#getKeyType() keyType} indicates the type of key to create.",
    "Reference": "The {@link CreateKeyOptions#getKeyType() keyType} indicates the type of key to create.",
    "HebCup": "The {@link CreateKeyOptions#getKeyType () keyType} indicates the type of key to create."
}
{
    "Origin": "Deletes the specified resources.",
    "Reference": "Deletes the specified binaries.",
    "HebCup": "Deletes the specified resources."
}
{
    "Origin": "Since this is the same for every shard it picks {@link JDA#getApplicationInfo()} from any shard.",
    "Reference": "Since this is the same for every shard it picks {@link JDA#retrieveApplicationInfo()} from any shard.",
    "HebCup": "Since this is the same for every shard it picks {@link JDA#retrieveApplicationInfo ()} from any shard."
}
{
    "Origin": "At the moment this method returns  only under Mac OS X VERSION (and up) and with Java VERSION (and up).",
    "Reference": "At the moment this method returns  only under Mac OS X VERSION (and up).",
    "HebCup": "At the moment this method returns  only under Mac OS X VERSION (and up) and with Java VERSION (and up)."
}
{
    "Origin": "Set the Fragment associated with this destination",
    "Reference": "Set the Fragment class name associated with this destination",
    "HebCup": "Set the Class associated with this destination"
}
{
    "Origin": "Otherwise this returns the\nresult of {@link Cell#getCellTypeEnum()}.",
    "Reference": "Otherwise this returns the\nresult of {@link Cell#getCellType()}.",
    "HebCup": "Otherwise this returns the result of {@link Cell#getCellType ()}."
}
{
    "Origin": "Get assisted query column.",
    "Reference": "Find assisted query column.",
    "HebCup": "find Assisted Query Column."
}
{
    "Origin": "See Immutable Map Static Factory Methods for details.",
    "Reference": "See Unmodifiable Maps for details.",
    "HebCup": "See Unmodifiable Map Static Factory Methods for details."
}
{
    "Origin": "Removes recursively all empty parent directories up to and excluding the output directory.",
    "Reference": "Removes recursively all empty parent directories up to and excluding the storage directory.",
    "HebCup": "Removes recursively all empty parent directories up to and excluding the Directory."
}
{
    "Origin": "Return the configured {@link #setProxyPing(boolean)}",
    "Reference": "Return the configured {@link #setHandlePing(boolean)}.",
    "HebCup": "Return the configured {@link #setHandlePing(boolean)}"
}
{
    "Origin": "Returns a map for short time zone ids in BCP47 Unicode extension and\nthe long time zone ids.",
    "Reference": "Returns a map for time zone ids to their canonical ids.",
    "HebCup": "Returns a map for Canonical time zone ids in BCP47 Unicode extension and the long time zone ids."
}
{
    "Origin": "Use {@link #setDate(Date)} to change\nthe current date.",
    "Reference": "Use {@link #setDate(VaadinDateTime)} to change\nthe current date.",
    "HebCup": "Use {@link #setVaadinDateTime(VaadinDateTime)} to change the current VaadinDateTime."
}
{
    "Origin": "Provides a list of all connection wrappers corresponding to a current environment.",
    "Reference": "Provides a list of all connection configs corresponding to a current environment.",
    "HebCup": "Provides a list of all connection Configs corresponding to a current environment."
}
{
    "Origin": "or throws a {@link com.liferay.calendar.NoSuchBookingException} if it could not be found.",
    "Reference": "or throws a {@link NoSuchBookingException} if it could not be found.",
    "HebCup": "or throws a {@link com.liferay.calendar.NoSuchBookingException} if it could not be found."
}
{
    "Origin": "The {@code name} is a {@code '/'}-separated path name that identifies\nthe resource.",
    "Reference": "The\n{@code name} parameter is a {@code '/'}-separated path name that\nidentifies the resource.",
    "HebCup": "The {@code name} is a {@code '/'}-separated path name that identifies\nthe resource."
}
{
    "Origin": "Creates all content types.",
    "Reference": "Creates all base types.",
    "HebCup": "Creates all BaseContent types."
}
{
    "Origin": "This method must only be used for type references\nwhose sort is {@link #METHOD_FORMAL_PARAMETER METHOD_FORMAL_PARAMETER}.",
    "Reference": "This\nmethod must only be used for type references whose sort is {@link #METHOD_FORMAL_PARAMETER}.",
    "HebCup": "This method must only be used for type references\nwhose sort is {@link #METHOD_FORMAL_PARAMETER METHOD_FORMAL_PARAMETER}."
}
{
    "Origin": "Set the number of expected records for this task.",
    "Reference": "Set the number of expected records for this connector.",
    "HebCup": "Set the number of expected for this task."
}
{
    "Origin": "Returns a string representation of this object; useful for testing and debugging.",
    "Reference": "Returns a string representation of this object.",
    "HebCup": "Returns a string representation of this object; useful for testing and debugging."
}
{
    "Origin": "Returns true if there is at least one workspace running(it's status is different from {@link",
    "Reference": "Returns true if there is at least one workspace active(it's status is different from {@link",
    "HebCup": "Returns true if there is at least one workspace Active (it's status is different from {@link"
}
{
    "Origin": "or throws a {@link com.liferay.sync.NoSuchDLFileVersionDiffException} if it could not be found.",
    "Reference": "or throws a {@link NoSuchDLFileVersionDiffException} if it could not be found.",
    "HebCup": "or throws a {@link com.liferay.sync.NoSuchDLFileVersionDiffException} if it could not be found."
}
{
    "Origin": "Once the GeneratedRootGlideModule is written, we expect to be\n  finished.",
    "Reference": "Once the GeneratedAppGlideModule is written, we expect to be\n  finished.",
    "HebCup": "Once the GeneratedAppGlideModule is written , we expect to be finished."
}
{
    "Origin": "Provides a function that updates the payload value of an {@link BaseEvent} by replacing it with a {@link CursorProvider}.",
    "Reference": "Provides a function that updates the payload value of an {@link CoreEvent} by replacing it with a {@link CursorProvider}.",
    "HebCup": "Provides a function that updates the payload value of an {@link CoreEvent} by replacing it with a {@link CursorProvider}."
}
{
    "Origin": "Build a DataAccessPoint, including DataService at Resource svc",
    "Reference": "Build a DataAccessPoint, including DataService, from the description at Resource svc",
    "HebCup": "Build a DataAccessPoint, including DataService at Resource svc"
}
{
    "Origin": "Returns 'true' if the stream is empty.",
    "Reference": "Returns 'true' if the stream has no elements.",
    "HebCup": "Returns 'true' if the stream is empty."
}
{
    "Origin": "Returns the state variables from template header.",
    "Reference": "Returns the prop variables from template header.",
    "HebCup": "Returns the Prop variables from template header."
}
{
    "Origin": "For the given input shape/type for the (perhaps partially constructed) network configuration, return a map of\nactivation sizes for each layer and vertex in the graph.",
    "Reference": "For the given input shape/type for the network, return a map of activation sizes for each layer and vertex\nin the graph.",
    "HebCup": "For the given input shape/type for the (perhaps partially constructed) network configuration, return a map of\nactivation sizes for each layer and vertex in the graph."
}
{
    "Origin": "Hide toggle button \"add self hosted / sign in with WordPress.com\" and show self hosted URL\nedit box",
    "Reference": "Hide toggle button \"add self hosted / log in with WordPress.com\" and show self hosted URL\nedit box",
    "HebCup": "Hide toggle button \"add self hosted / sign in with WordPress.com\" and show self hosted URL\nedit box"
}
{
    "Origin": "Convert a date string and time string into a Date object.",
    "Reference": "Convert a date string and time string of only the hour into a Date object.",
    "HebCup": "combine a date string and time string into a Date object."
}
{
    "Origin": "Build a normalized \"toString\" text for an object.",
    "Reference": "Build a \"nice toString\" for an object.",
    "HebCup": "Build a normalized ``toNiceString`` text for an object."
}
{
    "Origin": "Call {@link AndroidCommonUtils#getResourceName(String, String)} with {@link ResourceType#LAYOUT}.",
    "Reference": "Call {@link AndroidBuildCommonUtils#getResourceName(String, String)} with {@link ResourceType#LAYOUT}.",
    "HebCup": "Call {@link AndroidBuildCommonUtils#getResourceName (String , String)} with {@link ResourceType#LAYOUT}."
}
{
    "Origin": "If you're asking what is to\nbe used in a production environment, simply use the code inside the\n statement, but handle the Exceptions appropriately.",
    "Reference": "If you're asking what is to\nbe used in a production environment, simply use the code inside the\n{@code try{}} statement, but handle the Exceptions appropriately.",
    "HebCup": "LOG.debug you're asking what is to be used in a production environment , simply use the code inside the statement , but handle the Exceptions appropriately."
}
{
    "Origin": "Launch a JNLP slave created by {@link #createJnlpSlave(String)}",
    "Reference": "Launch a JNLP agent created by {@link #createJnlpSlave(String)}",
    "HebCup": "Launch a JNLP slave created by {@link #createJnlpSlave(String)}"
}
{
    "Origin": "Given a DatasetGraph and a query, form a DatasetGraph that\nis the dynamic dataset from the collection of graphs from the dataset\nthat go to make up the default graph (union) and named graphs.",
    "Reference": "Given a DatasetGraph and a query, form a DatasetGraph that\nis the dynamic dataset from the collection of graphs from the dataset\nthat go to make up the default graph and named graphs.",
    "HebCup": "Given a Dataset).and a query, form a Dataset).Graph that is the dynamic dataset from the collection of graphs from the dataset that go to make up).default graph (union) and named graphs."
}
{
    "Origin": "If false, the built-in\n(non-CuDNN) implementation for BatchNormalization will be used",
    "Reference": "If true, the built-in\n(non-CuDNN) implementation for BatchNormalization will be used",
    "HebCup": "If false, the built-in\n(non-CuDNN) implementation for BatchNormalization will be used"
}
{
    "Origin": "we don't know priority for these, other than definition/model order, which appears to be what Excel uses.",
    "Reference": "For older ones,\n we don't know priority for these, other than definition/model order,\n which appears to be what Excel uses.",
    "HebCup": "we don't know priority for these, other than definition/model order, which appears to be what Excel uses."
}
{
    "Origin": "Returns a Reader containing the Content text.",
    "Reference": "Returns a Reader containing the Content strings.",
    "HebCup": "Returns a Reader containing the Content text."
}
{
    "Origin": "Clears the value of the 'ValueType' field",
    "Reference": "Clears the value of the 'valueType' field.",
    "HebCup": "Clears the value of the 'valueType' field"
}
{
    "Origin": "Sets the value of the algIdExtSource property.",
    "Reference": "Sets the value of the spinValue property.",
    "HebCup": "Sets the value of the SpinValue property."
}
{
    "Origin": "If {@code keys = \"abc1234\"}, settings with a key equal to \"abc1234\" are returned.",
    "Reference": "If {@code keyFilter = \"abc1234\"}, settings with a key equal to \"abc1234\" are returned.",
    "HebCup": "If {@code KeyFilter = ``abc1234``} , settings with a key equal to ``abc1234`` are returned."
}
{
    "Origin": "Get Application Registration.",
    "Reference": "Get File Handler.",
    "HebCup": "Get Application Handler."
}
{
    "Origin": "Get name of the Cosmos DB Gremlin database.",
    "Reference": "Get the resource value.",
    "HebCup": "Get name of the Cosmos DB resource."
}
{
    "Origin": "Explicitly does not clone the deep\nstructure of the request object.",
    "Reference": "Explicitly does not clone the\ndeep structure of the other fields in the message.",
    "HebCup": "Explicitly does not clone the deep\nstructure of the request object."
}
{
    "Origin": "The doclet/taglet tests are performed in the begin method, further on,\nthis is to minimize argument processing and most importantly the impact\nof class loader creation, needed to detect the doclet/taglet class variants.",
    "Reference": "The doclet tests are performed in the begin method, further on,\nthis is to minimize argument processing and most importantly the impact\nof class loader creation, needed to detect the doclet class variants.",
    "HebCup": "The doclet/taglet tests are performed in the begin method, further on,\nthis is to minimize argument processing and most importantly the impact\nof class loader creation, needed to detect the doclet/taglet class variants."
}
{
    "Origin": "The addition of a duration is always absolute and zone-resolvers are not required.",
    "Reference": "The addition of a duration is always absolute - there are no special cases.",
    "HebCup": "The addition of a duration is always absolute and zone-resolvers are not required."
}
{
    "Origin": "The {@link #getProductType() product type} must be {@link EtdProductType#FUTURE}\notherwise an exception will be thrown.",
    "Reference": "The {@link #getType() type} must be {@link EtdType#FUTURE} otherwise an exception will be thrown.",
    "HebCup": "The {@link#getProductType () product type} must be {@link EtdType#FUTURE} otherwise an exception will be thrown."
}
{
    "Origin": "Set the fileContentDisposition property: Sets the file's",
    "Reference": "Set the contentDisposition property: Sets the file's",
    "HebCup": "Set the contentDisposition property: Sets the file's"
}
{
    "Origin": "KafkaMetrics of sensors which use SampledStat should be synchronized on the Sensor object\nto allow concurrent reads and updates.",
    "Reference": "KafkaMetrics of sensors which use SampledStat should be synchronized on the same lock\nfor sensor record and metric value read to allow concurrent reads and updates.",
    "HebCup": "KafkaMetrics of sensors which use SampledStat should be synchronized on the Sensor object\nto allow concurrent reads and updates."
}
{
    "Origin": "Renders this vertex into the given {@link BufferBuilder}, assuming that the {@link VertexFormat} is\n{@link DefaultVertexFormats#BLOCK}.",
    "Reference": "Renders this vertex into the given {@link VertexBuffer}, assuming that the {@link VertexFormat} is\n{@link DefaultVertexFormats#BLOCK}.",
    "HebCup": "Renders this vertex into the given {@link VertexBuffer} , assuming that the {@link VertexFormat} is {@link DefaultVertexFormats#BLOCK}."
}
{
    "Origin": "Picks a suitable configuration to use for resource resolution",
    "Reference": "Picks a suitable configuration to use for resource resolution within a given file.",
    "HebCup": "Picks a suitable configuration to use for resource resolution"
}
{
    "Origin": "Returns Query classes whose equals() and hashCode() methods can be validated by EqualsVerifier.",
    "Reference": "Returns Query classes whose equals() and hashCode() methods can be validated by EqualsVerifier in a uniform way.",
    "HebCup": "Returns Query classes whose equals () Equal hashCode () methods can be validated by EqualsVerifier."
}
{
    "Origin": "Verify descriptor in the catalog according to recordingId, checking recording files availability and contents.",
    "Reference": "Verify descriptors in the catalog, checking recording files availability and contents.",
    "HebCup": "Verify descriptor in the catalog according to Set , checking recording files availability and contents."
}
{
    "Origin": "Close all pools associated with this class.",
    "Reference": "Closes all pools associated with this class.",
    "HebCup": "Close all pools associated with this class."
}
{
    "Origin": "Encrypts the byte array by using the configured {@link #getCipher() cipher}.",
    "Reference": "Encrypts the byte array by using the configured {@link #getCipherService() cipherService}.",
    "HebCup": "Encrypts the byte array by using the configured {@link#getCipherService () cipher}."
}
{
    "Origin": "Resets the analytics collector for a new playlist.",
    "Reference": "Resets the analytics collector for a new media source.",
    "HebCup": "Resets the analytics collector for a New Media Source."
}
{
    "Origin": "Returns the descriptor corresponding to this Java type.",
    "Reference": "Returns the descriptor corresponding to this type.",
    "HebCup": "Returns the Builder corresponding to this Java type."
}
{
    "Origin": "Called when a track info is selected.",
    "Reference": "Called when a track is selected.",
    "HebCup": "Called when a track info is selected."
}
{
    "Origin": "Sttc counter.",
    "Reference": "Sttc.",
    "HebCup": "Sttc Sttc."
}
{
    "Origin": "Gets the site selector options.",
    "Reference": "Gets the sitemap site selector options.",
    "HebCup": "Gets the Sitemap Site Selector Options."
}
{
    "Origin": "Returns the akismet data with the primary key or throws a {@link com.liferay.akismet.NoSuchDataException} if it could not be found.",
    "Reference": "Returns the akismet data with the primary key or throws a {@link NoSuchDataException} if it could not be found.",
    "HebCup": "Returns the akismet data with the primary key or throws a {@link com.liferay.akismet.NoSuchDataException} if it could not be found."
}
{
    "Origin": "The {@link Secret} is required.",
    "Reference": "The {@link KeyVaultSecret} is required.",
    "HebCup": "The {@link KeyVaultSecret} is required."
}
{
    "Origin": "Same as {@link #isPipelineConfigSet(long, PiPipeconf, ByteBuffer)} but\nblocks execution.",
    "Reference": "Same as {@link #isPipelineConfigSet(long, PiPipeconf)} but blocks\nexecution.",
    "HebCup": "Same as {@link #isPipelineConfigSet(long, PiPipeconf, ByteBuffer)} but\nblocks execution."
}
{
    "Origin": "Wraps the given buffer with surrounding script tags.",
    "Reference": "Wraps the given string with surrounding script tags.",
    "HebCup": "Wraps the given buffer with surrounding \" tags."
}
{
    "Origin": "Get the abstract files for the selected group",
    "Reference": "Get the result files for the selected group",
    "HebCup": "Get the Result Files for the selected group"
}
{
    "Origin": "The default cluster load balancer if all others fail.",
    "Reference": "The default cluster selector if all others fail.",
    "HebCup": "The default Cluster Selector if all others fail."
}
{
    "Origin": "Notify the manager that some local partitions have been demoted from leader.",
    "Reference": "Notify the manager that a local partition has been demoted from leader.",
    "HebCup": "Notify the manager that some local Partition have been demoted from leader."
}
{
    "Origin": "Test always uses the zone default flavor",
    "Reference": "Test always uses the zone default resources",
    "HebCup": "Test always uses the zone default resources"
}
{
    "Origin": "Saves all dictionary entries that appeared > threshold times Note: feature\nindices are changed to contiguous values starting at 0.",
    "Reference": "Saves all dictionary entries that appeared {@literal >} threshold times Note: feature\nindices are changed to contiguous values starting at 0.",
    "HebCup": "Saves all dictionary entries that appeared > threshold times Note: feature\nindices are changed to contiguous values starting at 0."
}
{
    "Origin": "If keys = \"*\", settings with any key are returned.",
    "Reference": "If {@code keyFilter = \"*\"}, settings with any key are returned.",
    "HebCup": "If KeyFilter = ``*`` , settings with any key are returned."
}
{
    "Origin": "Allows to capture and then assert on a {@link Throwable}.",
    "Reference": "Allows to capture and then assert on a {@link Throwable} (easier done with lambdas).",
    "HebCup": "Allows to capture and then assert on a {@link assert}."
}
{
    "Origin": "However, since we\ninject the ConstantAnnotationMarker the Annotation proxy types for ahead-of-time allocated\nannotations implement two interfaces.",
    "Reference": "However, since we\ninject the constant-annotation-marker interface the Annotation proxy types for ahead-of-time\nallocated annotations implement two interfaces.",
    "HebCup": "However , since we inject the constantAnnotationMarkerInterface the Annotation proxy types for ahead-of-time allocated annotations implement two interfaces."
}
{
    "Origin": "Adds a single sensitivity to the builder using a date.",
    "Reference": "Adds a sensitivity to the builder.",
    "HebCup": "Adds a single sensitivity to the builder using a Currency."
}
{
    "Origin": "Adds multiple Certificates out of a Collection of X509CertificateHolder into certificatesMap.",
    "Reference": "Adds multiple Certificates out of a Collection of X509CertificateHolder into certificateSet.",
    "HebCup": "Adds multiple Certificates out of a Collection of X509CertificateHolder into certificatesMap."
}
{
    "Origin": "use_credentials: Cross-origin CORS requests for the element will have the credentials\nflag set.",
    "Reference": "USER_CREDENTIALS: Cross-origin CORS requests for the element will have the credentials\nflag set.",
    "HebCup": "use_credentials: Cross-origin CORS requests for the element will have the credentials\nflag set."
}
{
    "Origin": "Returns a string representation of this object; useful for testing and debugging.",
    "Reference": "Returns a string representation of this object.",
    "HebCup": "Returns a string representation of this object; useful for testing and debugging."
}
{
    "Origin": "Use the\n{@linkplain #addDelivery(Shipment, TimeWindow)} instead.",
    "Reference": "Use the\n{@linkplain #addDelivery(ShipmentJob, TimeWindow)} instead.",
    "HebCup": "Use the {@linkplain #addDelivery(ShipmentJob, TimeWindow)} instead."
}
{
    "Origin": "Returns true if the given KeyStroke is one of this action's accelerators.",
    "Reference": "Returns  if the given KeyStroke is one of this action's accelerators.",
    "HebCup": "Returns true if the given KeyStroke is one of this action's accelerators."
}
{
    "Origin": "There must be exactly one {@link BD#SEARCH}\npredicate.",
    "Reference": "There must be exactly one {@link FTS#SEARCH}\npredicate.",
    "HebCup": "There must be exactly one {@link BD#SEARCH}\npredicate."
}
{
    "Origin": "Default is {@code false}.",
    "Reference": "Default is {@code true}.",
    "HebCup": "Default is {@code false}."
}
{
    "Origin": "Injector used in {@link FluentObjectFactory} for creating instances",
    "Reference": "Injector used in FluentObjectFactory for creating instances",
    "HebCup": "Injector used in {@link FluentObjectFactory} for creating gets"
}
{
    "Origin": "Embeds a rel whose value comes from a {@LinkRestRepository}.",
    "Reference": "Embeds a rel whose value comes from a {@link LinkRestRepository}.",
    "HebCup": "Embeds a rel whose value comes from a {@LinkRestRepository}."
}
{
    "Origin": "A {@link com.sun.source.tree.Tree} that determines the\nappropriate scope for defaults.",
    "Reference": "A {@link com.sun.source.tree.Tree} determines the\nappropriate scope for defaults.",
    "HebCup": "A {@link com.sun.source.tree.Tree} that determines the appropriate scope for DefaultsTo."
}
{
    "Origin": "Returns a string representation of this object; useful for testing and debugging.",
    "Reference": "Returns a string representation of this object.",
    "HebCup": "Returns a string representation of this object; useful for testing and debugging."
}
{
    "Origin": "This method is invoked by virtue of the OnStart annotation on the OnStart\nclass class",
    "Reference": "It is invoked at\napplication start up by virtue of the OnStart annotation on the OnStart\nclass in this package.",
    "HebCup": "This method is invoked by virtue of the OnStart annotation on the OnStart\nclass class"
}
{
    "Origin": "Asserts that the error message, root bean class and invalid value of the given violation are equal to the\nexpected message, root bean class and invalid value.",
    "Reference": "Asserts that the error message, root bean class, invalid value and property path of the given violation are equal\nto the expected message, root bean class, invalid value and propertyPath.",
    "HebCup": "Asserts that the error message, root bean class and).is Equal To of the given violation are equal to the expected message, root bean class and invalid).is Equal To ."
}
{
    "Origin": "Method handles the case where there are downstream operators awaiting\nlast pass evaluation is not re-triggered by the last\n{@link IChunkMessage} output from an upstream operator.",
    "Reference": "Method handles the case where there are downstream operators awaiting\nlast pass evaluation or at-once evaluation is not re-triggered by the last\n{@link IChunkMessage} output from an upstream operator.",
    "HebCup": "Method handles the case where there are downstream operators awaiting\nlast pass evaluation is not re-triggered by the last\n{@link IChunkMessage} output from an upstream operator."
}
{
    "Origin": "Tests if the nbt list matches with the supplied predicate tester",
    "Reference": "Tests if the map matches with the supplied predicate tester",
    "HebCup": "Tests if the > list matches with the supplied predicate tester"
}
{
    "Origin": "Check and verify return RegistrationResponse.Decline when failed to start a job master Leader retrieval listener",
    "Reference": "Check and verify return RegistrationResponse.",
    "HebCup": "Check and verify return RegistrationResponse.Decline when failed to start a job Master Gateway.get Fencing Leader retrieval listener"
}
{
    "Origin": "Adds default interactions to the specified component.",
    "Reference": "Adds default listeners to the specified component.",
    "HebCup": "Interaction default interactions to the specified component."
}
{
    "Origin": "{@code throwable} will be non-null in the case of a failed attempt to execute the call.",
    "Reference": "{@code ioe} will be non-null in the case of a failed attempt to execute the call.",
    "HebCup": "{@code IOException} will be non-null in the case of a failed attempt to execute the call."
}
{
    "Origin": "Redoes the next command associated with the given object (if one exists).",
    "Reference": "Redoes the next command associated with the given display.",
    "HebCup": "Redoes the next command associated with the given Display (if one exists)."
}
{
    "Origin": "Returns a formatted string: \"Artist - Title [Version]\"",
    "Reference": "Returns a formatted string: \"Source (Artist) - Title [Version]\"",
    "HebCup": "Returns a formatted string: \"Artist - Title [Version]\""
}
{
    "Origin": "Finds the source file with the smallest coverage percentage for a given metric.",
    "Reference": "Finds the source file with the smallest coverage percentage.",
    "HebCup": "Finds the source file with the smallest file percentage for a given metric."
}
{
    "Origin": "Returns a string representation of this object; useful for testing and debugging.",
    "Reference": "Returns a string representation of this object.",
    "HebCup": "Returns a string representation of this object; useful for testing and debugging."
}
{
    "Origin": "Adds the given word into the given string buffer with the start and end times from the given features.",
    "Reference": "Adds the given word into the given string builder with the start and end times from the given features.",
    "HebCup": "Adds the given word into the given String Builder with the start and end times from the given features."
}
{
    "Origin": "Get the iterable of all {@link RankedProvider providers} (custom and default) registered for the given service provider\ncontract in the underlying {@link ServiceLocator HK2 service locator} container.",
    "Reference": "Get the iterable of all {@link RankedProvider providers} (custom and default) registered for the given service provider\ncontract in the underlying {@link InstanceManager instance manager} container.",
    "HebCup": "Get the iterable of all {@link RankedProvider providers} (custom and default) registered for the given service provider contract in the underlying {@link instanceManager HK2 service locator} container."
}
{
    "Origin": "Is matching by file name and Check name.",
    "Reference": "Is matching by file name, module id, and Check name.",
    "HebCup": "Is matching by file name and Check name."
}
{
    "Origin": "Convert the attributes if necessary and add them to the profile.",
    "Reference": "Convert the profile and authentication attributes, if necessary, and add them to the profile.",
    "HebCup": "Convert the profileAttributes if necessary and add them to the profile."
}
{
    "Origin": "Returns an immutable map containing two mappings.",
    "Reference": "Returns an unmodifiable map containing two mappings.",
    "HebCup": "Returns an Unmodifiable map containing two mappings."
}
{
    "Origin": "Add the argument to the value of this long.",
    "Reference": "Add the argument to the value of this integer.",
    "HebCup": "Add the argument to the value of this int."
}
{
    "Origin": "OutputStream output, int dpi, float quality)} for more details.",
    "Reference": "OutputStream output, int dpi, float compressionQuality)} for more details.",
    "HebCup": "OutputStream output , int dpi , float compressionQuality)} for more details."
}
{
    "Origin": "### \u24d8 Further Information: Nodes must be in same parent.",
    "Reference": "### \u24d8 Further Information: Nodes **MUST** be in same parent.",
    "HebCup": "### \u24d8 Further Information: Token must be in same parent."
}
{
    "Origin": "Parses the {@code Vector3} represented by the given string according to the format of {@link #toString()}.",
    "Reference": "Sets this {@code Vector3} to the value represented by the specified string according to the format of {@link #toString()}.",
    "HebCup": "Parses the {@code this.set} represented by the given string according to the format of {@link#toString ()}."
}
{
    "Origin": "Retrieve list of all jobs by connector",
    "Reference": "Retrieve list of all jobs by connector id",
    "HebCup": "Retrieve list of all jobs by connector"
}
{
    "Origin": "Additional tests on key-sig, which may get adjusted.",
    "Reference": "Additional tests on key signature, which may get adjusted.",
    "HebCup": "Additional tests on key-sig , which may) adjusted."
}
{
    "Origin": "Create an immutable view of this {@link Vector3f}.",
    "Reference": "Create a new immutable view of this {@link Vector3f}.",
    "HebCup": "Create an immutable view of this {@link Vector3f}."
}
{
    "Origin": "What we do in this method is look for temporary dependencies of\nthe type \"rel\".",
    "Reference": "What we do in this method is look for temporary dependencies of\nthe type \"rel\" and \"prep\".",
    "HebCup": "What we do in this method is look for temporary dependencies of\nthe type \"rel\"."
}
{
    "Origin": "Creates a {@link DynamicRealm} instance with a given {@link SharedRealm} instance without owning it.",
    "Reference": "Creates a {@link DynamicRealm} instance with a given {@link OsSharedRealm} instance without owning it.",
    "HebCup": "Creates a {@link DynamicRealm} instance with a given {@link OsSharedRealm} instance without owning it."
}
{
    "Origin": "Computes the median for each pixel across all bands in the {@link Planar} image.",
    "Reference": "Computes the median for each pixel across selected bands in the {@link Planar} image.",
    "HebCup": "Computes the median for each pixel across all bands in the {@link Planar} image."
}
{
    "Origin": "Tests creating a distributed subregion of a local scope region, which should fail.",
    "Reference": "Tests creating a distributed sub-region of a local scope region, which should fail.",
    "HebCup": "Tests creating a distributed subregion of a local scope Factory , which should fail."
}
{
    "Origin": "Scenario:\n  - CA is only in service trust store, missing from gateway trust store\n  - Gateway does not trust service, as it does not trust CA\n  - Service trusts gateway via CA",
    "Reference": "Scenario:\n  - CA is only in API trust store, missing from gateway trust store\n  - Gateway does not trust API, as it does not trust CA\n  - API trusts gateway via CA",
    "HebCup": "Scenario: - CA is only in Api trust store , missing from gateway trust store - Gateway does not trust Api , as it does not trust CA - Api trusts gateway via CA"
}
{
    "Origin": "The min occurs of a web result is 0.",
    "Reference": "The min occurs of a web result.",
    "HebCup": "The min occurs of a web result is 0."
}
{
    "Origin": "Delete an object from array if it exists",
    "Reference": "Delete an object if it exists",
    "HebCup": "Delete an String from array if it exists"
}
{
    "Origin": "lhsUnary :=\n          ( lhsExists\n          | lhsNot\n          | lhsEval\n          | lhsForall\n          | lhsAccumulate\n          | LEFT_PAREN lhsOr RIGHT_PAREN\n          | lhsPatternBind\n          )\n          SEMICOLON?",
    "Reference": "lhsUnary :=\n          ( lhsExists\n          | lhsNot\n          | lhsEval\n          | lhsForall\n          | lhsAccumulate\n          | LEFT_PAREN lhsOr RIGHT_PAREN namedConsequence?",
    "HebCup": "lhsUnary :=\n          ( lhsExists\n          | lhsNot\n          | lhsEval\n          | lhsForall\n          | lhsAccumulate\n          | LEFT_PAREN lhsOr RIGHT_PAREN\n          | lhsPatternBind\n          )\n          SEMICOLON?"
}
{
    "Origin": "WorkflowExecutionTerminated event is recorded in the history of the\ncurrent open workflow with the matching workflowId in the domain.",
    "Reference": "If a runId is not specified,\nthen the  event is recorded in\nthe history of the current open workflow with the matching workflowId in\nthe domain.",
    "HebCup": "WorkflowExecutionTerminated event is recorded in the history of the\ncurrent open workflow with the matching workflowId in the domain."
}
{
    "Origin": "Returns null.",
    "Reference": "Returns empty string.",
    "HebCup": "Returns \"."
}
{
    "Origin": "Returns the {@link UUID} of the {@link Request}.",
    "Reference": "Returns the {@link RequestId}.",
    "HebCup": "Returns the {@link RequestId} of the {@link Request}."
}
{
    "Origin": "Customer lock status: * `false` - unlocked * `true` - locked  All users of this customer will be blocked and can not login anymore.",
    "Reference": "Customer is locked: * `false` - unlocked * `true` - locked  All users of this customer will be blocked and can not login anymore.",
    "HebCup": "Customer lock: * `false` - unlocked * `true` - locked All users of this customer will be blocked and can not login anymore."
}
{
    "Origin": "Calls {@link AmbryRequests#handleRequests(Request)} with {@code request} and returns the {@link Response} received.",
    "Reference": "Calls {@link AmbryRequests#handleRequests(NetworkRequest)} with {@code request} and returns the {@link Response} received.",
    "HebCup": "Calls {@link AmbryRequests#handleRequests (Request)} with {@code NetworkRequest} and returns the {@link Response} received."
}
{
    "Origin": "Get the number of listeners of this map",
    "Reference": "Get the number of property SwitchPoints of this map",
    "HebCup": "get Switch the number of listeners of this map"
}
{
    "Origin": "NOTE: This operation is eventually consistent.",
    "Reference": "This operation is eventually consistent.",
    "HebCup": "NOTE: This operation is eventually consistent."
}
{
    "Origin": "{@codesnippet com.azure.data.applicationconfig.configurationclient.deleteSetting#string-string}",
    "Reference": "{@codesnippet com.azure.data.applicationconfig.configurationclient.deleteConfigurationSetting#string-string}",
    "HebCup": "{@codesnippet com.azure.data.applicationconfig.configurationclient.deleteConfigurationSetting#string-string}"
}
{
    "Origin": "Returns a collection of proxies for the given ID.",
    "Reference": "Returns a map of all partitions for the given primitive.",
    "HebCup": "Returns a collection immutable proxies for the given ID."
}
{
    "Origin": "Test the behavior getObject for inet columns.",
    "Reference": "Test the behavior getObject for ipv6 inet columns.",
    "HebCup": "Test the behavior getObject for inet columns."
}
{
    "Origin": "Returns a new {@link AttributeTransitionData} instance.",
    "Reference": "Returns a new {@link Builder} for {@link AttributeTransitionData}.",
    "HebCup": "Returns a new {@link Builder} instance."
}
{
    "Origin": "Handles the every day key press event.",
    "Reference": "Handles the every day change event.",
    "HebCup": "Handles the Every Day Value Change event."
}
{
    "Origin": "Scenario:\n  - no CA inherited trust\n  - gateway trusts service certificate directly\n  - service trusts gateway certificate directly",
    "Reference": "Scenario:\n  - no CA inherited trust\n  - gateway trusts API certificate directly\n  - API trusts gateway certificate directly",
    "HebCup": "Scenario: - no CA inherited trust - gateway trusts Api certificate directly - Api trusts gateway certificate directly"
}
{
    "Origin": "Sort a subset of an array of number primitives.",
    "Reference": "Sort a subset of an array of primitives of integral type.",
    "HebCup": "Sort a subset of an array of Integer primitives."
}
{
    "Origin": "Sets {@link ValidationType} for commit context.",
    "Reference": "Sets {@link ValidationMode} for commit context.",
    "HebCup": "Sets {@link ValidationMode} for commit context."
}
{
    "Origin": "Sets a new header value.",
    "Reference": "Sets header value.",
    "HebCup": "Sets a new header value."
}
{
    "Origin": "Unbalanced openers and closers can be escaped (with \\).",
    "Reference": "Unbalanced openers and closers can quoted (with ' or \") or escaped (with \\).",
    "HebCup": "Unbalanced openers and closers can be escaped (with \\)."
}
{
    "Origin": "Proactively abandon any maintenance holds (READ or WRITE) before closing connection.",
    "Reference": "Proactively abandon leadership before closing connection.",
    "HebCup": "Proactively abandon any Leadership (READ or WRITE) before closing connection."
}
{
    "Origin": "Integers 0 ... n.",
    "Reference": "Integers 0 ... n - 1.",
    "HebCup": "Integers 0 ... n."
}
{
    "Origin": "Reads a new packet from the channel if all of the current packet is read.",
    "Reference": "Reads a new chunk from the channel if all of the current chunk is read.",
    "HebCup": "Reads a new packet from the channel if all of the Current Chunk is read."
}
{
    "Origin": "Gets the splash URL of the guild, if present and in a supported format.",
    "Reference": "Gets the splash URL of the guild, if present.",
    "HebCup": "Gets the splash URL of the guild, if present and in a supported format."
}
{
    "Origin": "The meta-property for the {@code holidays} property.",
    "Reference": "The meta-property for the {@code weekends} property.",
    "HebCup": "The meta-property for the {@code weekends} property."
}
{
    "Origin": "Returns the map of managed transactions.",
    "Reference": "Returns the map of managed transactions represented by their initial\nrequest.",
    "HebCup": "Returns the map of managed Requests."
}
{
    "Origin": "Add a citation to the citations map.",
    "Reference": "Add a citation to the citations multimap.",
    "HebCup": "Add a citation to the citations map."
}
{
    "Origin": "Can this user see the given patchset?",
    "Reference": "Can the user see this change?",
    "HebCup": "Can this user see the given patchset?"
}
{
    "Origin": "Use this when you need customizations such as log integration via\n{@linkplain Builder#addScopeDecorator(ScopeDecorator)}.",
    "Reference": "Use this when you need customizations such as log integration via\n{@linkplain RequestContextCurrentTraceContextBuilder#addScopeDecorator(ScopeDecorator)}.",
    "HebCup": "Use this when you need customizations such as log integration via {@linkplain RequestContextCurrentTraceContextBuilder#addScopeDecorator (ScopeDecorator)}."
}
{
    "Origin": "For simplicity, all sensors are synchronized on Sensor.",
    "Reference": "For simplicity,\nall sensors are synchronized on this object.",
    "HebCup": "For simplicity, all sensors are synchronized on Sensor."
}
{
    "Origin": "Returns the expiration {@link Date} of the cookie, or null\nif none exists.",
    "Reference": "Returns the expiration {@link Date} of the cookie, or {@code null}\nif none exists.",
    "HebCup": "Returns the expiration {@link Date} of the cookie, or null\nif none exists."
}
{
    "Origin": "Returns a string representation of this object; useful for testing and debugging.",
    "Reference": "Returns a string representation of this object.",
    "HebCup": "Returns a string representation of this object; useful for testing and debugging."
}
{
    "Origin": "Skip all elements until specified time period has passed",
    "Reference": "Return all elements until specified time period has elapsed",
    "HebCup": "take all elements until specified time period has passed"
}
{
    "Origin": "Like {@link #defaultFormatNodeFileHeader(Supplier)} with UTC as the default time zone.",
    "Reference": "Like {@link #defaultFormatNodeFileHeader(boolean)}} with no normalization.",
    "HebCup": "Like {@link #defaultFormatNodeFileHeader(Supplier)} with UTC as the false."
}
{
    "Origin": "Checks to see if the AST is annotated with\nthe passed in annotation and return the AST\nrepresenting that annotation.",
    "Reference": "Checks if the AST is annotated with the passed in annotation\nand returns the AST representing that annotation.",
    "HebCup": "Checks to see return the AST is annotated with the passed in annotation and return the AST representing that annotation."
}
{
    "Origin": "Calculates the minimum of this elements according to their natural order.",
    "Reference": "Calculates the minimum of this elements according to their natural order in O(n).",
    "HebCup": "Calculates the minimum of this elements according to their natural order."
}
{
    "Origin": "Set the autoincrement flag and related properties of this column.",
    "Reference": "Set the autoincrement flag and related options of this column.",
    "HebCup": "Set the AutoIncrementOptions flag and related properties of this column."
}
{
    "Origin": "Creates query for the given searchPattern.",
    "Reference": "Queries this search source for the given searchPattern.",
    "HebCup": "Creates Source for the given searchPattern."
}
{
    "Origin": "Returns the default charset used for string decoding and encoding.",
    "Reference": "Gets the default charset name used for string decoding and encoding.",
    "HebCup": "Returns the default charset.name used for string decoding and encoding."
}
{
    "Origin": "Argument takes precedence from pid stored in the {@link CommandSession}.",
    "Reference": "Argument takes precedence from pid stored in the {@link Session}.",
    "HebCup": "Argument takes precedence from pid stored in the {@link CommandLine}."
}
{
    "Origin": "Returns a Path to access to the given resource.",
    "Reference": "Returns a Path to access the given resource.",
    "HebCup": "Returns a Path to File access to File the given resource."
}
{
    "Origin": "Especially notice that a\n{@link FCPPluginClient} is safe and intended to be used for multiple messages, you should\nnot obtain a fresh one for every message you send.",
    "Reference": "Especially notice that a\n{@link FCPPluginConnection} is safe and intended to be used for multiple messages, you should\nnot obtain a fresh one for every message you send.",
    "HebCup": "Especially notice that a {@link FCPPluginConnection} is safe and intended to be used for multiple messages , you should not obtain a fresh one for every message you send."
}
{
    "Origin": "Basically, this method runs the following instructions:",
    "Reference": "This method run the following instructions:",
    "HebCup": "Basically, this method runs the following instructions:"
}
{
    "Origin": "The generated HotStream is pausable, for a unpausable HotStream (slightly faster execution) @see {@link ReactiveSeq#hotStream(Executor)}.",
    "Reference": "The generated Connectable is pausable, for a unpausable Connectable (slightly faster execution) @see {@link ReactiveSeq#hotStream(Executor)}.",
    "HebCup": "The generated Connectable is pausable , for a unpausable Connectable (slightly faster execution) @see {@link ReactiveSeq#Connectable (Executor)}."
}
{
    "Origin": "Computes the maximum for each pixel across all bands in the {@link Planar} image.",
    "Reference": "Computes the maximum for each pixel across selected bands in the {@link Planar} image.",
    "HebCup": "Computes the maximum for each pixel across all bands in the {@link Planar} image."
}
{
    "Origin": "Get all segments which may include any data in the interval and are flagged as used.",
    "Reference": "Get all published segments which may include any data in the interval and are marked as used.",
    "HebCup": "Get all segments which may include any data in the interval and are flagged as used."
}
{
    "Origin": "Return all locally cross-referenced primary keys for the given persister.",
    "Reference": "Return all locally cross-referenced primary keys for the given descriptor.",
    "HebCup": "Return all locally cross-referenced primary keys for the given TypeDescriptor."
}
{
    "Origin": "Inspects the value of a K entry and stores all MCIDs\nthat are encountered.",
    "Reference": "Inspects the value of a K entry and stores all MCIDs\nor object references that are encountered.",
    "HebCup": "Inspects the value of a K entry and stores all MCIDs\nthat are encountered."
}
{
    "Origin": "Returns the default service endpoint.",
    "Reference": "Gets the underlying RPC settings.",
    "HebCup": "Returns the Stub service endpoint."
}
{
    "Origin": "Sets the selectionPolicy.",
    "Reference": "Set the selectionPolicy.",
    "HebCup": "Sets the selectionPolicy."
}
{
    "Origin": "{@codesnippet com.azure.storage.file.share.ShareDirectoryAsyncClient.deleteSubDirectory#string}",
    "Reference": "{@codesnippet com.azure.storage.file.share.ShareDirectoryAsyncClient.deleteSubdirectory#string}",
    "HebCup": "{@codesnippet com.azure.storage.file.share.ShareDirectoryAsyncClient.deleteSubdirectory#string}"
}
{
    "Origin": "This call\nprevents automatic {@link RequestScope.Instance#release() release} of the scope\ninstance once the task that runs in the scope has finished.",
    "Reference": "This call\nprevents automatic {@link RequestContext#release() release} of the scope\ncontext once the task that runs in the scope has finished.",
    "HebCup": "This call prevents automatic {@link RequestScope.Instance#release () release} of the scope RequestContext once the task that runs in the scope has finished."
}
{
    "Origin": "Get Account Type.",
    "Reference": "Get Kontenart.",
    "HebCup": "Get Account Type."
}
{
    "Origin": "Loop over the {@link SecretProperties secret}\nand call {@link SecretClient#getSecret(SecretProperties baseSecret)} .",
    "Reference": "Loop over the {@link SecretProperties secret}\nand call {@link SecretClient#getSecret(String, String)}.",
    "HebCup": "Loop over the {@link SecretProperties PropertiesOfSecrets} and call {@link SecretClient#getSecret(SecretProperties baseSecret)} ."
}
{
    "Origin": "Sets the transformation of this entity using a safe location from\n{@link TeleportHelper#getSafeLocation(Location)}.",
    "Reference": "Sets the {@link Transform}using a safe location from\n{@link TeleportHelper#getSafeLocation(Location)}.",
    "HebCup": "Sets the transformation of this entity using a safe Position from {@link TeleportHelper#getSafeLocation (Location)}."
}
{
    "Origin": "This operation requires the certificates/setissuers permission.",
    "Reference": "This operation requires the {@code certificates/update} permission.",
    "HebCup": "This operation requires the certificates/setissuers permission."
}
{
    "Origin": "Tells whether or not this site has any parameters (cookies, query or form parameters).",
    "Reference": "Tells whether or not this site has any parameters (cookies, query, form\nparameters, or response header fields).",
    "HebCup": "Tells whether or not this site has any parameters (cookies, query or form parameters)."
}
{
    "Origin": "Returns an immutable {@link Entry} containing the given key and value.",
    "Reference": "Returns an unmodifiable {@link Entry} containing the given key and value.",
    "HebCup": "Returns an immutable {@link Entry} containing the given KV and value."
}
{
    "Origin": "In order to set the matrix to a rotation transformation without post-multiplying,\nuse {@link #rotation(Quaterniond)}.",
    "Reference": "In order to set the matrix to a rotation transformation without post-multiplying,\nuse {@link #rotation(Quaterniondc)}.",
    "HebCup": "In order to set the matrix to a rotation transformation without post-multiplying, use {@link #rotation(Quaterniondc)}."
}
{
    "Origin": "This is provided for all event kinds except for:\n - VMUpdate",
    "Reference": "This is provided for all event kinds except for:\n - VMUpdate, VMFlagUpdate",
    "HebCup": "This is provided for all event kinds except for:\n - VMUpdate"
}
{
    "Origin": "Returns a string representation of this object; useful for testing and debugging.",
    "Reference": "Returns a string representation of this object.",
    "HebCup": "Returns a string representation of this object; useful for testing and debugging."
}
{
    "Origin": "Type strategy that maps an {@link InputTypeValidator} to a {@link TypeStrategy} if the validator\nmatches.",
    "Reference": "Type strategy that maps an {@link InputTypeStrategy} to a {@link TypeStrategy} if the input strategy\ninfers identical types.",
    "HebCup": "Type strategy that maps an {@link InputTypeStrategy} to a {@link TypeStrategy} if the validator matches."
}
{
    "Origin": "Request the close of this {@link ClientSession} by sending the request to the consensus module.",
    "Reference": "Close of this {@link ClientSession} by sending the request to the consensus module.",
    "HebCup": "Request the close of this {@link ClientSession} by sending the request to the consensus module."
}
{
    "Origin": "Convert the attributes if necessary and add them to the profile.",
    "Reference": "Convert the profile attributes, if necessary, and add them to the profile.",
    "HebCup": "Convert the attributes if necessary and add them to the profile."
}
{
    "Origin": "This gives the time elapsed, in seconds, since the last time this event was sent to the given {@link EntityRef}.",
    "Reference": "This gives the time elapsed, in ms, since the last time this event was sent to the given {@link EntityRef}.",
    "HebCup": "This gives the time elapsed, in seconds, since the last time this event was sent to the given {@link EntityRef}."
}
{
    "Origin": "It is sometimes more convenient to use {@link #promise(ObservableOnSubscribe)} over this method.",
    "Reference": "It is sometimes more convenient to use {@link #promiseAll(ObservableOnSubscribe)} over this method.",
    "HebCup": "It is sometimes more convenient to use {@link#promiseAll (ObservableOnSubscribe)} over this method."
}
{
    "Origin": "Returns the 4 byte header for BIP32 (HD) wallet - private key part.",
    "Reference": "Returns the 4 byte header for BIP32 wallet P2PKH - private key part.",
    "HebCup": "Returns the 4 byte HeaderP2PK for BIP32 (HD) wallet - private key part."
}
{
    "Origin": "Set the IterationListeners for the ComputationGraph (and all layers in the network)",
    "Reference": "Set the trainingListeners for the ComputationGraph (and all layers in the network)",
    "HebCup": "Set the TrainingListeners for the ComputationGraph (and all layers in the network)"
}
{
    "Origin": "Shortcut to add a line of generated code",
    "Reference": "Shortcut to append a line of generated code",
    "HebCup": "Shortcut to append a line of generated code"
}
{
    "Origin": "computes factor for given value; returns this rule's factor if matches, or VERSION if not",
    "Reference": "returns this rule's factor if test passes, or VERSION if not",
    "HebCup": "computes factor for given value; returns test rule's factor if matches , or VERSION if not"
}
{
    "Origin": "Returns the border size that defines the attack range for a {@link robocode.BorderSentryRobot SentryRobot}.",
    "Reference": "Returns the sentry border size for a {@link robocode.BorderSentry BorderSentry}.",
    "HebCup": "Returns the border size that defines the attack range for a {@link robocode.sentryBorderSentryRobot}."
}
{
    "Origin": "Indicates that this is a boot disk.",
    "Reference": "True if this is a boot disk.",
    "HebCup": "Indicates that this is a boot disk."
}
{
    "Origin": "* @param\nvalue the value to set.",
    "Reference": "'s Slurp Crawler   * @param value the value to set.",
    "HebCup": "* @param\nvalue the value to set."
}
{
    "Origin": "NOTE:The DBSnapshot must be in the available state to be\ndeleted.",
    "Reference": "The DBSnapshot must be in the  state to be\ndeleted.",
    "HebCup": "NOTE:The DBSnapshot must be in the available state to be\ndeleted."
}
{
    "Origin": "Methods from interfaces visited early will be overwritten by later ones.",
    "Reference": "Methods from interfaces visited early\ntake precedence over later ones.",
    "HebCup": "Methods from Map visited early will be overwritten by later ones."
}
{
    "Origin": "Write {@code tag} and non-null {@code value} to {@code writer}.",
    "Reference": "Write {@code tag} and {@code value} to {@code writer}.",
    "HebCup": "Write {@code tag} and non-null {@code value} to {@code writer}."
}
{
    "Origin": "Returns true if field persistedFileStatuses is set (has been assigned a value) and false otherwise",
    "Reference": "Returns true if field persistedFileFingerprints is set (has been assigned a value) and false otherwise",
    "HebCup": "Returns true if field PersistedFileFingerprints is set (has been assigned a value) and false otherwise"
}
{
    "Origin": "This adds the specified price index values to the provider.",
    "Reference": "This adds the specified forward curve and time-series to the provider.",
    "HebCup": "This adds the specified price Index Curve to the provider."
}
{
    "Origin": "Execute tests via an {@link EngineDiscoveryRequest} using the provided {@link TestEngine}.",
    "Reference": "Execute tests for a given {@link EngineDiscoveryRequest} using the\nprovided {@link TestEngine}.",
    "HebCup": "Execute tests via an {@link EngineDiscoveryRequest} using the provided {@link TestEngine}."
}
{
    "Origin": "We select the note head which is closest to slur target end.",
    "Reference": "We select the compatible note head which is closest to slur target end.",
    "HebCup": "We select the note head which is closest to slur target end."
}
{
    "Origin": "Creates a CaptureRequestConfiguration.Builder contains shared options.",
    "Reference": "Creates a CaptureRequestConfig.Builder contains shared options.",
    "HebCup": "Creates a CaptureRequestConfig.Builder contains shared options."
}
{
    "Origin": "Check whether a file with given name and checksum already exists",
    "Reference": "Check whether a file with given path and checksum already exists",
    "HebCup": "Check whether a file with given FileBase.path and checksum already exists"
}
{
    "Origin": "If the etag's value is equal to the wildcard character ({@code \"*\"}), the setting will\nalways be updated.",
    "Reference": "If the ETag's value is equal to the wildcard character ({@code \"*\"}), the setting will\nalways be updated.",
    "HebCup": "If the etag's value is equal to the wildcard character ({@code ``*``}) , the ConfigurationSetting will always be updated."
}
{
    "Origin": "Create parameters necessary for creating an iDEAL source.",
    "Reference": "Create iDEAL Source params.",
    "HebCup": "Owner.Builder parameters necessary for creating an iDEAL source."
}
{
    "Origin": "No reply will be send when the queue has been exhausted.",
    "Reference": "No response will be send when the queue has been exhausted.",
    "HebCup": "No reply will be send when the queue has been exhausted."
}
{
    "Origin": "Look for and set context declarations.",
    "Reference": "Look for and merge in context declarations.",
    "HebCup": "Look for and merge Context declarations."
}
{
    "Origin": "Creates an {@link Array} containing the elements of this builder.",
    "Reference": "Creates an {@link XQArray} containing the elements of this builder.",
    "HebCup": "Creates an {@link XQArray} containing the elements of this builder."
}
{
    "Origin": "Get the iterable of all providers (custom and default) registered for the given service provider contract\nin the underlying {@link InstanceManager instance manager} container.",
    "Reference": "Get the iterable of all providers (custom and default) registered for the given service provider contract\nin the underlying {@link InjectionManager injection manager} container.",
    "HebCup": "Get the iterable of all providers (custom and default) registered for the given service provider contract in the underlying {@link InjectionManager instance manager} container."
}
{
    "Origin": "The default value is 2000.",
    "Reference": "The default is 500 millis.",
    "HebCup": "The default value is 2000."
}
{
    "Origin": "Constuct a trace log event.",
    "Reference": "Constuct an error log event.",
    "HebCup": "Constuct a trace log event."
}
{
    "Origin": "Report the higher bound constant",
    "Reference": "Report the higher bound value",
    "HebCup": "Report the higher bound Named"
}
{
    "Origin": "Wait for and receive a response.",
    "Reference": "Waits for and receives a response.",
    "HebCup": "Wait for and receive a response."
}
{
    "Origin": "Tests the {@link FileSystemMaster#delete(AlluxioURI, DeleteOptions)} method for\na directory with un-synced persistent entries with a sync check.",
    "Reference": "Tests the {@link FileSystemMaster#delete(AlluxioURI, DeleteContext)} method for\na directory with un-synced persistent entries with a sync check.",
    "HebCup": "Tests the {@link FileSystemMaster#delete (AlluxioURI , DeleteContext)} method for a directory with un-synced persistent entries with a sync check."
}
{
    "Origin": "Returns a list of packages available for the current project.",
    "Reference": "Returns a list of modules available for the current project.",
    "HebCup": "Returns a list of Modules available for the current project."
}
{
    "Origin": "Obtains an instance based on the index, specifying the sensitivity currency.",
    "Reference": "Obtains an instance.",
    "HebCup": "Obtains an instance based on the FutureOptionVolatilitiesName , specifying the sensitivity currency."
}
{
    "Origin": "Compares that two secrets are equal.",
    "Reference": "Compares that two secrets are equal and not null.",
    "HebCup": "Compares that two secrets are equal."
}
{
    "Origin": "Set number of partitions need processed for finished indexes create or rebuilding.",
    "Reference": "Add number of partitions need processed for finished indexes create or rebuilding.",
    "HebCup": "add number of partitions need processed for finished indexes create or rebuilding."
}
{
    "Origin": "Set this matrix to the rotation transformation of the given {@link Quaterniond}.",
    "Reference": "Set this matrix to the rotation transformation of the given {@link Quaterniondc}.",
    "HebCup": "Set this matrix to the rotation transformation of the given {@link Quaterniondc}."
}
{
    "Origin": "Gets the valueType.",
    "Reference": "Gets the newType.",
    "HebCup": "Gets the newType."
}
{
    "Origin": "Returns the path of the specified client.",
    "Reference": "Returns the client with the specified id.",
    "HebCup": "Returns the client of the specified client."
}
{
    "Origin": "Returns a string representation of this object; useful for testing and debugging.",
    "Reference": "Returns a string representation of this object.",
    "HebCup": "Returns a string representation of this object; useful for testing and debugging."
}
{
    "Origin": "Defaults to\n{@code false}.",
    "Reference": "Defaults to\n{@code true}.",
    "HebCup": "Defaults to\n{@code false}."
}
{
    "Origin": "`DEPRECATED`: Node IDs; use `items` attribute",
    "Reference": "`DEPRECATED`: Node IDs Please use `items` instead.",
    "HebCup": "`DEPRECATED`: Node IDs Please use `items` attribute"
}
{
    "Origin": "Create a copy of TopologyMetaData with only endpointToHostIdMap.",
    "Reference": "Create a copy of TopologyMetaData with only nodeToHostIdMap.",
    "HebCup": "Create a copy of TopologyMetaData with only nodeToHostIdMap."
}
{
    "Origin": "Filter a list of {@link MetadataSearchResultRecord} that ensures the logged-in user has a privilege on",
    "Reference": "Filter a list of {@link MetadataRecord}s that ensures the logged-in user has a privilege on",
    "HebCup": "Filter a list of {@link SearchResultRecord} that ensures the logged-in user has a privilege on"
}
{
    "Origin": "See Immutable List Static Factory Methods for details.",
    "Reference": "See Unmodifiable Lists for details.",
    "HebCup": "See Unmodifiable List Static Factory Methods for details."
}
{
    "Origin": "Removes the specified keys from the metadata of the specified {@link NamespacedEntityId}.",
    "Reference": "Removes the specified keys from the metadata of the specified {@link MetadataEntity}.",
    "HebCup": "Removes the specified keys from the metadata of the specified {@link MetadataEntity}."
}
{
    "Origin": "Return the names of any classes referenced in the annotations in this list or their parameters.",
    "Reference": "Find the names of any classes referenced in the annotations in this list or their parameters.",
    "HebCup": "Return the names of any classes referenced in the annotations in this list or their parameters."
}
{
    "Origin": "Configure the maximum number of parts allowed in a single multipart request.",
    "Reference": "Configure the maximum amount of memory that is allowed to use per part.",
    "HebCup": "Configure the maximum number of In allowed in a single multipart request."
}
{
    "Origin": "Computes the average for each pixel across all bands in the {@link Planar} image.",
    "Reference": "Computes the average for each pixel across selected bands in the {@link Planar} image.",
    "HebCup": "Computes the average for each pixel across all bands in the {@link Planar} image."
}
{
    "Origin": "Build an HTTP Ok without any content.",
    "Reference": "Build an HTTP No content.",
    "HebCup": "Build an HTTP noContent without any content."
}
{
    "Origin": "Gets the value of the 'KeepDeletedCells' field.",
    "Reference": "Gets the value of the 'keepDeletedCells' field.",
    "HebCup": "Gets the value of the 'keepDeletedCells' field."
}
{
    "Origin": "Create optimize engine instance.",
    "Reference": "Create sharding optimize engine instance.",
    "HebCup": "Create optimize engine instance."
}
{
    "Origin": "Create a {@link InstanceManager}.",
    "Reference": "Create a {@link InjectionManager}.",
    "HebCup": "Create a {@link InjectionManager}."
}
{
    "Origin": "Returns the key this event concerns.",
    "Reference": "Returns the key.",
    "HebCup": "Returns the subject this event concerns."
}
{
    "Origin": "Tests resilency when L2 link is down.",
    "Reference": "Tests resiliency when L2 link is down.",
    "HebCup": "Tests resiliency when L2 link is down."
}
{
    "Origin": "Sets the identifier of the action profile.",
    "Reference": "Sets the ID of the action profile.",
    "HebCup": "Sets the identifier of the action profile."
}
{
    "Origin": "Sets the groups used to find a repo curve.",
    "Reference": "Sets the groups used to find a repo curve by legal entity.",
    "HebCup": "Sets the groups used to find a repo curve."
}
{
    "Origin": "If the key already exists, the sensitivity value will be merged.",
    "Reference": "Values with the same market data name and currency will be merged.",
    "HebCup": "If the key already exists, the sensitivity will be merged."
}
{
    "Origin": "This method returns all defined methods in service interface",
    "Reference": "This method returns all defined methods in service interface\nthat aren transactional",
    "HebCup": "This method returns Transactional Defined Methods in service interface"
}
{
    "Origin": "Creates query for the given searchPattern.",
    "Reference": "Queries this search source for the given queryString.",
    "HebCup": "Creates Source for the given searchPattern."
}
{
    "Origin": "This operation\nrequires the certificates/manageissuers/getissuers permission.",
    "Reference": "This operation requires the\n{@code certificates/manageissuers/getissuers} permission.",
    "HebCup": "This operation requires the >/manageissuers/getissuers permission."
}
{
    "Origin": "The default charset used for string decoding and encoding.",
    "Reference": "Gets the default charset name used for string decoding and encoding.",
    "HebCup": "The default charset.name used for string decoding and encoding."
}
{
    "Origin": "This sets up a PoolingDataSource.",
    "Reference": "This sets up a PoolingDataSourceWrapper.",
    "HebCup": "This sets up a PoolingDataSourceWrapper."
}
{
    "Origin": "Set the etag property: The etag property.",
    "Reference": "Set the eTag property: The eTag property.",
    "HebCup": "set E the etag property: The etag property."
}
{
    "Origin": "If include_properties\nis set, the properties for each protocol will also be printed.",
    "Reference": "If include_props is set, the attrs of each protocol are also printed",
    "HebCup": "If include_props is set , the properties for each protocol will also be printed."
}
{
    "Origin": "Expected 4 barriers for the Serial GC and 8 for G1 (4 pre + 4 post).",
    "Reference": "Expected 4 barriers for the card mark GCs and 8 for G1 (4 pre + 4 post).",
    "HebCup": "Expected 4 barriers for the Serial GC and 8 for G1 (4 pre + 4 post)."
}
{
    "Origin": "Get locks.",
    "Reference": "Delete lock.",
    "HebCup": "Get locks."
}
{
    "Origin": "Returns a function.",
    "Reference": "Returns a function call.",
    "HebCup": "Returns a functionCall."
}
{
    "Origin": "The offset is not part of the calculation and will be unchanged in the result.",
    "Reference": "In this case, the offset is not part of the calculation and will be unchanged.",
    "HebCup": "The offset is not part of the calculation and will be unchanged in the result."
}
{
    "Origin": "This method ADDS additional IterationListener to existing listeners",
    "Reference": "This method ADDS additional TrainingListener to existing listeners",
    "HebCup": "This method ADDS additional TrainingListener to existing listeners"
}
{
    "Origin": "KeyImportOptions#getKeyMaterial() key material} cannot be null.",
    "Reference": "ImportKeyOptions#getKey() key material} cannot be null.",
    "HebCup": "ImportKeyOptions#getKeyMaterial () key material} cannot be null."
}
{
    "Origin": "Implements Operator.MINUS.",
    "Reference": "Implements 'x - y'.",
    "HebCup": "Implements TokenKind.MINUS."
}
{
    "Origin": "Returns true if passed pubspec declares a flutter dependency.",
    "Reference": "Returns true if passed pubspec declares a flutter or flutter_web dependency.",
    "HebCup": "Returns true if passed pubspec declares a FlutterAny dependency."
}
{
    "Origin": "If the given language code is {@code null}, uses {@link DisplaySettings#getContentLanguage(Context)}.",
    "Reference": "If the given language code is {@code null}, uses {@link DisplaySettings#getShowsLanguage(Context)}.",
    "HebCup": "If the given language code is {@code null} , uses {@link DisplaySettings#getShowsLanguage (Context)}."
}
{
    "Origin": "Set Minimum Level.",
    "Reference": "Set Mindestmenge.",
    "HebCup": "Set Minimum Level."
}
{
    "Origin": "The classpath.",
    "Reference": "The build classpath.",
    "HebCup": "The buildClasspath."
}
{
    "Origin": "This helps yield savings in round trips and latencies, enabling",
    "Reference": "This helps yield savings in round trips and latencies, enabling Amazon",
    "HebCup": "This helps yield savings in round trips and latencies, enabling"
}
{
    "Origin": "Obtains an instance from the specified unique name.",
    "Reference": "Obtains an instance from the specified name.",
    "HebCup": "Obtains an instance from the specified name."
}
{
    "Origin": "Shuts down BookKeeper and RocksDB and cleans up file system directory.",
    "Reference": "Shuts down BookKeeper and cleans up file system directory.",
    "HebCup": "Shuts down BookKeeper and RocksDB and cleans up file system directory."
}
{
    "Origin": "Intervals are inclusive of the start instant and exclusive of the end.",
    "Reference": "Non-zero duration intervals are inclusive of the start instant and exclusive of the end.",
    "HebCup": "Intervals are inclusive of the start instant and exclusive of the end."
}
{
    "Origin": "Appends a string representation of the given access modifiers to\n{@link #buf buf}.",
    "Reference": "Appends a string representation of the given access flags to {@link #stringBuilder}.",
    "HebCup": "Appends a string representation of the given accessFlags modifiers to {@link#buf buf}."
}
{
    "Origin": "Returns a new Task that, when this task completes\nnormally, is executed using the supplied Scheduler, with this\ntask's result as the argument to the supplied action.",
    "Reference": "Returns a new Task that, when this task completes\nnormally, is executed using the supplied Executor, with this\ntask's result as the argument to the supplied action.",
    "HebCup": "Returns a new Task that , when this task completes normally , is executed using the supplied Executor , with this task's result as the argument to the supplied action."
}
{
    "Origin": "Add an {@link AsyncIOInterceptor} that will be invoked in the reverse order it was added.",
    "Reference": "Add an {@link AsyncIOInterceptor} that will be invoked in the order it was added.",
    "HebCup": "Add an {@link AsyncIOInterceptor} that will be invoked in the reverse order it was added."
}
{
    "Origin": "Configuring Analysis Schemes \nin the Amazon CloudSearch Developer Guide .",
    "Reference": "CloudSearch Developer Guide.",
    "HebCup": "Configuring Analysis Schemes \nin the Amazon CloudSearch Developer Guide ."
}
{
    "Origin": "Standard setter for the rightwardLabel String in this Relationship",
    "Reference": "Standard setter for the rightwardValue String in this Relationship",
    "HebCup": "Standard setter for the rightwardValue String in this Relationship"
}
{
    "Origin": "Gets the field name to use when converting from a DBObject",
    "Reference": "Gets the field name to use when converting from a Document",
    "HebCup": "Gets the field name to use when converting from a Document"
}
{
    "Origin": "Selects tracks for the period and returns the new result if the selection changed.",
    "Reference": "Selects tracks for the period.",
    "HebCup": "Selects tracks for the period and returns the new result if the selection changed."
}
{
    "Origin": "The input file must be a list of whitespace-separated verb-lemma-POS triples, one verb\nform per line.",
    "Reference": "The input file must be a list of tab-separated verb-POS pairs, one verb\nper line.",
    "HebCup": "The input file must be a list of whitespace-separated verb-lemma-POS triples, one verb\nform per line."
}
{
    "Origin": "Returns the set of the fully qualified class names of the providers.",
    "Reference": "Returns the list of the fully qualified class names of the providers\nor provider factories.",
    "HebCup": "Returns the List of the fully qualified class names of the providers."
}
{
    "Origin": "Compute an XWiki WebJAR URL\n(of the form {@code URL(resource name)}.",
    "Reference": "Compute an XWiki WebJar URL of the form {@code URL(resource name)}.",
    "HebCup": "Compute an ] WebJAR URL (of the form {@code URL (resource name)}."
}
{
    "Origin": "This merges the two objects - {@code this} and the specified offset -\nto form an instance of {@code OffsetTime}.",
    "Reference": "This merges the two objects - {@code this} and the specified date -\nto form an instance of {@code LocalDateTime}.",
    "HebCup": "This merges the two objects - {@code this} and the specified offset - to form an instance of {@code LocalDateTime}."
}
{
    "Origin": "Sets the humanAgentAssist.",
    "Reference": "Set the humanAgentAssist.",
    "HebCup": "Sets the humanAgentAssist."
}
{
    "Origin": "Returns a string representation of this object; useful for testing and debugging.",
    "Reference": "Returns a string representation of this object.",
    "HebCup": "Returns a string representation of this object; useful for testing and debugging."
}
{
    "Origin": "Sets the quorum name for operations.",
    "Reference": "Sets the split brain protection name for operations.",
    "HebCup": "Sets the split Brain Protection Name for operations."
}
{
    "Origin": "I need to know chart dimension to remove extra empty spaces, that bad because viewport depends a\nlittle on contentRectMinusAllMargins.",
    "Reference": "I need to know chart dimension to remove extra empty spaces, that bad because viewport depends a\nlittle on contentRect.",
    "HebCup": "I need to know chart dimension to remove extra empty spaces, that bad because viewport depends a little on ContentRect."
}
{
    "Origin": "Create a temporary local variable in {@code methodBody}.",
    "Reference": "Gets a new temporary local variable name in {@code methodBody}.",
    "HebCup": "new a temporary local variable in {@code methodBody}."
}
{
    "Origin": "A {@code DateTimeAccessor} represents some form of date and time information.",
    "Reference": "A {@code TemporalAccessor} represents some form of date and time information.",
    "HebCup": "A {@code DateTimeAccessor} represents some form of date and time information."
}
{
    "Origin": "Returns the generator function for customizing drag data.",
    "Reference": "Returns the drag data generator function for the given type.",
    "HebCup": "Returns the generator Functions.get for customizing drag data."
}
{
    "Origin": "Sets the value of the any property.",
    "Reference": "Sets the value of the schemaLanguage property.",
    "HebCup": "Sets the value of the SchemaLanguage property."
}
{
    "Origin": "Save cluster.",
    "Reference": "Save cluster advanced configuration.",
    "HebCup": "Save cluster."
}
{
    "Origin": "The array length access has been removed\nfrom the offset.",
    "Reference": "The sequence length\naccess has been removed from the offset.",
    "HebCup": "The Sequence Length Access has been removed from the offset."
}
{
    "Origin": "insert an async processor (with dedicated thread, multiple subscribers)",
    "Reference": "insert an async processor (with dedicated queue, multiple subscribers)",
    "HebCup": "insert an async processor (with dedicated thread, multiple subscribers)"
}
{
    "Origin": "Fails silently if no such student.",
    "Reference": "Fails silently if there is no such student.",
    "HebCup": "Fails silently if no such Unique."
}
{
    "Origin": "Get a string from the underlying resource bundle or return\n       null if the String is not found.",
    "Reference": "Get a string from the underlying resource bundle or return null if the",
    "HebCup": "Get a string from the underlying resource bundle or return\n       null if the String is not found."
}
{
    "Origin": "Creates a new DataLakeDirectoryAsyncClient object by concatenating subDirectoryName to the end of",
    "Reference": "Creates a new DataLakeDirectoryAsyncClient object by concatenating subdirectoryName to the end of",
    "HebCup": "Creates a new DataLakeDirectoryAsyncClient object by concatenating subdirectoryName to the end of"
}
{
    "Origin": "Initialize the timeout length by getting the CRL timeout\nsystem property.",
    "Reference": "Initialize the timeout length by getting the specified CRL timeout\nsystem property.",
    "HebCup": "Initialize the timeout length by getting the CRL timeout\nsystem property."
}
{
    "Origin": "Returns the container with the keys for the currently set locale.",
    "Reference": "Returns the container filled according to the current locale.",
    "HebCup": "Returns the IndexedContainer with the keys for the currently set locale."
}
{
    "Origin": "Adds metadata to this provider or overrides it if already available.",
    "Reference": "Adds metadata to this provider",
    "HebCup": "Adds metadata to this provider or overrides it if already available."
}
{
    "Origin": "Creates an invalid service status exception.",
    "Reference": "Creates an invalid API status exception.",
    "HebCup": "Creates an Invalid Api Status Exception."
}
{
    "Origin": "Creates a new {@link FileIOChannel.Enumerator}, spreading the channels in a round-robin fashion\nacross the temporary file directories.",
    "Reference": "Creates a new {@link Enumerator}, spreading the channels in a round-robin fashion\nacross the temporary file directories.",
    "HebCup": "Creates a new {@link Enumerator} , spreading the channels in a round-robin fashion across the temporary file directories."
}
{
    "Origin": "Returns a string representation of this object; useful for testing and debugging.",
    "Reference": "Returns a string representation of this object.",
    "HebCup": "Returns a string representation of this object; useful for testing and debugging."
}
{
    "Origin": "The hash code is based upon the package name, and for a\nqualified export, the set of modules names to which the package\nis exported.",
    "Reference": "The hash code is based upon the modifiers, the package name,\nand for a qualified opens, the set of modules names to which the\npackage is opened.",
    "HebCup": "The hash code is based upon the package name, and for a\nqualified export, the set of modules names to which the package\nis exported."
}
{
    "Origin": "Setter accessor for attribute 'description'.",
    "Reference": "Setter accessor for attribute 'evaluationStrategy'.",
    "HebCup": "Setter accessor for attribute 'EvaluationStrategy'."
}
{
    "Origin": "returns the Uri of the photo in the adapter at the passed position",
    "Reference": "returns the photo item in the adapter at the passed position",
    "HebCup": "returns the PhotoItem of the photo in the adapter at the passed position"
}
{
    "Origin": "Ensure that the zookeeper  socket is available by polling it for up to 2 seconds",
    "Reference": "Ensure that the zookeeper  socket is available by polling it for up to 2 seconds and creates the topic\nrequired by this source.",
    "HebCup": "Ensure that the zookeeper socket is Kafka by polling it for up to 2 seconds"
}
{
    "Origin": "The generated HotStream is pausable, for a unpausable HotStream @see {@link ReactiveSeq#primedHotStream(Executor)}.",
    "Reference": "The generated Connectable is pausable, for a unpausable Connectable @see {@link ReactiveSeq#primedHotStream(Executor)}.",
    "HebCup": "The generated Connectable is pausable , for a unpausable Connectable @see {@link ReactiveSeq#primedHotStream (Executor)}."
}
{
    "Origin": "This method logs a warning if the class\ncannot be registered.",
    "Reference": "This method LOGs a warning if the class\ncannot be registered.",
    "HebCup": "This method logs a warning LOG.debug the class cannot be registered."
}
{
    "Origin": "Returns a value with the type of the given expression.",
    "Reference": "Returns a value with the type of the given expression and invalidates the internal array.",
    "HebCup": "Returns a value with the final of the given expression."
}
{
    "Origin": "Builds a path operation.",
    "Reference": "Builds a path operation depending on generation mode.",
    "HebCup": "Builds a Markup Doc."
}
{
    "Origin": "Tests resilency when L2 and L4 link is down.",
    "Reference": "Tests resiliency when L2 and L4 link is down.",
    "HebCup": "Tests resiliency when L2 and L4 link is down."
}
{
    "Origin": "Invoke the Method Handler as a Callable.",
    "Reference": "Invoke the Method Handler as a Publisher.",
    "HebCup": "Invoke the Method Handler as a Publisher."
}
{
    "Origin": "The alias is an optional\nstring value located under the {@link #ALIAS} key.",
    "Reference": "The alias is an optional\nstring value located under the {@link HasAliasUtil#ALIAS} key.",
    "HebCup": "The HasAliasUtil.ALIAS is an optional string value located under the {@link#HasAliasUtil.ALIAS} key."
}
{
    "Origin": "Obtains an instance from the specified unique name.",
    "Reference": "Obtains an instance from the specified name.",
    "HebCup": "Obtains an instance from the specified name."
}
{
    "Origin": "Update the keys whose fd's have been selected by the devpoll\ndriver.",
    "Reference": "Update the keys whose fd's have been selected by the /dev/poll.",
    "HebCup": "Update the keys whose fd's have been selected by the devpoll\ndriver."
}
{
    "Origin": "Convert to primitive types, returning default value if text is null.",
    "Reference": "Convert to time, returning default value if text is inconvertible.",
    "HebCup": "Convert to primitive types, returning default value if text is null."
}
{
    "Origin": "Find and load all pull files under a base {@link Path} recursively.",
    "Reference": "Find and load all pull files under a base {@link Path} recursively in an order sorted by last modified date.",
    "HebCup": "Find and load all pull files under a base {@link Path} recursively."
}
{
    "Origin": "Creates builder for {@link PreparedDeleteObjects}.",
    "Reference": "Creates builder for {@link PreparedDeleteCollectionOfObjects}.",
    "HebCup": "Creates builder for {@link PreparedDeleteCollectionOfObjects}."
}
{
    "Origin": "Value for 'LIMIT' for selection query <= configured value",
    "Reference": "Value for 'LIMIT' for selection/distinct query <= configured value",
    "HebCup": "Value for 'UnsupportedOperationException' for selection query <= configured value"
}
{
    "Origin": "Returns whether the inodeFile is fully in memory or not.",
    "Reference": "Returns whether the inodeFile is fully in Alluxio or not.",
    "HebCup": "Returns whether the inodeFile is Fully In Alluxio or not."
}
{
    "Origin": "Create a new {@link MappingMongoConverter} using the given {@link MongoDbFactory} when loading {@link DBRef}.",
    "Reference": "Create a new {@link MappingMongoConverter} using the given {@link MongoDatabaseFactory} when loading {@link DBRef}.",
    "HebCup": "Create a new {@link MappingMongoConverter} using the given {@link MongoDatabaseFactory} when loading {@link DBRef}."
}
{
    "Origin": "Return the BeanProperty that make up the unique id.",
    "Reference": "Return the BeanProperty that is the Id.",
    "HebCup": "Return the BeanProperty that make up the unique Property."
}
{
    "Origin": "Until you enable full-control\nmode, you have access only to shared billing, and you can't use any of the advanced account administration\nfeatures that AWS Organizations supports.",
    "Reference": "Until you enable all features, you have access only to\nconsolidated billing, and you can't use any of the advanced account administration features that AWS",
    "HebCup": "Until you Enable All-control mode, you have access only to shared billing, and you can't use any of the advanced account administration features that AWS Organizations supports."
}
{
    "Origin": "Returns a string representation of this object; useful for testing and debugging.",
    "Reference": "Returns a string representation of this object.",
    "HebCup": "Returns a string representation of this object; useful for testing and debugging."
}
{
    "Origin": "Executes specified {@code callables} on the sequential executor in sequence, one by one.",
    "Reference": "The single task itself executes specified {@code callables} in sequence, one by one.",
    "HebCup": "Executes specified {@code callables} on the sequential executor in sequence, one by one."
}
{
    "Origin": "Returns a string representation of this object; useful for testing and debugging.",
    "Reference": "Returns a string representation of this object.",
    "HebCup": "Returns a string representation of this object; useful for testing and debugging."
}
{
    "Origin": "set consumers to this Carrier.",
    "Reference": "set consumeDriver to this Carrier.",
    "HebCup": "set drivers to this Carrier."
}
{
    "Origin": "Extract class names from {@link Bindable#inherit()} attribute.",
    "Reference": "Extract a list of type mirrors from the {@link Bindable#inherit()}.",
    "HebCup": "Extract class names from {@link Bindable#Inherited ()} attribute."
}
{
    "Origin": "delete a path from the trie",
    "Reference": "Delete a path from the trie.",
    "HebCup": "delete a path: from the trie"
}
{
    "Origin": "By default, this method will return an instance of {@link XmlConfigurationReaderFactory}.",
    "Reference": "By default, this method will return an {@link XmlConfigurationReader XML reader} factory.",
    "HebCup": "By default, this method will return an instance of {@link XmlConfigurationReaderFactory}."
}
{
    "Origin": "Total runtime size is 3904 bytes",
    "Reference": "Total runtime size is 3216 bytes",
    "HebCup": "Total runtime size is 3904 bytes"
}
{
    "Origin": "The negative of {@code endsWith} is {@link #endsNotWith}.",
    "Reference": "The negative of {@code endsWith} is {@link #notEndingWith}.",
    "HebCup": "The negative of {@code endsWith} is {@link#notEndingWith}."
}
{
    "Origin": "Tests for the {@link BaseFileSystem#free(AlluxioURI, FreeOptions)} method.",
    "Reference": "Tests for the {@link BaseFileSystem#free(AlluxioURI, FreePOptions)} method.",
    "HebCup": "Tests for the {@link BaseFileSystem#free (AlluxioURI , FreePOptions.new)} method."
}
{
    "Origin": "Bind all providers contained in {@code providerBag} (classes and instances) using instance manager.",
    "Reference": "Bind all providers contained in {@code providerBag} (classes and instances) using injection manager.",
    "HebCup": "Bind all providers contained in {@code providerBag} (classes and instances) using Injection Manager."
}
{
    "Origin": "Main method to invoke this demo about how to recognize linked entities of a text input.",
    "Reference": "Main method to invoke this demo about how to recognize the linked entities of an input text.",
    "HebCup": "Main method to invoke this demo about how to recognize linked entities of a text input."
}
{
    "Origin": "Returns a string representation of this object; useful for testing and debugging.",
    "Reference": "Returns a string representation of this object.",
    "HebCup": "Returns a string representation of this object; useful for testing and debugging."
}
{
    "Origin": "Initializes the RESTXQ module cache.",
    "Reference": "Initializes the web module cache.",
    "HebCup": "Initializes the Web module cache."
}
{
    "Origin": "Takes the detected squares and turns it into a list of {@link PositionSquare}.",
    "Reference": "Takes the detected squares and turns it into a list of {@link PositionPatternNode}.",
    "HebCup": "Takes the detected squares and turns it into a list of {@link PositionPatternNode}."
}
{
    "Origin": "The {@link EcKeyCreateOptions#getKeyType() keyType} indicates the type of key to create.",
    "Reference": "The {@link CreateEcKeyOptions#getKeyType() keyType} indicates the type of key to create.",
    "HebCup": "The {@link CreateEcKeyOptions#getKeyType () keyType} indicates the type of key to create."
}
{
    "Origin": "Returns the segment size.",
    "Reference": "Maps the log segment into memory.",
    "HebCup": "Returns the segment map."
}
{
    "Origin": "Get Reconciled.",
    "Reference": "Get Abgeglichen.",
    "HebCup": "Get Reconciled."
}
{
    "Origin": "Adds a new path selection handler.",
    "Reference": "Adds a resource selection handler.",
    "HebCup": "Adds a new Selection Handler."
}
{
    "Origin": "Opens the given snapshot reader.",
    "Reference": "Opens the given snapshot input stream.",
    "HebCup": "Opens the given Input Stream."
}
{
    "Origin": "Returns a string representation of this object; useful for testing and debugging.",
    "Reference": "Returns a string representation of this object.",
    "HebCup": "Returns a string representation of this object; useful for testing and debugging."
}
{
    "Origin": "Main method to invoke this demo about how to analyze sentiment of a text input.",
    "Reference": "Main method to invoke this demo about how to recognize the PII entities of an input text.",
    "HebCup": "Main method to invoke this demo about how to analyze sentiment of a text input."
}
{
    "Origin": "Set the subject value.",
    "Reference": "Set the subject Name.",
    "HebCup": "Set the subject value."
}
{
    "Origin": "Classpath/url-based asset source.",
    "Reference": "Classpath asset source.",
    "HebCup": "Classpath/url-based asset source."
}
{
    "Origin": "Creates a histogram of the given arguments",
    "Reference": "Creates a count of the given arguments",
    "HebCup": "Creates a histogram of the given arguments"
}
{
    "Origin": "Returns a string representation of this object; useful for testing and debugging.",
    "Reference": "Returns a string representation of this object.",
    "HebCup": "Returns a string representation of this object; useful for testing and debugging."
}
{
    "Origin": "To achieve\nthat, use {@link #bind(BEAN)}.",
    "Reference": "To achieve\nthat, use {@link #setBean(BEAN)}.",
    "HebCup": "To achieve\nthat, use {@link #bind(BEAN)}."
}
{
    "Origin": "Returns a string representation of this object; useful for testing and debugging.",
    "Reference": "Returns a string representation of this object.",
    "HebCup": "Returns a string representation of this object; useful for testing and debugging."
}
{
    "Origin": "Computes a hash code for this module export.",
    "Reference": "Computes a hash code for this module opens.",
    "HebCup": "Computes a hash code for this module export."
}
{
    "Origin": "Expected 4 barriers for the Serial GC and 8 for G1 (4 pre + 4 post).",
    "Reference": "Expected 4 barriers for the card mark GCs and 8 for G1 (4 pre + 4 post).",
    "HebCup": "Expected 4 barriers for the Serial GC and 8 for G1 (4 pre + 4 post)."
}
{
    "Origin": "Sets the search roots.",
    "Reference": "Sets the searchRoots.",
    "HebCup": "Sets the search roots."
}
{
    "Origin": "This utility is needed\nfor supporting Producers + some Apps Framework utility classes.",
    "Reference": "This utility is needed for supporting Producers + some Apps",
    "HebCup": "This utility is needed\nfor supporting Producers + some Apps Framework utility classes."
}
{
    "Origin": "Changes the default factory.",
    "Reference": "Set the default factory.",
    "HebCup": "Changes the default factory."
}
{
    "Origin": "Detector for chessboard targets.",
    "Reference": "Not recommended\nfor fisheye images.",
    "HebCup": "Detector for chessboard targets."
}
{
    "Origin": "Adds a single sensitivity to the builder using a date.",
    "Reference": "Adds a sensitivity to the builder.",
    "HebCup": "Adds a single sensitivity to the builder using a Currency."
}
{
    "Origin": "Checks if a a fragment of a NAL unit from a specific FU-A RTP packet\npayload is keyframe or not",
    "Reference": "Checks if a fragment of a NAL unit from a specific FU-A RTP packet\npayload is keyframe or not.",
    "HebCup": "Checks if a a fragment of a NAL unit from a specific FU-A RTP packet\npayload is keyframe or not"
}
{
    "Origin": "Updates IJ1 settings and preferences to reflect values set in IJ2 dialogs.",
    "Reference": "Updates legacy ImageJ settings and preferences to reflect values set in\nmodern ImageJ dialogs.",
    "HebCup": "Updates Legacy Image J Settings and preferences to reflect values set in IJ2 dialogs."
}
{
    "Origin": "Resolves a {@link NameableClusterPrivilege} from a given name if it exists.",
    "Reference": "Resolves a {@link NamedClusterPrivilege} from a given name if it exists.",
    "HebCup": "Resolves a {@link NamedClusterPrivilege} from a given name if it exists."
}
{
    "Origin": "It is recommended to bind the service to a server using\n{@linkplain ServerBuilder#service(ServiceWithRoutes, Function[])",
    "Reference": "It is recommended to bind the service to a server using\n{@linkplain ServerBuilder#service(HttpServiceWithRoutes, Function[])",
    "HebCup": "It is recommended to bind the service to a server using {@linkplain ServerBuilder#service(HttpServiceWithRoutes, Function[])"
}
{
    "Origin": "Use reflection to discover and report on the bigdata build information.",
    "Reference": "Method used to discover and report on the bigdata build information.",
    "HebCup": "Use reflection to discover and report on the bigdata build information."
}
{
    "Origin": "Returns the Google accounts (see {@link #isGoogleAccountType) for this ContactListFilter.",
    "Reference": "Returns the Google accounts (see {@link #isWritableGoogleTypeFilter ) for this ContactListFilter.",
    "HebCup": "Returns the Google accounts (see {@link#isWritableGoogleTypeFilter) for this ContactListFilter."
}
{
    "Origin": "Creates a mock {@link DocumentModelBridge} that has the specified reference, author and programming rights.",
    "Reference": "Creates a mock {@link DocumentModelBridge} that has the specified reference.",
    "HebCup": "Creates a mock {@link Documentthis.modelBridge} that has the specified reference, author and programming rights."
}
{
    "Origin": "Returns a string representation of the specified value.",
    "Reference": "Returns a chopped token representation of the specified value.",
    "HebCup": "Returns a string representation of the specified value."
}
{
    "Origin": "Creates a StackdriverStatsExporter for an explicit project ID and using explicit credentials.",
    "Reference": "Creates a StackdriverStatsExporter for an explicit project ID and using explicit credentials,\nwith default Monitored Resource.",
    "HebCup": "Creates a StackdriverStatsExporter for an explicit project ID and using explicit credentials."
}
{
    "Origin": "Returns the number of sync d l objects where parentFolderId = ?.",
    "Reference": "Returns the number of sync d l objects where modifiedTime > ?",
    "HebCup": "Returns the number of sync d l objects where repositoryId = ?."
}
{
    "Origin": "Set Account Sign.",
    "Reference": "Set Kontovorzeichen.",
    "HebCup": "Set Account Sign."
}
{
    "Origin": "This method returns the original edge via its traversal key.",
    "Reference": "This method returns the original edge via its key.",
    "HebCup": "This method returns the original edge via its Edge Key."
}
{
    "Origin": "Gets the X509Certificate out of the X509CertificateHolder and add it to certificatesMap.",
    "Reference": "Gets the X509Certificate out of the X509CertificateHolder.",
    "HebCup": "Gets the return out of the X509CertificateHolder and add it to certificatesMap."
}
{
    "Origin": "Test of npara method, of class ShiftedGeometricDistribution.",
    "Reference": "Test of length method, of class ShiftedGeometricDistribution.",
    "HebCup": "Test of Length method , of class ShiftedGeometricDistribution."
}
{
    "Origin": "A member should only expose a JsName when a JsName has been assigned and the compilation\nhas been configured to honor those names.",
    "Reference": "A member should only require a JsName when a JsName has been assigned and the compilation\nhas been configured to honor those names.",
    "HebCup": "A member should only require a JsName when a JsName has been assigned and the compilation has been configured to honor those names."
}
{
    "Origin": "Gets the X509Certificate out of the X509CertificateHolder and add it to certificatesMap.",
    "Reference": "Gets the X509Certificate out of the X509CertificateHolder.",
    "HebCup": "Gets the return out of the X509CertificateHolder and add it to certificatesMap."
}
{
    "Origin": "Transform a nullable return value into an observable with 0 or 1 element.",
    "Reference": "Transform a nullable return value into a Maybe",
    "HebCup": "Transform a nullable return value into an Maybe with 0 or 1 element."
}
{
    "Origin": "Returns the session state machine type.",
    "Reference": "Returns the session state machine type name.",
    "HebCup": "Returns the session state machine Name."
}
{
    "Origin": "Creates query for the given queryString.",
    "Reference": "Queries this search source for the given queryString.",
    "HebCup": "Creates Source for the given queryString."
}
{
    "Origin": "Configuring Scaling Options \nin the Amazon CloudSearch Developer Guide .",
    "Reference": "CloudSearch Developer Guide.",
    "HebCup": "Configuring Scaling Options \nin the Amazon CloudSearch Developer Guide ."
}
{
    "Origin": "Return a list of expanded labels in the current tree.",
    "Reference": "Return a list of expanded clusters in the current tree.",
    "HebCup": "Return a list of Expanded Clusters in the current tree."
}
{
    "Origin": "Creates an empty payload buffer of the given size and transaction status.",
    "Reference": "Creates an empty payload buffer of the given size and returns it for writing.",
    "HebCup": "Creates an empty required buffer of the given size and transaction status."
}
{
    "Origin": "Returns a rule that restricts access according to the {@link Role} of the\ncurrent authenticated {@link User}.",
    "Reference": "Adds a rule that restricts access according to the {@link Role} of the\ncurrent authenticated {@link User}.",
    "HebCup": "Returns a rule that restricts access according to the {@link Role} of the\ncurrent authenticated {@link User}."
}
{
    "Origin": "If database is corrupted (table USER_TOKENS badly purged\nfor instance), then the login may not relate to a valid user.",
    "Reference": "If database is corrupted (table USER_TOKENS badly purged\nfor instance), then the uuid may not relate to a valid user.",
    "HebCup": "If database is corrupted (table USER_TOKENS badly purged\nfor instance), then the login may not relate to a valid user."
}
{
    "Origin": "Produces an Uncollapsed SemanticGraph with optional extras.",
    "Reference": "Produces an Uncollapsed (basic) SemanticGraph.",
    "HebCup": "Produces an Uncollapsed SemanticGraph with optional extras."
}
{
    "Origin": "This creates a child from identifiers extracted from the message message, or a new span if\none couldn't be extracted.",
    "Reference": "This creates a child from identifiers extracted from the message properties, or a new span\nif one couldn't be extracted.",
    "HebCup": "This creates a child from identifiers extracted from the Properties Properties , or a new span if one couldn't be extracted."
}
{
    "Origin": "Returns a string representation of this object; useful for testing and debugging.",
    "Reference": "Returns a string representation of this object.",
    "HebCup": "Returns a string representation of this object; useful for testing and debugging."
}
{
    "Origin": "Generates an in-memory key for an service, used to index the app for later quick\nretrieval.",
    "Reference": "Generates an in-memory key for an api, used to index the app for later quick\nretrieval.",
    "HebCup": "Generates an in-memory key for an Api , used to index the app for later quick retrieval."
}
{
    "Origin": "Adds multiple Certificates out of a Collection of X509CertificateHolder into certificatesMap.",
    "Reference": "Adds multiple Certificates out of a Collection of X509CertificateHolder into certificateSet.",
    "HebCup": "Adds multiple Certificates out of a Collection of X509CertificateHolder into certificatesMap."
}
{
    "Origin": "Tests the engine starts up, executes 1 trade cycle successfully, but then receives unexpected Exception from",
    "Reference": "Tests the engine starts up, executes 1 trade cycle successfully, but then receives unexpected",
    "HebCup": "Tests the engine starts up, executes 1 trade cycle successfully, but then receives unexpected Exception from"
}
{
    "Origin": "Returns true if field jvmVersion is set (has been assigned a value) and false otherwise",
    "Reference": "Returns true if field version is set (has been assigned a value) and false otherwise",
    "HebCup": "Returns true if field Version is set (has been assigned a value) and false otherwise"
}
{
    "Origin": "If there are incomplete reads,\nretry.",
    "Reference": "If there are errors retries.",
    "HebCup": "If there are).throwable reads , retry."
}
{
    "Origin": "{@codesnippet com.azure.storage.file.datalake.DataLakeDirectoryClient.deleteSubDirectory#String}",
    "Reference": "{@codesnippet com.azure.storage.file.datalake.DataLakeDirectoryClient.deleteSubdirectory#String}",
    "HebCup": "{@codesnippet com.azure.storage.file.datalake.DataLakeDirectoryClient.deleteSubdirectory#String}"
}
{
    "Origin": "or throws a {@link com.liferay.chat.NoSuchStatusException} if it could not be found.",
    "Reference": "or throws a {@link NoSuchStatusException} if it could not be found.",
    "HebCup": "or throws a {@link com.liferay.chat.NoSuchStatusException} if it could not be found."
}
{
    "Origin": "Load the profile definitions from a file.",
    "Reference": "Extracts profile information from a file or from zookeeper",
    "HebCup": "Load the timestamp definitions from a file."
}
{
    "Origin": "The notification sent to the SNS topic is the same output as\nreturned from DescribeJob.",
    "Reference": "The\nnotification sent to the SNS topic is the same output as returned from",
    "HebCup": "The notification sent to the SNS topic is the same output as\nreturned from DescribeJob."
}
{
    "Origin": "Returns a QualifiedType that has the same type as this instance, but with the given qualifiers.",
    "Reference": "Returns a QualifiedType that has the same type as this instance, but with only the given qualifiers.",
    "HebCup": "Returns a QualifiedType that has the same type as this instance , but new the given qualifiers."
}
{
    "Origin": "The supplied function is invoked for each market data name in this sensitivities.",
    "Reference": "The supplied function is invoked for each parameter metadata in this sensitivities.",
    "HebCup": "The supplied UnaryOperator is invoked for each market data name in this sensitivities."
}
{
    "Origin": "Hardware Security Modules \nin the Amazon Redshift Cluster Management Guide.",
    "Reference": "Hardware Security Modules in the Amazon Redshift Cluster Management",
    "HebCup": "Hardware Security Modules \nin the Amazon Redshift Cluster Management Guide."
}
{
    "Origin": "The state of playback should be updated to\n{@link SessionPlayer2#PLAYER_STATE_PAUSED} after the prefetch is done.",
    "Reference": "The state of playback should be updated to\n{@link SessionPlayer2#PLAYER_STATE_PAUSED} after the prepare is done.",
    "HebCup": "The state of playback should be updated to {@link SessionPlayer2#PLAYER_STATE_PAUSED} after the Prepare is done."
}
{
    "Origin": "Returns this {@code Try} in the case of a {@code Success}, otherwise {@code other.get()}.",
    "Reference": "Returns this {@code Try} in the case of a {@code Success}, otherwise {@code other.call()}.",
    "HebCup": "Returns this {@code Try} in the case of a {@code Success}, otherwise {@code other.get()}."
}
{
    "Origin": "Otherwise, the segment is only freed and made eligible for reclamation by the GC.",
    "Reference": "The segment is only freed and made eligible for reclamation by the GC.",
    "HebCup": "Otherwise, the segment is only freed and made eligible for reclamation by the GC."
}
{
    "Origin": "Returns a string representation of this object; useful for testing and debugging.",
    "Reference": "Returns a string representation of this object.",
    "HebCup": "Returns a string representation of this object; useful for testing and debugging."
}
{
    "Origin": "Use to update your endpoints.",
    "Reference": "Use to update a batch of endpoints.",
    "HebCup": "Use to before your endpoints."
}
{
    "Origin": "For selection order-by queries, order-by expressions will be put at the front.",
    "Reference": "Order-by expressions will be put at the front.",
    "HebCup": "For order By order-by queries, order-by expressions will be put at the front."
}
{
    "Origin": "Get S3 Storage Configuration\n### Functional Description:   Retrieve S3 configuration.",
    "Reference": "Get S3 storage configuration\n### \ud83d\ude80 Since version VERSION  ### Functional Description:   Retrieve S3 configuration.",
    "HebCup": "Get S3 Storage Configuration\n### Functional Description:   Retrieve S3 configuration."
}
{
    "Origin": "***** Property JHOME *****",
    "Reference": "***** Property JAVAHOME *****",
    "HebCup": "***** Property JAVAHOME *****"
}
{
    "Origin": "Return null to speed up exception (stack trace is not needed for this exception).",
    "Reference": "Speed up exception (stack trace is not needed for this exception).",
    "HebCup": "Return null to speed up exception (stack trace is not needed for this exception)."
}
{
    "Origin": "Tests {@link Array#tail()}.",
    "Reference": "Tests {@link XQArray#tail()}.",
    "HebCup": "Tests {@link XQArray#tail ()}."
}
{
    "Origin": "Compiles classes in {@code paths}",
    "Reference": "Compiles classes in {@code targets}",
    "HebCup": "Compiles classes in {@code targets}"
}
{
    "Origin": "Currently, protocol versions 3 (7.4+) and 2 (pre-VERSION) are supported.",
    "Reference": "Currently, protocol versions 3 (7.4+) is supported.",
    "HebCup": "Currently, protocol versions 3 (7.4+) and 2 (pre-VERSION) are supported."
}
{
    "Origin": "Record an {@link ExecutionEvent} for a published {@link ReportEntry}.",
    "Reference": "Record an {@link Event} for a published {@link ReportEntry}.",
    "HebCup": "Record an {@link Event} for a published {@link ReportEntry}."
}
{
    "Origin": "Draws the notification.",
    "Reference": "Draws the bubble notification.",
    "HebCup": "Draws the notification."
}
{
    "Origin": "API allowing to search for documents allowing to have mutliple entries per language",
    "Reference": "API allowing to search for documents allowing to have mutliple entries per locale",
    "HebCup": "API allowing to search for documents allowing to have mutliple entries per language"
}
{
    "Origin": "Returns The The Form Type of this Form.",
    "Reference": "Returns The The Type of this Form.",
    "HebCup": "Returns The The Form Types of this Form."
}
{
    "Origin": "NOTE: If the total hit count of the top docs is less than\n{@code totalHitsThreshold} then this value is accurate.",
    "Reference": "NOTE: If the total hit count of the top docs is less than or exactly\n{@code totalHitsThreshold} then this value is accurate.",
    "HebCup": "NOTE: If the total hit count of the top docs is less than\n{@code totalHitsThreshold} then this value is accurate."
}
{
    "Origin": "Removes all of the instructions of this list.",
    "Reference": "Removes all the instructions of this list.",
    "HebCup": "Removes all of the instructions of this list."
}
{
    "Origin": "Plays a sound with a random pitch, but excludes one player from hearing it.",
    "Reference": "Plays a sound with a random pitch, but excludes specified players from hearing it.",
    "HebCup": "Plays Se sound with Se random pitch , but excludes one player from hearing it."
}
{
    "Origin": "Applies this migration to the database.",
    "Reference": "Undoes these migration from the database.",
    "HebCup": "Applies this ResolvedMigration to the database."
}
{
    "Origin": "Creates query for the given searchPattern.",
    "Reference": "Queries this search source for the given queryString.",
    "HebCup": "Creates Source for the given searchPattern."
}
{
    "Origin": "Applications should use the {@code with(WithAdjuster)} method on the\ndate-time object to make the adjustment passing this as the argument.",
    "Reference": "Applications should use the {@code with(TemporalAdjuster)} method on the\ndate-time object to make the adjustment passing this as the argument.",
    "HebCup": "Applications should use the {@code with (WithAdjuster)} method on the date-time object to make the Into passing this as the argument."
}
{
    "Origin": "Retrieves the value in Queue without removing it.",
    "Reference": "Retrieves the value in queue without removing it.",
    "HebCup": "Retrieves the value in Queue without removing it."
}
{
    "Origin": "Scheduler class, fixed delay or cron expression to be used",
    "Reference": "Scheduler class, fixed delay, every or cron expression to be used",
    "HebCup": "Scheduler class, fixed delay or cron expression to be used"
}
{
    "Origin": "Converts a {@link Promise} into a {@link Completable}.",
    "Reference": "Converts a {@link Operation} into a {@link Completable}.",
    "HebCup": "Converts a {@link operation} into a {@link Completable}."
}
{
    "Origin": "During the prefetch, a session should not hold audio focus in order to allow\nother sessions play seamlessly.",
    "Reference": "During the prepare, a session should not hold audio focus in order to allow\nother sessions play seamlessly.",
    "HebCup": "During the Prepare , a session should not hold audio focus in order to allow other sessions play seamlessly."
}
{
    "Origin": "Match statement against pattern for alter schedule",
    "Reference": "Match statement against pattern for alter task",
    "HebCup": "Match statement against pattern for Alter Task"
}
{
    "Origin": "Partitions all elements from inputCollection into an output and rejected collection,\nbased on the evaluation of the given predicate.",
    "Reference": "Selects all elements from inputCollection into an output and rejected collection,\nbased on the evaluation of the given predicate.",
    "HebCup": "select all elements from inputCollection into an output and rejected collection , based on the evaluation of the given predicate."
}
{
    "Origin": "What we need to do here is to\nrelease this PooledConnection from our pool...",
    "Reference": "PooledConnection from our pool...",
    "HebCup": "What we need to do here is to\nrelease this PooledConnection from our pool..."
}
{
    "Origin": "Tests {@code globalRecommend(Set, int)}.",
    "Reference": "Tests {@code recommendRelatedItems()(Set, int)}.",
    "HebCup": "Tests {@code recommendRelatedItems (Set , int)}."
}
{
    "Origin": "Converts an object that represents user flags and can be either SkylarkNestedSet , SkylarkList,\nor None into Iterable.",
    "Reference": "Converts an object that represents user flags as either SkylarkList or None into Iterable.",
    "HebCup": "Converts an object that represents user flags and can be either SkylarkNestedSet , SkylarkList,\nor None into Iterable."
}
{
    "Origin": "Produces a CCProcessed SemanticGraph with no extras.",
    "Reference": "Produces a CCProcessed SemanticGraph.",
    "HebCup": "Produces a CCProcessed SemanticGraph with no extras."
}
{
    "Origin": "If the key already exists, the sensitivity value will be merged.",
    "Reference": "Values with the same market data name and currency will be merged.",
    "HebCup": "If the key already exists, the sensitivity value will be merged."
}
{
    "Origin": "Convert to SQL.",
    "Reference": "Build SQL.",
    "HebCup": "Convert to SQL."
}
{
    "Origin": "Generate an info message string relating to given entity persister.",
    "Reference": "Generate an info message string relating to given entity descriptor.",
    "HebCup": "Generate an info message string relating to given Entity Type Descriptor."
}
{
    "Origin": "timed invokeAny(,,null) throws NPE",
    "Reference": "timed invokeAny(,,null) throws NullPointerException",
    "HebCup": "timed invokeAny(,,null) throws NPE"
}
{
    "Origin": "This method choses an interface in\norder of preference:\n1. neither loopback nor point to point\n2. point to point\n3. loopback",
    "Reference": "This method chooses an interface in\norder of preference:\n1. neither loopback nor point to point\n   ( prefer interfaces with dual IP support )\n2. point to point\n3. loopback",
    "HebCup": "This method choses an interface in\norder of preference:\n1. neither loopback nor point to point\n2. point to point\n3. loopback"
}
{
    "Origin": "Returns a new BaseTimeSeries that is a subset of this BaseTimeSeries.",
    "Reference": "Returns a new BaseBarSeries that is a subset of this BaseBarSeries.",
    "HebCup": "Returns a new BaseTimeSeries that is a subset of this BaseTimeSeries."
}
{
    "Origin": "Decorates and binds the specified {@link ServiceWithRoutes} at multiple {@link Route}s\nof the default {@link VirtualHost}.",
    "Reference": "Decorates and binds the specified {@link HttpServiceWithRoutes} at multiple {@link Route}s\nof the default {@link VirtualHost}.",
    "HebCup": "Decorates and binds the specified {@link HttpServiceWithRoutes} at multiple {@link Route}s of the default {@link VirtualHost}."
}
{
    "Origin": "Get all non-null values with the given ids for default COLUMN",
    "Reference": "Get all non-null values of type T with the given ids for default COLUMN in a map",
    "HebCup": "getKV all non-null values with the given ids for default COLUMN"
}
{
    "Origin": "Defaults to 0.",
    "Reference": "Defaults to 60000.",
    "HebCup": "Defaults to 60000."
}
{
    "Origin": "Sets the input.",
    "Reference": "Set the input.",
    "HebCup": "Sets the input."
}
{
    "Origin": "List the roles of the {@param user}.",
    "Reference": "List the roles of the {@param principal}.",
    "HebCup": "List the roles of the {@param principal}."
}
{
    "Origin": "If the\noffsets list is not empty, then it must be the same size as array.",
    "Reference": "If the offsets list is not empty, then it must be the same size as sequence.",
    "HebCup": "If the offsets list is not empty, then it must be the same size as sequence."
}
{
    "Origin": "Registers the listener for events matching the service name, topic and filter.",
    "Reference": "/**",
    "HebCup": "Registers the Listener0 for events matching the service name , topic and filter."
}
{
    "Origin": "Judge contains column from table meta data or not.",
    "Reference": "Judge whether contains column name.",
    "HebCup": "Judge contains columnName from table meta data or not."
}
{
    "Origin": "Asks the {@link CheckAdapter} to verify the \"total\" data items against the calculated values for a single frame.",
    "Reference": "Asks the {@link DiffCheckAdapter} to verify the \"self\" data items against the calculated values for a single\nframe.",
    "HebCup": "Asks the {@link DiffCheckAdapter} to verify the ``total`` data items against the calculated values for a single frame."
}
{
    "Origin": "Return a forward-order iterator of this node's children.",
    "Reference": "Return a forward-order stream of this node's children.",
    "HebCup": "Return a forward-order Stream of this node's children."
}
{
    "Origin": "- Will fail, as defaults are relatively safe,\n    and service certificate will not be recognised.",
    "Reference": "- Will fail, as defaults are relatively safe,\n    and API certificate will not be recognised.",
    "HebCup": "- Will fail , as defaults are relatively safe , and Api certificate will not be recognised."
}
{
    "Origin": "Matching is performed using the matching rules specified by\n[RFC2459].",
    "Reference": "Matching is performed using the matching rules specified by\n[RFC5280].",
    "HebCup": "Matching is performed using the matching rules specified by\n[RFC2459]."
}
{
    "Origin": "Computes the average for each pixel across all bands in the {@link Planar} image.",
    "Reference": "Computes the maximum for each pixel across all bands in the {@link Planar} image.",
    "HebCup": "Computes the average for each pixel across all bands in the {@link Planar} image."
}
{
    "Origin": "Does a full, blocking rebuild of the indexes specified by columns from the sstables.",
    "Reference": "Does a blocking full rebuild of the specifed indexes from all the sstables in the base table.",
    "HebCup": "Does a full, blocking rebuild of the indexes specified by columns from the allSSTables."
}
{
    "Origin": "Adds a single sensitivity to the builder using metadata.",
    "Reference": "Adds a single sensitivity to the builder.",
    "HebCup": "Adds a single sensitivity to the builder using metadata."
}
{
    "Origin": "Tests that rule-specific licenses are still used by config_setting.",
    "Reference": "Tests that rule-specific licenses are ignored by config_setting.",
    "HebCup": "Tests that rule-specific licenses are still used by config_setting."
}
{
    "Origin": "Note: text is always trimmed and to lowercase.",
    "Reference": "Note: Text is always trimmed and lowercase.",
    "HebCup": "Note: text is always trimmed and to lowercase."
}
{
    "Origin": "Get Allocated.",
    "Reference": "Get Zugeordnet.",
    "HebCup": "Get Allocated."
}
{
    "Origin": "Chosen bits are [12, 7, 2]",
    "Reference": "Chosen bits are [13, 6, 2]",
    "HebCup": "Chosen bits are [12 , 6 , 2]"
}
{
    "Origin": "(Try to) connect this fermata with a suitable barline.",
    "Reference": "(Try to) connect this fermata with a suitable StaffBarline.",
    "HebCup": "(Try to) connect this fermata with a suitable StaffBarline."
}
{
    "Origin": "Create an instance of {@link JAXBElement }{@code <}{@link CTMarkupRange }{@code >}}",
    "Reference": "Create an instance of {@link JAXBElement }{@code <}{@link CTMoveFromRangeEnd }{@code >}}",
    "HebCup": "Create an instance of {@link JAXBElement} {@code <} {@link CTMoveFromRangeEnd} {@code >}}"
}
{
    "Origin": "Set velocity (angle in deg) at which the entity will rotate per tick.",
    "Reference": "Set velocity (angle in deg) at which the entity will rotate per second.",
    "HebCup": "Set velocity (angle in deg) at which the entity will rotate per tick."
}
{
    "Origin": "This will clear and cancel all other pending letters.",
    "Reference": "This will clear and cancel all other pending mails.",
    "HebCup": "This will clear and cancel all other pending Mail."
}
{
    "Origin": "If the package is not in the module then the resource is not\n    encapsulated.",
    "Reference": "If the resource is not in a package in the module\n    then the resource is not encapsulated.",
    "HebCup": "If the package is not in the module then the resource is not\n    encapsulated."
}
{
    "Origin": "Glacier can notify the topic after it completes the job.",
    "Reference": "Glacier completes the job.",
    "HebCup": "Glacier can notify the topic after it completes the job."
}
{
    "Origin": "If there is a transaction open, close it before closing the graph.",
    "Reference": "This closes local transaction before closing the graph.",
    "HebCup": "If there is a Close open, close it before closing the graph."
}
{
    "Origin": "Chaining computations means to begin at a base computation that transforms K1 to R1, and\nthen using the this method chain a second computation K2 to R2 to create one composed\ncomputation of K1 to R2.",
    "Reference": "Chaining computations means to begin at a base computation that transforms K1 to R1, and\nthen using the this method chain a second computation K2 to R2 to create one composed\ncomputation of K1 to Composed[R2].",
    "HebCup": "Chaining computations means to begin at a base computation that transforms K1 to R1 , and then using the this method chain a second computation K2 to R2 to create one composed computation composeLeft K1 to R2."
}
{
    "Origin": "This method should be overridden by file protocols that do not offer a {@link #getOutputStream(boolean)}\nimplementation, but that can take an  and use it to write the file.",
    "Reference": "This method should be overridden by filesystems that do not offer a {@link #getOutputStream()}\nimplementation, but that can take an  and use it to write the file.",
    "HebCup": "This method should be overridden by file protocols that do not offer a {@link #getOutputStream(boolean)}\nimplementation, but that can take an  and use it to write the file."
}
{
    "Origin": "For variants which are underspecified on the left we must explicitly resolve each possible combination\nof actual left-side values.",
    "Reference": "For variants which are underspecified we must explicitly resolve each possible combination\nof actual left-side values.",
    "HebCup": "For variants which are underspecified on the wildcard we must explicitly resolve each possible combination of actual left-side values."
}
{
    "Origin": "Returns the number of editable columns.",
    "Reference": "Returns the editable columns.",
    "HebCup": "Returns the number of editable columns."
}
{
    "Origin": "Find out if a given class has is explicitly bound to a scope.",
    "Reference": "Find out if a given class is explicitly bound to a scope.",
    "HebCup": "Find out if a given class has is explicitly bound to a scope."
}
{
    "Origin": "Create or obtain a {@link PreparedStatement} from the pool.",
    "Reference": "Creates or obtains a {@link PreparedStatement} from the pool.",
    "HebCup": "Create or obtain a {@link PreparedStatement} from the pool."
}
{
    "Origin": "Finds all implemtaions of DataStoreFactory which have registered using the services\nmechanism, and that have the appropriate libraries on the classpath.",
    "Reference": "Finds all implementations of DataStoreFactory which have registered using the services\nmechanism, and that have the appropriate libraries on the classpath.",
    "HebCup": "Finds all implemtaions of DataStoreto which have registered using the services mechanism, and that have the appropriate libraries on the classpath."
}
{
    "Origin": "have been added with {@link #activateIndex(IndexDescriptor2)}.",
    "Reference": "have been added with {@link #activateIndex(IndexDescriptor)}.",
    "HebCup": "have been added with {@link #activateIndex(IndexDescriptor)}."
}
{
    "Origin": "Returns a string representation of this object; useful for testing and debugging.",
    "Reference": "Returns a string representation of this object.",
    "HebCup": "Returns a string representation of this object; useful for testing and debugging."
}
{
    "Origin": "Returns unmodifiable map of module name to hash string.",
    "Reference": "Returns unmodifiable map of module name to hash",
    "HebCup": "Returns unmodifiable map of module name to hash byte."
}
{
    "Origin": "BXSE0003: servlet context required.",
    "Reference": "BXSE0003: HTTP connection required.",
    "HebCup": "BXSE0003: HTTP context required."
}
{
    "Origin": "You are running on JDK6 which comes with JAX-WS {0} API, but this tool requires JAX-WS {1} API.",
    "Reference": "You are running on JDK6 or newer which comes with JAX-WS {0} API, but this tool requires JAX-WS {1} or newer API.",
    "HebCup": "You are running on JDK6 which comes with JAX-WS {0} API, but this tool requires JAX-WS {1} API."
}
{
    "Origin": "Print it into output stream.",
    "Reference": "Print it into output stream in UTF8.",
    "HebCup": "Print it into output stream."
}
{
    "Origin": "to work in test classes without errors being displayed to stderr.",
    "Reference": "to work (and persist) in test classes without errors being displayed to stderr.",
    "HebCup": "to work in test classes without errors being displayed to stderr."
}
{
    "Origin": "Imports nodes w/ their properties and labels from {@link Input#nodes()}.",
    "Reference": "Imports nodes w/ their properties and labels from {@link Input#nodes(Collector)}.",
    "HebCup": "Imports nodes w/ their properties and labels from {@link Input#nodes()}."
}
{
    "Origin": "Returns a string representation of this object; useful for testing and debugging.",
    "Reference": "Returns a string representation of this object.",
    "HebCup": "Returns a string representation of this object; useful for testing and debugging."
}
{
    "Origin": "Returns the member's term.",
    "Reference": "Returns the member's incarnation number.",
    "HebCup": "Returns the member's incarnationNumber."
}
{
    "Origin": "Read one constant from the given file, the type depends on a tag byte.",
    "Reference": "Read one constant from the given input, the type depends on a tag byte.",
    "HebCup": "Read one constant from the given input , the type depends on a tag byte."
}
{
    "Origin": "Provider-Person-Names(that are not voided)",
    "Reference": "Creates or that matches the input name with Provider-Person-Names (not voided)",
    "HebCup": "and-Person-Names(that are not voided)"
}
{
    "Origin": "Test ModuleModule with a JAR file containing a .class file in the top\nlevel directory.",
    "Reference": "Test ModuleFinder with a JAR file containing a .class file in the top\nlevel directory.",
    "HebCup": "Test ModuleModule with a JAR file containing a .class file in the top\nlevel directory."
}
{
    "Origin": "The delay is to prevent a race condition\nbetween when a blobstore is created and when the topology is submitted.",
    "Reference": "The delay is to prevent a race conditions such as when a blobstore is created and when the topology\nis submitted.",
    "HebCup": "The delay is to prevent a race condition between when a Set is created and when the topology is submitted."
}
{
    "Origin": "Integers 0 ... n.",
    "Reference": "Integers 0 ... n - 1.",
    "HebCup": "Integers 0 ... n."
}
{
    "Origin": "Access (and modify) a request scoped bean\nwithin the stages, but not before.",
    "Reference": "Access (and modify) a request scoped bean\nwithin the stage, but not before the context snapshot is taken.",
    "HebCup": "Access (and modify) a cf scoped bean within the stages , but not before."
}
{
    "Origin": "Try to detect a relation between this Alter instance and a head nearby (perhaps\nwith its mirror).",
    "Reference": "Try to detect relation with heads nearby (perhaps with their mirror).",
    "HebCup": "Try to set a relation between this Alter instance and a head nearby (perhaps with its mirror)."
}
{
    "Origin": "Obtains an instance from the specified unique name.",
    "Reference": "Obtains an instance from the specified name.",
    "HebCup": "Obtains an instance from the specified name."
}
{
    "Origin": "Output a description of the current annotation configuration.",
    "Reference": "Output a description of the current annotation configuration to\nstandard error.",
    "HebCup": "Output a description of the current annotation configuration."
}
{
    "Origin": "For example, if shutting down, the\nstorage layer would also invoke {@link LimiterReleasingCallback#onError(Throwable)}.",
    "Reference": "For example, if shutting down, the storage layer would\nalso invoke {@link #onError(Throwable)}.",
    "HebCup": "For example, if shutting down, the storage layer would also invoke {@link LimiterReleasingthis#onError(Throwable)}."
}
{
    "Origin": "Get all roles and to the role assignment rights\n### Functional Description:   Retrieve a list of all Roles and the role assignment rights.",
    "Reference": "Get all roles with assigned rights\n### Functional Description:   Retrieve a list of all roles with assigned rights.",
    "HebCup": "Get all roles and to the role assignment rights\n### Functional Description:   Retrieve a list of all Roles and the role assignment rights."
}
{
    "Origin": "Scenario:\n  - no CA inherited trust\n  - gateway does not trust the service\n  - service trusts gateway certificate",
    "Reference": "Scenario:\n  - no CA inherited trust\n  - gateway does not trust the API\n  - API trusts gateway certificate",
    "HebCup": "Scenario: - no CA inherited trust - gateway does not trust the Api - Api trusts gateway certificate"
}
{
    "Origin": "For Development Mode, it should match\nthe module's timestamp.",
    "Reference": "For both Development Mode and ProductionMode it should\nmatch the module's timestamp.",
    "HebCup": "For Development Mode, it should match\nthe module's timestamp."
}
{
    "Origin": "Returns the corresponding ShapeRenderer for a given ScatterShape.",
    "Reference": "Returns the corresponding IShapeRenderer for a given ScatterShape.",
    "HebCup": "Returns the corresponding IShapeRenderer for a given ScatterShape."
}
{
    "Origin": "{@codesnippet com.azure.storage.file.share.ShareDirectoryClient.deleteSubDirectory#string}",
    "Reference": "{@codesnippet com.azure.storage.file.share.ShareDirectoryClient.deleteSubdirectory#string}",
    "HebCup": "{@codesnippet com.azure.storage.file.share.ShareDirectoryClient.deleteSubdirectory#string}"
}
{
    "Origin": "Group: consumer",
    "Reference": "Group: producer",
    "HebCup": "Group: consumer"
}
{
    "Origin": "If the chronology cannot be obtained then an exception will be thrown.",
    "Reference": "If the chronology cannot be obtained then an exception is thrown unless the\nsection of the formatter is optional.",
    "HebCup": "If the chronology cannot be obtained then an exception will be thrown."
}
{
    "Origin": "Extracts a {@code FunctionSignature.WithValues} from a\n{@link SkylarkCallable}-annotated method.",
    "Reference": "Extracts a {@code FunctionSignature.WithValues} from a {@link",
    "HebCup": "Extracts a {@code FunctionSignature.WithValues} from a {@link SkylarkCallableImpl}-annotated method."
}
{
    "Origin": "Returns a string representation of this object; useful for testing and debugging.",
    "Reference": "Returns a string representation of this object.",
    "HebCup": "Returns a string representation of this object; useful for testing and debugging."
}
{
    "Origin": "Indicate to all associated {@link ExportDataSource} to assume\nmastership role for the given partition id",
    "Reference": "Indicate to all associated {@link ExportDataSource} to assume\nleadership role for the given partition id",
    "HebCup": "Indicate to all associated {@link ExportDataSource} to assume Leader role for the given partition id"
}
{
    "Origin": "Returns the distanceFunction.",
    "Reference": "Returns the distance.",
    "HebCup": "Returns the distance."
}
{
    "Origin": "Returns an RxJava Observable that monitors changes to this RealmObject.",
    "Reference": "Returns an RxJava Flowable that monitors changes to this RealmObject.",
    "HebCup": "Returns an RxJava Flowable that monitors changes to this RealmObject."
}
{
    "Origin": "Creates a new instance of {@link BlockMasterInfo} from a thrift representation.",
    "Reference": "Creates a new instance of {@link BlockMasterInfo} from a proto representation.",
    "HebCup": "Creates a new instance of {@link BlockMasterInfo} from a Proto representation."
}
{
    "Origin": "Locks existing inodes on the specified path, in the specified {@link LockMode}.",
    "Reference": "Locks existing inodes on the specified path, in the specified {@link LockPattern}.",
    "HebCup": "Locks existing inodes on the specified path , in the specified {@link LockPattern}."
}
{
    "Origin": "Set the agg star list to empty.",
    "Reference": "Clears the list of agg stars.",
    "HebCup": "Set the agg star list to clear."
}
{
    "Origin": "Updates a module m to export a package to all modules.",
    "Reference": "Update module m to open a package to all modules.",
    "HebCup": "Updates a module m to Opens a package to all modules."
}
{
    "Origin": "Inject fields to the provided injectee using the primary injector.",
    "Reference": "Inject fields to the provided injector using the primary injector.",
    "HebCup": "Inject fields to the provided injector.apply using the primary injector."
}
{
    "Origin": "JoinGroup and SyncGroup, delegating to {@link #performAssignment(String, String, Map)} if\nelected leader by the coordinator.",
    "Reference": "JoinGroup and SyncGroup, delegating to {@link #performAssignment(String, String, List)} if\nelected leader by the coordinator.",
    "HebCup": "JoinGroup and SyncGroup).setSessionTimeoutMs delegating to {@link#performAssignment (String).setSessionTimeoutMs String).setSessionTimeoutMs Map)} if elected leader by the coordinator."
}
{
    "Origin": "Sets {@link MediaItem2} object to render using VideoView2.",
    "Reference": "Sets {@link MediaItem} object to render using VideoView2.",
    "HebCup": "Sets {@link MediaItem} object to render using VideoView2."
}
{
    "Origin": "return RxRatpack.promiseSingle(",
    "Reference": "return RxRatpack.promise(",
    "HebCup": "return RxRatpack.promiseAllSingle("
}
{
    "Origin": "Set the max minutes per log file.",
    "Reference": "Set the current log file name",
    "HebCup": "Set the current Log File Name."
}
{
    "Origin": "returns the signature of the function with the given name and arity.",
    "Reference": "Returns the signature of the function with the given name and arity.",
    "HebCup": "returns the signature of the function with the given name and arity."
}
{
    "Origin": "In order to set the matrix to a rotation transformation without post-multiplying,\nuse {@link #rotation(Quaterniond)}.",
    "Reference": "In order to set the matrix to a rotation transformation without post-multiplying,\nuse {@link #rotation(Quaterniondc)}.",
    "HebCup": "In order to set the matrix to a rotation transformation without post-multiplying, use {@link #rotation(Quaterniondc)}."
}
{
    "Origin": "Executes the command within a transaction, and with respect to the specified {@link SudoPolicy}\nspecified in the constructor.",
    "Reference": "Executes the command within a transaction, and with respect to the {@link CommandExecutorService.SudoPolicy}\nspecified in the constructor.",
    "HebCup": "Executes the command within a transaction , and with respect to the specified transactionManager @link SudoPolicy} specified in the constructor."
}
{
    "Origin": "Checks if the given JSON string is correct and produces the given output with unescaping\ndeactivated.",
    "Reference": "Checks if the given JSON string is correct and produces the given output with escaping\nactivated.",
    "HebCup": "Checks if the given JSON string is correct and produces the given output with unescaping\ndeactivated."
}
{
    "Origin": "Configure {@link AutoDiscoverable auto-discoverables} in the HK2 service locator.",
    "Reference": "Configure {@link AutoDiscoverable auto-discoverables} in the instance manager.",
    "HebCup": "Configure {@link AutoDiscoverable auto-discoverables} in the HK2 Instance Manager."
}
{
    "Origin": "**See also:** [Specifying a voice](URL).",
    "Reference": "**See also:** [Listing a specific voice](URL).",
    "HebCup": "**See also:** [Specifying a voice](URL)."
}
{
    "Origin": "Returns a {@link RootProviderRegistry} that only supports the {@link Impulse} primitive.",
    "Reference": "Returns a {@link RootProviderRegistry} that supports the {@link Impulse} and {@link Flatten}\nprimitives.",
    "HebCup": "Returns a {@link RootProviderRegistry} that only supports the {@link javaPortable} primitive."
}
{
    "Origin": "This method will return  if this repository is\n    disabled for  object passed as parameter and\n     otherwise.",
    "Reference": "This method will return  if this repository is\n    disabled for  value passed as parameter and\n     otherwise.",
    "HebCup": "This method will return  if this repository is\n    disabled for  object passed as parameter and\n     otherwise."
}
{
    "Origin": "Return the names of any classes referenced in the fields in this list.",
    "Reference": "Find the names of any classes referenced in the fields in this list.",
    "HebCup": "Return the names of any classes referenced in the fields in this list."
}
{
    "Origin": "Converts the given view data into datapoints that can be sent to SignalFx.",
    "Reference": "Converts the given Metric into datapoints that can be sent to SignalFx.",
    "HebCup": "Converts the given Metric into datapoints that can be sent to SignalFx."
}
{
    "Origin": "Removes a bundle from the watch list.",
    "Reference": "Removes a bundle URLs from the watch list.",
    "HebCup": "Removes a get Bundles By from the watch list."
}
{
    "Origin": "This method obtains the extension as the textual part of the filename\nafter the last dot.",
    "Reference": "This method obtains the extension as the textual part of the fileName\nafter the last dot.",
    "HebCup": "This method obtains the extension as the textual part of the fileName after the last dot."
}
{
    "Origin": "Delete the blob metadata document in the CosmosDB collection, retrying as necessary.",
    "Reference": "Delete the blob metadata document in the CosmosDB collection.",
    "HebCup": "Delete the blob metadata asyncDocument in the CosmosDB collection , retrying as necessary."
}
{
    "Origin": "Use two integers, min and max, to track the range of levels.",
    "Reference": "Use two integers, min and max, to track the range of columns.",
    "HebCup": "Use two integers, min and max, to track the range of cols."
}
{
    "Origin": "Helper method that checks if either the deprecated or new SO_KEEPALIVE property is present and enabled on an IIOP\nlistener, giving precedence to the new property if both are present.",
    "Reference": "Helper method that checks if either the deprecated or new SO_KEEPALIVE property is enabled on an IIOP\nlistener, giving precedence to the new property if both are present.",
    "HebCup": "Helper method that checks if either the deprecated or new SO_KEEPALIVE property is present and Property Enabled On an IIOP listener, giving precedence to the new property if both are present."
}
{
    "Origin": "Returns a string representation of this object; useful for testing and debugging.",
    "Reference": "Returns a string representation of this object.",
    "HebCup": "Returns a string representation of this object; useful for testing and debugging."
}
{
    "Origin": "Run ERiC with fixed parameters and compare the result to a golden standard.",
    "Reference": "Run 4C with fixed parameters and compare the result to a golden standard.",
    "HebCup": "Run ERiC with fixed parameters and compare the result to a golden standard."
}
{
    "Origin": "Returns a string representation of this object; useful for testing and debugging.",
    "Reference": "Returns a string representation of this object.",
    "HebCup": "Returns a string representation of this object; useful for testing and debugging."
}
{
    "Origin": "Test method for 'org.kie.common.asm.ClassBuilder.buildClass(ClassDefinition)'",
    "Reference": "Test method for 'org.drools.common.asm.ClassBuilder.buildClass(ClassDefinition)'",
    "HebCup": "Test method for 'org.drools.common.asm.ClassBuilder.buildClass(ClassDefinition)'"
}
{
    "Origin": "Transitive reduction of requires public edge and requires edge have\nto be applied separately to prevent the requires public edges\n(e.g.",
    "Reference": "Transitive reduction of requires transitive edge and requires edge have\nto be applied separately to prevent the requires transitive edges\n(e.g.",
    "HebCup": "Transitive reduction of requires TRANSITIVE edge and requires edge have to be applied separately to prevent the requires TRANSITIVE edges (e.g."
}
{
    "Origin": "Setter for {@link #allowHeaders}",
    "Reference": "Setter for {@link #allowedHeaders}",
    "HebCup": "Setter for {@link#allowedHeaders}"
}
{
    "Origin": "Obtains an instance from the specified unique name.",
    "Reference": "Obtains an instance from the specified name.",
    "HebCup": "Obtains an instance from the specified name."
}
{
    "Origin": "Creates query that searches for SourceContacts\nwhich match a specific query Pattern.",
    "Reference": "Queries this ContactSourceService for SourceContacts\nwhich match a specific query Pattern.",
    "HebCup": "Creates Source that searches for SourceContacts which match a specific Source Pattern."
}
{
    "Origin": "Gets the bond group.",
    "Reference": "Gets the repo group.",
    "HebCup": "Gets the Repo Group."
}
{
    "Origin": "The {@code Chronology} represents the calendar system in use.",
    "Reference": "The {@code Chrono} represents the calendar system in use.",
    "HebCup": "The {@code Chrono} represents the calendar system in use."
}
{
    "Origin": "Setting raw updates handler provider",
    "Reference": "Setting raw updates handler",
    "HebCup": "Setting Raw Updates Handler"
}
{
    "Origin": "Sets the {@link SslContext} of the default {@link VirtualHost}.",
    "Reference": "Sets the {@link SslContext} of the {@link Server}.",
    "HebCup": "Sets the {@link SslContext} of the default {@link virtualHost}."
}
{
    "Origin": "Verifies that the port to the broker is available.",
    "Reference": "Verifies that the port to the broker is listening.",
    "HebCup": "Verifies that the port to the broker is available."
}
{
    "Origin": "Computing Checksums \n.",
    "Reference": "Guide.",
    "HebCup": "Computing Checksums \n."
}
{
    "Origin": "Creates a new\nlabel name if the given label does not yet have one.",
    "Reference": "Constructs a new label name if\nthe given label does not yet have one.",
    "HebCup": "Creates a new\nlabel name if the given label does not yet have one."
}
{
    "Origin": "Queries this search source for the given queryString.",
    "Reference": "Creates query for the given searchPattern.",
    "HebCup": "Queries this search source for the given createString."
}
{
    "Origin": "If the database is switched to load some piece of data,\nthis will remember what it should be switched back to.",
    "Reference": "If the wiki is\nswitched to load some piece of data, this will remember what it should be switched back to.",
    "HebCup": "If the database is switched to load some piece of data , getOriginalWikiId will remember what it should be switched back to."
}
{
    "Origin": "If the property value starts with the arbitrary prefix ,\nthen a system property is returned instead.",
    "Reference": "If the format is  we read only a system property.",
    "HebCup": "If the property value starts with the arbitrary prefix ,\nthen a system property is returned instead."
}
{
    "Origin": "The class must be bookmarkable and must extend Page.",
    "Reference": "The class must be bookmarkable and must extend {@link Page}.",
    "HebCup": "The class must be bookmarkable and must extend Page."
}
{
    "Origin": "Returns true if the Embedded Social app key is non-empty",
    "Reference": "Returns true if the Embedded Social api key is non-empty",
    "HebCup": "Returns true if the Embedded Social Api Key is non-empty"
}
{
    "Origin": "Returns the primary conversion type.",
    "Reference": "Returns the primary reference type.",
    "HebCup": "Returns the primary conversion map.referenceType."
}
{
    "Origin": "Construct a {@link AgentManifestMessage} from the given {@link JobDirectoryManifest}.",
    "Reference": "Construct a {@link AgentManifestMessage} from the given {@link DirectoryManifest}.",
    "HebCup": "Construct a {@link AgentManifestMessage} from the given {@link DirectoryManifest}."
}
{
    "Origin": "If the item does not\nhave any children, does nothing.",
    "Reference": "If an item does not have\nany children, does nothing.",
    "HebCup": "If the items does not have any children , does nothing."
}
{
    "Origin": "Test for {@link Array#members()}.",
    "Reference": "Test for {@link XQArray#members()}.",
    "HebCup": "Test for {@link XQArray#members ()}."
}
{
    "Origin": "Check partiiton state on all nodes by all caches.",
    "Reference": "Checks partitions state on all nodes by all caches.",
    "HebCup": "check Partitions partiiton state on all nodes by all caches."
}
{
    "Origin": "If there is\ncurrently not ResourceManager connected, then the request is stashed and send once a new",
    "Reference": "If there is currently not ResourceManager\nconnected, then the request is stashed and send once a new ResourceManager is connected.",
    "HebCup": "If there is\ncurrently not ResourceManager connected, then the request is stashed and send once a new"
}
{
    "Origin": "It creates a topic using KafkaProducer.",
    "Reference": "It creates a topic using Producer.",
    "HebCup": "It creates a topic using Producer."
}
{
    "Origin": "Checks that collection {@param col} doesn't contains string {@param str}.",
    "Reference": "Checks that collection {@param col} doesn't contains element {@param str}.",
    "HebCup": "Checks that collection {@param col} doesn't contains T {@param str}."
}
{
    "Origin": "This is not applicable for\nin-place updates; use {@link #write(AddUpdateCommand, long, int)}.",
    "Reference": "This is not applicable for\nin-place updates; use {@link #write(AddUpdateCommand, long)}.",
    "HebCup": "This is not applicable for\nin-place updates; use {@link #write(AddUpdateCommand, long, int)}."
}
{
    "Origin": "The returned era will be a singleton capable of being compared with the constants\nin {@link ISOChrono} using the {@code ==} operator.",
    "Reference": "The returned era will be a singleton capable of being compared with the constants\nin {@link ISOChronology} using the {@code ==} operator.",
    "HebCup": "The returned era will be a singleton capable of being compared with the constants in {@link ISOChronology} using the {@code ==} operator."
}
{
    "Origin": "Returns a string representation of this object; useful for testing and debugging.",
    "Reference": "Returns a string representation of this object.",
    "HebCup": "Returns a * representation of this object; useful for testing and debugging."
}
{
    "Origin": "Returns a string representation of this object; useful for testing and debugging.",
    "Reference": "Returns a string representation of this object.",
    "HebCup": "Returns a string representation of this object; useful for testing and debugging."
}
{
    "Origin": "This method sets the value of the database column m_prj_project.projectStatus",
    "Reference": "This method sets the value of the database column m_prj_project.status",
    "HebCup": "This method sets the value of the database column m_prj_project.projectStatus"
}
{
    "Origin": "Return a {@link InetSocketAddress} for the local socket.",
    "Reference": "Return a {@link java.net.SocketAddress} for the local socket.",
    "HebCup": "Return a {@link SocketAddress} for the local socket."
}
{
    "Origin": "add a path to the path trie",
    "Reference": "Add a path to the path trie.",
    "HebCup": "add a path: to the path: trie"
}
{
    "Origin": "Removes all metadata (including properties and tags) for the specified {@link MetadataEntity}.",
    "Reference": "Removes all metadata (including properties and tags) for the specified {@link MetadataEntity} and it's\ncustom sub entity",
    "HebCup": "Removes all metadata (including properties and tags) for the specified {@link MetadataEntity}."
}
{
    "Origin": "Overrides the name of the character encoding used in the body\nof the response.",
    "Reference": "Overrides the character encoding used in the body of the response.",
    "HebCup": "Overrides the name of the this.character Encoding used in the body of the response."
}
{
    "Origin": "Decorates {@link Service}s under the specified directory.",
    "Reference": "Decorates {@link HttpService}s under the specified directory.",
    "HebCup": "Decorates {@link Service}s under the specified directory."
}
{
    "Origin": "TransactionToApply} given.",
    "Reference": "CommandsToApply} given.",
    "HebCup": "CommandsToApply} given."
}
{
    "Origin": "Returns a rule that restricts access by period of time according to the\nIP address of the request's client.",
    "Reference": "Adds a rule that restricts access by period of time according to the\nIP address of the request's client.",
    "HebCup": "Returns a rule that restricts access by period of time according to the\nIP address of the request's client."
}
{
    "Origin": "Executes {@link Pems#x509Certificate(InputSupplier, CertificateFactory)} on the string which contains an X.509\ncertificate in PEM format.",
    "Reference": "Executes {@link Pems#x509Certificate(ByteSource, CertificateFactory)} on the string which contains an X.509\ncertificate in PEM format.",
    "HebCup": "Executes {@link Pems#x509Certificate(Inputwrap, CertificateFactory)} on the string which contains an X.509 certificate in PEM format."
}
{
    "Origin": "Equivalent to: {@code .weightInit(WeightInit.DISTRIBUTION).dist(distribution)}",
    "Reference": "Equivalent to: {@code .weightInit(new WeightInitDistribution(distribution))}",
    "HebCup": "Equivalent to: {@code .new WeightInitDistribution(new WeightInitDistribution.DISTRIBUTION).dist(distribution)}"
}
{
    "Origin": "Append to a string buffer.",
    "Reference": "Append items and support to a string buffer.",
    "HebCup": "Append to a string buffer."
}
{
    "Origin": "Get all Pinot table names (server resources).",
    "Reference": "Get all table names (with type suffix).",
    "HebCup": "Get all Pinot table names (server resources)."
}
{
    "Origin": "In order to set the matrix to a rotation transformation without pre-multiplying,\nuse {@link #rotation(Quaterniond)}.",
    "Reference": "In order to set the matrix to a rotation transformation without pre-multiplying,\nuse {@link #rotation(Quaterniondc)}.",
    "HebCup": "In order to set the matrix to a rotation transformation without pre-multiplying, use {@link #rotation(Quaterniondc)}."
}
{
    "Origin": "Determines whether the specified charset is supported by this runtime.",
    "Reference": "Tells whether the named charset is supported.",
    "HebCup": "Determines whether the specified charset is supported by this runtime."
}
{
    "Origin": "Returns a string representation of this object; useful for testing and debugging.",
    "Reference": "Returns a string representation of this object.",
    "HebCup": "Returns a string representation of this object; useful for testing and debugging."
}
{
    "Origin": "A2DP Bluetooth device(s) are available, but current device speaker is activated",
    "Reference": "A2DP Bluetooth device(s) are connectable, but no device is set as activated",
    "HebCup": "with Bluetooth device (s) are available , but current device speaker is activated"
}
{
    "Origin": "Adds glyphs for the the specified text.",
    "Reference": "Adds glyphs for the specified text.",
    "HebCup": "Adds glyphs for the the specified text."
}
{
    "Origin": "Returns the Jaas Realm named as realmName.",
    "Reference": "Returns the JAAS Realm named as realmName.",
    "HebCup": "Returns the Jaas Realm named as realmName."
}
{
    "Origin": "Provide supported thing type uid's",
    "Reference": "Provide supported ThingTypeUIDs",
    "HebCup": "Provide supported thing type uid's"
}
{
    "Origin": "It counts length of all frame buffers.",
    "Reference": "It counts possible length of all frame buffers.",
    "HebCup": "It counts length of all frame Frame."
}
{
    "Origin": "This method will test given class by checking if it is available in {@link ServiceLocator}\nthat has been injected from the Jersey context.",
    "Reference": "This method will test given class by checking if it is available in {@link InjectionManager}\nthat has been injected from the Jersey context.",
    "HebCup": "This method will test given class by checking if it is available in {@link ServiceinjectionManager} that has been injected from the Jersey context."
}
{
    "Origin": "Returns the quorum name for queue operations.",
    "Reference": "Returns the split brain protection name for queue operations.",
    "HebCup": "Returns the split Brain Protection Name for queue operations."
}
{
    "Origin": "Returns whether this deployment spec specifies the given zone, either implicitly or explicitly",
    "Reference": "Returns whether this instance deploys to the given zone, either implicitly or explicitly",
    "HebCup": "Returns whether this) specifies the given zone, either implicitly or explicitly"
}
{
    "Origin": "Enable Memory RandomAccessFile access.",
    "Reference": "Enable FileChannel access.",
    "HebCup": "Enable Memory fileChannel access."
}
{
    "Origin": "Gets the msg.",
    "Reference": "New builder.",
    "HebCup": "Gets the Builder."
}
{
    "Origin": "Sets the messageToHumanAgent.",
    "Reference": "Set the messageToHumanAgent.",
    "HebCup": "Sets the messageToHumanAgent."
}
{
    "Origin": "Assert that the named response header does exist.",
    "Reference": "Assert that the named response header exists.",
    "HebCup": "Assert that the named response header exists."
}
{
    "Origin": "Returns the chain of client certificates, if available and accessible.",
    "Reference": "Returns the chain of client SSL certificates, if available and\naccessible.",
    "HebCup": "Returns the chain of client certificates, if available and accessible."
}
{
    "Origin": "The {@link EcKeyCreateOptions#isEnabled() enabled} field is set to true by Azure Key Vault,\nif not specified.",
    "Reference": "The {@link CreateEcKeyOptions#isEnabled() enabled} field is set to true by Azure Key Vault,\nif not specified.",
    "HebCup": "The {@link CreateEcKeyOptions#isEnabled () enabled} field is set to true by Azure Key Vault , if not specified."
}
{
    "Origin": "Sets the {@link SharedKeyCredential} used to authorize requests sent to the service.",
    "Reference": "Sets the {@link StorageSharedKeyCredential} used to authorize requests sent to the service.",
    "HebCup": "Sets the {@link StorageSharedKeyCredential} used to authorize requests sent to the service."
}
{
    "Origin": "This determines the behaviour of tasks if there is an error in their local checkpointing.",
    "Reference": "This determines the behaviour when meeting checkpoint errors.",
    "HebCup": "This determines the behaviour of tasks if there is an error in their local checkpointing."
}
{
    "Origin": "Turns this Streamable into a HotStream, a connectable Stream, being executed on a thread on the\nsupplied executor, that is producing data",
    "Reference": "Turns this Streamable into a Connectable, a connectable Stream, being executed on a thread on the\nsupplied executor, that is producing data",
    "HebCup": "Turns this Streamable into a Connectable , a connectable Stream , being executed on a thread on the supplied executor , that is producing data"
}
{
    "Origin": "Sends a request and returns immediately without getting a response.",
    "Reference": "Sends a request and waits until the request is flushed to network.",
    "HebCup": "Sends a request and returns immediately And getting a response."
}
{
    "Origin": "Add optimized insert value.",
    "Reference": "Add insert value.",
    "HebCup": "add Insert Value."
}
{
    "Origin": "Creates a {@code TokenStream} that aggregates the outputs of a given set of\n{@code TokenStreams}.",
    "Reference": "Creates a {@code TwitterTokenStream} that aggregates the outputs of a given set of\n{@code TokenStreams}.",
    "HebCup": "Creates a {@code TwitterTokenStream} that aggregates the outputs of a given set of {@code TokenStreams}."
}
{
    "Origin": "Returns a string representation of this object; useful for testing and debugging.",
    "Reference": "Returns a string representation of this object.",
    "HebCup": "Returns a string representation of this object; useful for testing and debugging."
}
{
    "Origin": "Returns the pivot of a view on a specific axis, when overshooting at the end.",
    "Reference": "Returns the pivot of an item on a specific axis, when overshooting at the end.",
    "HebCup": "Returns the pivot of a AbstractItem on a specific axis , when overshooting at the end."
}
{
    "Origin": "Default is to have both left and right buttons pressed when moving.",
    "Reference": "Default is to have both left and right buttons, or just middle button, pressed when moving.",
    "HebCup": "Default is to have both left and right buttons pressed when moving."
}
{
    "Origin": "Returns a string representation of this object; useful for testing and debugging.",
    "Reference": "Returns a string representation of this object.",
    "HebCup": "Returns a string representation of this object; useful for testing and debugging."
}
{
    "Origin": "Code snippet for {@link DataLakeDirectoryAsyncClient#getSubDirectoryAsyncClient(String)}",
    "Reference": "Code snippet for {@link DataLakeDirectoryAsyncClient#getSubdirectoryAsyncClient(String)}",
    "HebCup": "Code snippet for {@link DataLakeDirectoryAsyncClient#getSubdirectoryAsyncClient (String)}"
}
{
    "Origin": "Transforms this {@code Try} by applying either {@code onSuccess} to this value or {@code onFailure} to this cause.",
    "Reference": "Transforms this {@code Try} by applying either {@code ifSuccess} to this value or {@code ifFailure} to this cause.",
    "HebCup": "Transforms this {@code Try} by applying either {@code onSuccess} to this value or {@code ifFailure} to this cause."
}
{
    "Origin": "Initializes this AuthenticatedUser using the given credentials.",
    "Reference": "Initializes this AuthenticatedUser using the given credentials and\narbitrary attributes.",
    "HebCup": "Initializes this AuthenticatedUser using the given credentials."
}
{
    "Origin": "If the variable was set, a configuration {@link ConfigurationEvent event} will be passed to\nall registered listeners.",
    "Reference": "If the variable was set, a CONFIGURATION {@link ConfigurationEvent event} will be passed to\nall registered listeners.",
    "HebCup": "If the variable was set , a CONFIGURATION {@link ConfigurationEvent event} will be passed to all registered listeners."
}
{
    "Origin": "Returns a string representation of this object; useful for testing and debugging.",
    "Reference": "Returns a string representation of this object.",
    "HebCup": "Returns a string representation of this object; useful for testing and debugging."
}
{
    "Origin": "Finds a resolved module in this configuration, or if not in this\nconfiguration, the {@linkplain #parent parent} configurations.",
    "Reference": "Finds a resolved module in this configuration, or if not in this\nconfiguration, the {@linkplain #parents parent} configurations.",
    "HebCup": "Finds a resolved module in this configuration , or if not in this configuration , the {@linkplain#configurations configurations} configurations."
}
{
    "Origin": "Sets the value of the 'publicPort' field",
    "Reference": "Sets the value of the 'publicPorts' field",
    "HebCup": "Sets the value of the 'PublicPorts' field"
}
{
    "Origin": "Sets the quorum name for operations.",
    "Reference": "Sets the split brain protection name for operations.",
    "HebCup": "Sets the split Brain Protection Name for operations."
}
{
    "Origin": "Should be called when the {@link MediaSession2#play()} is called.",
    "Reference": "Should be called when the {@link XMediaPlayer#play()} is called.",
    "HebCup": "Should be called when the {@link MediaSession2#play()} is called."
}
{
    "Origin": "If a notification configuration for\na vault is not set, the operation returns a \nerror.",
    "Reference": "If a notification configuration for a\nvault is not set, the operation returns a\n404 Not Found error.",
    "HebCup": "If a notification configuration for\na vault is not set, the operation returns a \nerror."
}
{
    "Origin": "Same as {@link #of(boolean, int)} except with the default number of threads.",
    "Reference": "Same as {@link #of()} except with the default number of threads.",
    "HebCup": "Same as {@link #of(boolean, int)} except with the default number of threads."
}
{
    "Origin": "If you specify both tag keys and tag values in the same request,",
    "Reference": "If you specify both tag keys and tag values in the same request, Amazon",
    "HebCup": "If you specify both tag keys and tag values in the same request,"
}
{
    "Origin": "Reserve ids used by the predicates or constraints associated with some\njoin graph.",
    "Reference": "Reserve ids used by the constraints for some predicate or join graph.",
    "HebCup": "Reserve ids used by the predicates or constraints associated with some\njoin graph."
}
{
    "Origin": "Returns the \"real\" location of the file loaded by the other commands, starting from javatests/.",
    "Reference": "Returns the \"real\" location of the file loaded by the other commands, starting from\nsrc/test/resources/.",
    "HebCup": "Returns the ``real`` location of the file loaded by the other commands, starting from src/test/resources/."
}
{
    "Origin": "Get the preventEncryptionScopeOverride property: The\npreventEncryptionScopeOverride property.",
    "Reference": "Get the encryptionScopeOverridePrevented property: The\nencryptionScopeOverridePrevented property.",
    "HebCup": "Get the isEncryptionScopeOverridePrevented property: The isEncryptionScopeOverridePrevented property."
}
{
    "Origin": "Verifies the user's PW1 or PW3 with the appropriate mode.",
    "Reference": "Verifies the user's PW1 with the appropriate mode.",
    "HebCup": "Verifies the user's PW1 or PW3 with the appropriate commandFactory.createVerifyPw1ForSignatureCommand."
}
{
    "Origin": "Store the engine internals (model + norms), always as user files.",
    "Reference": "Store the engine internals, always as user files.",
    "HebCup": "Store the engine internals (model + root) , always as user files."
}
{
    "Origin": "Creates {@link Changes} container with info about changes.",
    "Reference": "Creates new instance of {@link Changes}.",
    "HebCup": "Creates {@link Changes} container with info about changes."
}
{
    "Origin": "Validates that the {@link #operationModel} is valid for the given {@code configurationProvider}",
    "Reference": "Validates that the {@link #componentModel} is valid for the given {@code configurationProvider}",
    "HebCup": "Validates that the {@link#componentModel} is valid for the given {@code configurationProvider}"
}
{
    "Origin": "Returns the ModuleReader for the given module.",
    "Reference": "Returns the ModuleReader for the given module, creating it if needed",
    "HebCup": "Returns the ModuleReader for the given module."
}
{
    "Origin": "The returned RxDao is a special DAO that let's you interact with Rx Observables.",
    "Reference": "The returned RxDao is a special DAO that let's you interact with Rx Observables without any Scheduler set\nfor subscribeOn.",
    "HebCup": "The returned RxDao is a special DAO that let's you interact with Rx Observables."
}
{
    "Origin": "Remove from cache all entries that match the given predicate.",
    "Reference": "Invalidate cache entries with keys matching the given predicate",
    "HebCup": "Remove from cache all entries that match the given predicate."
}
{
    "Origin": "Add  to the hash table associated with .",
    "Reference": "Add  to the hash table.",
    "HebCup": "Add  to the hash table associated with ."
}
{
    "Origin": "Copies the contents from the fist {@link AttributeValue} into the second.",
    "Reference": "Copies the value of this {@link AttributeValue} into the second.",
    "HebCup": "Copies the contents from the fist {@link thisValue} into the second."
}
{
    "Origin": "Generate a FactorStatus from a string.",
    "Reference": "Generate a FactorStatuses from a string.",
    "HebCup": "Generate a FactorStatuses from a string."
}
{
    "Origin": "Setter for {@link #exposeOnlyRequestedHeader}",
    "Reference": "Setter for {@link #allowOnlyRequestedHeader}",
    "HebCup": "Setter for {@link#allowOnlyRequestedHeader}"
}
{
    "Origin": "Client will automatically attempt to reconnect to the server if the\nconnection is lost.",
    "Reference": "Sets whether the client will automatically attempt to reconnect to\nthe server if the connection is lost.",
    "HebCup": "Client will automatically attempt to reconnect to the server if the\nconnection is lost."
}
{
    "Origin": "Sets the {@link OAuth2AccessTokenResponseClient} to be used for getting an {@link OAuth2AuthorizedClient} for\nclient_credentials grant.",
    "Reference": "Sets the {@link OAuth2AccessTokenResponseClient} used for getting an {@link OAuth2AuthorizedClient} for the client_credentials grant.",
    "HebCup": "Sets the {@link OAuth2AccessTokenResponseClient} to be used for getting an {@link OAuth2AuthorizedClient} for\nclient_credentials grant."
}
{
    "Origin": "This prints the date-time to the specified destination.",
    "Reference": "This formats the date-time to the specified destination.",
    "HebCup": "This formats the date-time to the specified destination."
}
{
    "Origin": "Calculates convex hull of all the vertices during build time",
    "Reference": "Calculates convexHull of all the vertices during build time",
    "HebCup": "Calculates convex convexHull of all the vertices during build time"
}
{
    "Origin": "Gets the set of this charset's aliases.",
    "Reference": "Returns a set containing this charset's aliases.",
    "HebCup": "Gets the set of hs charset's aliases."
}
{
    "Origin": "The Camel Rest component to use for the REST transport, such as restlet, spark-rest.",
    "Reference": "The Camel Rest component to use for (consumer) the REST transport, such as jetty, servlet, undertow.",
    "HebCup": "The Camel Rest consumerComponent to use for the REST transport , such as restlet , spark-rest."
}
{
    "Origin": "The comparison is based on the time-line position of the dates.",
    "Reference": "The comparison is primarily based on the date, from earliest to latest.",
    "HebCup": "The comparison is based on the time-line position of the dates."
}
{
    "Origin": "Amazon SimpleDB automatically adjusts the number of items returned per\npage to enforce this limit.",
    "Reference": "SimpleDB automatically adjusts the number of items returned per page to\nenforce this limit.",
    "HebCup": "Amazon SimpleDB automatically adjusts the number of items returned per\npage to enforce this limit."
}
{
    "Origin": "Obtains an instance of {@code OffsetDate} from an {@code Instant}.",
    "Reference": "Obtains an instance of {@code OffsetDate} from an {@code Instant} and zone ID.",
    "HebCup": "Obtains an instance of {@code IdDate} from an {@code Instant}."
}
{
    "Origin": "Amazon Redshift returns all security groups that match any combination\nof the specified keys and values.",
    "Reference": "Redshift returns all security groups that match any combination of the\nspecified keys and values.",
    "HebCup": "Amazon Redshift returns all security groups that match any combination\nof the specified keys and values."
}
{
    "Origin": "Deletes a line.",
    "Reference": "Deletes lines.",
    "HebCup": "Deletes a Lines."
}
{
    "Origin": "Opens a {@link TitanGraph} database configured according to the provided configuration.",
    "Reference": "Opens a {@link JanusGraph} database configured according to the provided configuration.",
    "HebCup": "Opens a {@link JanusGraph} database configured according to the provided configuration."
}
{
    "Origin": "Creates a ModuleReference to a module packaged as a modular JAR.",
    "Reference": "Creates a ModuleReference to a possibly-patched module in a modular JAR.",
    "HebCup": "Creates a ModuleReference to a module packaged as a modular JAR."
}
{
    "Origin": "Set Document Controlled.",
    "Reference": "Set Belegartgesteuert.",
    "HebCup": "Set Document Controlled."
}
{
    "Origin": "Builds a JFreeChart time series from a Ta4j time series and an indicator.",
    "Reference": "Builds a JFreeChart time series from a Ta4j bar series and an indicator.",
    "HebCup": "Builds a JFreeChart time series from a Ta4j time series and an indicator."
}
{
    "Origin": "This will return the {@link Secret secret} with\nvalue included of its latest version.",
    "Reference": "This will return the {@link KeyVaultSecret secret} with\nvalue included of its latest version.",
    "HebCup": "This will return the {@link Propertie secret} with value included of its latest version."
}
{
    "Origin": "Builds a metastorage key for pending task object.",
    "Reference": "Builds a metastorage key for continuous task object.",
    "HebCup": "Builds a metastorage key for continuous task object."
}
{
    "Origin": "Retrieves all the tags for the specified {@link NamespacedEntityId}.",
    "Reference": "Retrieves all the tags for the specified {@link MetadataEntity}.",
    "HebCup": "Retrieves all the tags for the specified {@link MetadataEntity}."
}
{
    "Origin": "Creates a valid {@link Sort} operation.",
    "Reference": "Creates a valid {@link SortTableOperation} operation.",
    "HebCup": "Creates a valid {@link SortTableOperation} operation."
}
{
    "Origin": "Returns the server list for the requested cluster.",
    "Reference": "Returns the configured server list for the requested cluster.",
    "HebCup": "Returns the ConfiguredServers list for the requested cluster."
}
{
    "Origin": "`DEPRECATED`: Number of admins (for rooms only)",
    "Reference": "`DEPRECATED`: Number of admins (for rooms only)  [Deprecated since version VERSION]",
    "HebCup": "`DEPRECATED`: Number of admins (for rooms only)"
}
{
    "Origin": "Setter for {@link #exposeHeaders}",
    "Reference": "Setter for {@link #allowHeaders}",
    "HebCup": "Setter for {@link#allowHeaders}"
}
{
    "Origin": "Creates tag swagger definition.",
    "Reference": "Creates tag openApi definition.",
    "HebCup": "Creates tag openApi definition."
}
{
    "Origin": "Queries this search source for the given queryString.",
    "Reference": "Creates query for the given searchPattern.",
    "HebCup": "Queries this search source for the given createString."
}
{
    "Origin": "If we succeeded on both stream in and out, reply back to coordinator",
    "Reference": "If we succeeded on both stream in and out, respond back to coordinator",
    "HebCup": "If we succeeded on both stream in and out, reply back to coordinator"
}
{
    "Origin": "Retrieves all the of controller services in this NiFi.",
    "Reference": "Retrieves controller services for reporting tasks in this NiFi.",
    "HebCup": "Retrieves all the of controller services in this NiFi."
}
{
    "Origin": "Sets the {@link SharedKeyCredential} used to authorize requests sent to the service.",
    "Reference": "Sets the {@link StorageSharedKeyCredential} used to authorize requests sent to the service.",
    "HebCup": "Sets the {@link StorageSharedKeyCredential} used to authorize requests sent to the service."
}
{
    "Origin": "Convert to object types, returning null if text is null.",
    "Reference": "Convert to object types, returning null if text is null or empty.",
    "HebCup": "Convert to object types, returning null if text is null."
}
{
    "Origin": "Sets the title text.",
    "Reference": "Sets the title text as a static string.",
    "HebCup": "Sets the title text."
}
{
    "Origin": "Implements the {@code --run  } legacy handling.",
    "Reference": "Implements the {@code --run} command line argument.",
    "HebCup": "Implements the {@code --run  } legacy handling."
}
{
    "Origin": "Sets the noneOfTheAbovePrompt.",
    "Reference": "Set the noneOfTheAbovePrompt.",
    "HebCup": "Sets the noneOfTheAbovePrompt."
}
{
    "Origin": "This method will interpolate between each two successive quaternions via {@link #nlerpIterative(Quaterniond, double, double)}\nusing their relative interpolation weights.",
    "Reference": "This method will interpolate between each two successive quaternions via {@link #nlerpIterative(Quaterniondc, double, double)}\nusing their relative interpolation weights.",
    "HebCup": "This method will interpolate between each two successive quaternions via {@link #nlerpIterative(Quaterniondc, double, double)} using their relative interpolation weights."
}
{
    "Origin": "If true, given partial blocks are not evaluated when defined but when used.",
    "Reference": "If true, partial blocks will implicitly be evaluated before the partials will actually\nbe executed.",
    "HebCup": "If true , given Evaluate blocks are not evaluated when defined but when used."
}
{
    "Origin": "The endpoint type.",
    "Reference": "The action to do.",
    "HebCup": "The action type."
}
{
    "Origin": "Decorates {@link Service}s whose {@link Route} matches the specified {@code pathPattern}.",
    "Reference": "Decorates {@link HttpService}s whose {@link Route} matches the specified {@code pathPattern}.",
    "HebCup": "Decorates {@link HttpService}s whose {@link Route} matches the specified {@code pathPattern}."
}
{
    "Origin": "Returns a string representation of this object; useful for testing and debugging.",
    "Reference": "Returns a string representation of this object.",
    "HebCup": "Returns a string representation of this object; useful for testing and debugging."
}
{
    "Origin": "Returns the raw transaction data (trytes) of a specific transaction.",
    "Reference": "raw transaction data (trytes) of a specific transaction.",
    "HebCup": "Returns the raw transaction data (trytes) of a specific transaction."
}
{
    "Origin": "Gets the \\c Colour at the corresponding point on the gradient.",
    "Reference": "Gets the {@link Colour} at the corresponding point on the gradient.",
    "HebCup": "Gets the \\c Colour at the corresponding point on the gradient."
}
{
    "Origin": "If true, given partial blocks are not evaluated when defined but when used.",
    "Reference": "If true, partial blocks will implicitly be evaluated before the partials will actually\nbe executed.",
    "HebCup": "If true , given Evaluate blocks are not evaluated when defined but when used."
}
{
    "Origin": "Return a new {@link Terms} in which term of {@code coreNodeName} is removed",
    "Reference": "Return a new {@link Terms} in which terms for the {@code coreNodeName} are removed",
    "HebCup": "Return a new {@link Terms} in which term of {@code coreNodeName} is removed"
}
{
    "Origin": "Convert the attribute if necessary and add it to the profile.",
    "Reference": "Convert a profile or authentication attribute, if necessary, and add it to the profile.",
    "HebCup": "Convert the attribute if necessary and add it to the profile."
}
{
    "Origin": "Removes all the tags from the {@link NamespacedEntityId}",
    "Reference": "Removes all the tags from the {@link MetadataEntity}",
    "HebCup": "Removes all the tags from the {@link MetadataEntity}"
}
{
    "Origin": "Returns the non-empty endpoints of the clusters in the deployment, or empty if the request fails.",
    "Reference": "Returns the non-empty endpoints per cluster in the given deployment, or empty if endpoints can't be found.",
    "HebCup": "Returns the non-empty endpoints of the clusters in the deployment, or empty if the request fails."
}
{
    "Origin": "The maximum size for #extraData is 32600 bytes.",
    "Reference": "The maximum size for #extraDataWriter is 32600 bytes.",
    "HebCup": "The maximum size for#extraDataWriter is 32600 bytes."
}
{
    "Origin": "Returns true if field ufsLastModificationTimeMs is set (has been assigned a value) and false otherwise",
    "Reference": "Returns true if field ufsFingerprint is set (has been assigned a value) and false otherwise",
    "HebCup": "Returns true if field UfsFingerprint is set (has been assigned a value) and false otherwise"
}
{
    "Origin": "Nota: the defining points are meant to be the extrema points\ninside the parallelogram.",
    "Reference": "Nota: the defining points are meant to be the extrema points\non the borders of the parallelogram.",
    "HebCup": "Nota: the defining points are meant to be the extrema points\ninside the parallelogram."
}
{
    "Origin": "Method to check if Postgres DB is a type of EDB.",
    "Reference": "Method to get Postgres DB type",
    "HebCup": "Method to check if Postgres DB enterprise a type of EDB."
}
{
    "Origin": "This bootstraps the Layout and the Management server with the existing layout which\ninitiates failure handling capabilities on the management server.",
    "Reference": "This bootstraps the Layout server with the existing layout.",
    "HebCup": "This bootstraps the Layout and the Management server with the existing layout which\ninitiates failure handling capabilities on the management server."
}
{
    "Origin": "We assume {@link #canSerialize(String)} returns  or a runtime\nexception may be thrown.",
    "Reference": "We assume {@link #canSerialize(String, java.util.List)} returns  or\na runtime exception may be thrown.",
    "HebCup": "We assume {@link #canSerialize(SerializedValue)} returns or a runtime exception may be thrown."
}
{
    "Origin": "Adjust dates to be within 80 years before and 20 years after instantiation",
    "Reference": "Adjust dates to be within appropriate century",
    "HebCup": "Adjust dates to be within 80 years before and 20 years after instantiation"
}
{
    "Origin": "The method is used to disallow any further command sending until next {@link #connect()}\ncall.",
    "Reference": "The method disconnects and disallows any further connections until next {@link #connect()}\ncall.",
    "HebCup": "The method is used to disallow any further command sending until next {@link #connect()}\ncall."
}
{
    "Origin": "Primary input method for receiving complex sample buffers from the wideband source (ie tuner)",
    "Reference": "Primary interface for receiving incoming complex sample buffers to be frequency translated and decimated.",
    "HebCup": "Primary input method for receiving complex sample buffers from the wideband source (ie tuner)"
}
{
    "Origin": "Get a map of counter names and values",
    "Reference": "Get a map of counter names and values for the given superstep",
    "HebCup": "Hadoop a map of counter names and values"
}
{
    "Origin": "Add an asynchronous part with {@link Publisher}-based content.",
    "Reference": "Add a part from {@link Publisher} content.",
    "HebCup": "Add an asynchronous part with {@link Publisher}-based content."
}
{
    "Origin": "Indicate to all associated {@link ExportDataSource}to PREPARE assume\nmastership role for the given partition id",
    "Reference": "Indicate to all associated {@link ExportDataSource}to PREPARE give up\nmastership role for the given partition id",
    "HebCup": "Indicate to all associated {@link ExportDataSource}to PREPARE assume\nmastership role for the given partition id"
}
{
    "Origin": "Reads all available bytes from InputStream as a byte array.",
    "Reference": "Reads all available bytes from {@link InputStream} as a byte array.",
    "HebCup": "Reads all available bytes from InputStream as a buffer."
}
{
    "Origin": "If the reading user and the target\nuser are not the same, then explicit READ or SYSTEM_ADMINISTER access is\nrequired.",
    "Reference": "If the reading user and the target\nentity are not the same, then explicit READ or SYSTEM_ADMINISTER access\nis required.",
    "HebCup": "If the reading user and the target Entity are not the same, then explicit READ or SYSTEM_ADMINISTER access is required."
}
{
    "Origin": "The option is a  type.",
    "Reference": "The option will be converted to a  type.",
    "HebCup": "The option is a  type."
}
{
    "Origin": "Queries this search source for the given searchPattern.",
    "Reference": "Creates query for the given searchPattern.",
    "HebCup": "Queries this search Query for the given searchPattern."
}
{
    "Origin": "If you do not close the iterator\nthen the  remains open.",
    "Reference": "If you do not close the iterator\nthen the {@code Reader} remains open.",
    "HebCup": "If you do not close the iterator\nthen the  remains open."
}
{
    "Origin": "The bucket that is included in this file.",
    "Reference": "The bucketId that is included in this file.",
    "HebCup": "The bucketId that is included in this file."
}
{
    "Origin": "Encode each value.",
    "Reference": "Encode each Resource.",
    "HebCup": "Encode each Resource."
}
{
    "Origin": "Checks to make sure that all properties specified in {@code properties}\nare known to the program by checking that each simply overrides\na default value.",
    "Reference": "Checks to make sure that all properties specified in \nare known to the program by checking that each simply overrides\na default value.",
    "HebCup": "Checks to make sure that all properties specified in {@code properties} are known to the program by checking that each simply overrides a > value."
}
{
    "Origin": "Shuts down the managed channel.",
    "Reference": "Tries to gracefully shut down the managed channel.",
    "HebCup": "Shuts down the managed channel."
}
{
    "Origin": "This indicator says if --defaultReturnType parameter should be visible or not.",
    "Reference": "This indicator says if --returnType parameter should be visible or not.",
    "HebCup": "This indicator says if --returnType parameter should be visible or not."
}
{
    "Origin": "Execute http request and produce a response.",
    "Reference": "Execute http response.",
    "HebCup": "Execute http null and produce a response."
}
{
    "Origin": "Increment the count of triggered asynchronous state updates (by one).",
    "Reference": "Increment the count of triggered asynchronous state updates in Litho components (by one).",
    "HebCup": "Increment the count of triggered asynchronous Component Triggered Async State Update (by one)."
}
{
    "Origin": "If non-null non-missing node, {@code this} is returned to allow chaining; otherwise\n{@link IllegalArgumentException} is thrown.",
    "Reference": "If non-null non-missing node, {@code this} is returned to allow chaining;\notherwise exception is thrown.",
    "HebCup": "If non-null non-missing node, {@code this} is returned to allow chaining; otherwise\n{@link IllegalArgumentException} is thrown."
}
{
    "Origin": "Creates the jdeps file path if needed.",
    "Reference": "Creates the jdeps artifact if needed.",
    "HebCup": "Creates the jdeps file Artifact if needed."
}
{
    "Origin": "Decode an action profile group with members information to a PI action\ngroup.",
    "Reference": "Decode an action profile group with members information to a PI action\nprofile group.",
    "HebCup": "Decode an action profile group with members information to a Pi Action Profile Group."
}
{
    "Origin": "This method retrieves the status object, then blocks waiting for validity prior\nto returning.",
    "Reference": "This method retrieves the {@link MPDStatus} object, then blocks waiting for validity\nprior to returning.",
    "HebCup": "This method retrieves the status object, then blocks waiting for validity prior\nto returning."
}
{
    "Origin": "Returns the response object with list of dhcp servers without counters.",
    "Reference": "Returns results with aggregate of counters.",
    "HebCup": "Returns the response object with list of Dhcp Relay Agg Counters without counters."
}
{
    "Origin": "Returns the last sync d l object in the ordered set where parentFolderId = ?.",
    "Reference": "Returns the last sync d l object in the ordered set where modifiedTime > ?",
    "HebCup": "Returns the last sync d l object in the ordered set where repositoryId = ?."
}
{
    "Origin": "Generates a name from some arbitrary text that is both a valid JCR node name\nand is consistent with other \"system names\".",
    "Reference": "Generates a lower-case name from some arbitrary text that is both a valid JCR node name\nand is consistent with other \"system names\".",
    "HebCup": "Generates a name from some arbitrary text that is both a valid JCR node name\nand is consistent with other \"system names\"."
}
{
    "Origin": "The timestamp for the last update to the counterexample.",
    "Reference": "The timestamp for the most recent update to the object.",
    "HebCup": "The timestamp for the last update to the counterexample."
}
{
    "Origin": "Returns the highlighInfo.",
    "Reference": "Returns the parameters.",
    "HebCup": "Returns the Parameters."
}
{
    "Origin": "Returns a string representation of this object; useful for testing and debugging.",
    "Reference": "Returns a string representation of this object.",
    "HebCup": "Returns a string representation of this object; useful for testing and debugging."
}
{
    "Origin": "This name will contain transaction id and reflect the fact\nwhether transaction is logically committed or not.",
    "Reference": "This name will contain transaction id.",
    "HebCup": "This name will contain transaction id and reflect the fact\nwhether transaction is logically committed or not."
}
{
    "Origin": "Note: this method resolves custom data locations for the shard.",
    "Reference": "Note: this method resolves custom data locations for the shard if such a custom data path is provided.",
    "HebCup": "Note: this method resolves custom data locations for the shard."
}
{
    "Origin": "Print scored parse trees for one sentence in format used by Charniak parser.",
    "Reference": "Print scored parse trees for one sentence in format used by charniak parser",
    "HebCup": "Print scored parse trees for one sentence in format used by Charniak parser."
}
{
    "Origin": "Gets the SSLHostConfig infos.",
    "Reference": "Gets the SslHostConfig infos.",
    "HebCup": "Gets the SslHostConfig infos."
}
{
    "Origin": "Revise parameters.",
    "Reference": "Get revise parameters.",
    "HebCup": "Revise parameters."
}
{
    "Origin": "Always iterates forward, whether or not we are on a forward or backward edge.",
    "Reference": "Always iterates forward over the geometry, whether we are on a forward or backward edge.",
    "HebCup": "Always for Each forward, whether or not we are on a forward or backward edge."
}
{
    "Origin": "For more information about the\nvault locking process,",
    "Reference": "For\nmore information about the vault locking process, Amazon Glacier Vault Lock.",
    "HebCup": "For more information about the\nvault locking process,"
}
{
    "Origin": "It is not very important to select a precise bar line within a group, since for left end we\nchoose the right-most bar and the opposite for right end.",
    "Reference": "It is not very important to select a precise barline within a group, since for left end we\nchoose the right-most bar and the opposite for right end.",
    "HebCup": "It is not very important to select a precise bar line within a group, since for left end we\nchoose the right-most bar and the opposite for right end."
}
{
    "Origin": "Provides the default {@link GoogleCredential} from the Google Cloud runtime.",
    "Reference": "Provides the default {@link GoogleCredentialsBundle} from the Google Cloud runtime.",
    "HebCup": "Provides the default {@link GoogleCredentialsBundle} from the Google Cloud runtime."
}
{
    "Origin": "Returns the default option type for property maps for the given value class.",
    "Reference": "Returns the default option type for option maps for the given value class.",
    "HebCup": "Returns the default option type for property OptionMap for the given value class."
}
{
    "Origin": "This\ndeclaration is of the form \"Label lXXX = new Label();\".",
    "Reference": "This declaration is of the\nform \"Label labelXXX = new Label();\".",
    "HebCup": "This declaration is of the form ``Label labelXXX = new Label();``."
}
{
    "Origin": "Merges all the changes in other into this instance.",
    "Reference": "Merges all the changes in other with this instance.",
    "HebCup": "Merges all the changes in otherLabel into this instance."
}
{
    "Origin": "Sets the bottom border for a region of cells by manipulating the cell style of the individual\ncells on the bottom",
    "Reference": "Sets the bottom border style for a region of cells by manipulating the cell style of the individual\ncells on the bottom",
    "HebCup": "Sets the bottom border for a region of cells by manipulating the cell style of the individual\ncells on the bottom"
}
{
    "Origin": "Show the fragment displaying information about this application.",
    "Reference": "Show the fragment displaying the blocked URLs.",
    "HebCup": "Show the TAG displaying information about this application."
}
{
    "Origin": "Gets the Right value or throws, if the projected Either is a Left.",
    "Reference": "Gets the Right value or throws, if this Either is a Left.",
    "HebCup": "Gets the Right value or throws, if the projected Either is a Left."
}
{
    "Origin": "Runs the shell command which is specified, along with its arguments, in the\ngiven  array.",
    "Reference": "Runs the shell command which is specified, along with its arguments, in the\ngiven {@code String} array.",
    "HebCup": "Runs the shell command which is specified, along with its arguments, in the\ngiven  array."
}
{
    "Origin": "Returns a Graph containing only requires public edges\nwith transitive reduction.",
    "Reference": "Returns a Graph containing only requires transitive edges\nwith transitive reduction.",
    "HebCup": "Returns a Graph containing only requires Transitive edges with transitive reduction."
}
{
    "Origin": "Channel number for this ISCH",
    "Reference": "Timeslot for this ISCH",
    "HebCup": "int for this ISCH"
}
{
    "Origin": "Retrieves all the properties for the specified {@link NamespacedEntityId}.",
    "Reference": "Retrieves all the properties for the specified {@link MetadataEntity}.",
    "HebCup": "Retrieves all the properties for the specified {@link MetadataEntity}."
}
{
    "Origin": "Returns a string representation of this object; useful for testing and debugging.",
    "Reference": "Returns a string representation of this object.",
    "HebCup": "Returns a string representation of this object; useful for testing and debugging."
}
{
    "Origin": "This method will ensure that you have a right and initialized instance of\n{@link StandaloneContextAwareManagerFactory}.",
    "Reference": "This method will ensure that you have a right and initialized instance of\n{@link StandaloneContextAware}.",
    "HebCup": "This method will ensure that you have a right and initialized instance of {@link WroManagerFactory}."
}
{
    "Origin": "It tests that the method {@code addEdge}\nwill silently add the missing nodes to the graph, then add the edge connecting them.",
    "Reference": "Tests that the method {@code addEdge} will silently add the missing nodes to the graph, then\nadd the edge connecting them.",
    "HebCup": "It tests that the method {@code addEdge} will silently add the missing nodes to the graphAsMutableGraph , then add the edge connecting them."
}
{
    "Origin": "Parent will have\nmodified time to set to {@link LayerEntry#DEFAULT_MODIFIED_TIME}.",
    "Reference": "Parent will have\nmodified time to set to {@link LayerConfiguration#DEFAULT_MODIFIED_TIME}.",
    "HebCup": "Parent will have modified time to set to {@link LayerConfiguration#DEFAULT_MODIFIED_TIME}."
}
{
    "Origin": "This defaults to all of the {@linkplain Action} in\n{@linkplain ActionPlugin#getActions()}.",
    "Reference": "This defaults to all of the {@linkplain ActionType} in\n{@linkplain ActionPlugin#getActions()}.",
    "HebCup": "This defaults to all of the {@linkplain ActionType} in {@linkplain ActionPlugin#getActions ()}."
}
{
    "Origin": "Add a EventLogItem, but don't log.",
    "Reference": "Add a EventLogEntry, but don't log.",
    "HebCup": "Add a EventLogEntry , but don't log."
}
{
    "Origin": "returns a Vector with all the classnames of the specified property in\nthe GenericPropertiesCreator.",
    "Reference": "returns a Vector with all the classnames of the specified property in the",
    "HebCup": "returns a Vector with all the classnames of the specified property in\nthe GenericPropertiesCreator."
}
{
    "Origin": "Gets the master secret used for encrypting application layer data\nexchanged in this session.",
    "Reference": "Gets the master secret used for resumption handshakes.",
    "HebCup": "Gets the master secret used for encrypting application layer data\nexchanged in this session."
}
{
    "Origin": "Is grand type supported.",
    "Reference": "Is grant type supported.",
    "HebCup": "O Auth20 Utils.is Authorized Grant Type For."
}
{
    "Origin": "The default implementation is a NOP.",
    "Reference": "Note: The default implementation is a NOP.",
    "HebCup": "The default implementation is a NOP."
}
{
    "Origin": "Return point data dimension count",
    "Reference": "Return point dimension count",
    "HebCup": "Return point Dimension Count"
}
{
    "Origin": "Sets the additional data used for creating new pages.",
    "Reference": "Sets the create parameter used for new pages.",
    "HebCup": "Sets the create Parameter used for creating new pages."
}
{
    "Origin": "Executes random mutator and accessor operations on {@link AsynchronousDataStore} validating\nthat the used data structures can be used simultaneously.",
    "Reference": "Executes random mutator and accessor operations on {@link AsynchronousPageStore} validating\nthat the used data structures can be used simultaneously.",
    "HebCup": "Executes random mutator and accessor operations on {@link AsynchronousDataStore} validating that the used ASYNC_PAGE structures can be used simultaneously."
}
{
    "Origin": "This method will retrieve all the ExternalSourceEntries for the ExternalSource for the given AuthorityName param",
    "Reference": "This method will retrieve all the ExternalSourceEntries for the ExternalSource for the given externalSourceName\nparam",
    "HebCup": "This method will retrieve all the ExternalSourceEntries for the ExternalSource for the given externalSourceName param"
}
{
    "Origin": "Calls {@link Plugin#didDeclareGetter(TypeSpec.Builder, PropertyGenerator, MethodSpec)}\non all the bundled plugins",
    "Reference": "Calls {@link Plugin#afterDeclareGetter(TypeSpec.Builder, PropertyGenerator, MethodSpec)}\non all the bundled plugins",
    "HebCup": "Calls {@link Plugin#afterDeclareGetter (TypeSpec.Builder , PropertyGenerator , MethodSpec)} on all the bundled plugins"
}
{
    "Origin": "Getter Parameter Value for File Name",
    "Reference": "Getter Parameter Value for File Path or Name",
    "HebCup": "Getter Parameter Value for file Path Or Name"
}
{
    "Origin": "To prevent this, implement this method such that it returns an upper\nbound for the two qualifiers that is wider than the least upper bound.",
    "Reference": "To prevent this, implement this method such that it returns an upper\nbound for the two qualifiers that is a super type and not equal to the least upper bound.",
    "HebCup": "To prevent this, implement this method such that it returns an upper\nbound for the two qualifiers that is wider than the least upper bound."
}
{
    "Origin": "{@code MinguoEra} is an enum representing the Minguo eras of ERA_BEFORE_ROC/ROC.",
    "Reference": "{@code MinguoEra} is an enum representing the Minguo eras of BEFORE_ROC/ROC.",
    "HebCup": "{@code MinguoEra} is an enum representing the Minguo eras of BEFORE_ROC/ROC."
}
{
    "Origin": "This will return the {@link Key keys}\nwith key material included of the specified versions.",
    "Reference": "This will return the {@link KeyVaultKey keys}\nwith key material included of the specified versions.",
    "HebCup": "This will return the {@link PropertiesOfKey keys} with PropertiesOfKey material included of the specified versions."
}
{
    "Origin": "The client connection manager is set to {@link PoolingHttpClientConnectionManager}.",
    "Reference": "The client connection manager is set to {@link ThreadSafeClientConnManager}.",
    "HebCup": "The client connection manager is set to {@link PoolingDefaultHttpClientConnectionManager}."
}
{
    "Origin": "### \u24d8 Further Information: Overwriting an existing keypair is not possible.",
    "Reference": "### Precondition: Authenticated user.",
    "HebCup": "### \u24d8 Further Information: Overwriting an existing keypair is not possible."
}
{
    "Origin": "Get the current {@link IGetAndSetLocator}.",
    "Reference": "Get the current {@link IPropertyLocator}.",
    "HebCup": "Get the current {@link IPropertyLocator}."
}
{
    "Origin": "Returns an adjusted date based on this date.",
    "Reference": "Returns an adjusted copy of this date.",
    "HebCup": "Returns an adjusted date based on this date."
}
{
    "Origin": "Question is identified by it's question number, and\nthe feedback session name and course ID of the question.",
    "Reference": "Question is identified by its question number, the feedback session name\nand the course ID of the question.",
    "HebCup": "Question is identified by it's question number, and\nthe feedback session name and course ID of the question."
}
{
    "Origin": "Group: producer",
    "Reference": "Group: consumer",
    "HebCup": "Group: producer"
}
{
    "Origin": "Returns a string representation of this object; useful for testing and debugging.",
    "Reference": "Returns a string representation of this object.",
    "HebCup": "Returns a string representation of this object; useful for testing and debugging."
}
{
    "Origin": "The ACLs used by the quorum actor and watcher.",
    "Reference": "Return the ACLs used by the quorum actor and watcher.",
    "HebCup": "The ACLs used by the quorum actor and watcher."
}
{
    "Origin": "Provides a list of all connection wrappers corresponding to a current environment.",
    "Reference": "Provides a list of all connection configs corresponding to a current environment.",
    "HebCup": "Provides a list of all connection Configs corresponding to a current environment."
}
{
    "Origin": "Returns the user login if the token hash is found, else {@code Optional.absent()}.",
    "Reference": "Returns the user uuid if the token hash is found, else {@code Optional.absent()}.",
    "HebCup": "Returns the user login if the token hash is found, else {@code}.absent()}."
}
{
    "Origin": "Map method name to the new name.",
    "Reference": "Maps a method name to its new name.",
    "HebCup": "Map method name to the new name."
}
{
    "Origin": "The {@link RsaKeyCreateOptions} is required.",
    "Reference": "The {@link CreateRsaKeyOptions} is required.",
    "HebCup": "The {@link CreateRsaKeyOptions} is required."
}
{
    "Origin": "if TTL is 60 seconds and specified duration is 20 seconds, refresh will\nbe scheduled in 60 - 20 = 40 seconds.",
    "Reference": "if time before expiration is 60 seconds and specified duration is 20 seconds, refresh will\nbe scheduled in 60 - 20 = 40 seconds.",
    "HebCup": "if TTL is 60 seconds and specified duration is 20 seconds, refresh will\nbe scheduled in 60 - 20 = 40 seconds."
}
{
    "Origin": "This condition is most notably false for arrays, where encoded equality does not correspond\nto Java equality.",
    "Reference": "This condition is most notably false for arrays.",
    "HebCup": "This condition is most notably false for arrays, where encoded equality does not correspond\nto Java equality."
}
{
    "Origin": "Parses {@link SparseMatrix} from the given Matrix Market string.",
    "Reference": "Parses {@link SparseMatrix} from the given Matrix Market.",
    "HebCup": "Parses {@link SparseMatrix} from the given Matrix Market InputStream."
}
{
    "Origin": "returns the version of a bundle, as specified by Bundle-Version in the manifest",
    "Reference": "Returns the version of a bundle, as specified by Bundle-Version in the manifest",
    "HebCup": "returns the version of a bundle, as specified by Bundle-Version in the manifest"
}
{
    "Origin": "Appends a value to the file and return it's offset.",
    "Reference": "Writes a token to the file.",
    "HebCup": "Appends a valu to the file and return it's offset."
}
{
    "Origin": "TODO currently not used - but will eventually be called from BX-bot UI",
    "Reference": "Currently not used, but will eventually be called from BX-bot UI.",
    "HebCup": "TODO currently not used - but will eventually be called from BX-bot UI"
}
{
    "Origin": "Check if Kerberos is enabled.",
    "Reference": "Check if Kerberos authentication is enabled.",
    "HebCup": "Check if Kerberos is enabled."
}
{
    "Origin": "Get the representative SingleEvent for this cell.",
    "Reference": "Get the representative TimeLineEvent for this cell.",
    "HebCup": "Get the representative TimelineEvent for this cell."
}
{
    "Origin": "Loads the muCommander configuration.",
    "Reference": "Loads the muCommander CONFIGURATION.",
    "HebCup": "Loads the muCommander CONFIGURATION."
}
{
    "Origin": "Returns an {@link Operator} version of {@link #run(Observable)}.",
    "Reference": "Returns an {@link Transformer} version of {@link #run(Observable)}.",
    "HebCup": "Returns an {@link Transformer} version of {@link#run (Observable)}."
}
{
    "Origin": "Creates a new multiplexed {@link ThriftCallService} with the specified service implementations.",
    "Reference": "Creates a new multiplexed {@link ThriftCallService} with the specified list service implementations.",
    "HebCup": "Creates a new multiplexed {@link ThriftCallService} with the specified service implementations."
}
{
    "Origin": "The new series holds a copy of all {@link Bar bars} between startIndex (inclusive) and endIndex (exclusive)\nof this TimeSeries.",
    "Reference": "The new series holds a copy of all {@link Bar bars} between startIndex (inclusive) and endIndex (exclusive)\nof this BaseBarSeries.",
    "HebCup": "The new series holds a copy of all {@link BaseBar bars} between startIndex (inclusive) and endIndex (exclusive) of this TimeSeries."
}
{
    "Origin": "Generates a code sample for using {@link FileAsyncClient#setProperties(long, FileHTTPHeaders, FileSmbProperties, String)}",
    "Reference": "Generates a code sample for using {@link FileAsyncClient#setProperties(long, FileHttpHeaders, FileSmbProperties, String)}",
    "HebCup": "Generates a code sample for using {@link FileAsyncClient#setProperties (long , FileHttpHeaders , FileSmbProperties , String)}"
}
{
    "Origin": "Check if the TrackableTrackingCode correspond the the EMPTY reference.",
    "Reference": "Checks if the TrackableTrackingCode corresponds to the EMPTY reference.",
    "HebCup": "Check if the Trackablethis correspond the the EMPTY reference."
}
{
    "Origin": "The {@link Poller poller} allows users to automatically poll on the create certificate\noperation status.",
    "Reference": "The {@link PollerFlux poller} allows users to automatically poll on the create certificate\noperation status.",
    "HebCup": "The {@link PollerFlux PollerFlux} allows users to automatically poll on the create certificate operation status."
}
{
    "Origin": "This method does the same as {@link #checkSolidity(Hash, boolean, int)} but defaults to an unlimited amount\nof transactions that are allowed to be traversed.",
    "Reference": "This method does the same as {@link #checkSolidity(Hash, int)} but defaults to an unlimited amount\nof transactions that are allowed to be traversed.",
    "HebCup": "This method does the same as {@link #checkSolidity(Hash, boolean, int)} but defaults to an unlimited amount\nof transactions that are allowed to be traversed."
}
{
    "Origin": "Used to determine if the player can be used, e.g if the binary is\naccessible.",
    "Reference": "Used to determine if this {@link Player} can be used, e.g if the binary\nis accessible.",
    "HebCup": "Used to determine if the player can be used, e.g if the binary is\naccessible."
}
{
    "Origin": "Code snippets for {@link BlobAsyncClient#setHTTPHeadersWithResponse(BlobHttpHeaders, BlobAccessConditions)}",
    "Reference": "Code snippets for {@link BlobAsyncClient#setHttpHeadersWithResponse(BlobHttpHeaders, BlobAccessConditions)}",
    "HebCup": "Code snippets for {@link BlobAsyncClient#setHttpHeadersWithResponse (BlobHttpHeaders , BlobAccessConditions)}"
}
{
    "Origin": "If not, it will be wrapped by a new\n{@link AnnotationEventListenerAdapter}.",
    "Reference": "If not, it will be wrapped by\na new {@link AnnotationEventHandlerAdapter}.",
    "HebCup": "If not, it will be wrapped by a new {@link AnnotationeventHandlersAdapter}."
}
{
    "Origin": "If the provided item is not an expandable it will be filtered as usual by\n{@link #filterObject(T, String)}.",
    "Reference": "If the provided item is not an expandable it will be filtered as usual by\n{@link #filterObject(T, Serializable)}.",
    "HebCup": "If the provided item is not an expandable it will be filtered as usual by\n{@link #filterObject(T, String)}."
}
{
    "Origin": "If {@code options} is {@code null}, then all the {@link ConfigurationSetting ConfigurationSettings} are fetched\nin their current state.",
    "Reference": "If {@code selector} is {@code null}, then all the {@link ConfigurationSetting ConfigurationSettings} are fetched\nin their current state.",
    "HebCup": "If {@code options} is {@code null}, then all the {@link ConfigurationSetting ConfigurationSettings} are fetched\nin their current state."
}
{
    "Origin": "This methods checks that this node, and all its nodes recursively, do not\ncontain elements that were introduced in more recent versions of the ASM\nAPI than the given version.",
    "Reference": "This method checks\nthat this node, and all its children recursively, do not contain elements that were introduced\nin more recent versions of the ASM API than the given version.",
    "HebCup": "This methods checks that this node, and all its nodes recursively, do not\ncontain elements that were introduced in more recent versions of the ASM\nAPI than the given version."
}
{
    "Origin": "The\nsystem modules are typically linked into the Java run-time image.",
    "Reference": "The\nsystem modules are the modules in the Java run-time image.",
    "HebCup": "The\nsystem modules are typically linked into the Java run-time image."
}
{
    "Origin": "Returns whether or not this qualifier has array with offset of -1.",
    "Reference": "Returns whether or not this qualifier has sequence with offset of -1.",
    "HebCup": "Returns whether or not this qualifier has Sequence With Offset of -1."
}
{
    "Origin": "Sets the ratings entry remote service.",
    "Reference": "Sets the asset entry set like local service.",
    "HebCup": "Sets the asset Entry Set Like Local remote service."
}
{
    "Origin": "Such pixels are marked with a specific color (green foreground) so that the template can\nmeasure their distance to (black) foreground.",
    "Reference": "Such pixels are marked with a specific color (pink foreground) so that the template can\nmeasure their distance to (black) foreground.",
    "HebCup": "Such pixels are marked with a specific color (HOLE foreground) so that the template can measure their distance to (black) foreground."
}
{
    "Origin": "Gets a list of the unfinished {@link Allocation}s in the order in which those {@link",
    "Reference": "Gets a list of the unfinished \"leaf\" tasks in the order in which those tasks were\nencountered.",
    "HebCup": "Gets a list of the unfinished Leaf {@link Allocation}s in the order in which those {@link"
}
{
    "Origin": "Returns the 4 byte header for BIP32 (HD) wallet - public key part.",
    "Reference": "Returns the 4 byte header for BIP32 wallet P2PKH - public key part.",
    "HebCup": "Returns the 4 byte HeaderP2PK for BIP32 (HD) wallet - public key part."
}
{
    "Origin": "Paint inter image, plus a line from inter center to staff reference point if any,\nplus inter links if any.",
    "Reference": "Paint inter image, plus a line from inter center to staff reference point if any,\nplus inter decorations if any.",
    "HebCup": "Paint inter image, plus a line from inter center to staff reference point if any,\nplus inter links if any."
}
{
    "Origin": "The {@link Flux} will\ncontain one or several feed response of the obtained users.",
    "Reference": "The {@link CosmosContinuablePagedFlux} will\ncontain one or several feed response of the obtained users.",
    "HebCup": "The {@link Flux} will contain one or several Cosmos Continuable Paged Flux of the obtained users."
}
{
    "Origin": "Creates new {@link AggregationExpression} that returns the year portion of a date in the factory timezone\n(default UTC).",
    "Reference": "Creates new {@link AggregationExpression} that returns the year portion of a date.",
    "HebCup": "Creates new {@link AggregationExpression} that returns the Year.year portion of a date in the factory timezone (default UTC)."
}
{
    "Origin": "IMPORTANT: If the identified workflow execution was in\nprogress, it is terminated immediately.",
    "Reference": "If the identified workflow execution was in progress, it is\nterminated immediately.",
    "HebCup": "IMPORTANT: If the identified workflow execution was in\nprogress, it is terminated immediately."
}
{
    "Origin": "Creates query that searches for SourceContacts\nwhich match a specific query String.",
    "Reference": "Queries this ContactSourceService for SourceContacts\nwhich match a specific query String.",
    "HebCup": "Creates Source that searches for SourceContacts which match a specific Source String."
}
{
    "Origin": "Creates a randomized list of urls for the given shard.",
    "Reference": "Creates a list of urls for the given shard.",
    "HebCup": "Creates a randomized list of urls for the given shard."
}
{
    "Origin": "Adds a new FragmentOptions instance to the builder.",
    "Reference": "Adds a new {@link FragmentOptions} instance to the builder.",
    "HebCup": "Adds a new Fragmentoptions.getNormalized instance to the builder."
}
{
    "Origin": "DO NOT change the order of the expressions returned because broker relies on that to process the query.",
    "Reference": "NOTE: DO NOT change the order of the expressions returned because broker relies on that to process the query.",
    "HebCup": "DO NOT change the order of the columns returned because broker relies on that to process the query."
}
{
    "Origin": "Returns the total size of the segment in bytes.",
    "Reference": "Returns the segment size.",
    "HebCup": "Returns the total size of the segment in bytes."
}
{
    "Origin": "0 is the max height when there is no rectangle.",
    "Reference": "|   Remove the height from heap.",
    "HebCup": "0 is the (when there is no rectangle."
}
{
    "Origin": "Returns true if Wifi calling is enabled for the specific phone with id {@code phoneId}.",
    "Reference": "Returns true if Wifi calling is enabled for the specific subscription with id {@code subId}.",
    "HebCup": "Returns true if Wifi calling is enabled for the specific phone with id {@code subId}."
}
{
    "Origin": "Returns the Java types corresponding to the argument types of the given\nmethod descriptor.",
    "Reference": "Returns the {@link Type} values corresponding to the argument types of the given method\ndescriptor.",
    "HebCup": "Returns the Java types corresponding index the argument types of the given method descriptor."
}
{
    "Origin": "Get the current user profile.",
    "Reference": "Get user detail page.",
    "HebCup": "user the current user profile."
}
{
    "Origin": "EpollServerSocketChannel}.",
    "Reference": "It's an optional parameter.",
    "HebCup": "EpollServerSocketChannel}."
}
{
    "Origin": "Also @see {@link CompletableFutures#accumulate(CollectionX, Reducer)} if you would like a failure to result in a CompletableFuture\nwith an error",
    "Reference": "Also @see {@link CompletableFutures#accumulate(IterableX, Reducer)} if you would like a failure to result in a CompletableFuture\nwith an error",
    "HebCup": "Also @see {@link CompletableFutures#accumulate(IterableX, Reducer)} if you would like a failure to result in a CompletableFuture with an error"
}
{
    "Origin": "Check and append the synonyms words of specified word included the CJK and basic Latin words",
    "Reference": "Check and append the synonyms/pinyin words of specified word included the CJK and basic Latin words",
    "HebCup": "Check and append the synonyms words of specified word included the CJK and basic Latin words"
}
{
    "Origin": "This option won't be visible is `--entityFormatExpression` has been specified.",
    "Reference": "This option won't be visible if `--entity` has not already been specified.",
    "HebCup": "This option won't be visible is `--entity` has been specified."
}
{
    "Origin": "Start building a new factory class-based service binding.",
    "Reference": "Start building a new supplier class-based service binding.",
    "HebCup": "Start building a new Supplier Class-based service binding."
}
{
    "Origin": "Merges this frame with the given frame (case of a RET instruction).",
    "Reference": "Merges the given frame into this frame (case of a subroutine).",
    "HebCup": "Merges this frame with the given frame (case of a RET instruction)."
}
{
    "Origin": "Obtains an instance from the specified unique name.",
    "Reference": "Obtains an instance from the specified name.",
    "HebCup": "Obtains an instance from the specified name."
}
{
    "Origin": "Set the {@link MongoClientOptions} to be used when creating {@link MongoClient}.",
    "Reference": "Set the {@link MongoClientSettings} to be used when creating {@link MongoClient}.",
    "HebCup": "Set the {@link MongoClientSettings} to be used when creating {@link MongoClient}."
}
{
    "Origin": "Gets the value of the 'ValueType' field",
    "Reference": "Gets the value of the 'valueType' field.",
    "HebCup": "Gets the value of the 'valueType' field"
}
{
    "Origin": "Validation of page:\n- detects CAPTCHA test\n- detects invalid credentials error\n- detects wrong clientId error",
    "Reference": "Validation of page:\n- detects CAPTCHA test\n- detects 2-step verification\n- detects invalid credentials error\n- detects wrong clientId error",
    "HebCup": "Validation of page:\n- detects CAPTCHA test\n- detects invalid credentials error\n- detects wrong clientId error"
}
{
    "Origin": "Returns whether the given HTTP response status code is a redirect code {@code 301, 302, 303,\n307}.",
    "Reference": "Returns whether the given HTTP response status code is a redirect code {@code 301, 302, 303,\n307, 308}.",
    "HebCup": "Returns whether the given HTTP response status code is a redirect code {@code 301, 302, 303,\n307}."
}
{
    "Origin": "Returns a resource created from an Object.",
    "Reference": "Returns a resource wrapper created from the input.",
    "HebCup": "Returns a JspResourceWrapper created from an Object."
}
{
    "Origin": "MaryData object which contains the reference to the updated utterance.",
    "Reference": "Utterance object which contains the reference to the updated utterance.",
    "HebCup": "return object which contains the reference to the updated utterance."
}
{
    "Origin": "Amazon Redshift returns all clusters that match any combination of the\nspecified keys and values.",
    "Reference": "Redshift returns all clusters that match any combination of the specified\nkeys and values.",
    "HebCup": "Amazon Redshift returns all clusters that match any combination of the\nspecified keys and values."
}
{
    "Origin": "Users should remove\ngraphs via the {@link RemoveGraph} operation.",
    "Reference": "Users should remove\ngraphs via the {@link RemoveStore} operation.",
    "HebCup": "Users should remove graphs via the {@link Removestore} operation."
}
{
    "Origin": "Add a EventLogItem, but don't log.",
    "Reference": "Add a EventLogEntry, but don't log.",
    "HebCup": "Add a EventLogEntry , but don't log."
}
{
    "Origin": "Save a header from the given HTTP operation into the AList.",
    "Reference": "Save a header from the given HTTP operation into the Map.",
    "HebCup": "Save a String from the given HTTP operation into the AList."
}
{
    "Origin": "The option is a:",
    "Reference": "The option is a:\n type.",
    "HebCup": "The option is a:"
}
{
    "Origin": "Returns an {@link Operator} to allow the query to be pushed\nparameters via the {@link Observable#lift(Operator)} method.",
    "Reference": "Returns an {@link Transformer} to allow the query to be pushed\nparameters via the {@link Observable#compose(Transformer)} method.",
    "HebCup": "Returns an {@link Transformer} to allow the query to be pushed parameters via the {@link Observable#lift (Operator)} method."
}
{
    "Origin": "The extra code is defined in the imagej.legacy.patches package, as\ndescribed in the documentation for {@link #insertMethod(String, String)}.",
    "Reference": "The extra code is defined in the imagej.legacy.patches package, as\ndescribed in the documentation for {@link #insertNewMethod(String, String)}.",
    "HebCup": "The extra code is defined in the imagej.legacy.patches package, as described in the documentation for {@link #insertAtTop Method(String, String)}."
}
{
    "Origin": "Test if same updates order on all owners after txs are finished.",
    "Reference": "Tests for same order of updates on all owners after txs are finished.",
    "HebCup": "Test if same updates order on all owners after txs are finished."
}
{
    "Origin": "This is useful for matching through\nnested routes where the path is matched incrementally at each level.",
    "Reference": "This is useful for matching nested routes\nwhere the path is matched incrementally at each level.",
    "HebCup": "This is useful for matching through\nnested routes where the path is matched incrementally at each level."
}
{
    "Origin": "Adds a ChatRoomProviderWrapperListener to the listener list.",
    "Reference": "Removes the ChatRoomProviderWrapperListener to the listener list.",
    "HebCup": "Adds a ChatRoomProviderWrapperListener to the listener list."
}
{
    "Origin": "MEthod to show or hide the \"return the call\" layout",
    "Reference": "Method to show or hide the \"return the call\" layout",
    "HebCup": "MEthod to show or hide the \"return the call\" layout"
}
{
    "Origin": "R is a rotation transformation specified by the quaternion (qx, qy, qz, qw).",
    "Reference": "R is a rotation - and possibly scaling - transformation specified by the quaternion (qx, qy, qz, qw).",
    "HebCup": "R is a rotation transformation specified by the quaternion (qx , qy , qy , qw)."
}
{
    "Origin": "Invoke Builder.moduleHash(String name, String hashString);",
    "Reference": "Invoke Builder.moduleHash(String name, byte[] hash);",
    "HebCup": "Invoke Builder.moduleHash (String name , String hash);"
}
{
    "Origin": "Returns an iterator of all of the registered {@code SaslServerFactory}s where the order is based on the\norder of the Provider registration and/or class path order.",
    "Reference": "Returns a collection of all of the registered {@code SaslServerFactory}s where the order is based on the\norder of the Provider registration and/or class path order.",
    "HebCup": "Returns an Collection of all of the registered {@code SaslServerFactory}s where the order is based on the order of the Provider registration and/or class path order."
}
{
    "Origin": "The ORGANIZATION on Ontario Bank should not ve overrwritten since Ontario (STATE_OR_PROVINCE)\ndoes not span Ontario Bank.",
    "Reference": "The LOCATION on Ontario Lake should not be overwritten since Ontario (STATE_OR_PROVINCE)\ndoes not span Ontario Lake.",
    "HebCup": "The LOCATION on Ontario Bank should not ve overrwritten since Ontario (STATE_OR_PROVINCE) does not span Ontario Bank."
}
{
    "Origin": "`DEPRECATED`: Number of users (for rooms only)",
    "Reference": "`DEPRECATED`: Number of users (for rooms only)  [Deprecated since version VERSION]",
    "HebCup": "`DEPRECATED`: Number of users (for rooms only)"
}
{
    "Origin": "quantizes a provided polygon to be consistent with the index encoding",
    "Reference": "quantizes a triangle to be consistent with index encoding",
    "HebCup": "quantizes a provided) to be consistent with the index encoding"
}
{
    "Origin": "If the delete etag doesn't match anything the delete won't happen, this will result in a 412.",
    "Reference": "If the delete ETag doesn't match anything the delete won't happen, this will result in a 412.",
    "HebCup": "If the deleteConfiguration etag doesn't match anything the deleteConfiguration won't happen , this will result in a 412."
}
{
    "Origin": "Implementations of SkylarkValue may define their own behavior of {@code str}.",
    "Reference": "Implementations of StarlarkValue may define their own behavior of {@code str}.",
    "HebCup": "Implementations of StarlarkValue may define their own behavior of {@code str}."
}
{
    "Origin": "The comparison is based on the Unicode value of each character in the strings.",
    "Reference": "The comparison is based on the Unicode value of each character in the CharSequences.",
    "HebCup": "The comparison is based on the Unicode value of each character in the CharSequence."
}
{
    "Origin": "Returns the XML representation of the PacketExtension.",
    "Reference": "Returns the XML representation of the ExtensionElement.",
    "HebCup": "Returns the XML representation of the PacketExtension."
}
{
    "Origin": "track that related posts have loaded and scrolled into view if we haven't\nalready tracked it",
    "Reference": "track that related posts have loaded and are scrolled into view if we haven't\nalready tracked it",
    "HebCup": "track that Has Tracked Local Related Posts have loaded and scrolled into view if we haven't already tracked it"
}
{
    "Origin": "Create a compiler.",
    "Reference": "Create a spvc state handle.",
    "HebCup": "Create a context."
}
{
    "Origin": "Amazon Redshift returns all subnet groups that match any combination\nof the specified keys and values.",
    "Reference": "Redshift returns all subnet groups that match any combination of the\nspecified keys and values.",
    "HebCup": "Amazon Redshift returns all subnet groups that match any combination\nof the specified keys and values."
}
{
    "Origin": "Builds a CollectionLayer bean from the {@link OpenSearchAccess#LAYER} property of a",
    "Reference": "Builds a CollectionLayer bean from the {@link OpenSearchAccess#LAYERS} property of a",
    "HebCup": "Builds a CollectionLayer bean from the {@link lf#LAYER} property of a"
}
{
    "Origin": "Sets the tracking state for this costas loop.",
    "Reference": "Sets the PLLGain state for this costas loop.",
    "HebCup": "Sets the PLLGain state for this costas loop."
}
{
    "Origin": "Reset all labels in the instruction list.",
    "Reference": "Resets all the labels in the instruction list.",
    "HebCup": "Reset all labels in the instruction list."
}
{
    "Origin": "Test if the vector AD is right of AB.",
    "Reference": "Test if the double[] AD is right of AB.",
    "HebCup": "Test if the double AD is right of AB."
}
{
    "Origin": "Called if this element get updated on the client side.",
    "Reference": "Called if this element getComb updated on the client side.",
    "HebCup": "Called if this element get updated on the client Only."
}
{
    "Origin": "Returns the execution info from the tags declared on the target.",
    "Reference": "Returns the execution info.",
    "HebCup": "Returns the execution info from the tags declared on the target."
}
{
    "Origin": "Compute the theoretical starting abscissa for each key-sig item.",
    "Reference": "Compute the theoretical starting abscissa for each key signature item.",
    "HebCup": "Compute the theoretical starting abscissa for each key-sig item."
}
{
    "Origin": "Test the behavior getObject for inet columns.",
    "Reference": "Test the behavior getObject for ipv4 inet columns.",
    "HebCup": "Test the behavior getObject for inet columns."
}
{
    "Origin": "Create a {@link MongoDbOutboundGatewaySpec} builder instance\nbased on the provided {@link MongoDbFactory} and {@link MongoConverter}.",
    "Reference": "Create a {@link MongoDbOutboundGatewaySpec} builder instance\nbased on the provided {@link MongoDatabaseFactory} and {@link MongoConverter}.",
    "HebCup": "Create a {@link MongoDbOutboundGatewaySpec} builder instance based on the provided {@link MongoDatabaseFactory} and {@link MongoConverter}."
}
{
    "Origin": "Returns the servlet HTTP context.",
    "Reference": "Returns the current HTTP connection.",
    "HebCup": "Returns the servlet HTTP Connection."
}
{
    "Origin": "Getter for {@link #exposeOnlyRequestedHeader}",
    "Reference": "Getter for {@link #allowOnlyRequestedHeader}",
    "HebCup": "Getter for {@link#allowOnlyRequestedHeader}"
}
{
    "Origin": "Checks whether the extension of the filename is one of those specified.",
    "Reference": "Checks whether the extension of the fileName is one of those specified.",
    "HebCup": "Checks whether the extension of the fileName is one of those specified."
}
{
    "Origin": "Get Allowed En Cashment?.",
    "Reference": "Get Allowed Encashment.",
    "HebCup": "Get Allowed Encashment?."
}
{
    "Origin": "For more information on",
    "Reference": "For more information on Amazon",
    "HebCup": "For more information on"
}
{
    "Origin": "Gets the Processing Group this Saga is assigned to, if it is explicitly set.",
    "Reference": "Gets the Processing Group this Saga is assigned to.",
    "HebCup": "Gets the type this Saga is assigned to, if it is explicitly set."
}
{
    "Origin": "If nodes returned are to be further used, they must be finalized via {@link ANode#finish()}.",
    "Reference": "Before nodes are added to the result, they must be finalized via {@link ANode#finish()}.",
    "HebCup": "If nodes returned are to be further used, they must be finalized via {@link ANode#finish()}."
}
{
    "Origin": "Reverts method {{@link #unsignedToTwosComplement(byte[])}.",
    "Reference": "Reverts method {{@link #padLeadingZero(byte[])}.",
    "HebCup": "Reverts method {{@link #unsignedTounpadLeading(byte[])}."
}
{
    "Origin": "Copy the AndroidManifest.xml from sourceManifestFile to androidManifestFile",
    "Reference": "Copy the AndroidManifest.xml from androidManifestFile to destinationManifestFile",
    "HebCup": "Copy the AndroidManifest.xml from androidManifestFile to androidManifestFile"
}
{
    "Origin": "Generate a hashcode by hashing all of the properties.",
    "Reference": "Generate a hash code by hashing all of the properties.",
    "HebCup": "Generate a hashcode by hashing all of the properties."
}
{
    "Origin": "Menge in Preiseinheit eff..",
    "Reference": "Menge In Preiseinheit.",
    "HebCup": "Menge in Preiseinheit eff.."
}
{
    "Origin": "Loads the update center data, if any and if modified since last read.",
    "Reference": "Loads the update center data, if any.",
    "HebCup": "Loads the update center data, if any and if modified since last read."
}
{
    "Origin": "escapes character data in val",
    "Reference": "escapes character data in val and attributes",
    "HebCup": "escapes character data in val"
}
{
    "Origin": "Creates new {@link AggregationExpression} that returns the week of the year for a date as a number between 0 and\n53 in the factory timezone (default UTC).",
    "Reference": "Creates new {@link AggregationExpression} that returns the week of the year for a date as a number between 0 and\n53.",
    "HebCup": "Creates new {@link AggregationExpression} that returns the Week.week of the year for a date as a number between 0 and 53 in the factory timezone (default UTC)."
}
{
    "Origin": "Create a new builder using the default version of GraphSON.",
    "Reference": "Create a new builder using the default version of GraphSON - v3.",
    "HebCup": "Create a new builder using the default version of GraphSON."
}
{
    "Origin": "Iterate of a copy of the table.",
    "Reference": "Iterate over the underlying rows in the source table.",
    "HebCup": "Iterate of a copy of the table."
}
{
    "Origin": "Returns an ordered range of all the sync d l objects where companyId = ?",
    "Reference": "Returns an ordered range of all the sync d l objects where repositoryId = ?",
    "HebCup": "Returns an ordered range of all the sync d l objects where repositoryId = ?"
}
{
    "Origin": "Register the dao with the cache.",
    "Reference": "Register the DAO with the cache.",
    "HebCup": "Register the dao with the cache."
}
{
    "Origin": "Removes all values bound to this ThreadContext, which includes any Subject, Session, or InetAddress\nthat may be bound by these respective objects' conveninece methods, as well as all values bound by your\napplication code.",
    "Reference": "Clears all values bound to this ThreadContext, which includes any Subject, Session, or InetAddress\nthat may be bound by these respective objects' convenience methods, as well as all values bound by your\napplication code.",
    "HebCup": "Removes all values bound to this ThreadContext, which includes any Subject, Session, or InetAddress\nthat may be bound by these respective objects' conveninece methods, as well as all values bound by your\napplication code."
}
{
    "Origin": "This method will just return the ReflectivePropertyAccessor instance if it is unable to build\nsomething more optimal.",
    "Reference": "This method will just\nreturn the ReflectivePropertyAccessor instance if it is unable to build a more\noptimal accessor.",
    "HebCup": "This method will just return the ReflectivePropertyAccessor instance if it is unable to build\nsomething more optimal."
}
{
    "Origin": "It is not recommended to expand large trees this way since that might cause huge interface lags.",
    "Reference": "It is not recommended to expand large tree chunks this way since that might cause interface lags.",
    "HebCup": "It is not recommended to expand large trees this way since that might cause huge interface lags."
}
{
    "Origin": "Set Eingabegruppe.",
    "Reference": "Set Untergruppe.",
    "HebCup": "Set Eingabegruppe."
}
{
    "Origin": "Get the \"original\" database name.",
    "Reference": "Get the \"original\" wiki id.",
    "HebCup": "Get the \"original\" database name."
}
{
    "Origin": "Returns xpath query corresponding to {@code TreeWalkerAuditEvent} object which points to\nthe same AST element as specified {@code AuditEvent} object.",
    "Reference": "Returns xpath query corresponding to localized message of the\n{@code TreeWalkerAuditEvent} object which points to the same AST element as specified\n{@code AuditEvent} object.",
    "HebCup": "Returns xpath query corresponding to {@code TreeWalkerAuditEvent} object which points to\nthe same AST element as specified {@code AuditEvent} object."
}
{
    "Origin": "Set the certificate that will sign this certificate.",
    "Reference": "Set the certificate that will issue this certificate.",
    "HebCup": "Set the certificate that will sign this certificate."
}
{
    "Origin": "Creates a new {@code AtomicTreeMapBuilder}.",
    "Reference": "Creates a new {@code AtomicNavigableMapBuilder}.",
    "HebCup": "Creates a new {@code AtomicNavigableMapBuilder}."
}
{
    "Origin": "Note: this method can only be called once per index.",
    "Reference": "NOTE: this method can only be called once per index.",
    "HebCup": "Note: this method can only be called once per >."
}
{
    "Origin": "Returns a list containing containing only elements found in {@code first}  and also in {@code\nsecond}.",
    "Reference": "Returns true if there is an element in {@code first} that is also in {@code second}.",
    "HebCup": "Returns a comparator containing containing only elements found in {@code first} and also in {@code second}."
}
{
    "Origin": "This method should be called on completion of\nan operation (afterQuery all cascades are completed) that saves an entity.",
    "Reference": "This method should be called on completion of\nan operation (after all cascades are completed) that saves an entity.",
    "HebCup": "This method should be called on completion of\nan operation (afterQuery all cascades are completed) that saves an entity."
}
{
    "Origin": "Completely Removes the Connection associated with the given id.",
    "Reference": "Completely Removes the wire associated with the given id.",
    "HebCup": "Completely Removes the DrawWire associated with the given id."
}
{
    "Origin": "no_cores: The empty string is also a valid keyword, and maps to the Anonymous state.",
    "Reference": "NO_CORS: The empty string is also a valid keyword, and maps to the Anonymous state.",
    "HebCup": "no_cores: The empty string is also a valid keyword, and maps to the Anonymous state."
}
{
    "Origin": "Subscribes to changes of required table.",
    "Reference": "Allows observer changes of required table.",
    "HebCup": "Subscribes to changes of required table."
}
{
    "Origin": "Currently supported views are\nlisted in WebConstants.*_VIEW.",
    "Reference": "Currently supported views are\nlisted in ComplexObsHandler.*_VIEW.",
    "HebCup": "Currently supported views are listed in ComplexObsHandler.*_VIEW."
}
{
    "Origin": "Gets the time-zone, such as 'Europe/Paris'.",
    "Reference": "Gets the zone ID, such as 'Europe/Paris'.",
    "HebCup": "Gets the time-zoneId, such as 'Europe/Paris'."
}
{
    "Origin": "Creates an audit entry when a service definition is updated.",
    "Reference": "Creates an audit entry when a API definition is updated.",
    "HebCup": "Creates an audit entry when a api Definition is updated."
}
{
    "Origin": "Find {@link NativeLinkable} nodes transitively reachable from the given roots.",
    "Reference": "Find {@link NativeLinkableGroup} nodes transitively reachable from the given roots.",
    "HebCup": "Find {@link NativeLinkableGroup} nodes transitively reachable from the given roots."
}
{
    "Origin": "Returns a string representation of this object; useful for testing and debugging.",
    "Reference": "Returns a string representation of this object.",
    "HebCup": "Returns a string representation of this object; useful for testing and debugging."
}
{
    "Origin": "Get all non-null values with the given ids for default COLUMN",
    "Reference": "Get all non-null values of type T with the given ids for default COLUMN in a map",
    "HebCup": "getKV all non-null values with the given ids for default COLUMN"
}
{
    "Origin": "Tests the {@link SecurityUtils#getOwnerFromThriftClient()} ()} method.",
    "Reference": "Tests the {@link SecurityUtils#getOwnerFromGrpcClient()} ()} method.",
    "HebCup": "Tests the {@link SecurityUtils#getOwnerFromGrpcClient ()} ()} method."
}
{
    "Origin": "Convert unserializable exceptions (usually from dev mode) into generic\nserializable ones.",
    "Reference": "Convert unserializable exceptions into generic serializable ones.",
    "HebCup": "Convert unserializable exceptions (usually from dev mode) into generic\nserializable ones."
}
{
    "Origin": "Group: common",
    "Reference": "Group: security",
    "HebCup": "Group: common"
}
{
    "Origin": "The default value of this attribute is {@code 40}.",
    "Reference": "The default value of this attribute is {@code VERSION}.",
    "HebCup": "The default value of this attribute is {@code 40}."
}
{
    "Origin": "Converts a BucketAutoOptions to a DBObject for use by the Java driver.",
    "Reference": "Converts a BucketAutoOptions to a Document for use by the Java driver.",
    "HebCup": "Converts a BucketAutoOptions to a Document for use by the Java driver."
}
{
    "Origin": "Sets the {@link GridProjectionFactory} used to create an instances\nof {@link GridProjection}s.",
    "Reference": "Sets the {@link GridProjectionFactoryLocator} used to find factories\nwhich are creating an instances of {@link GridProjection}s.",
    "HebCup": "Sets the {@link gridProjectionFactoryLocator} used to create an instances of {@link GridProjection}s."
}
{
    "Origin": "Sets the input format of this processor, returning whether the input format has changed.",
    "Reference": "Sets the input format of this processor.",
    "HebCup": "Sets the input format of this processor, returning whether the input format has changed."
}
{
    "Origin": "Cron expression to be used for the service which does TTL of the backups.",
    "Reference": "Monitoring period for the service which does TTL of the backups.",
    "HebCup": "Monitor Period In Sec to be used for the service which does TTL of the backups."
}
{
    "Origin": "Returns the set of compilation unit type names for all contained super source compilation\nunits.",
    "Reference": "Returns the set of compilation unit type source names for all contained super source\ncompilation units.",
    "HebCup": "Returns the set of Compilation Unit Type Source Names for all contained super source compilation units."
}
{
    "Origin": "Creates an instance from an input stream.",
    "Reference": "Obtains an instance from an input stream.",
    "HebCup": "Creates an instance from an input stream."
}
{
    "Origin": "Does\nnot close the channel when the flux is terminated, but\ndoes {@linkplain #release(DataBuffer) release} the data buffers in the\nsource.",
    "Reference": "Does\nnot close the channel when the flux is terminated, and does\nnot {@linkplain #release(DataBuffer) release} the data buffers in the\nsource.",
    "HebCup": "Does not close the channel when the flux is terminated , but does {@linkplain#sink.next (DataBuffer) sink.next} the data buffers in the source."
}
{
    "Origin": "For each the\noffsets for each array in superType, there must be an offset in this qualifier for the\narray that is greater than or equal to the super offset.",
    "Reference": "For each the\noffsets for each sequence in superType, there must be an offset in this qualifier for the\nsequence that is greater than or equal to the super offset.",
    "HebCup": "For each the offsets for each sequence in superType , there must be an offset in this qualifier for the sequence that is greater than or equal to the super offset."
}
{
    "Origin": "Returns default type cache implementation variant.",
    "Reference": "Sets default file prefix.",
    "HebCup": "Returns default set Temp File Prefix variant."
}
{
    "Origin": "Returns a string representation of this object; useful for testing and debugging.",
    "Reference": "Returns a string representation of this object.",
    "HebCup": "Returns a string representation of this object; useful for testing and debugging."
}
{
    "Origin": "Get Zahlwert.",
    "Reference": "Get Eingaberegister.",
    "HebCup": "Get Zahlwert."
}
{
    "Origin": "Block volumes that should be attached to the instance at boot time.",
    "Reference": "Block devices that should be attached to the instance at boot time.",
    "HebCup": "Block volumes that should be attached to the instance at boot time."
}
{
    "Origin": "In order to set the matrix to a rotation transformation without pre-multiplying,\nuse {@link #rotation(Quaterniond)}.",
    "Reference": "In order to set the matrix to a rotation transformation without pre-multiplying,\nuse {@link #rotation(Quaterniondc)}.",
    "HebCup": "In order to set the matrix to a rotation transformation without pre-multiplying, use {@link #rotation(Quaterniondc)}."
}
{
    "Origin": "Each adapter will try to send blocks until have got special {@link Packet} with type {@link PacketTypes#ACK},\nthat means receiver have got block.",
    "Reference": "Each adapter will try to send blocks until have got special {@link Block} with type {@link PacketTypes#ACK},\nthat means receiver have got block.",
    "HebCup": "Each adapter will try to send blocks until have got special {@link session} with type {@link PacketTypes#ACK} , that means receiver have got block."
}
{
    "Origin": "Converts from {@link CpuProfilerConfig} to {@link CpuProfiler.CpuProfilerConfiguration}",
    "Reference": "Converts from {@link CpuProfilerConfig} to {@link Cpu.CpuTraceConfiguration.UserOptions}",
    "HebCup": "Converts from {@link CpuProfilerConfig} to {@link Cpu.CpuTraceConfiguration.UserOptions}"
}
{
    "Origin": "NOTE: TODO(b/140064271): Add handling for composite types + tests for this file.",
    "Reference": "NOTE: TODO(b/140064271): Add handling for composite types.",
    "HebCup": "NOTE: TODO (b/140064271): Add handling for composite Type + tests for this file."
}
{
    "Origin": "Expands all tree nodes accepted by filter in a single call.",
    "Reference": "Expands all tree nodes.",
    "HebCup": "Expands AllImpl tree nodes accepted by filter in a single call."
}
{
    "Origin": "Generate list of dependencies of package.",
    "Reference": "Generate list of imports of dependencies.",
    "HebCup": "Generate list of dependencies of module."
}
{
    "Origin": "Gets the value of the pubBrowser property.",
    "Reference": "Gets the value of the target property.",
    "HebCup": "Gets the value of the Target property."
}
{
    "Origin": "Returns a copy of this time with the specified field altered.",
    "Reference": "Returns a copy of this time with the specified field set to a new value.",
    "HebCup": "Returns a copy of this time with the specified field altered."
}
{
    "Origin": "Gets the ModelService instance that corresponds to the given name",
    "Reference": "Gets the ModelService instance that corresponds to given the name",
    "HebCup": "Gets the getService instance that corresponds to the given name"
}
{
    "Origin": "This method always return {@code true} when invoked on an unnamed\nmodule.",
    "Reference": "It always returns {@code true} when\ninvoked on an unnamed module.",
    "HebCup": "This method always return {@code true} when invoked on an unnamed\nmodule."
}
{
    "Origin": "Stub of {@link Plugin#didDeclareSetter(TypeSpec.Builder, PropertyGenerator, MethodSpec)} for subclasses to\noverride",
    "Reference": "Stub of {@link Plugin#afterDeclareSetter(TypeSpec.Builder, PropertyGenerator, MethodSpec)} for subclasses to\noverride",
    "HebCup": "Stub of {@link Plugin#afterDeclareSetter (TypeSpec.Builder , PropertyGenerator , MethodSpec)} for subclasses to override"
}
{
    "Origin": "This method is intended to be\ncalled at most once for SoyDoc params and at most once for header params.",
    "Reference": "This method is intended to be called at most once for header params.",
    "HebCup": "This method is intended to be\ncalled at most once for SoyDoc params and at most once for header params."
}
{
    "Origin": "Record an {@link ExecutionEvent} for a container or test that completed\nwith the provided {@link TestExecutionResult}.",
    "Reference": "Record an {@link Event} for a container or test that completed\nwith the provided {@link TestExecutionResult}.",
    "HebCup": "Record an {@link Event} for a container or test that completed with the provided {@link TestExecutionResult}."
}
{
    "Origin": "Retrieve the {@link MetadataEntry} corresponding to the specified key for the {@link NamespacedEntityId}.",
    "Reference": "Retrieve the {@link MetadataEntry} corresponding to the specified key for the {@link MetadataEntity}.",
    "HebCup": "Retrieve the {@link MetadataEntry} corresponding to the specified key for the {@link MetadataEntity}."
}
{
    "Origin": "Saves the field value by invoking the setter function on the given\nbean, if the value passes all registered validators.",
    "Reference": "Write the field value by invoking the setter function on the given\nbean, if the value passes all registered validators.",
    "HebCup": "Saves the field value by invoking the setter function on the given\nbean, if the value passes all registered validators."
}
{
    "Origin": "Creates a new tracing {@link Service} decorator using the specified {@link Tracing} instance.",
    "Reference": "Creates a new tracing {@link HttpService} decorator using the specified {@link Tracing} instance.",
    "HebCup": "Creates a new tracing {@link ?} decorator using the specified {@link Tracing} instance."
}
{
    "Origin": "Resets value of mJvmMonitorThread and mThreadStarted.",
    "Reference": "Resets value of mJvmMonitorThread.",
    "HebCup": "Resets value of mJvmvoidThread and mThreadStarted."
}
{
    "Origin": "Determines if locale's dictionary is locally available or not.",
    "Reference": "Determines if locale's dictionary is locally available or a system.",
    "HebCup": "Determines if locale's dictionary is locally available or not."
}
{
    "Origin": "Creates a new block blob, or updates the content of an existing block blob.",
    "Reference": "Creates a new block blob.",
    "HebCup": "Creates a new block blob, or updates the content of an existing block blob."
}
{
    "Origin": "This most commonly would occur when an encryption key is updated and old principals are retrieved that have\nbeen encrypted with the previous key.\\",
    "Reference": "This most commonly would be called when an encryption key is updated and old principals are retrieved that have\nbeen encrypted with the previous key.",
    "HebCup": "This most commonly would occur when an encryption key is updated and old principals are retrieved that have\nbeen encrypted with the previous key.\\"
}
{
    "Origin": "Returns an {@link Action} object that matches the parameters given.",
    "Reference": "Returns an {@link teammates.ui.controller.Action} object that matches the parameters given.",
    "HebCup": "Returns an {@link teammates.ui.controller.Action} object that matches the parameters given."
}
{
    "Origin": "The metamodel is populated in two phases, first to create a {@link DomainClass} for each ObjectSpecification,\nand then to populate the members of those domain class types.",
    "Reference": "The metamodel is populated in two phases, first to create a {@link DomainClassDto} for each ObjectSpecification,\nand then to populate the members of those domain class types.",
    "HebCup": "The metamodel is populated in two phases , first to create a {@link DomainClassDto} for each ObjectSpecification , and then to populate the members of those domain class types."
}
{
    "Origin": "The MediaTimestamp2 represents how the media time correlates to the system time in\na linear fashion using an anchor and a clock rate.",
    "Reference": "The MediaTimestamp represents how the media time correlates to the system time in\na linear fashion using an anchor and a clock rate.",
    "HebCup": "The MediaTimestamp represents how the media time correlates to the system time in a linear fashion using an anchor and a clock rate."
}
{
    "Origin": "If\nyou want to retrieve the latest inventory of the vault, use",
    "Reference": "If you want to retrieve the\nlatest inventory of the vault, use InitiateJob.",
    "HebCup": "If\nyou want to retrieve the latest inventory of the vault, use"
}
{
    "Origin": "{@codesnippet com.azure.security.keyvault.certificates.CertificateAsyncClient.createIssuer#String-String}",
    "Reference": "{@codesnippet com.azure.security.keyvault.certificates.CertificateAsyncClient.cancelCertificateOperation#string}",
    "HebCup": "{@codesnippet com.azure.security.keyvault.certificates.CertificateAsyncClient.cancelCertificateOperation#String-String}"
}
{
    "Origin": "Returns the builder for the settings used for calls to labelAudio.",
    "Reference": "Returns the builder for the settings used for calls to getEvaluation.",
    "HebCup": "Returns the builder for the settings used for calls to GetEvaluation."
}
{
    "Origin": "Returns the InetAddress associated with the current subject.",
    "Reference": "Returns the host name or IP associated with the current subject.",
    "HebCup": "Returns the String associated with the current subject."
}
{
    "Origin": "Otherwise the patches for the module\nare scanned (to find any new concealed packages) and a new module\nreference is returned.",
    "Reference": "Otherwise the patches for the module\nare scanned (to find any new packages) and a new module reference is\nreturned.",
    "HebCup": "Otherwise the map for the module are scanned (to find any new concealed packages) and a new module reference is returned."
}
{
    "Origin": "Then it helps to define image URI is loaded into",
    "Reference": "Then it helps to define image URI is loaded into View at\nexact moment.",
    "HebCup": "Then it helps to define image URI is loaded into"
}
{
    "Origin": "This operation changes the position of the key in the map to the\nmost recently used position (first).",
    "Reference": "This operation changes the position of the key in the map to the\nmost recently used position (last).",
    "HebCup": "This operation changes the position of the key in the map to the\nmost recently used position (first)."
}
{
    "Origin": "Passes the specified event to all registered configuration listeners.",
    "Reference": "Passes the specified event to all registered configuration LISTENERS.",
    "HebCup": "Passes the specified event to all registered configuration LISTENERS."
}
{
    "Origin": "Group: consumer",
    "Reference": "Group: producer",
    "HebCup": "Group: consumer"
}
{
    "Origin": "when add/rm/mv element",
    "Reference": "when add/rm element",
    "HebCup": "when add/rm/mv element"
}
{
    "Origin": "When this is set, in turn it sets the following:",
    "Reference": "When this property is set, in turn it sets the following:",
    "HebCup": "When this is updateStateFromRSocket , in turn it sets the following:"
}
{
    "Origin": "Returns a string representation of this object; useful for testing and debugging.",
    "Reference": "Returns a string representation of this object.",
    "HebCup": "Returns a string representation of this object; useful for testing and debugging."
}
{
    "Origin": "Returns the partition storage level.",
    "Reference": "Returns the storage configuration.",
    "HebCup": "Returns the partition storage Config."
}
{
    "Origin": "Obtains an instance of {@code ZonedDateTime} from an {@code OffsetDateTime}.",
    "Reference": "Obtains an instance of {@code ZonedDateTime} from the instant formed by combining\nthe local date-time and offset.",
    "HebCup": "Obtains an instance of {@code ZonedDateTime} from an {@code LocalDateTime}."
}
{
    "Origin": "Decodes a byte array where each byte represents an ascii '0' or '1'.",
    "Reference": "Decodes a byte array where each byte represents an ASCII '0' or '1'.",
    "HebCup": "Decodes a byte array where each byte represents an ascii '0' or '1'."
}
{
    "Origin": "This is activated by setting an explicit value for {@link #INTERFACE} in\nthe Titan configuration.",
    "Reference": "This is activated by setting an explicit value for {@link #INTERFACE} in\nthe JanusGraph configuration.",
    "HebCup": "This is activated by setting an explicit value for {@link#INTERFACE} in the JanusGraph configuration."
}
{
    "Origin": "Queries the coordination service to collect the multi-user case node data\nstored in the case directory lock ZooKeeper nodes.",
    "Reference": "Collects the multi-user case node data stored in the case directory\ncoordination service nodes.",
    "HebCup": "Queries the Case Node Data to collect the multi-user case node data stored in the case directory lock ZooKeeper nodes."
}
{
    "Origin": "Creates a new instance of {@link InconsistentProperty} from thrift representation.",
    "Reference": "Creates a new instance of {@link InconsistentProperty} from proto representation.",
    "HebCup": "Creates a new instance of {@link InconsistentProperty} from Proto representation."
}
{
    "Origin": "removes null elements) the list and return it.",
    "Reference": "Removes all null elements from the list and returns it.",
    "HebCup": "removes null elements) the list and return it."
}
{
    "Origin": "Runs the {@link Runnable task} in the request scope initialized from the\n{@link RequestScope.Instance scope instance}.",
    "Reference": "Runs the {@link Runnable task} in the request scope initialized from the\n{@link RequestContext scope context}.",
    "HebCup": "Runs the {@link Runnable task} in the request scope initialized from the {@link RequestScope.Instance context}."
}
{
    "Origin": "Returns the feed with the primary key or throws a {@link com.liferay.twitter.NoSuchFeedException} if it could not be found.",
    "Reference": "Returns the feed with the primary key or throws a {@link NoSuchFeedException} if it could not be found.",
    "HebCup": "Returns the feed with the primary key or throws a {@link com.liferay.twitter.NoSuchFeedException} if it could not be found."
}
{
    "Origin": "It should be encoded in 7-bit\nASCII, but UTF-8 is supported too.",
    "Reference": "It should be encoded in 7-bit\nASCII, but UTF-8 and UTF-16 are supported too.",
    "HebCup": "It should be encoded in 7-bit\nASCII, but UTF-8 is supported too."
}
{
    "Origin": "Returns a progress notification for the given download states.",
    "Reference": "Returns a progress notification for the given downloads.",
    "HebCup": "Returns a progress notification for the given download states."
}
{
    "Origin": "The code of this method is a copy of {@link #handleAttributes(Element,",
    "Reference": "The code of this method is a copy of {@link #outputAttributes(Element,",
    "HebCup": "The code of this method is a copy of {@link#outputAttributes (Element ,"
}
{
    "Origin": "Returns all attributes of the specified session.",
    "Reference": "Returns all attributes of a session.",
    "HebCup": "Returns all attributes of the specified session."
}
{
    "Origin": "Returns the absolute uri of the Class-Path entry value as specified in \nJAR File Specification.",
    "Reference": "Returns the absolute uri of the Class-Path entry value as specified in JAR",
    "HebCup": "Returns the absolute Malformed of the Class-Path entry value as specified in JAR File Specification."
}
{
    "Origin": "Returns a stream of modules upon which the given module `requires public`",
    "Reference": "Returns a stream of modules upon which the given module `requires transitive`",
    "HebCup": "Returns a stream of modules upon which the given module `requires Transitive`"
}
{
    "Origin": "Starts the ___protobuf_metadata cache when needed.",
    "Reference": "Adds a stop dependency on ___protobuf_metadata cache.",
    "HebCup": "Starts the ___protobuf_metadata cache when needed."
}
{
    "Origin": "Examines the given verb pair and returns true if it is a\nvalid pairing of verb form and clitic pronoun(s).",
    "Reference": "Returns true if the given data is a valid pairing of verb form\nand clitic pronoun(s).",
    "HebCup": "Examines the given Stripped Verb and returns true if it is a valid pairing of verb form and clitic pronoun(s)."
}
{
    "Origin": "Gets the maximum number of deferred processed application data messages.",
    "Reference": "Gets the maximum number of deferred processed outgoing application data messages.",
    "HebCup": "Gets the maximum number of Deferred Processed Outgoing Application Data Messages."
}
{
    "Origin": "Set this matrix to be equivalent to the rotation specified by the given {@link Quaterniond}.",
    "Reference": "Set this matrix to be equivalent to the rotation specified by the given {@link Quaterniondc}.",
    "HebCup": "Set this matrix to be equivalent to the rotation specified by the given {@link Quaterniondc}."
}
{
    "Origin": "Create a {@link ServiceLocator}.",
    "Reference": "Create a {@link InstanceManager}.",
    "HebCup": "Create a {@link InstanceManager}."
}
{
    "Origin": "Encodes the document length in the same way as {@link TFIDFSimilarity}.",
    "Reference": "Encodes the document length in the same way as {@link BM25Similarity}.",
    "HebCup": "Encodes the document length in the same way as {@link TFIDFSimilarity}."
}
{
    "Origin": "Register {@link DubboLifecycleComponentApplicationListener} as a Spring Bean",
    "Reference": "Register {@link ApplicationListener ApplicationListeners} as a Spring Bean",
    "HebCup": "Register {@link ApplicationListeners} as a Spring Bean"
}
{
    "Origin": "Apply the rotation transformation of the given {@link Quaterniond} to this matrix, which is assumed to only contain a translation, and store\nthe result in .",
    "Reference": "Apply the rotation transformation of the given {@link Quaterniondc} to this matrix, which is assumed to only contain a translation, and store\nthe result in .",
    "HebCup": "Apply the rotation transformation of the given {@link Quaterniondc} to this matrix , which is assumed to only contain a translation , and store the result in ."
}
{
    "Origin": "Returns a string representation of this object; useful for testing and debugging.",
    "Reference": "Returns a string representation of this object.",
    "HebCup": "Returns a string representation of this object; useful for testing and debugging."
}
{
    "Origin": "Sets the {@link Service} and returns the {@link VirtualHostBuilder} that this\n{@link VirtualHostServiceBindingBuilder} was created from.",
    "Reference": "Sets the {@link HttpService} and returns the {@link VirtualHostBuilder} that this\n{@link VirtualHostServiceBindingBuilder} was created from.",
    "HebCup": "Sets the {@link HttpService} and returns the {@link VirtualHostBuilder} that this {@link VirtualHostServiceBindingBuilder} was created from."
}
{
    "Origin": "Computes the minimum for each pixel across all bands in the {@link Planar} image.",
    "Reference": "Computes the minimum for each pixel across selected bands in the {@link Planar} image.",
    "HebCup": "Computes the minimum for each pixel across all bands in the {@link Planar} image."
}
{
    "Origin": "Adds the specified object to the list of registered configuration listeners.",
    "Reference": "Adds the specified object to the list of registered configuration LISTENERS.",
    "HebCup": "Adds the specified object to the list of registered configuration LISTENERS."
}
{
    "Origin": "Note: Not used for the {@code update} variant with generated key handling.",
    "Reference": "Note: Directly called from all {@code query} variants.",
    "HebCup": "Note: Not used for the {@code update} variant with generated key handling."
}
{
    "Origin": "Adjust voice ID per staff, in line with their order.",
    "Reference": "Adjust voice ID per family, in line with their order.",
    "HebCup": "Adjust voice ID per family , in line with their order."
}
{
    "Origin": "Geodetic Distance Queries on R-Trees for Indexing Geographic Data",
    "Reference": "Geodetic Distance Queries on R-Trees for Indexing Geographic Data\n13th Int.",
    "HebCup": "Geodetic Distance Queries on R-Trees for Indexing Geographic Data"
}
{
    "Origin": "Test that {@link RawContactDelta#buildDiffWrapper(ArrayList)} is correctly built for\ninsert, update, and delete cases.",
    "Reference": "Test that {@link RawContactDelta#buildDiff(ArrayList)} is correctly built for\ninsert, update, and delete cases.",
    "HebCup": "Test that {@link RawContactDelta#buildDiff (ArrayList)} is correctly built for insert , update , and delete cases."
}
{
    "Origin": "Returns the sum of all operand stack sizes.",
    "Reference": "Computes the stack size of all supplied types.",
    "HebCup": "Returns the sum of all operand stack sizes."
}
{
    "Origin": "Sets the time.",
    "Reference": "Set the time.",
    "HebCup": "Sets the time."
}
{
    "Origin": "Sets the timeline on this fake player, which notifies listeners with the changed timeline.",
    "Reference": "Sets the timeline on this fake player, which notifies listeners with the changed timeline and\nthe given timeline change reason.",
    "HebCup": "Sets the timeline on this fake player, which notifies listeners with the changed timeline."
}
{
    "Origin": "Produces a Collapsed SemanticGraph with no extras.",
    "Reference": "Produces a Collapsed SemanticGraph.",
    "HebCup": "Produces a Collapsed SemanticGraph with no extras."
}
{
    "Origin": "Returns an immutable map containing six mappings.",
    "Reference": "Returns an unmodifiable map containing six mappings.",
    "HebCup": "Returns an Unmodifiable map containing six mappings."
}
{
    "Origin": "Places elements into order by increasing normalized {@link #getScore()}.",
    "Reference": "Places elements into order by decreasing {@link #getScore() normalized\nload}.",
    "HebCup": "Places elements into order by increasing normalized {@link #getScore()}."
}
{
    "Origin": "Runs the given {@code runnable} at most {@code retryCount} times until it passes,\nleaving {@code intervalMillis} milliseconds between the invocations.",
    "Reference": "Runs the given {@code runnable} at most {@code attemptsCount} times until it passes,\nleaving {@code intervalMillis} milliseconds between the invocations.",
    "HebCup": "Runs the given {@code runnable} at most {@code retryCount} times until it passes,\nleaving {@code intervalMillis} milliseconds between the invocations."
}
{
    "Origin": "Exchange Adapter on the 2nd cycle.",
    "Reference": "Exception from Exchange Adapter on the 2nd cycle.",
    "HebCup": "Exchange Adapter on the 2nd cycle."
}
{
    "Origin": "Test of var method, of class WeibullDistribution.",
    "Reference": "Test of variance method, of class WeibullDistribution.",
    "HebCup": "Test of Variance method , of class WeibullDistribution."
}
{
    "Origin": "Returns a map where keys are masked if they are considered a password.",
    "Reference": "Returns a map where values are masked if they are considered a password.",
    "HebCup": "Returns a map where keys are masked if they are considered a password."
}
{
    "Origin": "Get the {@link MongoDbFactory} that this instance manages transactions for.",
    "Reference": "Get the {@link MongoDatabaseFactory} that this instance manages transactions for.",
    "HebCup": "Get the {@link MongoDatabaseFactory} that this instance manages transactions for."
}
{
    "Origin": "Decodes a String where each char of the String represents an ascii '0' or '1'.",
    "Reference": "Decodes a String where each char of the String represents an ASCII '0' or '1'.",
    "HebCup": "Decodes a String where each char of the String represents an ascii '0' or '1'."
}
{
    "Origin": "returns the ID of a given object from the pool",
    "Reference": "Returns the ID of a given object from the pool.",
    "HebCup": "returns the ID of a given T from the pool"
}
{
    "Origin": "After that,  continues to wait for the\ninterrupted threads to finish, so if job do not obey\ninterruptions, they can continue indefinitely regardless of the\ntimeout.",
    "Reference": "After that, {@code join} continues to wait for the\ninterrupted threads to finish, so if job do not obey\ninterruptions, they can continue indefinitely regardless of the\ntimeout.",
    "HebCup": "After that,  continues to wait for the\ninterrupted threads to finish, so if job do not obey\ninterruptions, they can continue indefinitely regardless of the\ntimeout."
}
{
    "Origin": "Chosen bits are [10, 6, 5]",
    "Reference": "Chosen bits are [8, 7, 6]",
    "HebCup": "Chosen bits are [10, 6, 5]"
}
{
    "Origin": "Resolve the {@link Repo} referenced by the given intent",
    "Reference": "Resolve the {@link Repository} referenced by the given intent",
    "HebCup": "Resolve the {@link Repository} referenced by the given intent"
}
{
    "Origin": "The {@code onErrorResumeNext} method changes this\nbehavior.",
    "Reference": "The {@code onErrorResumeWith} method changes this\nbehavior.",
    "HebCup": "The {@code onErrorResumeWith} method changes this behavior."
}
{
    "Origin": "Deletes all documents from the Solr server.",
    "Reference": "Deletes all documents from the Solr client.",
    "HebCup": "Deletes all documents from the Solr Client."
}
{
    "Origin": "Gets the {@link PatternListValue} of all patterns for the\n{@link Banner}.",
    "Reference": "Gets the {@link ListValue.Mutable} of all patterns for the\n{@link Banner}.",
    "HebCup": "Gets the {@link ListValue.Mutable} of all patterns for the {@link Banner}."
}
{
    "Origin": "{@code requestType} and {@code options} defaults to {@code null}.",
    "Reference": "{@code options} defaults to {@code null}.",
    "HebCup": "{@code requestType} and {@code options} defaults to {@code null}."
}
{
    "Origin": "Undoes the previous command associated with the given object.",
    "Reference": "Undoes the previous command associated with the given display.",
    "HebCup": "Undoes the previous command associated with the given Display."
}
{
    "Origin": "Returns a string representation of this object; useful for testing and debugging.",
    "Reference": "Returns a string representation of this object.",
    "HebCup": "Returns a string representation of this object; useful for testing and debugging."
}
{
    "Origin": "This can be trained with\n{@link ClauseSplitter#train(Stream, Featurizer, TrainingOptions, Optional, Optional)}.",
    "Reference": "This can be trained with\n{@link ClauseSplitter#train(Stream, Optional, Optional, Featurizer)}.",
    "HebCup": "This can be trained with\n{@link ClauseSplitter#train(Stream, Featurizer, TrainingOptions, Optional, Optional)}."
}
{
    "Origin": "Get the {@link DiscordClient} that emitted this {@link Event}.",
    "Reference": "Get the {@link GatewayDiscordClient} that emitted this {@link Event}.",
    "HebCup": "Get the {@link GatewayDiscordClient} that emitted this {@link Event}."
}
{
    "Origin": "Default {@link ValidationStatusHandler} functional method implementation.",
    "Reference": "Default {@link BindingValidationStatusHandler} functional method implementation.",
    "HebCup": "Default {@link BindingValidationStatusHandler} functional method implementation."
}
{
    "Origin": "Return the attributes map",
    "Reference": "Return the properties map",
    "HebCup": "Return the Properties map"
}
{
    "Origin": "Scenario successful connection to the back end service via basic auth.",
    "Reference": "Scenario successful connection to the back end API via basic auth.",
    "HebCup": "Scenario successful connection to the back end api via basic auth."
}
{
    "Origin": "LabelNode if necessary.",
    "Reference": "Creates a new LabelNode if necessary.",
    "HebCup": "LabelNode if necessary."
}
{
    "Origin": "Returns  if the configuration need has specified an external network to use.",
    "Reference": "Returns  if the configuration specifies an external network to use.",
    "HebCup": "Returns if the configuration need has specified an Create External Network to use."
}
{
    "Origin": "Returns the first asset entry set in the ordered set where createTime = ?",
    "Reference": "Returns the last asset entry set in the ordered set where createTime > ?",
    "HebCup": "Returns the Last asset entry set in the ordered set where createTime = ?"
}
{
    "Origin": "Assembles all the fragments into one buffer.",
    "Reference": "Assembles all the fragments into one payload.",
    "HebCup": "Assembles all the fragments into one Buf."
}
{
    "Origin": "Returns whether PUT is supported for the given {@link ResourceMetadata}.",
    "Reference": "Returns whether PUT requests can be used to create new instances for the type backing the given\n{@link ResourceMetadata}.",
    "HebCup": "Returns whether For is supported for the given {@link ResourceMetadata}."
}
{
    "Origin": "Set the number of digits in the fractional part of a price.",
    "Reference": "Set the default number of digits in the fractional part of a price.",
    "HebCup": "Set the number of digits in the fractional part of a defaultPrice."
}
{
    "Origin": "Multi-AZ option expands an Amazon CloudSearch domain to an additional",
    "Reference": "Enabling the Multi-AZ\noption expands an Amazon CloudSearch domain to an additional Availability",
    "HebCup": "Multi-AZ option expands an Amazon CloudSearch domain to an additional"
}
{
    "Origin": "By default, 10 seconds.",
    "Reference": "By default, both are set to\n10 seconds.",
    "HebCup": "By default, 10 seconds."
}
{
    "Origin": "Wait for this task to meet the expected number of records as defined by {@code\nexpectedRecords}.",
    "Reference": "Wait up to the specified timeout for this task to meet the expected number of records as\ndefined by {@code expectedRecords}.",
    "HebCup": "Wait for this task to meet the expected number of records as defined by {@code\nexpectedRecords}."
}
{
    "Origin": "Getter for beta",
    "Reference": "Getter for betaMarker",
    "HebCup": "Getter for BetaMarker"
}
{
    "Origin": "Provided key is a single private key needed\nto spend such inputs and provided program should be a proper CHECKSIG program.",
    "Reference": "Provided key is a single private key needed\nto spend such inputs.",
    "HebCup": "Provided key is a single private key needed to spend such inputs and provided redeemScript should be a proper CHECKSIG program."
}
{
    "Origin": "Returns the last saved gallery for the given gallery type id.",
    "Reference": "Returns the last saved gallery for the given gallery key.",
    "HebCup": "Returns the last saved gallery for the given gallery Key."
}
{
    "Origin": "Returns an immutable set containing five elements.",
    "Reference": "Returns an unmodifiable set containing five elements.",
    "HebCup": "Returns an Unmodifiable set containing five elements."
}
{
    "Origin": "If possible the supplier should be cached in the AST in order to\navoid the repeated lookup of the parent executable or root node.",
    "Reference": "If possible the reference should be cached in the AST in order to\navoid the repeated lookup of the parent executable or root node.",
    "HebCup": "If possible the ContextReference should be cached in the AST in order to avoid the repeated lookup of the parent executable or root node."
}
{
    "Origin": "Both filenames are first passed to {@link #normalize(String)}.",
    "Reference": "Both fileNames are first passed to {@link #normalize(String)}.",
    "HebCup": "Both filenames are first passed to {@link #normalize(String)}."
}
{
    "Origin": "Has the replay merge failed and entered into an errored state?",
    "Reference": "Has the replay merge failed and entered into an error state?",
    "HebCup": "Has the replay merge failed and entered into an Error state?"
}
{
    "Origin": "Otherwise if the object is from a {@code java} package, returns the result of {@code toString}.",
    "Reference": "If the object is from a {@code java} package, returns the result of {@code toString}.",
    "HebCup": "Otherwise if the object is from a {@code java} package, returns the result of {@code toString}."
}
{
    "Origin": "Setter for leaf.",
    "Reference": "Setter for leaf flag.",
    "HebCup": "Setter for leaf."
}
{
    "Origin": "Return a SimScorer for this context",
    "Reference": "Return a LeafSimScorer for this context",
    "HebCup": "Return a SimScorer for this context.reader"
}
{
    "Origin": "Register a record reader.",
    "Reference": "Register a batch listener.",
    "HebCup": "Register a batch Listener."
}
{
    "Origin": "Returns a string representation of this object; useful for testing and debugging.",
    "Reference": "Returns a string representation of this object.",
    "HebCup": "Returns a string representation of this object; useful for testing and debugging."
}
{
    "Origin": "Retrieves a basic template given the template name.",
    "Reference": "Retrieves a template or element given the template name.",
    "HebCup": "Retrieves a Template Or Element given the template name."
}
{
    "Origin": "checks that no scores or freqs are infinite",
    "Reference": "checks that no scores are infinite",
    "HebCup": "checks that no scores or freqs are infinite"
}
{
    "Origin": "get the preference key which stores the number of times the toast associated with the smart toast type has\nbeen shown",
    "Reference": "returns the preference key which stores the number of times the toast associated with the smart toast type\nhas been shown",
    "HebCup": "get the preference key which stores the number of times the toast associated with the smart toast this has been shown"
}
{
    "Origin": "Does a few instances of short work with {@code policy = ALWAYS} and expects that they will be executed on a\nremote node.",
    "Reference": "Schedules a single instance of short work with {@code policy = ALWAYS} and expects that it will be executed on a\nremote node.",
    "HebCup": "Does a few instances of short work with {@code policy = ALWAYS} and expects that they will be executed on a\nremote node."
}
{
    "Origin": "Submit a task for execution.",
    "Reference": "Submit a set of works for execution.",
    "HebCup": "Submit a workset for execution."
}
{
    "Origin": "System will constantly measure actual average latency and compare it with \"desirableOperationLatency\".",
    "Reference": "System will constantly measure actual average latency and compare it with \"slowCallDurationThreshold\".",
    "HebCup": "System will constantly measure actual average latency and compare it with ``slowCallDurationThreshold``."
}
{
    "Origin": "Returns a string representation of this object; useful for testing and debugging.",
    "Reference": "Returns a string representation of this object.",
    "HebCup": "Returns a string representation of this object; useful for testing and debugging."
}
{
    "Origin": "Sets the ratings stats total score of this asset entry set.",
    "Reference": "Sets the asset entry set likes count of this asset entry set.",
    "HebCup": "Sets the asset Entry Set Likes Count of this asset entry set."
}
{
    "Origin": "This date-time will be passed to the formatter\n{@link DateTimeFormatter#print(TemporalAccessor) print method}.",
    "Reference": "This date-time will be passed to the formatter\n{@link DateTimeFormatter#format(TemporalAccessor) print method}.",
    "HebCup": "This date-time will be passed to the formatter {@link DateTimeFormatter#format (TemporalAccessor) format method}."
}
{
    "Origin": "Currently, SONA supports Flat, VXLAN, GRE and VLAN modes.",
    "Reference": "Currently, SONA supports Flat, VXLAN, GRE, GENEVE and VLAN modes.",
    "HebCup": "Currently, SONA supports Flat, VXLAN, GRE and VLAN modes."
}
{
    "Origin": "Specifies the path of the button's image.",
    "Reference": "Specifies the path of the background image of the %type%.",
    "HebCup": "Specifies the path of the button %type% image."
}
{
    "Origin": "Appends a declaration of the given label to {@link #buf buf}.",
    "Reference": "Appends a declaration of the given label to {@link #stringBuilder}.",
    "HebCup": "Appends a declaration of the given label to {@link#stringBuilder stringBuilder}."
}
{
    "Origin": "Is has sharding query assisted encryptor or not.",
    "Reference": "Is has query assisted column or not.",
    "HebCup": "is Has Query Assisted Column or not."
}
{
    "Origin": "Converts the Swagger paths into a list PathOperations.",
    "Reference": "Converts the Swagger paths into a list of PathOperations.",
    "HebCup": "Converts the Swagger paths into a list Pathoperation."
}
{
    "Origin": "Runs the command with the given args.",
    "Reference": "Runs a command with the given args.",
    "HebCup": "Runs the return with the given args."
}
{
    "Origin": "Default implementation returns {@link ControllerResult#RESULT_CODE_NOT_SUPPORTED}.",
    "Reference": "Default implementation returns {@link SessionResult#RESULT_CODE_NOT_SUPPORTED}.",
    "HebCup": "Default implementation returns {@link SessionResult#RESULT_CODE_NOT_SUPPORTED}."
}
{
    "Origin": "Returns true if there is a joined instructor (other than the instructor to delete)\nwith the privilege of modifying instructors.",
    "Reference": "Returns true if there is at least one joined instructor (other than the instructor to delete)\nwith the privilege of modifying instructors and at least one instructor visible to the students.",
    "HebCup": "Returns break if there is a joined instructor (other than the instructor to delete) with the privilege of modifying instructors."
}
{
    "Origin": "Checks if the path can be rewritten for iterative evaluation.",
    "Reference": "Checks if the specified axis steps can be evaluated iteratively.",
    "HebCup": "Checks if the path can be rewritten for iterative evaluation."
}
{
    "Origin": "Create a GeoCircle of the right kind given the specified bounds.",
    "Reference": "Create a GeoCircle from a center and a cutoff angle.",
    "HebCup": "Create a GeoCircle of the right kind given the specified bounds."
}
{
    "Origin": "Returns an {@link Operator} to allow the query to be pushed\nparameters via the {@link Observable#lift(Operator)} method.",
    "Reference": "Returns an {@link Transformer} to allow the query to be pushed\nparameters via the {@link Observable#compose(Transformer)} method.",
    "HebCup": "Returns an {@link Transformer} to allow the query to be pushed parameters via the {@link Observable#lift (Operator)} method."
}
{
    "Origin": "Set a limit of the number of outstanding or to-be acknowledged messages.",
    "Reference": "Set a limit on the rate of messages per second received.",
    "HebCup": "Set a limit of the number of outstanding or Rate-be acknowledged messages."
}
{
    "Origin": "Returns a string representation of this object; useful for testing and debugging.",
    "Reference": "Returns a string representation of this object.",
    "HebCup": "Returns a string representation of this object; useful for testing and debugging."
}
{
    "Origin": "Returns the fully qualified domain name (FQDN) of this Event Hub.",
    "Reference": "Gets the fully qualified namespace of this Event Hub.",
    "HebCup": "Returns the Fully Qualified Namespace (FQDN) of this Event Hub."
}
{
    "Origin": "Tests for the {@link BaseFileSystem#listStatus(AlluxioURI, ListStatusOptions)} method.",
    "Reference": "Tests for the {@link BaseFileSystem#listStatus(AlluxioURI, ListStatusPOptions)} method.",
    "HebCup": "Tests for the {@link BaseFileSystem#listStatus (AlluxioURI , ListStatusPOptions.getDefault)} method."
}
{
    "Origin": "timedSleep throws InterruptedException when interrupted",
    "Reference": "timeUnit.sleep throws InterruptedException when interrupted",
    "HebCup": "timedSleep throws InterruptedException when interrupted"
}
{
    "Origin": "The {@link Secret} is required.",
    "Reference": "The {@link KeyVaultSecret} is required.",
    "HebCup": "The {@link KeyVaultSecret} is required."
}
{
    "Origin": "Make a new label with this  as the value (word).",
    "Reference": "Make a new label with this {@code String} as the value (word).",
    "HebCup": "Make a new label with this  as the value (word)."
}
{
    "Origin": "Get the content of this element.",
    "Reference": "Gets the value of the content property.",
    "HebCup": "(the content of this element."
}
{
    "Origin": "Sets the max age of the cookie in seconds.",
    "Reference": "Sets the max age of the cookie.",
    "HebCup": "Sets the max age of the cookie in seconds."
}
{
    "Origin": "Returns the s v n revision with the primary key or throws a {@link com.liferay.socialcoding.NoSuchSVNRevisionException} if it could not be found.",
    "Reference": "Returns the s v n revision with the primary key or throws a {@link NoSuchSVNRevisionException} if it could not be found.",
    "HebCup": "Returns the s v n revision with the primary key or throws a {@link com.liferay.socialcoding.NoSuchSVNRevisionException} if it could not be found."
}
{
    "Origin": "Intervals are inclusive of the start instant and exclusive of the end.",
    "Reference": "Non-zero duration intervals are inclusive of the start instant and exclusive of the end.",
    "HebCup": "Intervals are inclusive of the start instant and exclusive of the end."
}
{
    "Origin": "Makes sure, that for each language a \"rulesets.properties\" file exists.",
    "Reference": "Makes sure, that for each language a \"categories.properties\" file exists.",
    "HebCup": "Makes sure, that for each language a ``categories.properties`` file exists."
}
{
    "Origin": "Get the names of any classes referenced in the methods in this list.",
    "Reference": "Find the names of any classes referenced in the methods in this list.",
    "HebCup": "find the names of any classes referenced in the methods in this list."
}
{
    "Origin": "Sets the recreateMountedPagesAfterExpiry setting",
    "Reference": "Sets the recreateBookmarkablePagesAfterExpiry setting",
    "HebCup": "Sets the recreateBookmarkablePagesAfterExpiry setting"
}
{
    "Origin": "Returns a {@link ChannelOption} for the given {@link SocketOption}.",
    "Reference": "Returns a {@link ChannelOption} for the given {@link java.net.SocketOption}.",
    "HebCup": "Returns a {@link ChannelOption} for the given {@link java.net.SocketOption}."
}
{
    "Origin": "Sets the habitat for use in creating DeployCommand and UndeployCommand\ninstances.",
    "Reference": "Sets the serviceLocator for use in creating DeployCommand and UndeployCommand instances.",
    "HebCup": "Sets the ServiceLocator for use in creating DeployCommand and UndeployCommand instances."
}
{
    "Origin": "This could be used for\nload balancing of plugins across multiple machines, CPU usage monitoring and other nice\nstuff.",
    "Reference": "This could be\nused for load balancing of plugins across multiple machines, CPU usage monitoring, sandboxing\nand other nice stuff.",
    "HebCup": "This could be used for\nload balancing of plugins across multiple machines, CPU usage monitoring and other nice\nstuff."
}
{
    "Origin": "Generates an object representing the Schema.org BreadcrumbList\nTODO: implement",
    "Reference": "Generates an object representing the Schema.org BreadcrumbList",
    "HebCup": "Generates an object representing the Schema.org breadcrumbObjectsList TODO: implement"
}
{
    "Origin": "Return a new {@code DataBuffer} composed of the {@code dataBuffers} elements joined together.",
    "Reference": "Return a new {@code DataBuffer} composed from joining together the given\n{@code dataBuffers} elements.",
    "HebCup": "Return a new {@code DataBuffer} composed of the {@code dataBuffers} elements joined together."
}
{
    "Origin": "The migration can be finalized and the new features enabled only after all\nadministrators approve the switch by accepting the handshake.",
    "Reference": "The feature set change can be finalized\nand the additional features enabled only after all administrators in the invited accounts approve the change by\naccepting the handshake.",
    "HebCup": "The migration can be finalized and the new features enabled only after all\nadministrators approve the switch by accepting the handshake."
}
{
    "Origin": "Deletes the specified variable from the configuration.",
    "Reference": "Deletes the specified variable from the CONFIGURATION.",
    "HebCup": "Deletes the specified variable from the CONFIGURATION."
}
{
    "Origin": "Obtain the default {@link MongoDatabase database} form the given {@link MongoDbFactory factory}.",
    "Reference": "Obtain the default {@link MongoDatabase database} form the given {@link MongoDatabaseFactory factory}.",
    "HebCup": "Obtain the default {@link MongoDatabase database} form the given {@link MongoDatabaseFactory factory}."
}
{
    "Origin": "Runs the logic to read from the socket until {@link #_isRunning} is false.",
    "Reference": "Runs the logic to read from the socket until {@link #isRunning} is false.",
    "HebCup": "Runs the logic to read from the socket until {@link#isRunning} is false."
}
{
    "Origin": "Transitive reduction of requires public edge and requires edge have\nto be applied separately to prevent the requires public edges\n(e.g.",
    "Reference": "Transitive reduction of requires transitive edge and requires edge have\nto be applied separately to prevent the requires transitive edges\n(e.g.",
    "HebCup": "Transitive reduction of requires TRANSITIVE edge and requires edge have to be applied separately to prevent the requires TRANSITIVE edges (e.g."
}
{
    "Origin": "Change the status of the pageCommentCheckbox.",
    "Reference": "Set the state of the given application for the given format.",
    "HebCup": "Change the status of the ApplicationCommentCheckbox."
}
{
    "Origin": "Creates a {@link Behavior} that uses the given {@link WicketConsumer consumer}\nto do something with the component's tag.",
    "Reference": "Creates a {@link Behavior} that uses the given {@code SerializableConsumer consumer} to do\nsomething with the component's tag.",
    "HebCup": "Creates a {@link Behavior} that uses the given {@link SerializableConsumer consumer} to do something with the component's tag."
}
{
    "Origin": "The shortfall level is in decimal, i.e.",
    "Reference": "The quantile level is in decimal, i.e.",
    "HebCup": "The ShortfallResultFromUnsorted level is in decimal , i.e."
}
{
    "Origin": "Gets the servers resolved by name resolution.",
    "Reference": "Gets the addresses resolved by name resolution.",
    "HebCup": "Gets the Addresses resolved by name resolution."
}
{
    "Origin": "Returns a string representation of this object; useful for testing and debugging.",
    "Reference": "Returns a string representation of this object.",
    "HebCup": "Returns a string representation of this object; useful for testing and debugging."
}
{
    "Origin": "See {@link MethodVisitor#visitTryCatchAnnotation}.",
    "Reference": "MethodVisitor#visitTryCatchAnnotation}.",
    "HebCup": "See {@link MethodVisitor#visitTryCatchAnnotation}."
}
{
    "Origin": "Test of var method, of class LogNormalDistribution.",
    "Reference": "Test of variance method, of class LogNormalDistribution.",
    "HebCup": "Test of Variance method , of class LogNormalDistribution."
}
{
    "Origin": "Generates a code sample for using {@link FileClient#setPropertiesWithResponse(long, FileHTTPHeaders,",
    "Reference": "Generates a code sample for using {@link FileClient#setPropertiesWithResponse(long, FileHttpHeaders,",
    "HebCup": "Generates a code sample for using {@link FileClient#setPropertiesWithResponse (long , FileHttpHeaders ,"
}
{
    "Origin": "Checks if either one of the main or temporary files currently exists.",
    "Reference": "Checks if the properties file exists.",
    "HebCup": "Checks if either one of the main or temporary Creator currently exists."
}
{
    "Origin": "This new\ntransition is created using\n{@link TransitionBuilder#createMerged(TransitionBuilder, MatcherBuilder)}.",
    "Reference": "This new\ntransition is created using\n{@link TransitionBuilder#createMerged(TransitionBuilder, CharSet)}.",
    "HebCup": "This new transition is created using {@link TransitionBuilder#createMerged (TransitionBuilder , CharSet)}."
}
{
    "Origin": "Structural Specification for more details.",
    "Reference": "The\nOWL 2 Structural Specification for more details.",
    "HebCup": "Structural Specification for more details."
}
{
    "Origin": "Whether or not {@code lhs} is mutated depends on its type.",
    "Reference": "Whether or not {@code x} is mutated depends on its type.",
    "HebCup": "Whether or not {@code x} is mutated depends on its type."
}
{
    "Origin": "Scan a term buffer for a block of message fragments from an offset up to a limit.",
    "Reference": "Scan a term buffer for a block of message fragments from an offset up to a limitOffset.",
    "HebCup": "Scan a term buffer for a block of message fragments from an offset up to a limitOffset."
}
{
    "Origin": "Generates a code sample for using {@link FileClient#startCopyWithResponse(String, Map, Duration, Context)}",
    "Reference": "Generates a code sample for using {@link FileClient#beginCopy(String, Map, Duration)}",
    "HebCup": "Generates a code sample for using {@link FileClient#beginCopy (String , Map , Duration , Context)}"
}
{
    "Origin": "If this happens, a configuration {@link ConfigurationEvent event} will\nbe sent to all registered listeners.",
    "Reference": "If this happens, a CONFIGURATION {@link ConfigurationEvent event} will\nbe sent to all registered listeners.",
    "HebCup": "If this happens , a CONFIGURATION {@link ConfigurationEvent event} will be sent to all registered listeners."
}
{
    "Origin": "|   Update previous height to current height.",
    "Reference": "|   Add the height to heap.",
    "HebCup": "| Update previous height to current height."
}
{
    "Origin": "Use system emergency password for files in this room",
    "Reference": "Use system emergency password (rescue key) for files in this room",
    "HebCup": "Use system emergency password for files in this room"
}
{
    "Origin": "Instructor View pages, so put here in super class.",
    "Reference": "Used by both Assignmenet Details and Instructor View pages, so put here in super class.",
    "HebCup": "Instructor View pages, so put here in super class."
}
{
    "Origin": "Returns the last sync d l object in the ordered set where companyId = ?",
    "Reference": "Returns the last sync d l object in the ordered set where repositoryId = ?",
    "HebCup": "Returns the last sync d l object in the ordered set where companyId = ?"
}
{
    "Origin": "Given that the caption column value is a number.",
    "Reference": "Given rolap member with caption value specified.",
    "HebCup": "Given that the Should Return Caption Value value is a number."
}
{
    "Origin": "Scheduler:\n {@code combineLatest} does not operate by default on a particular {@link Scheduler}.",
    "Reference": "Scheduler:\n {@code combineLatestArray} does not operate by default on a particular {@link Scheduler}.",
    "HebCup": "Scheduler: {@code combineLatestArray} does not operate by default on a particular {@link Scheduler}."
}
{
    "Origin": "or throws a {@link com.liferay.samplelar.NoSuchBookingException} if it could not be found.",
    "Reference": "or throws a {@link NoSuchBookingException} if it could not be found.",
    "HebCup": "or throws a {@link com.liferay.samplelar.NoSuchBookingException} if it could not be found."
}
{
    "Origin": "Removes all the sync d l objects where parentFolderId = ?",
    "Reference": "Removes all the sync d l objects where modifiedTime > ?",
    "HebCup": "Removes all the sync d l objects where repositoryId = ?"
}
{
    "Origin": "The\ncurrent thread might be already in any request scope and in that case the scope\nwill be changed to the scope defined by the {@link RequestScope.Instance scope\ninstance}.",
    "Reference": "The\ncurrent thread might be already in any request scope and in that case the scope\nwill be changed to the scope defined by the {@link RequestContext scope\ninstance}.",
    "HebCup": "The current thread might be already in any request scope and in that case the scope will be changed to the scope defined by the {@link RequestScope.Instance context}."
}
{
    "Origin": "Replace actual names found in a string with meaningless randomized names.",
    "Reference": "Replace actual names found in a string with redacted names.",
    "HebCup": "Replace actual sorted found in a string with meaningless randomized names."
}
{
    "Origin": "Returns a configuration object containing the names of all the modules.",
    "Reference": "Returns a configuration object containing the names of all the modules\nand warnings to display to the user.",
    "HebCup": "Returns a configuration object containing the names of all the modules."
}
{
    "Origin": "Sets the request query.",
    "Reference": "Sets the query consistency level.",
    "HebCup": "Sets the request Query.ConsistencyLevel."
}
{
    "Origin": "Returns the partition ID.",
    "Reference": "Returns the partition.",
    "HebCup": "Returns the Partition."
}
{
    "Origin": "If the Multi-AZ option is\nenabled, these values control the resources used per Availability",
    "Reference": "If the Multi-AZ option is enabled, these values\ncontrol the resources used per Availability Zone.",
    "HebCup": "If the Multi-AZ option is\nenabled, these values control the resources used per Availability"
}
{
    "Origin": "Returns The The subscriber_sid.",
    "Reference": "Returns The The absolute URL for this resource..",
    "HebCup": "Returns The The Url_sid."
}
{
    "Origin": "Item level validators are ignored if there is no bound item or if any\nfield level validator fails.",
    "Reference": "Bean\nlevel validators are ignored if there is no bound bean or if any field\nlevel validator fails.",
    "HebCup": "Bean level validators are ignored if there is no bound Bean or if any field level validator fails."
}
{
    "Origin": "Core mcMMO skills will pull the name from Locale with this method",
    "Reference": "Core mcMMO skills will pull the name from LocaleManager with this method",
    "HebCup": "Core mcMMO skills will pull the name from plugin with this method"
}
{
    "Origin": "or throws a {@link com.liferay.twitter.NoSuchFeedException} if it could not be found.",
    "Reference": "or throws a {@link NoSuchFeedException} if it could not be found.",
    "HebCup": "or throws a {@link com.liferay.twitter.NoSuchFeedException} if it could not be found."
}
{
    "Origin": "Returns the string up to but not including any delimiter characters.",
    "Reference": "Reads the value up to but not including any delimiter characters.",
    "HebCup": "Returns the) up to but not including any delimiter characters."
}
{
    "Origin": "Sets the response session ID.",
    "Reference": "Sets the response client ID.",
    "HebCup": "Sets the response ClientId ID."
}
{
    "Origin": "Log rule execution statistics.",
    "Reference": "Log rule execution statistics @ INFO.",
    "HebCup": "Log rule execution statistics."
}
{
    "Origin": "Computes the minimum for each pixel across all bands in the {@link Planar} image.",
    "Reference": "Computes the minimum for each pixel across selected bands in the {@link Planar} image.",
    "HebCup": "Computes the minimum for each pixel across all bands in the {@link Planar} image."
}
{
    "Origin": "Get the SQL snippet for this index column.",
    "Reference": "Appends the SQL snippet for this index column to the specified string builder.",
    "HebCup": "Get the SQL snippet for this index column."
}
{
    "Origin": "Amazon Glacier Data Retrieval Policies.",
    "Reference": "Amazon Glacier sends both notifications.",
    "HebCup": "Amazon Glacier Data Retrieval Policies."
}
{
    "Origin": "Uses the\n{@link HandlerMapping#BEST_MATCHING_PATTERN_ATTRIBUTE} best matching pattern.",
    "Reference": "Uses the\n{@link HandlerMapping#BEST_MATCHING_PATTERN_ATTRIBUTE} best matching pattern from",
    "HebCup": "Uses the\n{@link HandlerMapping#BEST_MATCHING_PATTERN_ATTRIBUTE} best matching pattern."
}
{
    "Origin": "Waits until the System.currentTimeMillis() results has changed.",
    "Reference": "Waits until System.currentTimeMillis() has flipped to the next second.",
    "HebCup": "Waits until the System.currentTimeMillis() results has changed."
}
{
    "Origin": "Return a read-only {@link DatasetGraphFilteredView} that fulfils the {@link SecurityPolicy}.",
    "Reference": "Return a read-only {@link DatasetGraphFilteredView} that fulfils the {@link SecurityContext}.",
    "HebCup": "Return a read-only {@link DatasetGraphFilteredView} that fulfils the {@link SecurityContext}."
}
{
    "Origin": "Returns The The Type of this Challenge.",
    "Reference": "Returns The The Factor Type of this Challenge.",
    "HebCup": "Returns The The factorType of this Challenge."
}
{
    "Origin": "Returns true if the pressed key is a modifier key\n(including 'escape' and 'alt'-'tab').",
    "Reference": "Returns true if the pressed key is a modifier key (including 'escape' and 'tab' + control key).",
    "HebCup": "Returns true if the pressed key is a modifier key\n(including 'escape' and 'alt'-'tab')."
}
{
    "Origin": "Waits during {@code timeout} until specified {@code element} contains the defined {@code\nexpectedText}.",
    "Reference": "Waits during {@code timeout} until specified {@code element} contains the defined {@code\nexpected} value.",
    "HebCup": "Waits during {@code timeout} until specified {@code element} contains the defined {@code expected}."
}
{
    "Origin": "Test of npara method, of class Poisson.",
    "Reference": "Test of length method, of class Poisson.",
    "HebCup": "Test of Length method , of class Poisson."
}
{
    "Origin": "Gets the next available port starting at the lowest port number.",
    "Reference": "Gets an available port, selected by the system.",
    "HebCup": "Gets the next available port starting at the lowest port number."
}
{
    "Origin": "Makes the format for the level-1 data.",
    "Reference": "Determines the format of the level-1 data.",
    "HebCup": "Makes the format for the level-1 data."
}
{
    "Origin": "Invalidate authentication token\n### Functional Description:   Logout a user.",
    "Reference": "Invalidate authentication token\n### Functional Description:   Log out a user.",
    "HebCup": "Invalidate authentication token\n### Functional Description:   Logout a user."
}
{
    "Origin": "Create a custom Layer by resolving the given module names.",
    "Reference": "Create a custom layer by resolving the given module names.",
    "HebCup": "Create a custom ModuleLayer by resolving the given module names."
}
{
    "Origin": "Return  if the servlet class represented by this\ncomponent implements the  interface.",
    "Reference": "Does the servlet class represented by this component implement the\n interface?",
    "HebCup": "Return  if the servlet class represented by this\ncomponent implements the  interface."
}
{
    "Origin": "Returns null.",
    "Reference": "Returns empty string.",
    "HebCup": "Returns \"."
}
{
    "Origin": "Returns an immutable set containing eight elements.",
    "Reference": "Returns an unmodifiable set containing eight elements.",
    "HebCup": "Returns an Unmodifiable set containing eight elements."
}
{
    "Origin": "used by TestJob and directly above\n and for encrypting DatabaseLookupMessages",
    "Reference": "Used by TestJob, and directly above,\n and by MessageWrapper for encrypting DatabaseLookupMessages",
    "HebCup": "used by TestJob and directly above\n and for encrypting DatabaseLookupMessages"
}
{
    "Origin": "Is grand type supported.",
    "Reference": "Is grant type supported.",
    "HebCup": "O Auth20 Utils.is Authorized Grant Type For."
}
{
    "Origin": "Tests the {@link BlockWorker#createBlockRemote(long, long, String, long)} method.",
    "Reference": "Tests the {@link BlockWorker#createBlockRemote(long, long, String, String, long)} method.",
    "HebCup": "Tests the {@link BlockWorker#createBlockRemote(long, long, String, long)} method."
}
{
    "Origin": "Modified enum is hiding in the 2 and 3 bits of the flags.",
    "Reference": "Modified enum is hiding in the 3 and 4 bits of the flags.",
    "HebCup": "Modified enum is hiding in the 2 and 3 bits of the flags."
}
{
    "Origin": "Returns the (unbiased) kurtosis excess of all the values within a\n{@link PointSet} region of a {@link Dataset}",
    "Reference": "Returns the (biased) kurtosis of all the values within a {@link PointSet}\nregion of a {@link Dataset}",
    "HebCup": "Returns the (unbiased) population Kurtosis of all the values within a {@link PointSet} region of a {@link Dataset}"
}
{
    "Origin": "Returns the Java type corresponding to the return type of the given\nmethod descriptor.",
    "Reference": "Returns the {@link Type} corresponding to the return type of the given method descriptor.",
    "HebCup": "Returns the Java type corresponding to the while type of the given method descriptor."
}
{
    "Origin": "qualifier from the passed attribute, if any.",
    "Reference": "qualifier from the passed attribute.",
    "HebCup": "qualifier from the passed attribute.startsWith , if any."
}
{
    "Origin": "Created by user info",
    "Reference": "Created by user",
    "HebCup": "Created by user info"
}
{
    "Origin": "Test that {@link AMQPMessageIdHelper#toBaseMessageIdString(Object)} returns null if given\nnull",
    "Reference": "Test that {@link AMQPMessageIdHelper#hasMessageIdPrefix(String)} returns\nfalse for null",
    "HebCup": "Test that {@link AMQPMessageIdHelper#HasIdPrefix (Object)} returns null if given null"
}
{
    "Origin": "Ensures that the service referenced by the Contract at the head of\nthe iterator actually exists (is published).",
    "Reference": "Ensures that the api referenced by the Contract at the head of\nthe iterator actually exists (is published).",
    "HebCup": "Ensures that the Api referenced by the Contract at the head of the iterator actually exists (is published)."
}
{
    "Origin": "Exits the current lazy scope.",
    "Reference": "Exits the current scope.",
    "HebCup": "Exits the current lazy scope."
}
{
    "Origin": "Generic getter for the virtualMetadataPopularConfiguration property of this class",
    "Reference": "Generic getter for the virtualMetadataConfiguration property of this class",
    "HebCup": "Generic getter for the VirtualMetadataConfiguration property of this class"
}
{
    "Origin": "Returns cached transparent {@link Color}.",
    "Reference": "Returns fully transparent white {@link Color}.",
    "HebCup": "Returns cached transparent {@link TRANSPARENT_COLOR}."
}
{
    "Origin": "This method is\na no-op when invoked on an unnamed module.",
    "Reference": "This method is\na no-op when invoked on an unnamed module or an automatic module.",
    "HebCup": "This method is\na no-op when invoked on an unnamed module."
}
{
    "Origin": "Parse service endpoint properties to retrieve enum value (if any)",
    "Reference": "Parse API endpoint properties to retrieve enum value (if any)",
    "HebCup": "Parse Api endpoint properties to retrieve enum value (if any)"
}
{
    "Origin": "Loads a new module from the class path and may or may not immediately scan associated\ndirectories for resources, depending on parameters.",
    "Reference": "Loads a new module from the class path and may or may not immediately scan associated\ndirectories for resources or consider it monolithic, depending on parameters.",
    "HebCup": "Loads a new module from the class path and may or may not immediately scan associated\ndirectories for resources, depending on parameters."
}
{
    "Origin": "AssertionResult will reflect the success of the Sample.",
    "Reference": "Otherwise the returned AssertionResult will reflect the success of the Sample.",
    "HebCup": "Assertionresult.setFailure will reflect the success of the Sample."
}
{
    "Origin": "Backs up all buckets for the device to the given node.",
    "Reference": "Backs up the given flow bucket.",
    "HebCup": "Backs up all buckets for the device to the given >."
}
{
    "Origin": "Group: common",
    "Reference": "Group: security",
    "HebCup": "Group: common"
}
{
    "Origin": "Configure a SpEL expression to evaluate a {@link RSocketOutboundGateway.Command}\nfor RSocket request type at runtime against a request message.",
    "Reference": "Configure a SpEL expression to evaluate an {@link RSocketOutboundGateway.Command}\nfor the RSocket request type at runtime against a request message.",
    "HebCup": "Configure a SpEL Model to evaluate a {@link RSocketOutboundGateway.Command} for RSocket request type at runtime against a request message."
}
{
    "Origin": "Obtains an instance from the specified unique name.",
    "Reference": "Obtains an instance from the specified name.",
    "HebCup": "Obtains an instance from the specified name."
}
{
    "Origin": "Removes pending delete object.",
    "Reference": "Removes local continuous task object.",
    "HebCup": "removeLocal pending delete object."
}
{
    "Origin": "If you want to add or replace functionality, please use the {@link KarafDistributionConfigurationFilePutOption}\noption.",
    "Reference": "If you would like to have add or replace functionality please use the\n{@link KarafDistributionConfigurationFilePutOption} instead.",
    "HebCup": "If you want to add or replace functionality, please use the {@link KarafDistributionConfigurationFilePutOption}\noption."
}
{
    "Origin": "Replace the placeholder mapreduce tags with our MR jobid so that all child jobs\nget tagged with it.",
    "Reference": "Replace the placeholder tags with our MR jobid so that all child jobs or hive queries are\nget tagged with it.",
    "HebCup": "Replace the placeholder mapreduce tags with our MR jobid so that all child jobs\nget tagged with it."
}
{
    "Origin": "Registers an event handler towards the {@link EventBus} and\nregisters it to be only active when the presenter is visible\nis called.",
    "Reference": "Registers an event handler towards the {@link EventBus} and registers it to be only active when the presenter is\nvisible.",
    "HebCup": "Registers an event handler towards the {@link EventBus} and\nregisters it to be only active when the presenter is visible\nis called."
}
{
    "Origin": "If the object is null or , returns {@link #NULL}.",
    "Reference": "If the object is null, return the NULL\nobject.",
    "HebCup": "objectPackage the object is null or , returns {@link#NULL}."
}
{
    "Origin": "More stable than {@code Math.log(1 - Math.exp(x))}",
    "Reference": "More stable than {@code FastMath.log(1 - FastMath.exp(x))}",
    "HebCup": "More stable than {@code FastMath.log (1 - Math.exp (x))}"
}
{
    "Origin": "Get the {@link Set} of {@link EventCode}s that are enabled for the logger.",
    "Reference": "Get the {@link Set} of {@link DriverEventCode}s that are enabled for the logger.",
    "HebCup": "Get the {@link Set} of {@link DriverEventCode}s that are enabled for the logger."
}
{
    "Origin": "Indicate to all associated {@link ExportDataSource} to assume\nmastership role for the given partition id",
    "Reference": "Indicate to all associated {@link ExportDataSource} to assume\nleadership role for the given partition id",
    "HebCup": "Indicate to all associated {@link ExportDataSource} to assume Leader role for the given partition id"
}
{
    "Origin": "Returns the last sync d l object in the ordered set where parentFolderId = ?.",
    "Reference": "Returns the last sync d l object in the ordered set where modifiedTime > ?",
    "HebCup": "Returns the last sync d l object in the ordered set where repositoryId = ?."
}
{
    "Origin": "Sets the quorum name for operations.",
    "Reference": "Sets the split brain protection name for operations.",
    "HebCup": "Sets the split Brain Protection Name for operations."
}
{
    "Origin": "Setter for {@link #allowCredentials}",
    "Reference": "Setter for {@link #allowedCredentials}",
    "HebCup": "Setter for {@link#allowedCredentials}"
}
{
    "Origin": "Getter for {@link #allowCredentials}",
    "Reference": "Getter for {@link #allowedCredentials}",
    "HebCup": "Getter for {@link#allowedCredentials}"
}
{
    "Origin": "Obtains an instance from the specified unique name.",
    "Reference": "Obtains an instance from the specified name.",
    "HebCup": "Obtains an instance from the specified name."
}
{
    "Origin": "However, the problem with exposing the\ninformation is that people running from an IDE can observe stale\ndata from old  class files left from a\nprevious build of a JAR.",
    "Reference": "However, people running from an IDE will\nobserve stale data from old \nclass files left from a previous build of a JAR.",
    "HebCup": "However, the problem with exposing the\ninformation is that people running from an IDE can observe stale\ndata from old  class files left from a\nprevious build of a JAR."
}
{
    "Origin": "If\noriginal value is a ValueTimestampTimeZone, returned value will have the same\ntime zone offset as original value.",
    "Reference": "If\noriginal value is a ValueTimestampTimeZone or ValueTimeTimeZone, returned\nvalue will have the same time zone offset as original value.",
    "HebCup": "If\noriginal value is a ValueTimestampTimeZone, returned value will have the same\ntime zone offset as original value."
}
{
    "Origin": "Returns minimal version of available {@link UpgradeCatalog}",
    "Reference": "Returns minimal source version of available {@link UpgradeCatalog}",
    "HebCup": "Returns minimal version of available {@link UpgradeCatalogSource}"
}
{
    "Origin": "Configuring Access for a Search Domain \nin the Amazon CloudSearch Developer Guide .",
    "Reference": "Amazon CloudSearch Developer Guide.",
    "HebCup": "Configuring Access for a Search Domain \nin the Amazon CloudSearch Developer Guide ."
}
{
    "Origin": "Testing the clear(vector), clear(vector) methods of VMath class.",
    "Reference": "Testing the clear(vector), clear(matrix) methods of VMath class.",
    "HebCup": "Testing the clear(vector), clear(vector) methods of VMath class."
}
{
    "Origin": "Context menu of a row: this was dispatched by LibraryPAgerAdapter",
    "Reference": "Context menu of a row: this was dispatched by LibraryPagerAdapter",
    "HebCup": "Fancy Menu of a row: this was dispatched by LibraryPAgerAdapter"
}
{
    "Origin": "Get a string from the underlying resource bundle or return\n       null if the String is not found.",
    "Reference": "Get a string from the underlying resource bundle or return null if the",
    "HebCup": "Get a string from the underlying resource bundle or return\n       null if the String is not found."
}
{
    "Origin": "Sets text to be displayed next to icon.",
    "Reference": "Sets body text to be displayed next to radio button.",
    "HebCup": "Sets Body to be displayed next to icon."
}
{
    "Origin": "Returns a string representation of this object; useful for testing and debugging.",
    "Reference": "Returns a string representation of this object.",
    "HebCup": "Returns a string representation of this object; useful for testing and debugging."
}
{
    "Origin": "Parses {@link BasicVector} from the given Matrix Market string.",
    "Reference": "Parses {@link BasicVector} from the given Matrix Market.",
    "HebCup": "Parses {@link BasicVector} from the given Matrix Market InputStream."
}
{
    "Origin": "this will return a Duration with 2004 {@link TimeUnit#MILLISECONDS}.",
    "Reference": "will return a Duration of 2004 {@link TimeUnit#MILLISECONDS}.",
    "HebCup": "this will return a amount with 2004 {@link TimeUnit#MILLISECONDS}."
}
{
    "Origin": "Access Control Using AWS Identity and Access Management (IAM) \n.",
    "Reference": "For more information, see Access Control Using AWS Identity and Access Management (IAM).",
    "HebCup": "Access Control Using AWS Identity and Access Management (IAM) \n."
}
{
    "Origin": "Sets the transformed layout.",
    "Reference": "Transform the partition.",
    "HebCup": "Sets the Transformation.set."
}
{
    "Origin": "Sets the vault endpoint url to send HTTP requests to.",
    "Reference": "Sets the vault url to send HTTP requests to.",
    "HebCup": "Sets the vault vaultUrl url to send HTTP requests to."
}
{
    "Origin": "The default behavior of this method is to return\n{@link HttpServletRequest#getServletMapping()} on the wrapped request object.",
    "Reference": "The default behavior of this method is to return\n{@link HttpServletRequest#getHttpServletMapping()} on the wrapped request\nobject.",
    "HebCup": "The default behavior of this method is to return {@link HttpServletRequest#getHttpServletMapping ()} on the wrapped request object."
}
{
    "Origin": "Returned array may be\ndifferent size than size of provided array, due to {@link #expand(Class[]) expanding}.",
    "Reference": "Returned array may be\ndifferent size than size of provided array, due to {@link #expand(ActionConfig, Class[]) expanding}.",
    "HebCup": "Returned array may be\ndifferent size than size of provided array, due to {@link #expand(Class[]) expanding}."
}
{
    "Origin": "Parse a service request path from servlet path info.",
    "Reference": "Parse a API request path from servlet path info.",
    "HebCup": "Parse a Api Request Path from servlet path info."
}
{
    "Origin": "Check when there is .codenvy.json file in the repository",
    "Reference": "Check when there is .factory.json file in the repository",
    "HebCup": "Check when there is .codenvy.File in the repository"
}
{
    "Origin": "Returns the w s r p consumer with the primary key or throws a {@link com.liferay.wsrp.NoSuchConsumerException} if it could not be found.",
    "Reference": "Returns the w s r p consumer with the primary key or throws a {@link NoSuchConsumerException} if it could not be found.",
    "HebCup": "Returns the w s r p consumer with the primary key or throws a {@link com.liferay.wsrp.NoSuchConsumerException} if it could not be found."
}
{
    "Origin": "The difference of {@link #isInteroperable} is ignore decimal precision.",
    "Reference": "The difference of {@link #isInteroperable} is ignore precisions.",
    "HebCup": "The difference of {@link #isInteroperable} is ignore decimal precision."
}
{
    "Origin": "Format the time in the format hh:mm:ss.1234 where 1234 is milliseconds.",
    "Reference": "Format the time in the format mm:ss.123 or hh:mm:ss.123 where 123 is\nmilliseconds.",
    "HebCup": "Format the time in the format hh:mm:builder.1234 where 1234 is milliseconds."
}
{
    "Origin": "Create an instance of {@link JAXBElement }{@code <}{@link CTMarkupRange }{@code >}}",
    "Reference": "Create an instance of {@link JAXBElement }{@code <}{@link CTMoveFromRangeEnd }{@code >}}",
    "HebCup": "Create an instance of {@link JAXBElement} {@code <} {@link CTMoveFromRangeEnd} {@code >}}"
}
{
    "Origin": "Grants the role execute permissions on the resource.",
    "Reference": "Sets the execute permission status.",
    "HebCup": "Grants the role hasExecutePermission permissions on the resource."
}
{
    "Origin": "Optionally provide a custom {@link LogStreamProvider} that provides streams for writing\ncontainer stdout/stderr logs.",
    "Reference": "Optionally provide a custom {@link LogStreamFollower} that provides streams for writing\ncontainer stdout/stderr logs.",
    "HebCup": "Optionally provide a custom {@link LogStreamFollower} that provides streams for writing container stdout/stderr logs."
}
{
    "Origin": "Set the conflict resolution policy for the graph.",
    "Reference": "Set the resource value.",
    "HebCup": "Set the Gremlin Graph Get Properties Resource for the graph."
}
{
    "Origin": "This method returns the value of the database column m_prj_project.projectStatus",
    "Reference": "This method returns the value of the database column m_prj_project.status",
    "HebCup": "This method returns the value of the database column m_prj_project.projectStatus"
}
{
    "Origin": "An IllegalStateException is thrown because the aspectRatio has\nalready been set.",
    "Reference": "An IllegalStateException is thrown because the size has\nalready been set.",
    "HebCup": "An IllegalStateException is thrown because the aspectRatio has\nalready been set."
}
{
    "Origin": "Returns a string representation of this object; useful for testing and debugging.",
    "Reference": "Returns a string representation of this object.",
    "HebCup": "Returns a string representation of this object; useful for testing and debugging."
}
{
    "Origin": "Check when there is .codenvy.dockerfile in the repository",
    "Reference": "Check when there is .devfile in the repository",
    "HebCup": "Check when there is .codenvy.Devfile in the repository"
}
{
    "Origin": "Orphan slurs that don't connect are removed from their SIG.",
    "Reference": "Orphan slurs that don't connect (and are not manual) are removed from their SIG.",
    "HebCup": "Orphan slurs that don't get are removed from their SIG."
}
{
    "Origin": "Build the range store with provided {@link RangeStoreFactory}.",
    "Reference": "Build the range store with provided {@link MVCCStoreFactory}.",
    "HebCup": "Build the range store with provided {@link MVCCStoreFactory}."
}
{
    "Origin": "The protection end will be calculated based on standard semi-annual roll convention.",
    "Reference": "The start and end dates will be calculated based on standard semi-annual roll convention.",
    "HebCup": "The protection end will be calculated based on standard semi-annual roll convention."
}
{
    "Origin": "This will retrieve (if in existence) or create (if not) a\n for the supplied prefix and URI.",
    "Reference": "This will retrieve (if in existence) or create (if not) a\n for the supplied prefix and uri.",
    "HebCup": "This will retrieve (if in existence) or create (if not) a\n for the supplied prefix and URI."
}
{
    "Origin": "Update event loops resources and return the global HTTP resources",
    "Reference": "Update provider resources and return the global HTTP resources",
    "HebCup": "Update event loops Provider and return the global HTTP Provider"
}
{
    "Origin": "Once the prefetch is done, the player will change\nits playback state to {@link SessionPlayer2#PLAYER_STATE_PAUSED}.",
    "Reference": "Once the prepare is done, the player will change\nits playback state to {@link SessionPlayer2#PLAYER_STATE_PAUSED}.",
    "HebCup": "Once the prepare is done , the player will change its playback state to {@link SessionPlayer2#PLAYER_STATE_PAUSED}."
}
{
    "Origin": "This allows additional information to be attached to the trade.",
    "Reference": "This allows additional information to be attached.",
    "HebCup": "This allows additional information to be attached to the PortfolioItem."
}
{
    "Origin": "Sets the bootstrap member locations.",
    "Reference": "Sets the bootstrap nodes.",
    "HebCup": "Sets the bootstrap member Nodes."
}
{
    "Origin": "Returns a string representation of this object; useful for testing and debugging.",
    "Reference": "Returns a string representation of this object.",
    "HebCup": "Returns a string representation of this object; useful for testing and debugging."
}
{
    "Origin": "Saves the conversation log entry to the database.",
    "Reference": "Saves the conversation log entry batch to the database.",
    "HebCup": "Saves the Conversation Log Batch to the database."
}
{
    "Origin": "Reset starting address.",
    "Reference": "Reset head segment.",
    "HebCup": "reset Head Segment."
}
{
    "Origin": "The condition that triggers the dialog node.",
    "Reference": "The condition that will trigger the dialog node.",
    "HebCup": "The conditions that triggers the dialog node."
}
{
    "Origin": "Requires the mongodb-crypt library in the class path",
    "Reference": "Requires the mongodb-crypt library in the class path and mongocryptd on the system path.",
    "HebCup": "Requires the mongodb-crypt library in the class path"
}
{
    "Origin": "To perform a partial update of a block blob's, use PutBlock\nand PutBlockList.",
    "Reference": "To perform a partial update of a block blob's, use",
    "HebCup": "To perform a partial update of a block blob's, use PutBlock\nand PutBlockList."
}
{
    "Origin": "Creates new {@link AggregationExpression} that returns the second portion of a date as a number between 0 and 59,\nbut can be 60 to account for leap seconds in the factory timezone (default UTC).",
    "Reference": "Creates new {@link AggregationExpression} that returns the second portion of a date as a number between 0 and 59,\nbut can be 60 to account for leap seconds.",
    "HebCup": "Creates new {@link AggregationExpression} that returns the Second.second portion of a date as a number between 0 and 59 , but can be 60 to account for leap seconds in the factory timezone (default UTC)."
}
{
    "Origin": "Tests that a job only has one failover region and can recover from task failure successfully",
    "Reference": "Tests that a job only has one failover region and can recover from task failure successfully with state.",
    "HebCup": "Tests that a job only has one failover region and can recover from task failure successfully"
}
{
    "Origin": "Obtains an instance of {@code ZoneId} from a date-time object.",
    "Reference": "Obtains an instance of {@code ZoneId} from a temporal object.",
    "HebCup": "Obtains an instance of {@code zone} from a date-time object."
}
{
    "Origin": "This method is a shortcut to {@code context().uuid()}.",
    "Reference": "This method is a shortcut to {@code context().id()}.",
    "HebCup": "This method is a shortcut to {@code context ().id ()}."
}
{
    "Origin": "Appends an internal name, a type descriptor or a type signature to\n{@link #buf buf}.",
    "Reference": "Appends an internal name, a type descriptor or a type signature to {@link #stringBuilder}.",
    "HebCup": "Appends an internal name , a type descriptor or a type signature to {@link#stringBuilder stringBuilder}."
}
{
    "Origin": "Code snippets for {@link LeaseClientBuilder#buildClient()}.",
    "Reference": "Code snippets for {@link BlobLeaseClientBuilder#buildClient()}.",
    "HebCup": "Code snippets for {@link BlobLeaseClientBuilder#buildClient ()}."
}
{
    "Origin": "Configures {@link jodd.petite.PetiteContainer} with default class path.",
    "Reference": "Configures {@link jodd.petite.PetiteContainer} with specified class path.",
    "HebCup": "Configures {@link jodd.petite.PetiteContainer} with Count class path."
}
{
    "Origin": "Queries this contact source for the given queryString.",
    "Reference": "Creates query for the given queryString.",
    "HebCup": "Queries this Contact Query for the given queryString."
}
{
    "Origin": "In case of an error, we have to ensure that the triggerservice does not leave anything behind",
    "Reference": "In case of an engine related error, we have to ensure that the triggerservice does not leave anything behind",
    "HebCup": "In case of an error, we have to ensure that the triggerservice does not leave anything behind"
}
{
    "Origin": "Called when a controller requested to prefetch a specific media item represented by a URI\nthrough {@link MediaController2#prefetchFromUri(Uri, Bundle)}.",
    "Reference": "Called when a controller requested to prepare a specific media item represented by a URI\nthrough {@link MediaController2#prepareFromUri(Uri, Bundle)}.",
    "HebCup": "Called when a controller requested to prefetch a specific media item represented by a URI through {@link MediaController2#PrepareFromUri (Uri , Bundle)}."
}
{
    "Origin": "From W.X.Y.Z return Z.",
    "Reference": "From W.X.Y return Y.",
    "HebCup": "From W.X.Y.Z return Z."
}
{
    "Origin": "Test of npara method, of class TDistribution.",
    "Reference": "Test of length method, of class TDistribution.",
    "HebCup": "Test of Length method , of class TDistribution."
}
{
    "Origin": "Matching is performed using the matching rules specified by\n[RFC2459].",
    "Reference": "Matching is performed using the matching rules specified by\n[RFC5280].",
    "HebCup": "Matching is performed using the matching rules specified by\n[RFC2459]."
}
{
    "Origin": "User names will always be checked in a\ncase insensitive manner.",
    "Reference": "User names will always be checked in a\ncase insensitive manner using the system default Locale.",
    "HebCup": "User Name.toLowerCase will always be checked in a case insensitive manner."
}
{
    "Origin": "Create an instance of {@link JAXBElement }{@code <}{@link CTMarkupRange }{@code >}}",
    "Reference": "Create an instance of {@link JAXBElement }{@code <}{@link CTMoveFromRangeEnd }{@code >}}",
    "HebCup": "Create an instance of {@link JAXBElement} {@code <} {@link CTMoveFromRangeEnd} {@code >}}"
}
{
    "Origin": "Test a read after write on SMRMap.",
    "Reference": "Test a read after write on CorfuTable.",
    "HebCup": "Test a read after write on CorfuTable."
}
{
    "Origin": "The {@link EcKeyCreateOptions} parameter is required.",
    "Reference": "The {@link CreateEcKeyOptions} parameter is required.",
    "HebCup": "The {@link CreateEcKeyOptions} parameter is required."
}
{
    "Origin": "No component is registered, only {@link MadvocConfig}\nand {@link MadvocContainer}.",
    "Reference": "You can use\nonly {@link MadvocConfig} and {@link MadvocContainer}.",
    "HebCup": "No component is registered, only {@link MadvocConfig}\nand {@link MadvocContainer}."
}
{
    "Origin": "Creates a new program scope: the list of methods.",
    "Reference": "Creates a new program scope as the root of all scopes",
    "HebCup": "Creates a new program scope: the list of methods."
}
{
    "Origin": "Returns a range of all the sync d l objects where modifiedTime > ?",
    "Reference": "Returns an ordered range of all the sync d l objects where repositoryId = ?",
    "HebCup": "Returns a range of all the sync d l objects where modifiedTime > ?"
}
{
    "Origin": "If there is a sample in progress for the operator, the call\nis ignored.",
    "Reference": "If there is a request in progress for the vertex, the call\nis ignored.",
    "HebCup": "If there is a Stats in progress for the operator , the call is ignored."
}
{
    "Origin": "Returns the message with the primary key or throws a {@link com.liferay.mail.NoSuchMessageException} if it could not be found.",
    "Reference": "Returns the message with the primary key or throws a {@link NoSuchMessageException} if it could not be found.",
    "HebCup": "Returns the message with the primary key or throws a {@link com.liferay.mail.NoSuchMessageException} if it could not be found."
}
{
    "Origin": "Tests rejection of expressions in VERSION model.",
    "Reference": "Tests rejection of expressions in either VERSION or VERSION model.",
    "HebCup": "Tests rejection of expressions in version model."
}
{
    "Origin": "Access Control Using AWS Identity and Access Management (IAM) \n.",
    "Reference": "For more information, see Access Control Using AWS Identity and Access Management (IAM).",
    "HebCup": "Access Control Using AWS Identity and Access Management (IAM) \n."
}
{
    "Origin": "Converts from list of {@link CpuProfilerConfig} to list of {@link CpuProfiler.CpuProfilerConfiguration}",
    "Reference": "Converts from list of {@link CpuProfilerConfig} to list of {@link Cpu.CpuTraceConfiguration}",
    "HebCup": "Converts from list of {@link CpuProfilerConfig} to list of {@link Cpu.CpuTraceConfiguration.UserOptions}"
}
{
    "Origin": "The simplest way to create a CVC update token.",
    "Reference": "Create a CVC update token asynchronously.",
    "HebCup": "The simplest way to create a CVC Token token."
}
{
    "Origin": "Use reflection to discover and report on the bigdata build information.",
    "Reference": "Method used to discover and report on the bigdata build information.",
    "HebCup": "Use reflection to discover and report on the bigdata build information."
}
{
    "Origin": "If the given language code is {@code null}, uses {@link DisplaySettings#getShowsLanguage(Context)}.",
    "Reference": "If the given language code is {@code null}, uses\n{@link DisplaySettings#getShowsLanguageFallback(Context)}.",
    "HebCup": "If the given language code is {@code null} , uses {@link DisplaySettings#getShowsLanguageFallback (Context)}."
}
{
    "Origin": "Acquires the write lock to start reinitialization.",
    "Reference": "Acquires the resource to allow reinitialization.",
    "HebCup": "Acquires the Resource To Allow to start reinitialization."
}
{
    "Origin": "Returns a QualifiedType that has the same type as this instance, but with the given qualifiers.",
    "Reference": "Returns a QualifiedType that has the same type as this instance, but with only the given qualifiers.",
    "HebCup": "Returns a QualifiedType that has the same type as this instance , but < the given qualifiers."
}
{
    "Origin": "Starts a new download with the given DownloadRequest.",
    "Reference": "Starts a new download with the given a list of DownloadRequest.",
    "HebCup": "Starts a new download with the given DownloadRequest."
}
{
    "Origin": "This GET\nscenario will return a setting when the etag provided does not match the one of the current setting.",
    "Reference": "This GET\nscenario will return a setting when the ETag provided does not match the one of the current setting.",
    "HebCup": "This GET scenario will return a Configuration Setting When the etag provided does not match the one of the current setting."
}
{
    "Origin": "Reads up to  bytes of data into an array of bytes\nfrom this input stream.",
    "Reference": "Reads up to {@code len} bytes of data into an array of bytes from this\ninput stream.",
    "HebCup": "Reads up to  bytes of data into an array of bytes\nfrom this input stream."
}
{
    "Origin": "Returns the next value from the input.",
    "Reference": "Get the next value.",
    "HebCup": "Returns the this.next value from the input."
}
{
    "Origin": "Return an InetSocketAddress to represent the socket address in this buffer.",
    "Reference": "Encodes the given InetSocketAddress into this socket address.",
    "HebCup": "Return an getPortAddress to represent the socket address in this buffer."
}
{
    "Origin": "Creates a {@link PropertyMatcher} to match against slot indexes.",
    "Reference": "Creates a {@link KeyValueMatcher} to match against slot indexes.",
    "HebCup": "Creates a {@link KeyValueMatcher} to match against slot indexes."
}
{
    "Origin": "The\n{@link RsaKeyCreateOptions#isEnabled() enabled} field is set to true by Azure Key Vault, if not specified.",
    "Reference": "The\n{@link CreateRsaKeyOptions#isEnabled() enabled} field is set to true by Azure Key Vault, if not specified.",
    "HebCup": "The {@link CreateRsaKeyOptions#isEnabled () enabled} field is set to true by Azure Key Vault , if not specified."
}
{
    "Origin": "Group: consumer",
    "Reference": "Group: producer",
    "HebCup": "Group: consumer"
}
{
    "Origin": "Creates an audit entry for the 'service created' event.",
    "Reference": "Creates an audit entry for the 'API created' event.",
    "HebCup": "Creates an audit entry for the 'api Created' event."
}
{
    "Origin": "Standard utility method for typical implementation of {@link SlotSelector#validateSatisfied(IndexProvider[])}.",
    "Reference": "Standard utility method for typical implementation of {@link SlotSelector#validateSatisfied(InstanceSelector)}.",
    "HebCup": "Standard utility method for typical implementation of {@link SlotSelector#validateSatisfied(IndexProvider<])}."
}
{
    "Origin": "Sets the value of the shortDescription property.",
    "Reference": "Sets the value of the description property.",
    "HebCup": "Sets the value of the Description property."
}
{
    "Origin": "The result will be invoked to listener set by {@link #setOnGetCroppedImageCompleteListener(OnGetCroppedImageCompleteListener)}.",
    "Reference": "The result will be invoked to listener set by {@link #setOnCropImageCompleteListener(OnCropImageCompleteListener)}.",
    "HebCup": "The result will be invoked to listener set by {@link #setOnGetCroppedImageCompleteListener(OnGetCroppedImageCompleteListener)}."
}
{
    "Origin": "Generate a properties object with some static defaults that can be\noverridden by Source configuration 2.",
    "Reference": "Generate a properties object with some static defaults that can be\noverridden if corresponding properties are specified\n2.",
    "HebCup": "Generate a Servers object with some static defaults that can be overridden by Source configuration 2."
}
{
    "Origin": "The results are undefined if timing\nmethods are called without invoking at least one pair\n{@link #start()} / {@link #stop()} methods.",
    "Reference": "The results are undefined if timing\nmethods are called without invoking at least one pair\n{@link #start()} / {@code #stop()} methods.",
    "HebCup": "The results are undefined if timing\nmethods are called without invoking at least one pair\n{@link #start()} / {@link #stop()} methods."
}
{
    "Origin": "Enable GZip response compression if the client request presents accept encoding\nheaders.",
    "Reference": "Specifies whether GZip response compression is enabled if the client request\npresents accept encoding headers.",
    "HebCup": "Enable GZip response compression if the client request presents accept encoding\nheaders."
}
{
    "Origin": "Expected:\n         IOException is thrown",
    "Reference": "IllegalArgumentException is thrown",
    "HebCup": "Expected: IllegalArgumentException is thrown"
}
{
    "Origin": "An index ranges from {@code 0} to\n{@code getSizeInBytes() - 1}.",
    "Reference": "An index ranges from {@code 0} to\n{@code binarySection.sizeInBytes - 1}.",
    "HebCup": "An index ranges from {@code 0} to\n{@code getSizeInBytes() - 1}."
}
{
    "Origin": "Creates a new ClassLoader and a new class inside that ClassLoader.",
    "Reference": "Creates a new ClassLoader and a new {@link Exception} class inside that ClassLoader.",
    "HebCup": "Creates a new TestExceptionForSerialization and a new class inside that ClassLoader."
}
{
    "Origin": "Issues an HTTP redirect after subject logout.",
    "Reference": "Issues an HTTP redirect to the specified URL after subject logout.",
    "HebCup": "Issues an HTTP redirect after subject logout."
}
{
    "Origin": "heavy weight join(), involves moving data",
    "Reference": "Heavy weight join(), involves moving data",
    "HebCup": "heavy weight join(), involves moving data"
}
{
    "Origin": "and {@link org.apache.flink.table.api.StreamTableEnvironment} for stream job.",
    "Reference": "and {@link org.apache.flink.table.planner.StreamPlanner} for stream job.",
    "HebCup": "and {@link org.apache.flink.table.api.StreamPlannerBase} for stream job."
}
{
    "Origin": "Asserts that the error message and the root bean class of the given violation are equal to the expected message\nand root bean class.",
    "Reference": "Asserts that the error message, root bean class and invalid value of the given violation are equal to the\nexpected message, root bean class and invalid value.",
    "HebCup": "Asserts that the error message and the invalid Value of the given violation are equal to the expected message invalid Value class."
}
{
    "Origin": "Retrieve the download stream using the default chunk size of 256kb.",
    "Reference": "Retrieve the download stream using the default chunk size of 256 kB.",
    "HebCup": "Retrieve the download stream using the default chunk size of 256kb."
}
{
    "Origin": "NOTE:The DB cluster snapshot must be in the available state to\nbe deleted.",
    "Reference": "The DB cluster snapshot must be in the  state\nto be deleted.",
    "HebCup": "NOTE:The DB cluster snapshot must be in the available state to\nbe deleted."
}
{
    "Origin": "Get the number of active transports for the Image.",
    "Reference": "Get the count of active transports for the Image.",
    "HebCup": "Get the active Transport Count for the Image."
}
{
    "Origin": "Converts a JSON document into a PdxInstance",
    "Reference": "Converts a String JSON document into a PdxInstance",
    "HebCup": "Converts a JSON document into a PdxInstance"
}
{
    "Origin": "Code snippet for {@link AppendBlobClient#createWithResponse(BlobHTTPHeaders, Map, BlobAccessConditions,",
    "Reference": "Code snippet for {@link AppendBlobClient#createWithResponse(BlobHttpHeaders, Map, BlobAccessConditions,",
    "HebCup": "Code snippet for {@link AppendBlobClient#createWithResponse(BlobHttpHeaders, Map, BlobAccessConditions,"
}
{
    "Origin": "{@codesnippet com.azure.data.applicationconfig.configurationclient.listSettings#settingSelector}",
    "Reference": "{@codesnippet com.azure.data.applicationconfig.configurationclient.listConfigurationSettings#settingSelector}",
    "HebCup": "{@codesnippet com.azure.data.applicationconfig.configurationclient.listConfigurationSettings#settingSelector}"
}
{
    "Origin": "Determines the timeout in milliseconds until a new connection is\nfully established or established connection transmits a data packet.",
    "Reference": "Determines the timeout until a new connection is fully established.",
    "HebCup": "Determines the timeout in milliseconds until a new Connect is fully established or established Connect transmits a data packet."
}
{
    "Origin": "For an overview on tagging Amazon RDS resources, see",
    "Reference": "For an overview on tagging Amazon RDS resources, see Tagging Amazon RDS Resources.",
    "HebCup": "For an overview on tagging Amazon RDS resources, see"
}
{
    "Origin": "If you'd just\nlike to obtain the version of SIP Communicator so that you could display\nit (e.g.",
    "Reference": "If you'd just like to obtain the\nversion of Jitsi so that you could display it (e.g.",
    "HebCup": "If you'd just\nlike to obtain the version of SIP Communicator so that you could display\nit (e.g."
}
{
    "Origin": "Search for the insertion point of current number.",
    "Reference": "Binary search for the insertion point of current number.",
    "HebCup": "Search for the insertion point of current number."
}
{
    "Origin": "Attempts to find the best suited {@link OnExceptionDefinition} to be used for handling the given thrown exception.",
    "Reference": "Attempts to find the best suited {@link ExceptionPolicy} to be used for handling the given thrown exception.",
    "HebCup": "Attempts to find the best suited {@link ExceptionPolicy} to be used for handling the given thrown exception."
}
{
    "Origin": "Gets {@link TableEnvironment}, {@link org.apache.flink.table.api.BatchTableEnvironment} for batch job.",
    "Reference": "Gets {@link PlannerBase}, {@link org.apache.flink.table.planner.BatchPlanner} for batch job.",
    "HebCup": "Gets {@link PlannerBase} , {@link org.apache.flink.table.api.BatchTableEnvironment} for batch job."
}
{
    "Origin": "Determine the {@link SecurityPolicy} for this request",
    "Reference": "Determine the {@link SecurityContext} for this request",
    "HebCup": "Determine the {@link SecurityContext} for this request"
}
{
    "Origin": "You should probably instead use the frontend function for this:\n{@link FCPConnectionHandler#getPluginClient(String)}.",
    "Reference": "ATTENTION: Only for internal use by the frontend function\n{@link FCPConnectionHandler#getPluginClient(String)}.",
    "HebCup": "You should probably instead use the frontend function for this:\n{@link FCPConnectionHandler#getPluginClient(String)}."
}
{
    "Origin": "If the Artifact refers to a directory recursively removes\nthe contents of the directory.",
    "Reference": "If the path refers to a directory, recursively removes the contents of the directory.",
    "HebCup": "If the ArtifactRoot refers to a directory recursively removes the contents of the directory."
}
{
    "Origin": "First scenario: press button -> two windows appear, press Esc two times\n-> all windows should be closed",
    "Reference": "First scenario: press first button -> two windows appear, press Esc two\ntimes -> all windows should be closed",
    "HebCup": "First scenario: press button -> two windows appear, press Key two times -> all windows should be closed"
}
{
    "Origin": "Return the HTTP request.",
    "Reference": "Return the native HTTP request.",
    "HebCup": "Return the HTTP NativeRequest."
}
{
    "Origin": "The default behavior of this method is to return\n{@link HttpServletRequest#getPushBuilder()} on the wrapped request object.",
    "Reference": "The default behavior of this method is to return\n{@link HttpServletRequest#newPushBuilder()} on the wrapped request object.",
    "HebCup": "The default behavior of this method is to return {@link HttpServletRequest#newPushBuilder ()} on the wrapped request object."
}
{
    "Origin": "Test of npara method, of class Beta.",
    "Reference": "Test of length method, of class Beta.",
    "HebCup": "Test of Length method , of class Beta."
}
{
    "Origin": "Create an instance of {@link JAXBElement }{@code <}{@link CTMarkupRange }{@code >}}",
    "Reference": "Create an instance of {@link JAXBElement }{@code <}{@link CTMoveToRangeEnd }{@code >}}",
    "HebCup": "Create an instance of {@link JAXBElement} {@code <} {@link CTMoveToRangeEnd} {@code >}}"
}
{
    "Origin": "It does not read the response entity, if any.",
    "Reference": "This method does not read the response entity, if any.",
    "HebCup": "It does not read the response entity , Args.notNull any."
}
{
    "Origin": "Gets the value of the spinCount property.",
    "Reference": "Gets the value of the saltValue property.",
    "HebCup": "Gets the value of the saltValue property."
}
{
    "Origin": "Returns whether a given bound is included in this slice.",
    "Reference": "Returns whether a given clustering or bound is included in this slice.",
    "HebCup": "Returns whether a given ClusteringPrefix is included in this slice."
}
{
    "Origin": "Access Control Using AWS Identity and Access Management (IAM) \n.",
    "Reference": "For more information, see Access Control Using AWS Identity and Access Management (IAM).",
    "HebCup": "Access Control Using AWS Identity and Access Management (IAM) \n."
}
{
    "Origin": "The default implementation\ndoes nothing, but subclasses may chose to throw a {@link SolrException}\nif invariants are violated by the",
    "Reference": "Subclasses may choose to throw a {@link SolrException}\nif invariants are violated by the",
    "HebCup": "The default implementation\ndoes nothing, but subclasses may chose to throw a {@link SolrException}\nif invariants are violated by the"
}
{
    "Origin": "Registers the remote value wrapper interceptor in the cache before it gets started.",
    "Reference": "Registers the interceptor in the cache before it gets started.",
    "HebCup": "Registers the remote value wrapper interceptor in the cache before it gets started."
}
{
    "Origin": "See Immutable Map Static Factory Methods for details.",
    "Reference": "See Unmodifiable Maps for details.",
    "HebCup": "See Unmodifiable Map Static Factory Methods for details."
}
{
    "Origin": "As a special case, resources ending with \"{@code .class}\" are\n    never encapsulated.",
    "Reference": "If the resource name ends with  \"{@code .class}\" then it is not\n    encapsulated.",
    "HebCup": "As a special case, resources ending with \"{@code .class}\" are\n    never encapsulated."
}
{
    "Origin": "Set the maxPassagesPerDocument.",
    "Reference": "Set the maxPerDocument.",
    "HebCup": "Set the maxPerDocument."
}
{
    "Origin": "Test affinity awareness Sql cache size property.",
    "Reference": "Test Partition Awareness Sql cache size property.",
    "HebCup": "test Partition Awareness Sql Cache Size Property."
}
{
    "Origin": "Returns the default SelectorProvider.",
    "Reference": "Returns the default SelectorProvider implementation.",
    "HebCup": "Returns the default SelectorProviderImpl."
}
{
    "Origin": "Maintains type, name, and calibration values.",
    "Reference": "Maintains metadata including\naxis types, dataset name, and axis calibrations.",
    "HebCup": "Maintains type, name, and calibration values."
}
{
    "Origin": "{@codesnippet com.azure.data.appconfiguration.configurationasyncclient.setSetting#string-string-string}",
    "Reference": "{@codesnippet com.azure.data.appconfiguration.configurationasyncclient.setConfigurationSetting#string-string-string}",
    "HebCup": "{@codesnippet com.azure.data.appconfiguration.configurationasyncclient.setConfigurationSetting#string-string-string}"
}
{
    "Origin": "Returns an immutable map containing three mappings.",
    "Reference": "Returns an unmodifiable map containing three mappings.",
    "HebCup": "Returns an Unmodifiable map containing three mappings."
}
{
    "Origin": "Converts a date to a relative time span (\"8h\", \"3d\", etc.)",
    "Reference": "Converts a date to a localized relative time span (\"Now\", \"8 hr.",
    "HebCup": "Converts a date to a relative time span (\"8h\", \"3d\", etc.)"
}
{
    "Origin": "Attributes\ncan extend the parameters of this class without having to extend it.",
    "Reference": "Attributes\ncan extend the parameters of this class without actually having to extend it.",
    "HebCup": "Attributes\ncan extend the parameters of this class without having to extend it."
}
{
    "Origin": "The operator subscribes to its sources in the order they are specified and completes eagerly if\none of the sources is shorter than the rest while cancel the other sources.",
    "Reference": "The operator subscribes to its sources in the order they are specified and completes eagerly if\none of the sources is shorter than the rest while canceling the other sources.",
    "HebCup": "The operator subscribes ObjectHelper.verify its sources in the order they are specified and completes eagerly if one of the sources is shorter than the rest while cancel the other sources."
}
{
    "Origin": "Generates random trits for a transaction.",
    "Reference": "Generates trits for a transaction.",
    "HebCup": "Generates Trits for a transaction."
}
{
    "Origin": "Convert a time in milliseconds in UTC to the nanoseconds since midnight\n(in the default timezone).",
    "Reference": "Convert a time in milliseconds in local time to the nanoseconds since midnight.",
    "HebCup": "Convert a time in milliseconds in UTC to the nanoseconds since midnight\n(in the default timezone)."
}
{
    "Origin": "Get XA connection.",
    "Reference": "Get connection.",
    "HebCup": "Get xa Connection.get XA Resource."
}
{
    "Origin": "Group: common",
    "Reference": "Group: security",
    "HebCup": "Group: common"
}
{
    "Origin": "Create an instance of {@link JAXBElement }{@code <}{@link CTMarkupRange }{@code >}}",
    "Reference": "Create an instance of {@link JAXBElement }{@code <}{@link CTMoveToRangeEnd }{@code >}}",
    "HebCup": "Create an instance of {@link JAXBElement} {@code <} {@link CTMoveToRangeEnd} {@code >}}"
}
{
    "Origin": "Stops this thing's polling future",
    "Reference": "Stops/clears this thing's polling future",
    "HebCup": "clear this thing's polling future"
}
{
    "Origin": "Tests that Grindstone mills all cards to graveyard while Painter's Servant is in play",
    "Reference": "Tests that Grindstone mills all cards to graveyard while Painter's",
    "HebCup": "Tests that Grindstone mills all cards to graveyard while Painter's Servant is in play"
}
{
    "Origin": "Scenario successful connection to the back end service via basic auth.",
    "Reference": "Scenario successful connection to the back end API via basic auth.",
    "HebCup": "Scenario successful connection to the back end api via basic auth."
}
{
    "Origin": "Writer for genotypes of arbitrary chromosomes.",
    "Reference": "Create a writer for genotypes of arbitrary chromosomes.",
    "HebCup": "Writer for genotypes of arbitrary chromosomes."
}
{
    "Origin": "Sets the alignment of the selected element.",
    "Reference": "Sets the alignment of the selected item in the select box.",
    "HebCup": "Sets the alignment of the selected element."
}
{
    "Origin": "Obtains an instance of {@code ZonedDateTime} from a local date-time\nusing the specified offset if possible.",
    "Reference": "Obtains an instance of {@code ZonedDateTime} from a local date-time\n using the preferred offset if possible.",
    "HebCup": "Obtains an instance of {@code ZonedDateTime} from a local date-time using the specified preferredOffset if possible."
}
{
    "Origin": "{@codesnippet com.azure.data.applicationconfig.configurationclient.setReadOnly#string-string}",
    "Reference": "{@codesnippet com.azure.data.applicationconfig.configurationclient.setReadOnly#string-string-boolean}",
    "HebCup": "{@codesnippet com.azure.data.applicationconfig.configurationclient.setReadOnly#string-string}"
}
{
    "Origin": "Sets the servers.",
    "Reference": "Sets the addresses.",
    "HebCup": "Sets the Addresses."
}
{
    "Origin": "If any\npackage doesen't belong to any specified group on the comamnd line, then\na new group named \"Other Packages\" will be created for it.",
    "Reference": "If any\npackage doesn't belong to any specified group on the command line, then\na new group named \"Other Packages\" will be created for it.",
    "HebCup": "If any\npackage doesen't belong to any specified group on the comamnd line, then\na new group named \"Other Packages\" will be created for it."
}
{
    "Origin": "Queries this search source for the given queryString.",
    "Reference": "Creates query for the given query.",
    "HebCup": "Queries this search source for the given createString."
}
{
    "Origin": "You don't need to call {@link #close()} after calling this method.",
    "Reference": "You don't need to call {@link GenbankReader#close()} after calling this method.",
    "HebCup": "You don't need to call {@link #close()} after calling this method."
}
{
    "Origin": "This API returns an export ID which you can query using the DescribeExportConfigurations API.",
    "Reference": "This API returns an export ID that you can query using the DescribeExportConfigurations API.",
    "HebCup": "This API returns an export ID which you can query using the DescribeExportConfigurations API."
}
{
    "Origin": "Returns the search roots.",
    "Reference": "Returns the searchRoots.",
    "HebCup": "Returns the search roots."
}
{
    "Origin": "Action remove hop from this step",
    "Reference": "Action remove hop exiting this step",
    "HebCup": "Action remove hop from this step"
}
{
    "Origin": "RecordActivityTaskHeartbeat request returns true and if the activity\ncan be safely undone or abandoned.",
    "Reference": "RecordActivityTaskHeartbeat request returns  and\nif the activity can be safely undone or abandoned.",
    "HebCup": "RecordActivityTaskHeartbeat request returns true and if the activity\ncan be safely undone or abandoned."
}
{
    "Origin": "Generates a valid document ID for a service, used to index the service in ES.",
    "Reference": "Generates a valid document ID for a api, used to index the api in ES.",
    "HebCup": "Generates a valid document ID for a Api , used to index the Api in ES."
}
{
    "Origin": "For an interface parent (MUST be an interface), returns set of all subinterfaces.",
    "Reference": "For an interface parent (MUST be an interface), returns set of all subinterfaces including .",
    "HebCup": "For an interface parent <MUST be an interface), returns set of all subinterfaces."
}
{
    "Origin": "Returns the projects entry with the primary key or throws a {@link com.liferay.so.NoSuchProjectsEntryException} if it could not be found.",
    "Reference": "Returns the projects entry with the primary key or throws a {@link NoSuchProjectsEntryException} if it could not be found.",
    "HebCup": "Returns the projects entry with the primary key or throws a {@link com.liferay.so.NoSuchProjectsEntryException} if it could not be found."
}
{
    "Origin": "Handles URL: /clusters/{clusterName}/servicegroups/{serviceGroupName}/services/{serviceDisplayName}",
    "Reference": "Handles URL: /clusters/{clusterName}/servicegroups/{serviceGroupName}/services/{serviceName}",
    "HebCup": "Handles URL: /clusters/{clusterName}/servicegroups/{serviceGroupName}/services/{serviceName}"
}
{
    "Origin": "Open a new file for data matching a schema.",
    "Reference": "Open a new file for data matching a schema with a random sync.",
    "HebCup": "Open a new file for data matching a schema."
}
{
    "Origin": "If you have an EdgeIteratorState the other createTraversalId is preferred!",
    "Reference": "If you have an EdgeIteratorState the other createTraversalKey is preferred!",
    "HebCup": "If you have an EdgeIteratorState the other createTraversalKey is preferred!"
}
{
    "Origin": "Remove a given task from the database via mode query.",
    "Reference": "Remove the task related to this worker from the DB via mode query.",
    "HebCup": "Remove a given task from the database via mode query."
}
{
    "Origin": "List the batch-processing jobs submitted by users.",
    "Reference": "Lists batch-processing jobs submitted by users.",
    "HebCup": "List the batch-processing jobs submitted by users."
}
{
    "Origin": "Open a Session for the SessionFactory that this interceptor uses.",
    "Reference": "Open a Session for the given SessionFactory.",
    "HebCup": "Open a Session for the SessionFactory that this interceptor uses."
}
{
    "Origin": "In order to set the matrix to a rotation transformation without post-multiplying,\nuse {@link #rotation(Quaterniond)}.",
    "Reference": "In order to set the matrix to a rotation transformation without post-multiplying,\nuse {@link #rotation(Quaterniondc)}.",
    "HebCup": "In order to set the matrix to a rotation transformation without post-multiplying, use {@link #rotation(Quaterniondc)}."
}
{
    "Origin": "Create an instance of {@link JAXBElement }{@code <}{@link CTMarkupRange }{@code >}}",
    "Reference": "Create an instance of {@link JAXBElement }{@code <}{@link CTMoveToRangeEnd }{@code >}}",
    "HebCup": "Create an instance of {@link JAXBElement} {@code <} {@link CTMoveToRangeEnd} {@code >}}"
}
{
    "Origin": "Computes the maximum for each pixel across all bands in the {@link Planar} image.",
    "Reference": "Computes the maximum for each pixel across selected bands in the {@link Planar} image.",
    "HebCup": "Computes the maximum for each pixel across all bands in the {@link Planar} image."
}
{
    "Origin": "Note: returned indent is not set to be  to it's direct parent block",
    "Reference": "Note: returned indent is not set to be {@code 'relative'} to it's direct parent block",
    "HebCup": "Note: returned indent is not set to be  to it's direct parent block"
}
{
    "Origin": "Parses an array containing a coordinate into a LatLng object",
    "Reference": "Parses an array containing a coordinate into a LatLngAlt object",
    "HebCup": "Parses an array containing a coordinate into a LatLngAlt object"
}
{
    "Origin": "Setter for {@link #allowOnlyRequestedHeader}",
    "Reference": "Setter for {@link #allowAllRequestedHeaders}",
    "HebCup": "Setter for {@link#allowAllRequestedHeaders}"
}
{
    "Origin": "Returns the list of fields used to define this provider, or null if the provider is schemaless.",
    "Reference": "Returns the list of fields allowed by this provider, or null if the provider is schemaless.",
    "HebCup": "Returns the list of fields used to define this provider , or fields if the provider is schemaless."
}
{
    "Origin": "Iterate over all\nthe {@link KeyProperties key} by page and call {@link KeyClient#getKey(KeyProperties key properties)}.",
    "Reference": "Iterate over all\nthe {@link KeyProperties key} by page and call {@link KeyClient#getKey(String, String)}.",
    "HebCup": "Iterate over all the {@link KeyProperties PropertiesOfKey} by page and call {@link KeyClient#getKey (KeyProperties PropertiesOfKey properties)}."
}
{
    "Origin": "Returns true if field ttlNotUsed is set (has been assigned a value) and false otherwise",
    "Reference": "Returns true if field ttl is set (has been assigned a value) and false otherwise",
    "HebCup": "Returns true if field Ttl is set (has been assigned a value) and false otherwise"
}
{
    "Origin": "adds a local ID to the list of recently chosen sites",
    "Reference": "adds a local site ID to the top of list of recently chosen sites",
    "HebCup": "adds a local ID to the list of recently chosen sites"
}
{
    "Origin": "Fills the current buffer with bytes from the specified array from the\nspecified offset.",
    "Reference": "Fills the current buffer with bytes from the specified array and offset.",
    "HebCup": "Fills the current buffer with bytes from the specified array from the\nspecified offset."
}
{
    "Origin": "This method must only be used for type references\nwhose sort is {@link #CLASS_EXTENDS CLASS_EXTENDS}.",
    "Reference": "This method must only be used for type references whose sort is {@link #CLASS_EXTENDS}.",
    "HebCup": "This method must only be used for type references\nwhose sort is {@link #CLASS_EXTENDS CLASS_EXTENDS}."
}
{
    "Origin": "Create a QuickConnection object from a GuacamoleConfiguration\nand get an ID and place it on the tree.",
    "Reference": "Create a QuickConnection object from a GuacamoleConfiguration\nand get an ID and place it on the tree, returning the new\nconnection identifier value.",
    "HebCup": "Create a QuickConnection object from a GuacamoleConfiguration\nand get an ID and place it on the tree."
}
{
    "Origin": "Returns the configured bootstrap locations.",
    "Reference": "Returns the configured bootstrap nodes.",
    "HebCup": "Returns the configured bootstrap Nodes."
}
{
    "Origin": "Takes SPIR-V as a sequence of 32-bit words, validates it, then compiles to HLSL.",
    "Reference": "Takes SPIR-V as a sequence of 32-bit words, validates it, then creates the internal compiler for translating to HLSL and performing reflection.",
    "HebCup": "Takes SPIR-V as a sequence of 32-bit words , validates it , then initializes to HLSL."
}
{
    "Origin": "Each type will\nbe instantiated by Bootique and added to the Guice DI container.",
    "Reference": "Each type will\nbe instantiated by Bootique and added to the DI container.",
    "HebCup": "Each type will\nbe instantiated by Bootique and added to the Guice DI container."
}
{
    "Origin": "Add an algorithm by loading a config file.",
    "Reference": "Add one or more algorithms by loading a config file.",
    "HebCup": "Add an algorithm by loading a config file."
}
{
    "Origin": "Returns a string representation of this object; useful for testing and debugging.",
    "Reference": "Returns a string representation of this object.",
    "HebCup": "Returns a string representation of this object; useful for testing and debugging."
}
{
    "Origin": "Requires\n{@link ClassGraph#enableFieldConstantInitializerValues()} to have been called.",
    "Reference": "Requires\n{@link ClassGraph#enableStaticFinalFieldConstantInitializerValues()} to have been called.",
    "HebCup": "Requires {@link ClassGraph#enableStaticFinalFieldConstantInitializerValues()} to have been called."
}
{
    "Origin": "Returns URL to post events to.",
    "Reference": "Returns URI where to post events.",
    "HebCup": "Returns URI to post events to."
}
{
    "Origin": "Determines whether or not this version supports setting keyspace on a per-query basis.",
    "Reference": "Determines whether or not this version supports the given feature.",
    "HebCup": "Determines whether or not this version supports setting keyspace on a per-query basis."
}
{
    "Origin": "A more complex adjuster might set the date-time to the last day of the month.",
    "Reference": "A more complex adjuster might set the date to the last day of the month.",
    "HebCup": "A more complex adjuster might set the date-time to the last day of the month."
}
{
    "Origin": "RandomAccessThing, then read randomly and compare.",
    "Reference": "RandomAccessBuffer, then read randomly and compare.",
    "HebCup": "RandomAccessBuffer , then read randomly and compare."
}
{
    "Origin": "Updates the UI after the result of an update operation on the edited {@link OCShare} permissions.",
    "Reference": "Updates the UI after the result of an update operation on the edited {@link OCFile}.",
    "HebCup": "Updates the UI after the result of an update operation on the edited {@link OCShare} permissions."
}
{
    "Origin": "Get Document Controlled.",
    "Reference": "Get Belegartgesteuert.",
    "HebCup": "Get Document Controlled."
}
{
    "Origin": "This method will attempt to load the cluster and path level configuration defaults and update\nthe configuration if necessary.",
    "Reference": "This method will load the cluster and path level configuration defaults and update\nthe configuration in one RPC.",
    "HebCup": "This method will attempt to load the Configuration level configuration defaults and update the configuration if necessary."
}
{
    "Origin": "Returns an immutable set containing two elements.",
    "Reference": "Returns an unmodifiable set containing two elements.",
    "HebCup": "Returns an Unmodifiable set containing two elements."
}
{
    "Origin": "Returns \"true\" if the provided CrawlURI has an HttpMethod with\na status code that does not fall within this instance's\nspecified range.",
    "Reference": "Returns \"true\" if the provided CrawlURI has a fetch status that does not\nfall within this instance's specified range.",
    "HebCup": "Returns ``true`` if the provided CrawlURI has an int with a status code that does not fall within this instance's specified range."
}
{
    "Origin": "This is useful in\n{@link ItemAttributeValueConverter} implementations, without having to write a switch statement on the {@link #type()}.",
    "Reference": "This is useful in\n{@link AttributeConverter} implementations, without having to write a switch statement on the {@link #type()}.",
    "HebCup": "This is useful in\n{@link ItemAttributeValueConverter} implementations, without having to write a switch statement on the {@link #type()}."
}
{
    "Origin": "This means that, by default, a codec will accept any\nsubtype of the Java type that it has been created for.",
    "Reference": "This means that, by default, a codec will accept any subtype of the",
    "HebCup": "This means that , by default , a codec will accept any subtype Type the Java type that it has been created for."
}
{
    "Origin": "Returns {@link ServiceLocator} relevant to current application.",
    "Reference": "Returns {@link InstanceManager} relevant to current application.",
    "HebCup": "Returns {@link InstanceManager} relevant to current application."
}
{
    "Origin": "Returns the parent folder of this resource.",
    "Reference": "Returns the parent folder of this resource in the current site.",
    "HebCup": "if the parent folder of this resource."
}
{
    "Origin": "Look for all unclosed issues in branches/PR targeting the same long living branch, and run\na light issue tracking to find matches.",
    "Reference": "Look for all unclosed issues in PR targeting the same branch, and run\na light issue tracking to find matches.",
    "HebCup": "Look for all unclosed issues in branches/PR targeting the same long living Pr , and run a light issue tracking to find matches."
}
{
    "Origin": "Emit MetricsContext for publishing profile related status, the tags are constructed with the program run id and\nthe profile id",
    "Reference": "Get the metrics context for the program, the tags are constructed with the program run id and\nthe profile id",
    "HebCup": "Emit MetricsContext for publishing profile related status, the tags are constructed with the profile Id and the profile id"
}
{
    "Origin": "Setting bounds to  means default value should be taken from the underlying OS.",
    "Reference": "Setting bounds to {@code null} means default value should be taken from the underlying OS.",
    "HebCup": "Setting bounds to  means default value should be taken from the underlying OS."
}
{
    "Origin": "Add the triple to the where clause",
    "Reference": "Add the triple path to the where clause",
    "HebCup": "Add the TriplePath to the where clause"
}
{
    "Origin": "then a new {@code BasicDocument} is used instead.",
    "Reference": "then a new BasicDocument is used instead.",
    "HebCup": "then a new {@code BasicDocument} is used instead."
}
{
    "Origin": "Computes the maximum for each pixel across all bands in the {@link Planar} image.",
    "Reference": "Computes the average for each pixel across all bands in the {@link Planar} image.",
    "HebCup": "Computes the maximum for each pixel across all bands in the {@link Planar} image."
}
{
    "Origin": "Invokes parent.resolveRequires to resolve the given root modules.",
    "Reference": "Invokes parent.resolve to resolve the given root modules.",
    "HebCup": "Invokes parent.resolve to resolve the given root modules."
}
{
    "Origin": "Semantics double with {@link TimerEventListener#timerEventExpireEntry(Entry, Object)}",
    "Reference": "Semantics double with {@link HeapCache#timerEventExpireEntry(Entry, Object)}",
    "HebCup": "Semantics double with {@link TimerEventListener#timerEventEXPIRE_EVENTEntry(Entry, Object)}"
}
{
    "Origin": "Set this matrix to be equivalent to the rotation specified by the given {@link Quaterniond}.",
    "Reference": "Set this matrix to be equivalent to the rotation specified by the given {@link Quaterniondc}.",
    "HebCup": "Set this matrix to be equivalent to the rotation specified by the given {@link Quaterniondc}."
}
{
    "Origin": "Returns the {@link ISeedingStrategyFactory} used by this factory.",
    "Reference": "Returns the {@link SeedingStrategyFactory} used by this factory.",
    "HebCup": "Returns the {@link SeedingStrategyFactory} used by this factory."
}
{
    "Origin": "Locates a packaged or exploded module, returning a {@code ModuleReference}\nto the module.",
    "Reference": "Reads a packaged or exploded module, returning a {@code ModuleReference}\nto the module.",
    "HebCup": "Locates a packaged or exploded module, returning a {@code ModuleReference}\nto the module."
}
{
    "Origin": "Verifies whether signature is made by signer with publicKey",
    "Reference": "Verifies whether signature is made by signer with pubKey",
    "HebCup": "Verifies whether signature is made by signer with pubKey"
}
{
    "Origin": "Sets the {@link SharedKeyCredential} used to authorize requests sent to the service.",
    "Reference": "Sets the {@link StorageSharedKeyCredential} used to authorize requests sent to the service.",
    "HebCup": "Sets the {@link StorageSharedKeyCredential} used to authorize requests sent to the service."
}
{
    "Origin": "Sets the resource types.",
    "Reference": "Sets the resourceTypes.",
    "HebCup": "Sets the resource types."
}
{
    "Origin": "Create a Payload from the given data.",
    "Reference": "Create a Payload with data only.",
    "HebCup": "Create a Payload from the given data."
}
{
    "Origin": "Get a string representation of a pokemon rating, for example \"A\" or \"B+\".",
    "Reference": "Get a string representation of a pokemon rating, for example \"AB\" or \"TG\".",
    "HebCup": "Get a string representation of a pokemon rating , initCPMax example ``A`` or ``B+``."
}
{
    "Origin": "Returns a {@link PointerBuffer} view of the {@code data.l} field.",
    "Reference": "Returns a {@link CLongBuffer} view of the {@code data.l} field.",
    "HebCup": "Returns a {@link CLongBuffer} view of the {@code data.l} field."
}
{
    "Origin": "***** Property JVERSION *****",
    "Reference": "***** Property JAVAVERSION *****",
    "HebCup": "***** Property JAVAVERSION *****"
}
{
    "Origin": "Convert this MapX to a ListX via the provided transformation function",
    "Reference": "Convert this MapX to a Seq via the provided transformation function",
    "HebCup": "Convert this MapX to a Seq via the provided transformation function"
}
{
    "Origin": "This methods checks that this node, and all its nodes recursively, do not\ncontain elements that were introduced in more recent versions of the ASM\nAPI than the given version.",
    "Reference": "This method checks\nthat this node, and all its children recursively, do not contain elements that were introduced\nin more recent versions of the ASM API than the given version.",
    "HebCup": "This methods checks that this node, and all its nodes recursively, do not\ncontain elements that were introduced in more recent versions of the ASM\nAPI than the given version."
}
{
    "Origin": "If one param is a float, the other is converted to a float.",
    "Reference": "a*b If one param is a float,\nthe other is converted to a float.",
    "HebCup": "If one param is a float, the other is converted to a float."
}
{
    "Origin": "Returns a string representation of this object; useful for testing and debugging.",
    "Reference": "Returns a string representation of this object.",
    "HebCup": "Returns a string representation of this object; useful for testing and debugging."
}
{
    "Origin": "Recursively scan all files in the designated directories.",
    "Reference": "Scan all of the given paths.",
    "HebCup": "Recursively Files.walk all files in the designated directories."
}
{
    "Origin": "Get the Date that this Token expires",
    "Reference": "Get the ZonedDateTime that this Token expires",
    "HebCup": "Get the ZonedDateTime that this Token expires"
}
{
    "Origin": "Returns a new Task that, when this task completes\nnormally, executes the given action using the supplied Scheduler.",
    "Reference": "Returns a new Task that, when this task completes\nnormally, executes the given action using the supplied Executor.",
    "HebCup": "Returns a new Task that, when this task completes normally, executes the given action using the supplied Executor."
}
{
    "Origin": "Refreshes the filter view.",
    "Reference": "Refreshes the project view.",
    "HebCup": "Refreshes the filter view."
}
{
    "Origin": "Assumes {@code string} is in {@value #ENCODING_CHARSET} format.",
    "Reference": "Assumes {@code string} is in {@see #ENCODING_CHARSET} format.",
    "HebCup": "Assumes {@code string} is in {@value #ENCODING_CHARSET} format."
}
{
    "Origin": "Returns {@code true} if this module exports the given package to the\ngiven module.",
    "Reference": "Returns {@code true} if this module exports or opens the given package\nto the given module.",
    "HebCup": "Returns {@code true} if this module exports the given package to the\ngiven module."
}
{
    "Origin": "Checks whether two filenames are equal after both have been normalized\nand using the case rules of the system.",
    "Reference": "Checks whether two fileNames are equal after both have been normalized\nand using the case rules of the system.",
    "HebCup": "Checks whether two filenames are equal after both have been normalized\nand using the case rules of the system."
}
{
    "Origin": "If\n{@link Context#dropPermissions()} has been called then this will return the guest user no matter who the real\nauthor is.",
    "Reference": "If\n{@link XWikicontext#dropPermissions()} has been called then this will return the guest user no matter who the\nreal author is.",
    "HebCup": "DocumentReference {@link Context#dropPermissions ()} has been called then this will return the guest user no matter who the real author is."
}
{
    "Origin": "Set the new period between two lifecycle events.",
    "Reference": "Set the new period between two lifecycle events in seconds.",
    "HebCup": "setPeriodic the new period between two lifecycle events."
}
{
    "Origin": "Returns the package type (EXPath/internal).",
    "Reference": "Returns the package type.",
    "HebCup": "Returns the package type (EXPath/internal)."
}
{
    "Origin": "CallPeers to reflect a possible change in the media setup\nrelated to video.",
    "Reference": "Call, to reflect the current state of the the video contents of\nthis Call.",
    "HebCup": "CallPeers to reflect a possible change in the media setup\nrelated to video."
}
{
    "Origin": "Returns a stream of non-directory entries in this jmod file.",
    "Reference": "Returns a stream of entries in this JMOD file.",
    "HebCup": "Returns a stream of non-directory entries in this jmod file."
}
{
    "Origin": "Test the write path using a {@link FakeWriter} and verifying the expected log statements are\nwritten.",
    "Reference": "Test the write path using a {@link FakeWriter} and verifies the expected log statements are\nwritten.",
    "HebCup": "Test the write path using a {@link FakeWriter} and verifying the expected log statements are\nwritten."
}
{
    "Origin": "Shifts the focus to the previous element.",
    "Reference": "Shifts the focus to the previous focus.",
    "HebCup": "Shifts the focus to the previous element."
}
{
    "Origin": "Apply the rotation transformation of the given {@link Quaterniond} to this matrix.",
    "Reference": "Apply the rotation transformation of the given {@link Quaterniondc} to this matrix.",
    "HebCup": "Apply the rotation transformation of the given {@link Quaterniondc} to this matrix."
}
{
    "Origin": "| If left child is added to queue before right child, it will be in the front of the level.",
    "Reference": "| If left child is enqueued before right child, it will be in the front in the result.",
    "HebCup": "| If left child is added to queue before right child, it will be in the front of the col."
}
{
    "Origin": "Returns default compiler options.",
    "Reference": "Creates default compiler options.",
    "HebCup": "Returns default compiler options."
}
{
    "Origin": "Removes the subtree rooted at {@code this} node from the tree, giving\n{@code this} node a {@code null} parent.",
    "Reference": "Detaches the subtree rooted at {@code this} node from the tree, giving\n{@code this} node a {@code null} parent.",
    "HebCup": "< the subtree rooted at {@code this} node from the tree , giving {@code this} node a {@code null} parent."
}
{
    "Origin": "If the prefetch is not needed, {@link #playFromUri} can be directly called\nwithout this method.",
    "Reference": "If the prepare is not needed, {@link #playFromUri} can be directly called\nwithout this method.",
    "HebCup": "If the prepare is not needed , {@link#playFromUri} can be directly called without this method."
}
{
    "Origin": "Creates a CaptureRequestConfig.Builder contains shared options.",
    "Reference": "Creates a CaptureConfig.Builder contains shared options.",
    "HebCup": "Creates a CaptureConfig.Builder contains shared options."
}
{
    "Origin": ":\n   property1 = value1,value2,\"a quoted value\",'another quoted value'",
    "Reference": ":",
    "HebCup": ":\n   property1 = value1,value2,\"a quoted value\",'another quoted value'"
}
{
    "Origin": "When multiple tokens, an ordered  with slop of 0 is returned.",
    "Reference": "When multiple tokens, an ordered  with slop 0 is returned.",
    "HebCup": "When multiple tokens, an ordered  with slop of 0 is returned."
}
{
    "Origin": "Code snippets for {@link LeaseClientBuilder#buildClient()}.",
    "Reference": "Code snippets for {@link BlobLeaseClientBuilder#buildClient()}.",
    "HebCup": "Code snippets for {@link BlobLeaseClientBuilder#buildClient ()}."
}
{
    "Origin": "Take the date referenced by given {@literal fieldReference} in the UTC timezone.",
    "Reference": "Take the date referenced by given {@literal fieldReference}.",
    "HebCup": "Take the date referenced by given {@literal fieldReference} in the UTC timezone."
}
{
    "Origin": "Create a connection creator for permanent connections.",
    "Reference": "Creates a channel creator for permanent TCP connections.",
    "HebCup": "Create a connection creator for permanent connections."
}
{
    "Origin": "{@code CopticEra} is an enum representing the Coptic eras of ERA_BEFORE_AM/ERA_AM.",
    "Reference": "{@code CopticEra} is an enum representing the Coptic eras of BEFORE_AM/AM.",
    "HebCup": "{@code CopticEra} is an enum representing the Coptic eras of BEFORE_AM/ERA_AM."
}
{
    "Origin": "Directions are {@link com.sk89q.worldedit.Vector}s that determine\nwhat adjacent points area available.",
    "Reference": "Directions are {@link BlockVector3}s that determine\nwhat adjacent points area available.",
    "HebCup": "Directions are {@link com.sk89q.worldedit.BlockVector3}s that determine what adjacent points area available."
}
{
    "Origin": "Parse the given comma-separated string into a list of {@code MediaType} objects.",
    "Reference": "Parse the comma-separated string into a list of {@code MediaType} objects.",
    "HebCup": "Parse the given comma-separated string into a list of {@code MediaType} objects."
}
{
    "Origin": "Tries to registers {@code manager} for the given {@code typeUrl}.",
    "Reference": "Tries to register {@code manager} for the given {@code typeUrl}.",
    "HebCup": "Tries to registers {@code manager} for the given {@code)}."
}
{
    "Origin": "Set the value for some metadata on a collection alias.",
    "Reference": "Set the value for some properties on a collection alias.",
    "HebCup": "Set the value for some Properties on a collection alias."
}
{
    "Origin": "User / Group may restore files / folders from Recycle Bin - room permissions required.",
    "Reference": "User / Group may restore files / folders from recycle bin - room permissions required.",
    "HebCup": "User / Group may restore files / folders from recycle Bin - room permissions required."
}
{
    "Origin": "Saves changes from the bound fields to the given bean if all validators\n(binding and bean level) pass.",
    "Reference": "Writes changes from the bound fields to the given bean if all validators\n(binding and bean level) pass.",
    "HebCup": "Writes changes from the bound fields to the given bean if all validators (binding and bean level) pass."
}
{
    "Origin": "Getter for {@link #allowHeaders}",
    "Reference": "Getter for {@link #allowedHeaders}",
    "HebCup": "Getter for {@link#allowedHeaders}"
}
{
    "Origin": "See Immutable Map Static Factory Methods for details.",
    "Reference": "See Unmodifiable Maps for details.",
    "HebCup": "See Unmodifiable Map Static Factory Methods for details."
}
{
    "Origin": "If the argument points to a configuration file, the configuration file is loaded to configure the Titan graph",
    "Reference": "If the argument points to a configuration file, the configuration file is loaded to configure the JanusGraph graph",
    "HebCup": "If the argument points to a configuration file, the configuration file is loaded to configure the Janus Graph"
}
{
    "Origin": "Enable http status 301/302 auto-redirect support",
    "Reference": "Specifies whether http status 301/302 auto-redirect support is enabled",
    "HebCup": "Enable http status 301/302 auto-redirect support"
}
{
    "Origin": "Computes the weighted covariance matrix of the given data set.",
    "Reference": "Computes the weighted result for the covariance matrix of the given data set.",
    "HebCup": "Computes the weighted covariance matrix of the given data set."
}
{
    "Origin": "Binds the specified {@link Service} at the specified path pattern.",
    "Reference": "Binds the specified {@link HttpService} at the specified path pattern.",
    "HebCup": "Binds the specified {@link HttpService} at the specified path pattern."
}
{
    "Origin": "This method must only be used for type references\nwhose sort is {@link #CLASS_EXTENDS CLASS_EXTENDS}.",
    "Reference": "This method must only be used for type references whose sort is {@link #CLASS_EXTENDS}.",
    "HebCup": "This method must only be used for type references\nwhose sort is {@link #CLASS_EXTENDS CLASS_EXTENDS}."
}
{
    "Origin": "Aggregate given void publishers into a new {@literal Mono} that will be\nfulfilled when all of the given {@literal Publishers} have been fulfilled.",
    "Reference": "Aggregate given publishers into a new {@literal Mono} that will be\nfulfilled when all of the given {@literal Publishers} have been fulfilled.",
    "HebCup": "Aggregate given ? publishers into a new {@literal Mono} that will be fulfilled when all of the given {@literal Publishers} have been fulfilled."
}
{
    "Origin": "So when we got packet and all is ok - call this method.",
    "Reference": "So when we got block and all is ok - call this method.",
    "HebCup": "So when we got session and all is ok - call this method."
}
{
    "Origin": "Add a new cell to this table and copy processed content of\ntc to it.",
    "Reference": "Add a new cell to this table",
    "HebCup": "Add a new cell to this table and copy processed content of\ntc to it."
}
{
    "Origin": "Useful because the\ngranularity of the clock on some systems is low, so doing a Thread.sleep(10) may not give you\na different clock value, for example.",
    "Reference": "(Also, useful because the granularity\nof the clock on some systems is low, so doing a Thread.sleep(10) may not give you a different clock value",
    "HebCup": "Useful because the\ngranularity of the clock on some systems is low, so doing a Thread.sleep(10) may not give you\na different clock value, for example."
}
{
    "Origin": "POSTs the experiment to the server and updates it with the returned values.",
    "Reference": "POSTs the experiment for the existing app to the server and updates it with the returned values.",
    "HebCup": "POSTs the experiment to the server and updates it with the returned values."
}
{
    "Origin": "estimateMinimumDemand reports 0 until request, nonzero after\nrequest, and zero again after delivery",
    "Reference": "estimateMinimumDemand reports 0 until request, nonzero after\nrequest",
    "HebCup": "estimateMinimumDemand reports 0 until request, nonzero after\nrequest, and zero again after delivery"
}
{
    "Origin": "Checks and adjusts the market data names.",
    "Reference": "Checks and adjusts the parameter metadata.",
    "HebCup": "Checks and adjusts the market data md."
}
{
    "Origin": "Obtains an instance from the specified unique name.",
    "Reference": "Obtains an instance from the specified name.",
    "HebCup": "Obtains an instance from the specified name."
}
{
    "Origin": "The returned map doesn't contain any entry for component uuid for which there is no entry in the queue (ie.",
    "Reference": "The returned map doesn't contain any entry for main component uuids for which there is no entry in the queue (ie.",
    "HebCup": "The returned map doesn't contain any entry for Main Component Uuid for which there is no entry in the queue (ie."
}
{
    "Origin": "The sequence dictionary is taken from the read-count file.",
    "Reference": "The sequence dictionary is taken from the read-count path.",
    "HebCup": "The sequence dictionary is taken from the read-Count Path."
}
{
    "Origin": "Read up to {@code length} of bytes from {@code in}\nuntil EOF is detected.",
    "Reference": "Read exactly {@code length} of bytes from {@code in}.",
    "HebCup": "Read up to {@code Bytes} of bytes from {@code in} until EOF is detected."
}
{
    "Origin": "The conversion extracts the {@link ChronoField#EPOCH_DAY epoch-day} field.",
    "Reference": "The conversion extracts the {@link ChronoField#EPOCH_DAY EPOCH_DAY} field.",
    "HebCup": "The conversion extracts the {@link ChronoField#EPOCH_DAY epoch-day} field."
}
{
    "Origin": "Returns the comment describing the purpose of this cookie, or\nnull if no such comment has been defined.",
    "Reference": "Returns the comment describing the purpose of this cookie, or\n{@code null} if no such comment has been defined.",
    "HebCup": "Returns the comment describing the purpose of this cookie, or\nnull if no such comment has been defined."
}
{
    "Origin": "JAX-WS VERSION API is loaded from {0}, But JAX-WS runtime requires JAX-WS VERSION API.",
    "Reference": "JAX-WS VERSION API is loaded from {0}, But JAX-WS runtime requires JAX-WS VERSION or newer API.",
    "HebCup": "JAX-WS VERSION API is loaded from {0}, But JAX-WS runtime requires JAX-WS VERSION API."
}
{
    "Origin": "Gets the avatar of a specific MetaContact in the form of an",
    "Reference": "Gets the avatar of a specific UIContact in the form of an",
    "HebCup": "Gets the get of a specific MetaContact in the form of an"
}
{
    "Origin": "Get hex string for the supplied big integer: \"0x\" where hex\nstring is outputted in groups of exactly four characters sub-divided by\nspaces.",
    "Reference": "Get hex string for the supplied big integer: \"0x\" where hex\nstring is output in groups of exactly four characters sub-divided by\nspaces.",
    "HebCup": "Get hex string for the supplied big integer: \"0x\" where hex\nstring is outputted in groups of exactly four characters sub-divided by\nspaces."
}
{
    "Origin": "Creates a negotiator used for ALTS server.",
    "Reference": "Creates a protocol negotiator for ALTS on the server side.",
    "HebCup": "Creates a negotiator used for ALTS Protocol."
}
{
    "Origin": "Throws an exception if input must be valid,\nor returns a question mark as replacement.",
    "Reference": "Throws an exception if input must be valid,\nor returns a replacement character as replacement.",
    "HebCup": "Throws an exception if input must be valid,\nor returns a question mark as replacement."
}
{
    "Origin": "Mark the DeterministicKeys as used, if they match the pubkeyHash",
    "Reference": "Mark the DeterministicKeys as used, if they match the pubKeyHash",
    "HebCup": "Mark the DeterministicKeys as used , if they match the pubKeyHash"
}
{
    "Origin": "Sets the group name used as an endpoint group password for authentication\non the target endpoint.",
    "Reference": "Sets the cluster name used as an endpoint group password for authentication\non the target endpoint.",
    "HebCup": "Sets the cluster Name used as an endpoint group password for authentication on the target endpoint."
}
{
    "Origin": "Builds the index from the segment bytes.",
    "Reference": "Returns the segment manager.",
    "HebCup": "Builds the index from the segment bytes."
}
{
    "Origin": "Computes the median for each pixel across all bands in the {@link Planar} image.",
    "Reference": "Computes the median for each pixel across selected bands in the {@link Planar} image.",
    "HebCup": "Computes the median for each pixel across all bands in the {@link Planar} image."
}
{
    "Origin": "get production date (available on some multisensors)",
    "Reference": "get hardware revision (available on some multisensors)",
    "HebCup": "get production date (available on some multisensors)"
}
{
    "Origin": "Returns the value in the user aligned with the integer value in the device space, applying the rounding and parity modes.",
    "Reference": "Returns the value in the user space aligned with the integer value in the device space, applying the rounding and parity modes.",
    "HebCup": "Returns the value in the user aligned with the integer value in the device space, applying the rounding and parity modes."
}
{
    "Origin": "Requests that the player prefetch a media item with the specific search query for playback.",
    "Reference": "Requests that the player prepare a media item with the specific search query for playback.",
    "HebCup": "Requests that the player prepare a media item with the specific search query for playback."
}
{
    "Origin": "This method may return null if the field does not exist.",
    "Reference": "This method may return null if the field does not exist or if it has no terms.",
    "HebCup": "This method may return null if the) does not exist."
}
{
    "Origin": "Checks if the expression bound to this variable has the given flag.",
    "Reference": "Indicates if the expression bound to this variable has one of the specified compiler\nproperties.",
    "HebCup": "Checks if the expression bound to this variable has the given flags."
}
{
    "Origin": "Shows the message if no search params were selected.",
    "Reference": "Shows the first available tab.",
    "HebCup": "Shows the message if First search params were selected."
}
{
    "Origin": "Otherwise the patches for the module\nare scanned (to find any new concealed packages) and a new module\nreference is returned.",
    "Reference": "Otherwise the patches for the module\nare scanned (to find any new packages) and a new module reference is\nreturned.",
    "HebCup": "Otherwise the map for the module are scanned (to find any new concealed packages) and a new module reference is returned."
}
{
    "Origin": "This allows additional information to be attached to the trade.",
    "Reference": "This allows additional information to be attached.",
    "HebCup": "This allows additional information to be attached to the PortfolioItem."
}
{
    "Origin": "Return the array of s that can\nappear in the serialized form.",
    "Reference": "Returns the taglets that can appear in the serialized form.",
    "HebCup": "Return the array of s that can\nappear in the serialized form."
}
{
    "Origin": "Returns true if this result is an underflow condition.",
    "Reference": "Tells whether or not this object describes an underflow condition.",
    "HebCup": "Returns true if (result is an underflow condition."
}
{
    "Origin": "Return the quality value, as indicated by a {@code q} parameter, if any.",
    "Reference": "Return the quality factor, as indicated by a {@code q} parameter, if any.",
    "HebCup": "Return the quality value, as indicated by a {@code q} parameter, if any."
}
{
    "Origin": "If possible the supplier should be cached in the AST in order to\navoid the repeated lookup of the parent executable or root node.",
    "Reference": "If possible the reference should be cached in the AST in order to\navoid the repeated lookup of the parent executable or root node.",
    "HebCup": "If possible the LanguageReference should be cached in the AST in order to avoid the repeated lookup of the parent executable or root node."
}
{
    "Origin": "Returns a string representation of this object; useful for testing and debugging.",
    "Reference": "Returns a string representation of this object.",
    "HebCup": "Returns a string representation of this object; useful for testing and debugging."
}
{
    "Origin": "Looked at this post: URL",
    "Reference": "credit: URL",
    "HebCup": "Looked at this post: URL"
}
{
    "Origin": "Main method to invoke this demo about how to analyze sentiment of a text input.",
    "Reference": "Main method to invoke this demo about how to analyze the sentiment of an input text.",
    "HebCup": "Main method to invoke this demo about how to analyze sentiment of a text input."
}
{
    "Origin": "Returns the value of cmakeAnalyzerEnabled.",
    "Reference": "Get the value of cmakeAnalyzerEnabled.",
    "HebCup": "Returns the value of cmakeAnalyzerEnabled."
}
{
    "Origin": "Gets the type of the exception that caused the failure, not present if it wasn't caused by an exception.",
    "Reference": "Gets the type of the throwable that caused the failure, not present if it wasn't caused by a throwable.",
    "HebCup": "Gets the type of the Throwable that caused the failure , not present if it wasn't caused by an exception."
}
{
    "Origin": "registerHarvestable_Crop         | An ItemStack of a block, with a damage value indicating the meta value to harvest at.",
    "Reference": "registerHarvestable_Crop         | An @Nonnull ItemStack of a block, with a damage value indicating the meta value to harvest at.",
    "HebCup": "registerHarvestable_Crop         | An ItemStack of a block, with a damage value indicating the meta value to harvest at."
}
{
    "Origin": "The list can be null.",
    "Reference": "The list is allowed to be null.",
    "HebCup": "The items can be null."
}
{
    "Origin": "Atomically set the hi integer value without changing\nthe lo value.",
    "Reference": "Atomically sets the hi value without changing the lo value.",
    "HebCup": "Atomically getAndSet the hi integer value without changing the lo value."
}
{
    "Origin": "Read owner for a given version, with CL=QUORUM and Serial CL=SERIAL to commit any remaining uncommitted Paxos state before proceeding with the read.",
    "Reference": "Read owner for a given version, with CL=SERIAL to commit any remaining uncommitted Paxos state before proceeding with the read.",
    "HebCup": "Serial owner for a given version , with CL=QUORUM and Serial CL=SERIAL to commit any remaining uncommitted Paxos state before proceeding with the read."
}
{
    "Origin": "For example \"Sep\".",
    "Reference": "For example \"September\" in English.",
    "HebCup": "For example \"Sep\"."
}
{
    "Origin": "Turns this ReactiveSeq into a HotStream, a connectable & pausable Stream, being executed on a thread on the\nsupplied executor, that is producing data.",
    "Reference": "Turns this ReactiveSeq into a Connectable, a connectable & pausable Stream, being executed on a thread on the\nsupplied executor, that is producing data.",
    "HebCup": "Turns this ReactiveSeq into a Connectable , a connectable & pausable Stream , being executed on a thread on the supplied executor , that is producing data."
}
{
    "Origin": "Set Warehouse.",
    "Reference": "Set Lager.",
    "HebCup": "Set Warehouse."
}
{
    "Origin": "Returns the PatchOperation instance for the replace operation, based on the\noperation path.",
    "Reference": "Returns the patch instance for the replace operation (based on the operation path).",
    "HebCup": "Returns the PatchOperation instance for the replace operation, based on the\noperation path."
}
{
    "Origin": "Updates a ChallengeResponse object according to given request and\nresponse and compute a new secret according to the response sent by the\nserver.",
    "Reference": "Updates a {@link ChallengeResponse} object according to given request and\nresponse and compute a new secret according to the response sent by the\nserver.",
    "HebCup": "Updates a ChallengeResponse object according to given request and\nresponse and compute a new secret according to the response sent by the\nserver."
}
{
    "Origin": "Get Balancing.",
    "Reference": "Get Saldierung.",
    "HebCup": "Get Balancing."
}
{
    "Origin": "Bind a named Locale-valued parameter.",
    "Reference": "Bind multiple values to a named query parameter.",
    "HebCup": "Bind a named ParameterList-valued parameter."
}
{
    "Origin": "Returns the userId of the session.",
    "Reference": "Returns the session attributes.",
    "HebCup": "Returns the sessionAttributes of the session."
}
{
    "Origin": "Compares this {@code LocalDate} to another date.",
    "Reference": "Compares this date to another date.",
    "HebCup": "Compares this {@code LocalDate} to another date."
}
{
    "Origin": "Returns the name of the first check, or {@code \"\"}.",
    "Reference": "Returns the name of the first check, or {@code null}.",
    "HebCup": "Returns the name of the first check, or {@code \"\"}."
}
{
    "Origin": "The {@link RsaKeyCreateOptions#getExpires() expires} and {@link",
    "Reference": "The {@link CreateRsaKeyOptions#getExpiresOn() expires} and {@link",
    "HebCup": "The {@link CreateRsaKeyOptions#getExpires () expires} and {@link"
}
{
    "Origin": "Adds units to {@code\ninsertionOrderUnits}.",
    "Reference": "Subtract {@code units} from {@code\nindexedRemainingUnits}.",
    "HebCup": "Adds units to {@code IndexedRemainingUnits}."
}
{
    "Origin": "Group: reset",
    "Reference": "Group: producer",
    "HebCup": "Group: reset"
}
{
    "Origin": "Get Verarbeitet.",
    "Reference": "Get Ordered.",
    "HebCup": "Get Verarbeitet."
}
{
    "Origin": "Loop over the {@link KeyProperties key}\nand call {@link KeyClient#getKey(KeyProperties key properties)}.",
    "Reference": "Loop over the {@link KeyProperties key}\nand call {@link KeyClient#getKey(String, String)}.",
    "HebCup": "Loop over the {@link KeyProperties PropertiesOfKeys} and call {@link KeyClient#getKey(KeyProperties PropertiesOfKeys properties)}."
}
{
    "Origin": "This merges the two objects - {@code this} and the specified time -\nto form an instance of {@code ZonedDateTime}.",
    "Reference": "This merges the two objects - {@code this} and the specified time -\nto form an instance of {@code OffsetDateTime}.",
    "HebCup": "This merges the two objects - {@code this} and the specified time - to form an instance of {@code OffsetDateTime}."
}
{
    "Origin": "If the insertion point equal to the current size, it means the array can be extended.",
    "Reference": "If the insertion point equal to the current size, it means the number is the largest.",
    "HebCup": "If the insertion point equal to the current len , it means the array can be extended."
}
{
    "Origin": "Returns a module supplier.",
    "Reference": "Returns a new module set.",
    "HebCup": "Returns a Module Set."
}
{
    "Origin": "Fetches a preview of the modified text, and shows (fades in) the Preview fragment,\nwhich includes edit summary tags.",
    "Reference": "Fetches preview html from the modified wikitext text, and shows (fades in) the Preview fragment,\nwhich includes edit summary tags.",
    "HebCup": "Fetches a preview of the modified UTF - 8, and shows (fades in) the Preview fragment, which includes edit summary tags."
}
{
    "Origin": "Closes the provisioning driver.",
    "Reference": "Closes the provisioning and storage drivers.",
    "HebCup": "Closes the provisioning driver."
}
{
    "Origin": "Creates new {@link AggregationExpression} that returns the millisecond portion of a date as an integer between 0\nand 999 in the factory timezone (default UTC).",
    "Reference": "Creates new {@link AggregationExpression} that returns the millisecond portion of a date as an integer between 0\nand 999.",
    "HebCup": "Creates new {@link AggregationExpression} that returns the Millisecond.millisecond portion of a date as an integer between 0 and 999 in the factory timezone (default UTC)."
}
{
    "Origin": "Open a webview above the current activity.",
    "Reference": "Open a web view above the current activity.",
    "HebCup": "Open a webview above the current activity."
}
{
    "Origin": "Create space for a new item and returns the rank for that item.",
    "Reference": "Create space for a new item at the end, and returns the rank for that item.",
    "HebCup": "Create space for a new Item and returns the rank for that Item."
}
{
    "Origin": "or throws a {@link com.liferay.mail.NoSuchFolderException} if it could not be found.",
    "Reference": "or throws a {@link NoSuchFolderException} if it could not be found.",
    "HebCup": "or throws a {@link com.liferay.mail.NoSuchFolderException} if it could not be found."
}
{
    "Origin": "Create parameters necessary for creating a reusable Alipay source.",
    "Reference": "Create reusable Alipay Source params.",
    "HebCup": "Create parameters necessary for creating a reusable Alipay source."
}
{
    "Origin": "When the\narea is deleted from the device, it is important first to unregister all geodatabases that are used in the map so\nthe service doesn't have any stray geodatabases registered.",
    "Reference": "Before the area is deleted from the device, it's important to first unregister all geodatabases that are used in\nthe map so the service doesn't have any stray geodatabases registered.",
    "HebCup": "When the area is deleted from the device , it is important first to unregister all geodatabases that are used in the DownloadPreplannedOfflineMap so the service doesn't have any stray geodatabases registered."
}
{
    "Origin": "If {@link #IGNORE_OVERFLOW} is true and one of the bounds is outside the Byte range, then\nthat bound is set to the bound of the Byte range.",
    "Reference": "If {@link #ignoreOverflow} is true and one of the bounds is outside the Byte range, then\nthat bound is set to the bound of the Byte range.",
    "HebCup": "If {@link#ignoreOverflow} is true and one of the bounds is outside the Byte range , then that bound is set to the bound of the Byte range."
}
{
    "Origin": "Updates the summary statistics but does not store the given LogRecord.",
    "Reference": "Updates the summary statistics only if the expected record matches the\nlast record.",
    "HebCup": "Updates the summary statistics but does not store the given Logex."
}
{
    "Origin": "key is the user UUID in string form",
    "Reference": "key is the user UUID in string form + class name of key",
    "HebCup": "key is the user UUID in string form"
}
{
    "Origin": "Loads the SchemaCrawler configuration, and override configuration,\nfrom properties files.",
    "Reference": "Loads the SchemaCrawler configuration from properties file.",
    "HebCup": "Loads the SchemaCrawler configuration, and override configuration,\nfrom properties files."
}
{
    "Origin": "Decide whether to examine all the tables to dump.",
    "Reference": "Decide whether to dump external tables data.",
    "HebCup": "Decide whether to examine all the tables to dump."
}
{
    "Origin": "The conversion extracts the {@link ChronoField#NANO_OF_DAY nano-of-day} field.",
    "Reference": "The conversion extracts the {@link ChronoField#NANO_OF_DAY NANO_OF_DAY} field.",
    "HebCup": "The conversion extracts the {@link ChronoField#NANO_OF_DAY nano-of-day} field."
}
{
    "Origin": "Returns the additional filter query part.",
    "Reference": "Gets the filter query.",
    "HebCup": "Returns the additional FILTER query part."
}
{
    "Origin": "Calls {@link #matches(String, String, Map) matches(pattern, str, null)}",
    "Reference": "Calls {@link #matches(String, String, Map) matches(pattern, str, null, boolean)}",
    "HebCup": "Calls {@link #matches(String, String, Map) matches(pattern, str, null)}"
}
{
    "Origin": "Removes all of the service contracts from ES.",
    "Reference": "Removes all of the api contracts from ES.",
    "HebCup": "Removes all of the Api Contracts from ES."
}
{
    "Origin": "Get the metrics context for the program, the tags are constructed with the program run id and\nthe profile id",
    "Reference": "Emit the metrics context for the program, the tags are constructed with the program run id and\nthe profile id",
    "HebCup": "Get the void for the program, the tags are constructed with the program run id and the profile id"
}
{
    "Origin": "Tests the engine starts up, executes 1 trade cycle successfully, but then receives unexpected Exception from",
    "Reference": "Tests the engine starts up, executes 1 trade cycle successfully, but then receives unexpected",
    "HebCup": "Tests the engine starts up, executes 1 trade cycle successfully, but then receives unexpected Exception from"
}
{
    "Origin": "Return the Java constructor corresponding to the Kotlin primary constructor if any.",
    "Reference": "Retrieve the Java constructor corresponding to the Kotlin primary constructor, if any.",
    "HebCup": "Return the Java constructor corresponding to the Kotlin primary constructor if any."
}
{
    "Origin": "Also checks that required {@link Role} are satisfied",
    "Reference": "Also checks that required Role are satisfied",
    "HebCup": "Also checks that required {@link Role} are satisfied"
}
{
    "Origin": "Returns all the sync d l objects where companyId = ?",
    "Reference": "Returns all the sync d l objects where repositoryId = ?",
    "HebCup": "Returns all the sync d l objects where repositoryId = ?"
}
{
    "Origin": "Has the given leadershipTermId already been appended?",
    "Reference": "Has the given leadershipTermId unknown to the log?",
    "HebCup": "is the given leadershipTermId already been appended?"
}
{
    "Origin": "Returns a new {@link Key.Builder}.",
    "Reference": "Returns a new {@link UnloadedToolchainContextKey.Builder}.",
    "HebCup": "Returns a new {@link UnloadedToolchainContextKey.Builder}."
}
{
    "Origin": "Returns the {@link ProgramId} of the program who emit this message.",
    "Reference": "Returns the {@link EntityId} of the entity who emit this message.",
    "HebCup": "Returns the {@link EntityId} of the program who emit this message."
}
{
    "Origin": "This method must only be used for type references\nwhose sort is {@link #EXCEPTION_PARAMETER EXCEPTION_PARAMETER} .",
    "Reference": "This method must\nonly be used for type references whose sort is {@link #EXCEPTION_PARAMETER} .",
    "HebCup": "This method must only be used for type references\nwhose sort is {@link #EXCEPTION_PARAMETER EXCEPTION_PARAMETER} ."
}
{
    "Origin": "Creates a {@link Behavior} that uses the given {@link WicketFunction function}\nto do something with a component's attribute.",
    "Reference": "Creates a {@link Behavior} that uses the given {@link WicketFunction function}\nto do something with a component's attributeName.",
    "HebCup": "Creates a {@link Behavior} that uses the given {@link WicketFunction function} to do something with a component's attributeName."
}
{
    "Origin": "Returns the identifier of a transaction.",
    "Reference": "Returns the identifier of the command.",
    "HebCup": "Returns the identifier of a transaction."
}
{
    "Origin": "Deletes the specified variable from the configuration.",
    "Reference": "Deletes the specified variable from the CONFIGURATION.",
    "HebCup": "Deletes the specified variable from the CONFIGURATION."
}
{
    "Origin": "Register sub-objects such as caches",
    "Reference": "Register sub-objects such as caches and our own metrics",
    "HebCup": "Register sub-objects such as caches"
}
{
    "Origin": "Tries to move the bookmark to the specified destination.",
    "Reference": "Attempts to rename the bookmark to the specified destination.",
    "HebCup": "Tries to rename the bookmark to the specified destination."
}
{
    "Origin": "Updates settings for building clients.",
    "Reference": "Updates settings for building a client.",
    "HebCup": "Updates settings for building client."
}
{
    "Origin": "EventListener callback -\n unused for now - how many devices support events?",
    "Reference": "EventListener callback -\n unused for now - supported in miniupnpd as of VERSION",
    "HebCup": "EventListener callback -\n unused for now - how many devices support events?"
}
{
    "Origin": "By default, {@link #useAnyPlanner()} is\nenabled.",
    "Reference": "By default, {@link #useOldPlanner()} is\nenabled.",
    "HebCup": "By default, {@link #useAnyPlanner()} is\nenabled."
}
{
    "Origin": "Adds an entry to the layer with the given permissions.",
    "Reference": "Adds an entry to the layer with the given permissions and file modification time.",
    "HebCup": "Adds an entry to the layer with the given permissions."
}
{
    "Origin": "Returns a text description of this result.",
    "Reference": "Returns a string describing this coder result.",
    "HebCup": "Returns a text description of this result."
}
{
    "Origin": "Returns number of arguments for the specified type.",
    "Reference": "Returns maximal number of arguments for the specified type.",
    "HebCup": "Returns number of MaxArgument for the specified type."
}
{
    "Origin": "Removes a WebSocket from the members list.",
    "Reference": "Removes a WebSocket from the clients list.",
    "HebCup": "Removes a WebSocket from the members list."
}
{
    "Origin": "Returns the ISO code, except when the alias \"loc\" is used.",
    "Reference": "Returns the code, except when the alias \"{@code loc}\" is used.",
    "HebCup": "String the ISO code , except when the alias ``loc`` is used."
}
{
    "Origin": "Replaces existing tags of the specified {@link NamespacedEntityId} with a new set of tags.",
    "Reference": "Replaces existing tags of the specified {@link MetadataEntity} with a new set of tags.",
    "HebCup": "Replaces existing tags of the specified {@link MetadataEntity} with a new set of tags."
}
{
    "Origin": "Get sharding encryptor.",
    "Reference": "Find sharding encryptor.",
    "HebCup": "find Sharding Encryptor."
}
{
    "Origin": "Returns an unmodifiable Map of metadata for a given alias.",
    "Reference": "Returns an unmodifiable Map of properties for a given alias.",
    "HebCup": "Returns an unmodifiable Map of Properties for a given alias."
}
{
    "Origin": "Sets the storage serializer.",
    "Reference": "Sets the storage namespace.",
    "HebCup": "Sets the storage Namespace."
}
{
    "Origin": "Create an instance of {@link JAXBElement }{@code <}{@link CTMarkupRange }{@code >}}",
    "Reference": "Create an instance of {@link JAXBElement }{@code <}{@link CTMoveFromRangeEnd }{@code >}}",
    "HebCup": "Create an instance of {@link JAXBElement} {@code <} {@link CTMoveFromRangeEnd} {@code >}}"
}
{
    "Origin": "Get the sorted iterable of all {@link RankedProvider providers} (custom and default) registered for the given service\nprovider contract in the underlying {@link ServiceLocator HK2 service locator} container.",
    "Reference": "Get the sorted iterable of all {@link RankedProvider providers} (custom and default) registered for the given service\nprovider contract in the underlying {@link InstanceManager instance manager} container.",
    "HebCup": "Get the sorted iterable of all {@link RankedProvider providers} (custom and default) registered for the given service provider contract in the underlying {@link InstanceManager HK2 service locator} container."
}
{
    "Origin": "If the variable was set, a configuration {@link ConfigurationEvent event} will be passed to\nall registered listeners.",
    "Reference": "If the variable was set, a CONFIGURATION {@link ConfigurationEvent event} will be passed to\nall registered listeners.",
    "HebCup": "If the variable was set , a CONFIGURATION {@link ConfigurationEvent event} will be passed to all registered listeners."
}
{
    "Origin": "Gets the list of site selector options.",
    "Reference": "Returns the site selector options for the sitemap.",
    "HebCup": "Gets the list of Sitemap Site Selector Options."
}
{
    "Origin": "Shutdown all the channel creators out there.",
    "Reference": "Shuts down all the channel creators.",
    "HebCup": "Shutdown all the channel creators out there."
}
{
    "Origin": "User / Group may permanently remove files / folders from the Recycle Bin.",
    "Reference": "User / Group may permanently remove files / folders from the recycle bin.",
    "HebCup": "User / Group may permanently remove files / folders from the Recycle bin."
}
{
    "Origin": "For EL need to unquote everything but no need to convert anything.",
    "Reference": "Once inside EL, no need to unquote or convert anything.",
    "HebCup": "For EL need to unquote everything but no need to convert anything."
}
{
    "Origin": "{@codesnippet com.azure.keyvault.keys.keyclient.getKeyWithResponse#KeyProperties-Context}",
    "Reference": "{@codesnippet com.azure.keyvault.keys.keyclient.deleteKey#string}",
    "HebCup": "{@codesnippet com.azure.keyvault.keys.keyclient.beginDeleteKey#KeyProperties-Context}"
}
{
    "Origin": "search key match RegExps value",
    "Reference": "search key match RegExp values",
    "HebCup": "search key match RegExps value"
}
{
    "Origin": "The {@link RequestScope.Instance scope instance} is NOT released by the method (this\nmust be done explicitly).",
    "Reference": "The {@link RequestContext scope context} is NOT released by the method (this\nmust be done explicitly).",
    "HebCup": "The {@link RequestScope.Instance context} is NOT released by the method (this must be done explicitly)."
}
{
    "Origin": "Access Control Using AWS Identity and Access Management (IAM) \n.",
    "Reference": "For more information, see Access Control Using AWS Identity and Access Management (IAM).",
    "HebCup": "Access Control Using AWS Identity and Access Management (IAM) \n."
}
{
    "Origin": "The input file must be a list of whitespace-separated verb-lemma-POS triples, one verb\nform per line.",
    "Reference": "The input file must be a list of tab-separated verb-POS pairs, one verb\nper line.",
    "HebCup": "The input file must be a list of whitespace-separated verb-lemma-POS triples, one verb\nform per line."
}
{
    "Origin": "Create an instance of {@link JAXBElement }{@code <}{@link CTMarkupRange }{@code >}}",
    "Reference": "Create an instance of {@link JAXBElement }{@code <}{@link CTMoveToRangeEnd }{@code >}}",
    "HebCup": "Create an instance of {@link JAXBElement} {@code <} {@link CTMoveToRangeEnd} {@code >}}"
}
{
    "Origin": "Release any resources held by this SyslogAppender.",
    "Reference": "Release resources held by this SyslogAppender,\nincluding the datagram socket.",
    "HebCup": "Release any resources held by this SyslogAppender."
}
{
    "Origin": "Reset starting address.",
    "Reference": "Reset head segment.",
    "HebCup": "reset Head Segment."
}
{
    "Origin": "Returns an existing {@link SSHSession} for the given host.",
    "Reference": "Returns an existing {@link SSHSession} for the given run.",
    "HebCup": "Returns an existing {@link SSHSession} for the given host."
}
{
    "Origin": "Returns an {@code application.wadl} description with all RESTXQ endpoints.",
    "Reference": "Returns an {@code application.wadl} description with all RESTXQ end-points.",
    "HebCup": "Returns an {@code application.wadl} description with all Web endpoints."
}
{
    "Origin": "The {@link RsaKeyCreateOptions#getKeySize() keySize} can be\noptionally specified.",
    "Reference": "The {@link CreateRsaKeyOptions#getKeySize() keySize} can be\noptionally specified.",
    "HebCup": "The {@link CreateRsaKeyOptions#getKeySize () keySize} can be optionally specified."
}
{
    "Origin": "Returns a boolean value indicating whether the segment is full.",
    "Reference": "Returns a boolean indicating whether the segment is full.",
    "HebCup": "Returns a boolean value indicating whether the segment is full."
}
{
    "Origin": "Sets the enabled.",
    "Reference": "Set the enabled.",
    "HebCup": "Sets the enabled."
}
{
    "Origin": "Set the valueType.",
    "Reference": "Set the type.",
    "HebCup": "Set the type."
}
{
    "Origin": "Convert to primitive types, returning default value if text is null.",
    "Reference": "Convert to character, returning default value if text is inconvertible.",
    "HebCup": "Convert to primitive types, returning default value if text is null."
}
{
    "Origin": "Returns a stream of modules upon which the given module `requires public`",
    "Reference": "Returns a stream of modules upon which the given module `requires transitive`",
    "HebCup": "Returns a stream of modules upon which the given module `requires Transitive`"
}
{
    "Origin": "Static resources are resolved from classpath.",
    "Reference": "Static resources are resolved from:",
    "HebCup": "Static resources are resolved from classpath."
}
{
    "Origin": "Get type of the Trigger.",
    "Reference": "Get the resource value.",
    "HebCup": "Get type of the SqlTrigger."
}
{
    "Origin": "Returns the string tag if set, or {@link Constants#NULL_STRING_TAG} instead.",
    "Reference": "Returns the string tag if set, or {@link #NULL_STRING_TAG} instead.",
    "HebCup": "Returns the string tag if set, or {@link Constants#NULL_STRING_TAG} instead."
}
{
    "Origin": "The {@link RsaKeyCreateOptions} is required.",
    "Reference": "The {@link CreateRsaKeyOptions} is required.",
    "HebCup": "The {@link CreateRsaKeyOptions} is required."
}
{
    "Origin": "Parse a String generated by {@link #format()}",
    "Reference": "Parse a String generated by {@link #format()} to extract the simple details of the main type.",
    "HebCup": "parseMainType a String generated by {@link#format ()}"
}
{
    "Origin": "Defaults to false.",
    "Reference": "Defaults to true.",
    "HebCup": "Defaults to false."
}
{
    "Origin": "Test of npara method, of class LogNormalDistribution.",
    "Reference": "Test of length method, of class LogNormalDistribution.",
    "HebCup": "Test of Length method , of class LogNormalDistribution."
}
{
    "Origin": "{@codesnippet com.azure.storage.blob.specialized.BlobClientBase.setHTTPHeaders#BlobHTTPHeaders}",
    "Reference": "{@codesnippet com.azure.storage.blob.specialized.BlobClientBase.setHTTPHeaders#BlobHttpHeaders}",
    "HebCup": "{@codesnippet com.azure.storage.blob.specialized.BlobClientBase.setHTTPHeaders#BlobHttpHeaders}"
}
{
    "Origin": "Gets a list of suggestions of input to this parser.",
    "Reference": "Gets a stream of suggestions of input to this parser.",
    "HebCup": "Gets a Stream of suggestions of input to this parser."
}
{
    "Origin": "This operation returns information about a job you previously\ninitiated, including the job initiation date, the user who initiated\nthe job, the job status code/message and the Amazon SNS topic to\nnotify after Amazon Glacier completes the job.",
    "Reference": "This operation returns information about a job you previously initiated,\nincluding the job initiation date, the user who initiated the job, the\njob status code/message and the Amazon SNS topic to notify after Amazon",
    "HebCup": "This operation returns information about a job you previously\ninitiated, including the job initiation date, the user who initiated\nthe job, the job status code/message and the Amazon SNS topic to\nnotify after Amazon Glacier completes the job."
}
{
    "Origin": "Fire {@link IStorageSegment} changed when an {@link I_M_HU_Attribute} is changed.",
    "Reference": "Fire {@link IShipmentScheduleSegment} changed when an {@link I_M_HU_Attribute} is changed.",
    "HebCup": "Fire {@link IShipmentScheduleSegment} changed when an {@link I_M_HU_Attribute} is changed."
}
{
    "Origin": "Returning null implies no access control",
    "Reference": "Returning null implies no authorization control",
    "HebCup": "Returning null implies no access control"
}
{
    "Origin": "get the flow start sla from the dag node config.",
    "Reference": "get the job start sla from the dag node config.",
    "HebCup": "get the Job Start Sla from the dag node config."
}
{
    "Origin": "Make sure to keep {@link #database} fields and map synchronized.",
    "Reference": "Make sure to keep {@link #wikiId} fields and map synchronized.",
    "HebCup": "Make sure to keep {@link#WikiId} fields and map synchronized."
}
{
    "Origin": "Checks the account and\nthen searches for the contact.",
    "Reference": "Checks the\naccount and then searches for the contact or chat room.",
    "HebCup": "Checks the account and then searches for the Object."
}
{
    "Origin": "Getter for {@link #allowOnlyRequestedMethod}",
    "Reference": "Getter for {@link #allowAllRequestedHeaders}",
    "HebCup": "Getter for {@link#allowAllRequestedHeaders}"
}
{
    "Origin": "Return the current starting address.",
    "Reference": "Return the current head segment.",
    "HebCup": "Return the current head Segment."
}
{
    "Origin": "This builder\nshould only be used in some specific scenarios like {@code flow-ref} where a new Flow executing the same {@link BaseEvent}\nneeds a new context.",
    "Reference": "This builder\nshould only be used in some specific scenarios like {@code flow-ref} where a new Flow executing the same {@link CoreEvent}\nneeds a new context.",
    "HebCup": "This builder should only be used in some specific scenarios like {@code flow-ref} where a new Flow executing the same {@link CoreEvent} needs a new context."
}
{
    "Origin": "Creates a {@link SSHSession} to the given host with extra sets of ssh configurations.",
    "Reference": "Creates a {@link SSHSession} to the given host.",
    "HebCup": "Creates a {@link SSHSession} to the given host with extra sets of ssh configurations."
}
{
    "Origin": "For more information about managing snapshot copy grants, go to",
    "Reference": "For more information about managing snapshot copy grants, go to Amazon Redshift Database Encryption in the Amazon Redshift",
    "HebCup": "For more information about managing snapshot copy grants, go to"
}
{
    "Origin": "Returns a string representation of this object; useful for testing and debugging.",
    "Reference": "Returns a string representation of this object.",
    "HebCup": "Returns a string representation of this object; useful for testing and debugging."
}
{
    "Origin": "Returns the steps of this which are instances",
    "Reference": "Returns the step descendants of this which are instances",
    "HebCup": "Returns the steps of this which are instances"
}
{
    "Origin": "If the variable was set, a configuration {@link ConfigurationEvent event} will be passed to\nall registered listeners.",
    "Reference": "If the variable was set, a CONFIGURATION {@link ConfigurationEvent event} will be passed to\nall registered listeners.",
    "HebCup": "If the variable was set , a CONFIGURATION {@link ConfigurationEvent event} will be passed to all registered listeners."
}
{
    "Origin": "Sets the value of the cycle property.",
    "Reference": "Sets the value of the cycleOption property.",
    "HebCup": "Sets the value of the CycleOption property."
}
{
    "Origin": "The entries in the file are assumed to be the\n    fully-qualified binary names of provider classes.",
    "Reference": "The entries in the file are assumed to be the fully-qualified\n    class names of provider classes.",
    "HebCup": "The entries in the file are assumed to be the\n    fully-qualified binary names of provider classes."
}
{
    "Origin": "Total runtime size is 22344 bytes",
    "Reference": "Total runtime size is 22752 bytes",
    "HebCup": "Total runtime size is 22344 bytes"
}
{
    "Origin": "Adds a check that the given number is positive.",
    "Reference": "Adds a check that the given number is not null.",
    "HebCup": "Adds a check that the given number is positive."
}
{
    "Origin": "Begin insert after the current line by creating a new blank line below the current line",
    "Reference": "Begin insert after the current line by creating a new blank line below the current line\nfor all carets",
    "HebCup": "Begin insert after the current line by creating a new blank line below the current line"
}
{
    "Origin": "Lookup for multi-operand (InvokeDynamic) entries.",
    "Reference": "Lookup for multi-operand (InvokeDynamic, Dynamic) entries.",
    "HebCup": "Lookup for multi-operand (InvokeDynamic) entries."
}
{
    "Origin": "Close pool(s) being maintained by this datasource.",
    "Reference": "Closes pool(s) maintained by this data source.",
    "HebCup": "Close pool(s) being maintained by this datasource."
}
{
    "Origin": "Sets the value of the 'ts' field.",
    "Reference": "Sets the value of the 'dec' field.",
    "HebCup": "Sets the value of the 'Dec' field."
}
{
    "Origin": "Create new note.",
    "Reference": "Creating new note.",
    "HebCup": "Create new saveNote."
}
{
    "Origin": "Sort the given {@link MutablePointsReader} based on its packed value then doc ID.",
    "Reference": "Sort the given {@link MutablePointValues} based on its packed value then doc ID.",
    "HebCup": "Sort the given {@link MutablePointValues} based on its packed value then doc ID."
}
{
    "Origin": "Returns whether this property is a standard member property.",
    "Reference": "Returns whether this property is a standard cell property.",
    "HebCup": "Returns whether this property is a standard member property."
}
{
    "Origin": "Test method for {@link org.infinispan.spring.provider.SpringRemoteCacheManager#stop()}.",
    "Reference": "Test method for {@link org.infinispan.spring.remote.provider.SpringRemoteCacheManager#stop()}.",
    "HebCup": "Test method for {@link org.infinispan.spring.provider.SpringRemoteCacheManager#stop()}."
}
{
    "Origin": "Maps all index descriptors according to {@link #lockedIndex(IndexDescriptor)}.",
    "Reference": "Maps all index descriptors according to {@link #lockIndex(IndexDescriptor)}.",
    "HebCup": "Maps all index descriptors according to {@link#lockIndex (IndexDescriptor)}."
}
{
    "Origin": "That requires to load all localizations, i.e., all the files making up the bundle.",
    "Reference": "Initialization requires to load all localizations for available locales, i.e., all the files making up the bundle.",
    "HebCup": "That requires to load all localizations, DEFAULT.e., all the files making up the bundle."
}
{
    "Origin": "Convert to object types, returning null if text is null.",
    "Reference": "Convert to object types, returning null if text is null or empty.",
    "HebCup": "Convert to object types, returning null if text is null."
}
{
    "Origin": "Sets the minimum session timeout.",
    "Reference": "Sets the session timeout.",
    "HebCup": "Sets the minimum session timeout."
}
{
    "Origin": "Whitelisted props can be defined only if ignored properties are not defined.",
    "Reference": "Included props can be defined only if ignored properties are not defined.",
    "HebCup": "Included props can be defined only if ignored properties are not defined."
}
{
    "Origin": "Returns an adjusted time based on this time.",
    "Reference": "Returns an adjusted copy of this time.",
    "HebCup": "Returns an adjusted time based on this time."
}
{
    "Origin": "Setter for exception's variable name format.",
    "Reference": "Setter for exception's variable name pattern.",
    "HebCup": "Setter for exception's Variable Pattern format."
}
{
    "Origin": "Floating point must be non-equal within the default Encog tolerance.",
    "Reference": "Floating point must be non-equal within the default",
    "HebCup": "Floating point must be non-equal within the default Encog tolerance."
}
{
    "Origin": "Converts a string[] into a comma-delimited String.",
    "Reference": "Converts a string[] or multiple strings into one comma-delimited String.",
    "HebCup": "Converts a string...] into a comma-delimited String."
}
{
    "Origin": "Provide a {@link Write} {@link PTransform} to write data to a Cassandra database.",
    "Reference": "Provide a {@link Mutate} {@link PTransform} to write data to a Cassandra database.",
    "HebCup": "Provide a {@link Mutate} {@link PTransform} to Mutate data to a Cassandra database."
}
{
    "Origin": "In case of\nfailure the {@link Flux} will error.",
    "Reference": "In case of\nfailure the {@link CosmosContinuablePagedFlux} will error.",
    "HebCup": "In case of\nfailure the {@link Flux} will error."
}
{
    "Origin": "For example, the period in decades between two year can be calculated\nusing {@code startYear.periodUntil(endYear, DECADES)}.",
    "Reference": "For example, the period in decades between two year can be calculated\nusing {@code startYear.until(endYear, DECADES)}.",
    "HebCup": "For example, the period in decades between two year can be calculated using {@code startYear.until(endYear, DECADES)}."
}
{
    "Origin": "Subtracts a value that has been seen n times from the observed values",
    "Reference": "Subtracts a weighted value from the observed values",
    "HebCup": "Subtracts a value that has been seen (times from the observed values"
}
{
    "Origin": "Encode a String using the {@link #PATHSAFE} set of characters.",
    "Reference": "Encode a String using the {@link #PATH_SPECIAL} set of characters.",
    "HebCup": "Encode a String using the {@link#PATH_SPECIAL} set of characters."
}
{
    "Origin": "If this happens, a configuration {@link ConfigurationEvent event} will\nbe sent to all registered listeners.",
    "Reference": "If this happens, a CONFIGURATION {@link ConfigurationEvent event} will\nbe sent to all registered listeners.",
    "HebCup": "If this happens , a CONFIGURATION {@link ConfigurationEvent event} will be sent to all registered listeners."
}
{
    "Origin": "Returns a string representation of this object; useful for testing and debugging.",
    "Reference": "Returns a string representation of this object.",
    "HebCup": "Returns a string representation of this object; useful for testing and debugging."
}
{
    "Origin": "Sets the given element draggable and adds class name.",
    "Reference": "Makes the given element draggable and adds class name.",
    "HebCup": "add the given element draggable and adds class name."
}
{
    "Origin": "Constructs a {@link SharedKeyCredential} used to authorize requests sent to the service.",
    "Reference": "Constructs a {@link StorageSharedKeyCredential} used to authorize requests sent to the service.",
    "HebCup": "Constructs a {@link StorageSharedKeyCredential} used to authorize requests sent to the service."
}
{
    "Origin": "If not found, {@link #currentToken} is set to .",
    "Reference": "If not found, {@link #currentToken} is set to {@code null}.",
    "HebCup": "If not found, {@link #currentToken} is set to ."
}
{
    "Origin": "This is useful for adding all of your nodes to the graph before adding\nedges.",
    "Reference": "This is useful for adding vertices to a graph before adding\nedges.",
    "HebCup": "This is useful for adding all of your nodes to the graph before adding\nedges."
}
{
    "Origin": "and transfer all those namespace declarations to the current document",
    "Reference": "and transfer all those namespace declarations to the current document root.",
    "HebCup": "and transfer all those namespace declarations to the current document"
}
{
    "Origin": "In case of\nfailure the {@link Flux} will error.",
    "Reference": "In case of\nfailure the {@link CosmosContinuablePagedFlux} will error.",
    "HebCup": "In case of\nfailure the {@link Flux} will error."
}
{
    "Origin": "Returns the package name based on the boardsfile name Caters for the\npackages (with version number and for the old way",
    "Reference": "Returns the package name based on the boardsfile name Caters for the packages\n(with version number and for the old way\nif the boards file does not exists returns arduino",
    "HebCup": "Returns the package name based on the boardsfile name Caters for the\npackages (with version number and for the old way"
}
{
    "Origin": "Returns the signing date time in millis for which the signature needs to\nbe computed.",
    "Reference": "Returns the request signing date time in millis for which the request\nsignature needs to be computed.",
    "HebCup": "Returns the request Signing Date Time in millis for which the signature needs to be computed."
}
{
    "Origin": "Resets the analytics collector for a new media source.",
    "Reference": "Resets the analytics collector for a new playlist.",
    "HebCup": "Resets the analytics collector for a New Playlist."
}
{
    "Origin": "Tests the engine starts up, executes 1 trade cycle successfully, but then receives StrategyException from",
    "Reference": "Tests the engine starts up, executes 1 trade cycle successfully, but then receives",
    "HebCup": "Tests the engine starts up, executes 1 trade cycle successfully, but then receives StrategyException from"
}
{
    "Origin": "httl.properties: precompiled=true",
    "Reference": "httl.properties: preload=true",
    "HebCup": "httl.properties: Preload=true"
}
{
    "Origin": "Group: producer",
    "Reference": "Group: consumer",
    "HebCup": "Group: producer"
}
{
    "Origin": "Process workflows to purge them and their children.",
    "Reference": "Process workflows to purge them and their children if all the descendants are purgeable.",
    "HebCup": "find Purgeable Workflows to purge them and their children."
}
{
    "Origin": "Note that the writing process does not start until the returned {@code Mono} is subscribed\nto.",
    "Reference": "Note that the writing process does not start until the returned {@code Flux} is subscribed\nto.",
    "HebCup": "Note that the writing process does not start until the returned {@code Flux} is subscribed to."
}
{
    "Origin": "Queries this search source for the given queryString.",
    "Reference": "Creates query for the given queryString.",
    "HebCup": "Queries this search source for the given createString."
}
{
    "Origin": "If {@code labels = \"\\0\"}, settings without any label are returned.",
    "Reference": "If {@code labelFilter = \"\\0\"}, settings without any label are returned.",
    "HebCup": "If {@code LabelFilter = ``\\0``} , settings without any label are returned."
}
{
    "Origin": "Sets the trim mark on this endpoint's log unit and also perform a prefix trim.",
    "Reference": "Sets the trim mark on this endpoint's log unit, performs a prefix trim and then compaction.",
    "HebCup": "trim the trim mark on this endpoint's log unit and also perform a prefix trim."
}
{
    "Origin": "This function\nassumes the block at the given index is cached for the given size.",
    "Reference": "This function\nassumes the block at the given index is read and cached for the given sizes.",
    "HebCup": "This function\nassumes the block at the given index is cached for the given size."
}
{
    "Origin": "Add classpath elements from an object obtained from reflection.",
    "Reference": "Add classpath entries from an object obtained from reflection.",
    "HebCup": "add Classpath Entries from an object obtained from reflection."
}
{
    "Origin": "Prevents access to all public members of given class.",
    "Reference": "Prevents access to members of given class and its subclasses.",
    "HebCup": "Prevents access to all public members of given class."
}
{
    "Origin": "Parse an XLS into a list of ImportedGrade objects Note that only the first sheet of the Excel file is supported.",
    "Reference": "Note that only the first sheet of the Excel file is supported.",
    "HebCup": "Parse an XLS into a list of ImportedSpreadsheet objects Note that only the first sheet of the Excel file is supported."
}
{
    "Origin": "Copy all Schema Concepts to current KeyspaceCache",
    "Reference": "Copy schema concepts labels to current KeyspaceCache",
    "HebCup": "Copy all Schema Concept Labels To current KeyspaceCache"
}
{
    "Origin": "Action triggered when the execution of this Node is skipped.",
    "Reference": "Callback invoked when the execution of this node has been skipped.",
    "HebCup": "Action triggered when the execution of this Node is skipped."
}
{
    "Origin": "Calls to this method on versions of Android less than P are ignored.",
    "Reference": "Calls to this method on versions of Android less than Q are ignored.",
    "HebCup": "Calls to this method on is of Android less than P are ignored."
}
{
    "Origin": "It only runs when the {@link VMThreads#THREAD_MUTEX} is\nheld (or the virtual machine is single-threaded).",
    "Reference": "It only runs when the VMThreads.THREAD_MUTEX is held (or\nthe virtual machine is single-threaded).",
    "HebCup": "It only runs when the {@link VMThreads#THREAD_MUTEX} Owns held (or the virtual machine Owns single-threaded)."
}
{
    "Origin": "Convenience routine to return the specified error's\nunderlying SyntaxException, or null if it isn't one.",
    "Reference": "Returns the specified error's underlying SyntaxException, or null if it isn't one.",
    "HebCup": "Convenience routine to return the specified error's\nunderlying SyntaxException, or null if it isn't one."
}
{
    "Origin": "Creates the metrics tables and kafka-meta table using the factory {@link DefaultMetricDatasetFactory}",
    "Reference": "Creates the metrics tables and metrics meta table using the factory {@link DefaultMetricDatasetFactory}",
    "HebCup": "Creates the Resolution tables and kafka-meta table using the factory {@link DefaultMetricDatasetFactory}"
}
{
    "Origin": "Returns a Vector of all MuAction instances matching the specified Class.",
    "Reference": "Returns a Vector of all MuAction instances matching the specified action id.",
    "HebCup": "Returns a Vector of all ActionAndIdPair instances matching the specified Class."
}
{
    "Origin": "This will return the {@link Secret secret} with\nvalue included of its latest version.",
    "Reference": "This will return the {@link KeyVaultSecret secret} with\nvalue included of its latest version.",
    "HebCup": "This will return the {@link Propertie secret} with value included of its latest version."
}
{
    "Origin": "Adds a new job to the job queue to remove the specified extension from the specified namespace.",
    "Reference": "Adds a new job to the job queue to perform the given uninstall plan request.",
    "HebCup": "Adds a new job to the job queue to remove the specified Uninstall from the specified namespace."
}
{
    "Origin": "Loads ifile, dfile and indexSummary, and optionally recreates the bloom filter.",
    "Reference": "Loads ifile, dfile and indexSummary, and optionally recreates and persists the bloom filter.",
    "HebCup": "Loads ifile, dfile and indexSummary, and optionally recreates the bloom filter."
}
{
    "Origin": "decode the {@link com.mongodb.DBObject} and provide the corresponding java (type-safe) object\nNOTE: mf might be null",
    "Reference": "decode the {@link Document} and provide the corresponding java (type-safe) object\nNOTE: mf might be null",
    "HebCup": "decode the {@link com.mongodb.Document} and provide the corresponding java (type-safe) object NOTE: mf might be null"
}
{
    "Origin": "Gets the path from a full filename, which excludes the prefix.",
    "Reference": "Gets the path from a full fileName, which excludes the prefix.",
    "HebCup": "Gets the path from a full fileName , which excludes the prefix."
}
{
    "Origin": "Adds a Bundle to the watch list.",
    "Reference": "Adds a Bundle URLs to the watch list.",
    "HebCup": "Adds a get Bundles By to the watch list."
}
{
    "Origin": "Create an instance of {@link JAXBElement }{@code <}{@link CTMarkupRange }{@code >}}",
    "Reference": "Create an instance of {@link JAXBElement }{@code <}{@link CTMoveToRangeEnd }{@code >}}",
    "HebCup": "Create an instance of {@link JAXBElement} {@code <} {@link CTMoveToRangeEnd} {@code >}}"
}
{
    "Origin": "Sets the value of the 'publicPort' field",
    "Reference": "Sets the value of the 'publicPorts' field",
    "HebCup": "Sets the value of the 'PublicPorts' field"
}
{
    "Origin": "Copies a form with the given file name from the assets root to the SD Card where it\nwill be loaded by {@link FormLoaderTask}.",
    "Reference": "Copies a form with the given file name from the from the given assets folder to the SD Card\nwhere it will be loaded by {@link FormLoaderTask}.",
    "HebCup": "Copies a form with the given file name from the assets root to the SD Card where it\nwill be loaded by {@link FormLoaderTask}."
}
{
    "Origin": "This will return the\n{@link Secret secrets} with values included of the specified versions.",
    "Reference": "This will return the\n{@link KeyVaultSecret secrets} with values included of the specified versions.",
    "HebCup": "This will return the {@link PropertiesOfSecret secrets} with values included of the specified versions."
}
{
    "Origin": "Tests {@code globalRecommend(long, int, Set, Set)}.",
    "Reference": "Tests {@code recommendRelatedItems()(long, int, Set, Set)}.",
    "HebCup": "Tests {@code recommendRelatedItems (long , int , Set , Set)}."
}
{
    "Origin": "Setting the timeline is\nnot allowed after a call to {@link #setMediaSources(MediaSource...)}.",
    "Reference": "Setting the timeline is\nnot allowed after a call to {@link #setMediaSource(MediaSource)}.",
    "HebCup": "Setting the timeline is not allowed after a call to {@link #setmediaSource(MediaSource...)}."
}
{
    "Origin": "Verifies that Hudson is sending 403 first.",
    "Reference": "Verifies that HTTP 403 is sent first.",
    "HebCup": "Verifies that Hudson is sending 403 first."
}
{
    "Origin": "Returns a string representation of this object; useful for testing and debugging.",
    "Reference": "Returns a string representation of this object.",
    "HebCup": "Returns a string representation of this object; useful for testing and debugging."
}
{
    "Origin": "Tests the {@link FileSystemMaster#checkConsistency(AlluxioURI, CheckConsistencyOptions)} method\nwhen some files are consistent.",
    "Reference": "Tests the {@link FileSystemMaster#checkConsistency(AlluxioURI, CheckConsistencyContext)} method\nwhen some files are consistent.",
    "HebCup": "Tests the {@link FileSystemMaster#checkConsistency (AlluxioURI , CheckConsistencyContext)} method when some files are consistent."
}
{
    "Origin": "Synchronize with the transport thread.",
    "Reference": "Synchronize with all transport threads.",
    "HebCup": "Synchronize with the transport thread."
}
{
    "Origin": "Creates a {@code For}-comprehension of three Iterables.",
    "Reference": "Creates a {@code For}-comprehension of three Options.",
    "HebCup": "Creates a {@code For}-comprehension of three Iterables."
}
{
    "Origin": "Returns the search index configured with the given name.",
    "Reference": "Returns the Lucene search index configured with the given name.",
    "HebCup": "Returns the index configured with the given name."
}
{
    "Origin": "Adds tags for the specified {@link NamespacedEntityId}.",
    "Reference": "Adds tags for the specified {@link MetadataEntity}.",
    "HebCup": "Adds tags for the specified {@link MetadataEntity}."
}
{
    "Origin": "Group: common",
    "Reference": "Group: advanced",
    "HebCup": "Group: common"
}
{
    "Origin": "Get generated getters for an AVRO-generated SpecificRecord.",
    "Reference": "Get generated getters for an AVRO-generated SpecificRecord or a POJO.",
    "HebCup": "Get generated getters for an AVRO-generated SpecificRecord."
}
{
    "Origin": "Returns the length of the attribute list that begins with this attribute.",
    "Reference": "Returns the number of attributes of the attribute list that begins with this attribute.",
    "HebCup": "Returns the length of the attribute list that begins with this attribute."
}
{
    "Origin": "Escape schema name depending of the database engine.",
    "Reference": "Escape database name depending of the database engine.",
    "HebCup": "escape Database Name name depending of the database engine."
}
{
    "Origin": "Checks a name to ensure that it's a legal type name.",
    "Reference": "Checks a name to ensure that it's a legal qualified class name",
    "HebCup": "Checks a name to ensure that it's a legal type name."
}
{
    "Origin": "Set the channel parameter for the cluster log and snapshot replay channel.",
    "Reference": "Get the counter for the current state of the cluster backup.",
    "HebCup": "Set the channel parameter for the cluster log and snapshot state Counter."
}
{
    "Origin": "Creates a RealPropagator to propagate one or more continuous functions, separated with semi-colon \";\"",
    "Reference": "Creates a RealPropagator to propagate one or more continuous functions, separated with\nsemi-colon \";\" Each function is set to a single propagator.",
    "HebCup": "Creates a RealPropagator to propagate one or more continuous functions, separated with semi-colon \";\""
}
{
    "Origin": "Returns the name of the output parameter.",
    "Reference": "Returns the names of the output parameters.",
    "HebCup": "Returns the Names of the output parameter."
}
{
    "Origin": "Sets the address of this connection's peer.",
    "Reference": "Update the address of this connection's peer.",
    "HebCup": "update the address of this connection's peer."
}
{
    "Origin": "Get the minimum committed log tail from all log units.",
    "Reference": "Attempt to get the maximum committed log tail from all log units.",
    "HebCup": "Get the minimum committed log tail from all log units."
}
{
    "Origin": "Retrieves the default value of a parameter, or otherwise returns null",
    "Reference": "Retrieves the default value of a parameter",
    "HebCup": "Retrieves the Optional.empty of a parameter, or otherwise returns null"
}
{
    "Origin": "Gets the value if it is a Valid or an value calculated from the error",
    "Reference": "Gets the value if it is a Valid or an value calculated from the errors",
    "HebCup": "Gets the value if it is a Valid or an value calculated from the Errors"
}
{
    "Origin": "Prefixes are used to enrich the mappings of every {@code @RequestMapping}\nmethod whose controller type is matched by the corresponding\n{@link HandlerTypePredicate} in the map.",
    "Reference": "Prefixes are used to enrich the mappings of every {@code @RequestMapping}\nmethod whose controller type is matched by the corresponding\n{@code Predicate}.",
    "HebCup": "Prefixes are used to enrich the mappings of every {@code @RequestMapping} method whose controller type is matched by the corresponding {@link Predicate} in the map."
}
{
    "Origin": "Adds an actor as a child of this group, at a specific index.",
    "Reference": "If the actor is already a\nchild of this group, no changes are made.",
    "HebCup": "Adds an actor as a child of this group, at a specific index."
}
{
    "Origin": "Translates type names to resource locations to ease lookups since the unit cache system caches\nbased on resource location but the natural mode of interaction with this cache is via type\nnames.",
    "Reference": "Translates type names to resource paths to ease lookups since the unit cache system caches\nbased on resource path but the natural mode of interaction with this cache is via type names.",
    "HebCup": "Translates type names to resource locations to ease lookups since the unit cache system caches based on Resource Path but the natural mode of interaction with this cache is via type names."
}
{
    "Origin": "Create a new data source from EventDAO.",
    "Reference": "Create a new data source from an EventDAO.",
    "HebCup": "Create a new data source from EventDAO."
}
{
    "Origin": "Return a copy of this that is set inactive",
    "Reference": "Returns a copy of this with state set to given state",
    "HebCup": "Return a copy of this that is set inactive"
}
{
    "Origin": "Returns the bar with the primary key or throws a {@link com.liferay.testtransaction.NoSuchBarException} if it could not be found.",
    "Reference": "Returns the bar with the primary key or throws a {@link NoSuchBarException} if it could not be found.",
    "HebCup": "Returns the bar with the primary key or throws a {@link com.liferay.testtransaction.NoSuchBarException} if it could not be found."
}
{
    "Origin": "Finds the {@link List} of {@link VirtualHost}s that contains the specified {@link Service}.",
    "Reference": "Finds the {@link List} of {@link VirtualHost}s that contains the specified {@link HttpService}.",
    "HebCup": "Finds the {@link List} of {@link VirtualHost}s that contains the specified {@link HttpService}."
}
{
    "Origin": "In some cases, changing the specified field can cause the resulting date to become invalid,\nsuch as changing the month from January to February would make the day-of-month 31 invalid.",
    "Reference": "In some cases, changing the specified field can cause the resulting date to become invalid,\nsuch as changing the month from 31st January to February would make the day-of-month invalid.",
    "HebCup": "In some cases, changing the specified field can cause the resulting date to become invalid,\nsuch as changing the month from January to February would make the day-of-month 31 invalid."
}
{
    "Origin": "Access Control Using AWS Identity and Access Management (IAM) \n.",
    "Reference": "For more information, see Access Control Using AWS Identity and Access Management (IAM).",
    "HebCup": "Access Control Using AWS Identity and Access Management (IAM) \n."
}
{
    "Origin": "Returns a string representation of this object; useful for testing and debugging.",
    "Reference": "Returns a string representation of this object.",
    "HebCup": "Returns a string representation of this object; useful for testing and debugging."
}
{
    "Origin": "Returns a string representation of this object; useful for testing and debugging.",
    "Reference": "Returns a string representation of this object.",
    "HebCup": "Returns a string representation of this object; useful for testing and debugging."
}
{
    "Origin": "Probably you want\n{@link #getOffsetInSection()}.",
    "Reference": "Probably you want\n{@link #getAddress()}.",
    "HebCup": "Probably you want\n{@link #getOffsetInSection()}."
}
{
    "Origin": "The potential errors.",
    "Reference": "The potential status codes.",
    "HebCup": "The potential Codes."
}
{
    "Origin": "Creates an entity and populates its state based on the dbObject given.",
    "Reference": "Creates an entity and populates its state based on the document given.",
    "HebCup": "Creates an entity and populates its state based on the Document given."
}
{
    "Origin": "Get the Date that this Token was Created",
    "Reference": "Get the ZonedDateTime that this Token was Created",
    "HebCup": "Get the ZonedDateTime that this Token was Created"
}
{
    "Origin": "Gets the filters for items to fetch.",
    "Reference": "Gets the filter for items to fetch.",
    "HebCup": "Gets the Filter for items to fetch."
}
{
    "Origin": "Decorates {@link Service}s whose {@link Route} matches the specified {@code pathPattern}.",
    "Reference": "Decorates {@link HttpService}s whose {@link Route} matches the specified {@code pathPattern}.",
    "HebCup": "Decorates {@link HttpService}s whose {@link Route} matches the specified {@code pathPattern}."
}
{
    "Origin": "Returns the calendar notification template with the primary key or throws a {@link com.liferay.calendar.NoSuchNotificationTemplateException} if it could not be found.",
    "Reference": "Returns the calendar notification template with the primary key or throws a {@link NoSuchNotificationTemplateException} if it could not be found.",
    "HebCup": "Returns the calendar notification template with the primary key or throws a {@link com.liferay.calendar.NoSuchNotificationTemplateException} if it could not be found."
}
{
    "Origin": "Creates a {@code For}-comprehension of 5 Iterables.",
    "Reference": "Creates a {@code For}-comprehension of 5 Options.",
    "HebCup": "Creates a {@code For}-comprehension of 5 Iterables."
}
{
    "Origin": "Helper method to check if we should do GCM topic request.",
    "Reference": "Helper method to check if we should do FCM topic request.",
    "HebCup": "Helper method to check if we should do FCM Topic Request."
}
{
    "Origin": "Reverses the order of all elements in the given interval.",
    "Reference": "Reverses the order of all entries in the given interval.",
    "HebCup": "Reverses the order of all elements in the given interval."
}
{
    "Origin": "For more information about the vault\nlocking process, see",
    "Reference": "For more\ninformation about the vault locking process, see Amazon Glacier Vault Lock.",
    "HebCup": "For more information about the vault\nlocking process, see"
}
{
    "Origin": "This test validates that connecting to a serviceURL does not\nwork.",
    "Reference": "This test validates that connecting to a getServiceURL() does not\nwork.",
    "HebCup": "This test validates that connecting to a getServiceURL does not work."
}
{
    "Origin": "Supports a \"siteId\" request parameter, defaulting to \"default\" for the default\nupdate site.",
    "Reference": "Supports a \"siteId\" request parameter, defaulting to {@link #ID_DEFAULT} for the default\nupdate site.",
    "HebCup": "Supports a ``ThisId`` request parameter, defaulting to ``default`` for the default update This."
}
{
    "Origin": "Returns the string representation of this {@link Dimension}.",
    "Reference": "Returns the string representation of this {@link DimensionColumn}.",
    "HebCup": "Returns the string representation of this {@link Dimension}."
}
{
    "Origin": "Set the point at which content is truncated.",
    "Reference": "Set the length after at which content is truncated.",
    "HebCup": "Set the point at which content is truncated."
}
{
    "Origin": "Obtains an instance from the specified unique name.",
    "Reference": "Obtains an instance from the specified name.",
    "HebCup": "Obtains an instance from the specified name."
}
{
    "Origin": "Shortcut for {@code RDFParser.create.source(reader)}.",
    "Reference": "Shortcut for {@code RDFParser.create.fromString(string)}.",
    "HebCup": "Shortcut for {@code RDFParser.create.fromString(reader)}."
}
{
    "Origin": "Add a ResultFile to the results",
    "Reference": "Add a list of ResultFile to the results",
    "HebCup": "Add a ResultFile to the results"
}
{
    "Origin": "If they only have the same name, they\nare considered to be two inheritances of the same(or at least\ncompatible) declarations, and there is only a warning.",
    "Reference": "If they have the same name and class, they\nare considered to be two inheritances of the same (or at least\ncompatible) declarations, and there is only a warning.",
    "HebCup": "If they only have the same name, they\nare considered to be two inheritances of the same(or at least\ncompatible) declarations, and there is only a warning."
}
{
    "Origin": "Turns this ReactiveSeq into a HotStream, a connectable Stream, being executed on a thread on the\nsupplied executor, that is producing data.",
    "Reference": "Turns this ReactiveSeq into a Connectable, a connectable Stream, being executed on a thread on the\nsupplied executor, that is producing data.",
    "HebCup": "Turns this ReactiveSeq into a Connectable , a connectable Stream , being executed on a thread on the supplied executor , that is producing data."
}
{
    "Origin": "Get the content of this element.",
    "Reference": "Gets the value of the content property.",
    "HebCup": "Get the content of this element."
}
{
    "Origin": "NOTE: This method is meaningless unless you explicitly provide paths when constructing this instance",
    "Reference": "NOTE: This method is meaningless in SSLTestConfig.",
    "HebCup": "NOTE: This method is meaningless unless you explicitly provide paths when constructing this instance"
}
{
    "Origin": "Set the Websocket deflate compression level.",
    "Reference": "Set the WebSocket deflate compression level.",
    "HebCup": "set Web the Websocket deflate compression level."
}
{
    "Origin": "Return writers that support specific types.",
    "Reference": "Return all writers that support specific types.",
    "HebCup": "Return writers that support specific types."
}
{
    "Origin": "Modified by user info",
    "Reference": "Modified by user",
    "HebCup": "Modified by user info"
}
{
    "Origin": "Is the value with this qualifier less than or equal to the length of array?",
    "Reference": "Is the value with this qualifier less than or equal to the length of sequence?",
    "HebCup": "Is the value with this qualifier less than or equal to the length of sequence?"
}
{
    "Origin": "Checks whether two filenames are equal after both have been normalized.",
    "Reference": "Checks whether two fileNames are equal after both have been normalized.",
    "HebCup": "Checks whether two filenames are equal after both have been normalized."
}
{
    "Origin": "The input file must be a list of whitespace-separated verb-lemma-POS triples, one verb\nform per line.",
    "Reference": "The input file must be a list of tab-separated verb-POS pairs, one verb\nper line.",
    "HebCup": "The input file must be a list of whitespace-separated verb-lemma-POS triples, one verb\nform per line."
}
{
    "Origin": "### Effects: The keypair is set.",
    "Reference": "### Effects: The key pair is set.",
    "HebCup": "### Effects: The keypair is Auth."
}
{
    "Origin": "It will emit the current object when\nsubscribed to.",
    "Reference": "It will emit the current RealmObject when\nsubscribed to.",
    "HebCup": "It will emit the current object when\nsubscribed to."
}
{
    "Origin": "Returns a string representation of this object; useful for testing and debugging.",
    "Reference": "Returns a string representation of this object.",
    "HebCup": "Returns a string representation of this object; useful for testing and debugging."
}
{
    "Origin": "Get the barline that starts the part.",
    "Reference": "Get the PartBarline that starts the part.",
    "HebCup": "Get the PartBarline that starts the part."
}
{
    "Origin": "(see {@link #isGoogleAccountType)",
    "Reference": "(see {@link #isWritableGoogleTypeFilter )",
    "HebCup": "(see {@link#isWritableGoogleTypeFilter)"
}
{
    "Origin": "Configure the name of a selector header that a subscription message can\nhave in order to filter messages based on their headers.",
    "Reference": "Configure the name of a header that a subscription message can have for\nthe purpose of filtering messages matched to the subscription.",
    "HebCup": "Configure the name of a selector header that a subscription message can\nhave in order to filter messages based on their headers."
}
{
    "Origin": "Test of npara method, of class Gamma.",
    "Reference": "Test of length method, of class Gamma.",
    "HebCup": "Test of Length method , of class Gamma."
}
{
    "Origin": "Populate a new {@link ExtensionRegistry} from extension types declared via\n{@link ExtendWith @ExtendWith} on the supplied {@link AnnotatedElement}.",
    "Reference": "Populate a new {@link MutableExtensionRegistry} from extension types declared via\n{@link ExtendWith @ExtendWith} on the supplied {@link AnnotatedElement}.",
    "HebCup": "Populate a new {@link MutableExtensionRegistry} from extension types declared via {@link ExtendWith @ExtendWith} on the supplied {@link AnnotatedElement}."
}
{
    "Origin": "Returns a string representation of this object; useful for testing and debugging.",
    "Reference": "Returns a string representation of this object.",
    "HebCup": "Returns a string representation of this object; useful for testing and debugging."
}
{
    "Origin": "Finds the {@link Dimension} by name.",
    "Reference": "Finds the {@link DimensionColumn} by name.",
    "HebCup": "Finds the {@link DimensionColumn} by name."
}
{
    "Origin": "Set \"global\" CORS configuration based on URL patterns.",
    "Reference": "Set the \"global\" CORS configurations based on URL patterns.",
    "HebCup": "Set ``cors`` CORS configuration based on URL patterns."
}
{
    "Origin": "If {@code options} is {@code null}, then all\nthe {@link ConfigurationSetting configuration settings} are fetched with their current values.",
    "Reference": "If {@code selector} is {@code null}, then all\nthe {@link ConfigurationSetting configuration settings} are fetched with their current values.",
    "HebCup": "If {@code options} is {@code null} , then all the {@link ConfigurationSetting configuration ConfigurationSettings} are fetched with their current values."
}
{
    "Origin": "Map package name to the new name.",
    "Reference": "Maps a package name to its new name.",
    "HebCup": "Map package name to the new name."
}
{
    "Origin": "If the {@code ASTNode} has a valid location, this one is used.",
    "Reference": "If the {@code Node} has a valid location, this one is used.",
    "HebCup": "If the {@code Node} has a valid location , this one is used."
}
{
    "Origin": "The meta-property for the {@code paymentAmount} property.",
    "Reference": "The meta-property for the {@code payment} property.",
    "HebCup": "The meta-property for the {@code payment} property."
}
{
    "Origin": "Returns estimated number of buffered items, or -1 if\ndisabled.",
    "Reference": "Returns estimated number of buffered items, or negative if\nclosed.",
    "HebCup": "Returns estimated number of buffered items, or -1 if &."
}
{
    "Origin": "Gets the amount of damage caused by the event",
    "Reference": "Gets the raw amount of damage caused by the event",
    "HebCup": "Gets the amount of getDamage caused by the event"
}
{
    "Origin": "Returns the component's {@link Tokenizer}",
    "Reference": "Returns the component's source",
    "HebCup": "Returns the component's {@link >}"
}
{
    "Origin": "This is the example used in {@link IndexSetting}.",
    "Reference": "This is the example used in {@link IndexSettingImpl}.",
    "HebCup": "This is the example used in {@link IndexSettingImpl}."
}
{
    "Origin": "The xpathNodeSet is treated\nas a list of XPath nodes, not as a list of subtrees.",
    "Reference": "The {@code xpathNodeSet} is treated\nas a list of XPath nodes, not as a list of subtrees.",
    "HebCup": "The xpathNodeSet is treated\nas a list of XPath nodes, not as a list of subtrees."
}
{
    "Origin": "Create SSLContext using system defaults.",
    "Reference": "Create SSLConnectionSocketFactory using system defaults.",
    "HebCup": "Create SSLConnectionSocketFactory using system defaults."
}
{
    "Origin": "Unit test for\n{@link ZKQuorumImpl#setupQuorum(String, ZooKeeperAccessor, List)}",
    "Reference": "Unit test for\n{@link ZKQuorumImpl#setupQuorum(String, int, ZooKeeper, List)}",
    "HebCup": "Unit test for {@link ZKQuorumImpl#setupQuorum (String , zookeeper , List)}"
}
{
    "Origin": "Convenience method to load tree from file",
    "Reference": "Convenience method to load tree from an inputstream",
    "HebCup": "Convenience method to loadFromStream tree from file"
}
{
    "Origin": "Must be logged to use.",
    "Reference": "Must be logged in to use.",
    "HebCup": "Must be logged to use."
}
{
    "Origin": "If {@code labels = \"*\"}, settings with any label are returned.",
    "Reference": "If {@code labelFilter = \"*\"}, settings with any label are returned.",
    "HebCup": "If {@code LabelFilter = ``*``} , settings with any label are returned."
}
{
    "Origin": "An accurate sync method that adapts automatically\nto the system it runs on to provide reliable results.",
    "Reference": "An accurate sync method that will attempt to run an application loop\nat a constant frame rate.",
    "HebCup": "An accurate sync method that adapts automatically\nto the system it runs on to provide reliable results."
}
{
    "Origin": "Adds all {@link CameraCaptureSession.StateCallback} callbacks.",
    "Reference": "Adds all {@link CameraCaptureCallback} callbacks for single and repeating requests.",
    "HebCup": "Adds all {@link CameraCaptureSession.StateCallback} callbacks."
}
{
    "Origin": "removes whitespace and does a fail-fast if a non-java identifier is found",
    "Reference": "Removes whitespace and does a fail-fast if a non-java identifier is found.",
    "HebCup": "removes whitespace and does a fail-fast if a non-java identifier is found"
}
{
    "Origin": "Incremental values (ex.",
    "Reference": "Incremental values are not currently set.",
    "HebCup": "Incremental values (ex."
}
{
    "Origin": "Sort the given {@link MutablePointValues} based on its packed value then doc ID.",
    "Reference": "Sort the given {@link MutablePointsReader} based on its packed value then doc ID.",
    "HebCup": "Sort the given {@link MutablePointsReader} based on its packed value then doc ID."
}
{
    "Origin": "A\n is built when the JAR is created.",
    "Reference": "A\n class is built when the JAR is\ncreated.",
    "HebCup": "A\n is built when the JAR is created."
}
{
    "Origin": "Assign the current point, where the dragged image is to be displayed",
    "Reference": "Assign the current screen point, where the dragged image is to be displayed",
    "HebCup": "Assign the current ScreenPoint , where the dragged image is to be displayed"
}
{
    "Origin": "{@code params}, {@code requestType} and {@code options} defaults to {@code null}.",
    "Reference": "{@code params} and {@code options} defaults to {@code null}.",
    "HebCup": "{@code params}, {@code requestType} and {@code options} defaults to {@code null}."
}
{
    "Origin": "Returns the parameter value from the HTTP request or the value provided by the supplier",
    "Reference": "Returns the parameter value from the HTTP request or the default value.",
    "HebCup": "Returns the requestParameter value from the HTTP request or the value provided by the supplier"
}
{
    "Origin": "Returns the default value for keys ( or \nfor primitive types).",
    "Reference": "Returns the default \"empty\" value ( or \nfor primitive types).",
    "HebCup": "Returns the empty value for keys (or for primitive types)."
}
{
    "Origin": "Fetch the given user's list of starred albums",
    "Reference": "Fetch the given user's list of loved albums",
    "HebCup": "Fetch the given user's list of Loved Albums"
}
{
    "Origin": "Converts {@link FiniteDuration} into Flink time.",
    "Reference": "Converts Flink time into a {@link Duration}.",
    "HebCup": "Converts {@link time} into Flink time."
}
{
    "Origin": "Collect capabilities of an index.",
    "Reference": "Collect the field capabilities for an index.",
    "HebCup": "Collect capabilities of an index."
}
{
    "Origin": "Attempts to read the next IHAWriteMessage and then the\nexpected buffer, that is read into the client buffer.",
    "Reference": "Attempts to read the next {@link IHAWriteMessage} and then the expected\nbuffer, that is read into the client buffer.",
    "HebCup": "Attempts to read the next IHAWriteMessage and then the\nexpected buffer, that is read into the client buffer."
}
{
    "Origin": "Add in methods from all interfaces.",
    "Reference": "Adds methods from all interfaces.",
    "HebCup": "Add in methods from all interfaces."
}
{
    "Origin": "We have the same file saved for Publisher 98, Publisher\n 2000 and Publisher 2007.",
    "Reference": "We have the same file saved for Publisher 98, Publisher 2000 and",
    "HebCup": "We have the same InputStream saved for Publisher 98 , Publisher 2000 and Publisher 2007."
}
{
    "Origin": "Test of createClassicModifiedPadding method, of class ShortPaddingGenerator.",
    "Reference": "Test of createClassicModifiedPadding method, of class",
    "HebCup": "Test of createClassicModifiedPadding method, of class ShortPaddingGenerator."
}
{
    "Origin": "Checks if the {@link Properties} contains the given key.",
    "Reference": "Checks if the configuration contains the given key.",
    "HebCup": "Checks if the {@link Properties} contains the given key."
}
{
    "Origin": "Sets gap between split icon and split part sides",
    "Reference": "Sets gap between menu icon and menu button part sides",
    "HebCup": "Sets gap between menu Icon and split part sides"
}
{
    "Origin": "For an overview on tagging an Amazon RDS resource, see",
    "Reference": "For an overview on tagging an Amazon RDS resource, see Tagging Amazon RDS Resources.",
    "HebCup": "For an overview on tagging an Amazon RDS resource, see"
}
{
    "Origin": "Specialized registration method for registering a named template for functions\nexpecting zero arguments.",
    "Reference": "Specialized registration method for registering a named descriptor for functions\nexpecting zero arguments.",
    "HebCup": "Specialized registration method for registering a named template for functions\nexpecting zero arguments."
}
{
    "Origin": "The supplier lookup\ndecides which lookup method is the best given the parent {@link ExecutableNode} or\n{@link RootNode} and the provided languageClass.",
    "Reference": "The reference\nlookup decides which lookup method is the best given the parent {@link ExecutableNode} or\n{@link RootNode} and the provided languageClass.",
    "HebCup": "The ContextReference lookup decides which lookup method is the best given the parent {@link ExecutableNode} or {@link RootNode} and the provided languageClass."
}
{
    "Origin": "Write image data to the given file node and set checksum and size.",
    "Reference": "Write image data from the given byte[] to the given file node and set checksum and size.",
    "HebCup": "Write image data to the given file node and set checksum and size."
}
{
    "Origin": "Applies a {@link Publisher< InternalEvent >} function transforming a stream of {@link BaseEvent}'s.",
    "Reference": "Applies a {@link Publisher< InternalEvent >} function transforming a stream of {@link CoreEvent}'s.",
    "HebCup": "Applies a {@link Publisher< InternalEvent >} function transforming a stream of {@link CoreEvent}'s."
}
{
    "Origin": "Blobstore entries first detected less than\nNIMBUS_TOPOLOGY_BLOBSTORE_DELETION_DELAY_MS ago are ignored.",
    "Reference": "Topology entries first detected less than NIMBUS_TOPOLOGY_BLOBSTORE_DELETION_DELAY_MS ago are\nignored.",
    "HebCup": "Set entries first detected less than NIMBUS_TOPOLOGY_BLOBSTORE_DELETION_DELAY_MS ago are ignored."
}
{
    "Origin": "Called for every component when the page is getting to be rendered.",
    "Reference": "Called on all components before any component is rendered.",
    "HebCup": "Called for every FeedbackDelay when the page is getting to be rendered."
}
{
    "Origin": "Gets the name of the quorum associated with specified cache",
    "Reference": "Gets the name of the split brain protection associated with specified cache",
    "HebCup": "Gets the name of the SplitBrainProtection associated with specified cache"
}
{
    "Origin": "Observer methods with {@link TransactionPhase#IN_PROGRESS} are called asnchronously in a separate thread.",
    "Reference": "Then, synchronous observer methods with {@link TransactionPhase#IN_PROGRESS}\nare called synchronously in the current thread.",
    "HebCup": "Handle methods with {@link TransactionPhase#IN_PROGRESS} are called asnchronously in a separate thread."
}
{
    "Origin": "Called when a track has been selected.",
    "Reference": "Called when a track is deselected.",
    "HebCup": "Called when a track has been selected."
}
{
    "Origin": "`DEPRECATED`: Maximal amount of files to upload",
    "Reference": "`DEPRECATED`: Maximal amount of files to upload  [Deprecated since version VERSION]",
    "HebCup": "`DEPRECATED`: Maximal amount of files to upload"
}
{
    "Origin": "Returns a string representation of this object; useful for testing and debugging.",
    "Reference": "Returns a string representation of this object.",
    "HebCup": "Returns a string representation of this object; useful for testing and debugging."
}
{
    "Origin": "Returns the WMS {@link Layer} used by this layer",
    "Reference": "Returns the WMS {@link Layer}s used by this layer",
    "HebCup": "Returns the WMS {@link Layer} used by this layer"
}
{
    "Origin": "Set Tree.",
    "Reference": "Set Baum.",
    "HebCup": "Set Tree."
}
{
    "Origin": "Now performs a deep copy of the\nclassifier before each call to buildClassifier() (just in case the\nclassifier is not initialized properly).",
    "Reference": "Performs a deep copy of the\nclassifier before each call to buildClassifier() (just in case the\nclassifier is not initialized properly).",
    "HebCup": "Now performs a deep copy of the classifier before each call to buildClassifier (&& (just in case the classifier is not initialized properly)."
}
{
    "Origin": "function source() {       (41)\n  global $argv;           (46)\n  return $argv[1];        (49)\n}",
    "Reference": "function source() {       (46)\n  global $argv;           (52)\n  return $argv[1];        (55)\n}",
    "HebCup": "function source() {       (41)\n  global $argv;           (46)\n  return $argv[1];        (49)\n}"
}
{
    "Origin": "If you wish to have decimation rates higher\nthan 700, then add additional prime factors to the PRIMES array.",
    "Reference": "If you wish to have decimation rates higher than the\nhighest rate listed in the PRIMES array, then add additional prime factors to the PRIMES array.",
    "HebCup": "If you wish to have decimation rates higher\nthan 700, then add additional prime factors to the PRIMES array."
}
{
    "Origin": "Sets the query to match {@link ConfigurationSetting#getLabel() labels} in the service.",
    "Reference": "Sets the expression to filter {@link ConfigurationSetting#getLabel() labels} on for the request.",
    "HebCup": "Sets the query to match {@link ConfigurationSetting#getLabel () LabelFilter} in the service."
}
{
    "Origin": "{@codesnippet com.azure.data.appconfiguration.ConfigurationClient.addSetting#String-String-String}",
    "Reference": "{@codesnippet com.azure.data.appconfiguration.ConfigurationClient.addConfigurationSetting#String-String-String}",
    "HebCup": "{@codesnippet com.azure.data.appconfiguration.ConfigurationClient.addConfigurationSetting#String-String-String}"
}
{
    "Origin": "Computes the first order sensitivities of a function of a CreditRatesProvider to a double by finite difference.",
    "Reference": "Computes the first order sensitivities of a function of a {@code CreditRatesProvider} to a double by finite difference.",
    "HebCup": "Computes the first order sensitivityCreidtCurve of a function of a CreditRatesProvider to a double by finite difference."
}
{
    "Origin": "Test affinity awareness Sql cache size property with semicolon.",
    "Reference": "Test Partition Awareness Sql cache size property with semicolon.",
    "HebCup": "test Partition Awareness Sql Cache Size Property with semicolon."
}
{
    "Origin": "Short-cut for building a named template via\n{@link #namedDescriptorBuilder} specifying zero arguments and accepting the\nrest of the builder's defaults.",
    "Reference": "Short-cut for building a named descriptor via\n{@link #namedDescriptorBuilder} specifying zero arguments and accepting the\nrest of the builder's defaults.",
    "HebCup": "Short-cut for building a named template via\n{@link #namedDescriptorBuilder} specifying zero arguments and accepting the\nrest of the builder's defaults."
}
{
    "Origin": "Any of the\ninput words can also be the answer if one is the parent or grandparent of\nother",
    "Reference": "Any of the\ninput words can also be the answer if one is the parent or grandparent of\nother, or if the input words are the same.",
    "HebCup": "Any of the input words can also be the answer if one is the Parents or grandparent of other"
}
{
    "Origin": "A {@link FileTransferException} if the operation was attempted but failed for any of the following reasons:",
    "Reference": "This method throws an {@link IOException} if the operation failed, for any of the following reasons:",
    "HebCup": "A {@link IOException} if the operation was attempted but failed for any of the following reasons:"
}
{
    "Origin": "Non-linear refinement is recommended,\neven before bundle adjustment.",
    "Reference": "Non-linear refinement is recommended, before bundle adjustment.",
    "HebCup": "Non-linear refinement is recommended,\neven before bundle adjustment."
}
{
    "Origin": "For a provided domain item, find the range item that leads to optimal config.",
    "Reference": "For a provided domain item, find the range item that leads to optimal configuration.",
    "HebCup": "For a provided domain item, find the range item that leads to optimal config."
}
{
    "Origin": "In order to set the matrix to a rotation transformation without post-multiplying,\nuse {@link #rotation(Quaterniond)}.",
    "Reference": "In order to set the matrix to a rotation transformation without post-multiplying,\nuse {@link #rotation(Quaterniondc)}.",
    "HebCup": "In order to set the matrix to a rotation transformation without post-multiplying, use {@link #rotation(Quaterniondc)}."
}
{
    "Origin": "Adds rows to destination for each row in table1, with the columns from table2 added as missing values in each",
    "Reference": "Adds rows to destination for each row in table1 with the columns from table2 added as missing values.",
    "HebCup": "Adds rows to destination for each row in table1Rows , with the columns from table2 added as missing values in each"
}
{
    "Origin": "Two objects are considered different if\n{@code value.compareTo(reference) != 0}",
    "Reference": "Two objects are considered different if\n{@code value.equals(reference) == false}",
    "HebCup": "Two objects are considered different if\n{@code value.compareTo(reference) != 0}"
}
{
    "Origin": "In case of\nfailure the {@link Flux} will error.",
    "Reference": "In case of\nfailure the {@link CosmosContinuablePagedFlux} will error.",
    "HebCup": "In case of\nfailure the {@link Flux} will error."
}
{
    "Origin": "Gets the hash code of this charset.",
    "Reference": "Computes a hashcode for this charset.",
    "HebCup": "Gets the hash code of name charset."
}
{
    "Origin": "Set Untergruppe.",
    "Reference": "Set Unterregister.",
    "HebCup": "Set Untergruppe."
}
{
    "Origin": "Sets the {@link DrmProvider} to use when handling DRM for media.",
    "Reference": "Sets the {@link MediaDrmCallback} to use when handling DRM for media.",
    "HebCup": "Sets the {@link MediaDrmCallback} to use when handling DRM for media."
}
{
    "Origin": "Creates a new block blob, or updates the content of an existing block blob.",
    "Reference": "Creates a new block blob.",
    "HebCup": "Creates a new block blob, or updates the content of an existing block blob."
}
{
    "Origin": "Creates query for the given queryString.",
    "Reference": "Queries this contact source for the given queryString.",
    "HebCup": "Creates Source for the given queryString."
}
{
    "Origin": "Reads a {@code module-info.class} from the given byte buffer\nbut ignore the {@code Hashes} attribute.",
    "Reference": "Reads a {@code module-info.class} from the given byte buffer\nbut ignore the {@code ModuleHashes} attribute.",
    "HebCup": "Reads a {@code module-info.class} from the given byte buffer\nbut ignore the {@code Hashes} attribute."
}
{
    "Origin": "Tests that adding a @JsNoExport annotation on a method comes out accurately and that removing\nit comes out accurately as well.",
    "Reference": "Tests that adding a @JsIgnore annotation on a method comes out accurately and that removing\nit comes out accurately as well.",
    "HebCup": "Tests that adding a @JsIgnore annotation on a method comes out accurately and that removing it comes out accurately as well."
}
{
    "Origin": "Gets the lastUpdated.",
    "Reference": "Gets the nextCrawl.",
    "HebCup": "Gets the nextCrawl."
}
{
    "Origin": "Same as s.substring(0, len) except that\nit won't split a surrogate pair.",
    "Reference": "Same as s.substring(0, len) except that\nit won't split a surrogate pair or at a ZWJ.",
    "HebCup": "Same as s.substringc0, len) except that it won't split a surrogate pair."
}
{
    "Origin": "Checks Command cancellation detection",
    "Reference": "Checks Command cancellation",
    "HebCup": "Checks cancellation detection"
}
{
    "Origin": "Binds the specified {@link Service} at the specified {@link Route}.",
    "Reference": "Binds the specified {@link HttpService} at the specified {@link Route}.",
    "HebCup": "Binds the specified {@link HttpService} at the specified {@link Route}."
}
{
    "Origin": "Get the purged gtid values from MySQL (gtid_purged value)",
    "Reference": "Get the purged GTID values from MySQL (gtid_purged value)",
    "HebCup": "Get the purged gtid values from MySQL (gtid_purged value)"
}
{
    "Origin": "Gets the value of the shortDescription property.",
    "Reference": "Gets the value of the description property.",
    "HebCup": "Gets the value of the description property."
}
{
    "Origin": "Parse an XLS into a list of ImportedGrade objects Note that only the first sheet of the Excel file is supported.",
    "Reference": "Note that only the first sheet of the Excel file is supported.",
    "HebCup": "Parse an XLS into a list of ImportedSpreadsheet objects Note that only the first sheet of the Excel file is supported."
}
{
    "Origin": "Converts the given objects into a map of interned strings where the keys and values are alternating entries in the passed array.",
    "Reference": "Converts the given objects into a map of potentially cached and interned strings where the keys and values are alternating entries in the passed array.",
    "HebCup": "Converts the given objects into a map of interned strings where the keys and values are alternating entries in the passed array."
}
{
    "Origin": "75% of elements are greater).",
    "Reference": "larger values cover 75% of the PDF).",
    "HebCup": "75% of elements are greater)."
}
{
    "Origin": "Helper method for firing a 'value changed' event.",
    "Reference": "Fires a value change event.",
    "HebCup": "Helper method for firing a 'fireValue changed' event."
}
{
    "Origin": "Sets the broker URL to use to connect to ActiveMQ using the",
    "Reference": "Sets the broker URL to use to connect to ActiveMQ broker.",
    "HebCup": "Sets the broker URL to use to connect to ActiveMQ using the"
}
{
    "Origin": "If one param is a float, the other is converted to a float.",
    "Reference": "a-b If one param is a float,\nthe other is converted to a float.",
    "HebCup": "If one param is a float, the other is converted to a float."
}
{
    "Origin": "This call is equivalent to calling {@code inInterpreter() || inLowTier()}.",
    "Reference": "This call is equivalent to calling {@code inInterpreter() || inLowGrade()}.",
    "HebCup": "This call is equivalent to calling {@code inInterpreter() || inLowGrade()}."
}
{
    "Origin": "Parses {@link ColumnMajorSparseMatrix} from the given Matrix Market string.",
    "Reference": "Parses {@link ColumnMajorSparseMatrix} from the given Matrix Market.",
    "HebCup": "Parses {@link ColumnMajorSparseMatrix} from the given Matrix Market InputStream."
}
{
    "Origin": "Cluster a new instance.",
    "Reference": "Constructor.",
    "HebCup": "Cluster a new instance."
}
{
    "Origin": "The INSERT statement defining the order of the values to add for a given CQL row.",
    "Reference": "The INSERT or UPDATE statement defining the order of the values to add for a given CQL row.",
    "HebCup": "The INSERT/UPDATE statement defining the order of the values to add for a given CQL row."
}
{
    "Origin": "Determines if the reachability of this object corresponds with the validity of the referenced\nmachine code.",
    "Reference": "Determines if a reference to this object is the only way the machine code can be executed.",
    "HebCup": "Determines if the sole of this object corresponds with the validity of the referenced machine code."
}
{
    "Origin": "If not\nexplicitly configured with an annotation, this value will be used.",
    "Reference": "If not explicitly\nconfigured with an annotation, or on a method element, this value will be used.",
    "HebCup": "If not\nexplicitly configured with an annotation, this value will be used."
}
{
    "Origin": "Group: producer",
    "Reference": "Group: consumer",
    "HebCup": "Group: producer"
}
{
    "Origin": "Writes a  file into the specified application directory and\nattempts to relaunch Getdown in that directory which will cause it to upgrade to the newly\nspecified version and relaunch the application.",
    "Reference": "Writes a {@code version.txt} file into the specified application directory and\nattempts to relaunch Getdown in that directory which will cause it to upgrade to the newly\nspecified version and relaunch the application.",
    "HebCup": "Writes a  file into the specified application directory and\nattempts to relaunch Getdown in that directory which will cause it to upgrade to the newly\nspecified version and relaunch the application."
}
{
    "Origin": "Checks if a given String is a valid Twitch url (ie, one that will display \"Streaming\" on the Discord client).",
    "Reference": "Checks if a given String is a valid Twitch/Youtube streaming url (ie, one that will display \"Streaming\" on the Discord client).",
    "HebCup": "Checks if a given String is a valid Twitch url (ie, one that will display \"Streaming\" on the Discord client)."
}
{
    "Origin": "Re-loaded scripts need to have their breakpoints re-applied.",
    "Reference": "Reloaded scripts need to have their breakpoints reapplied.",
    "HebCup": "Re-loaded scripts need to have their breakpoints re-applied."
}
{
    "Origin": "In that case\nthe ISO code of the preferred language in the UMS settings is returned.",
    "Reference": "In that\ncase the ISO 639 code of the preferred language in the UMS settings is\nreturned.",
    "HebCup": "In that case\nthe ISO code of the preferred language in the UMS settings is returned."
}
{
    "Origin": "Creates an identifier for an ETD future instrument.",
    "Reference": "Creates an identifier for an ETD option instrument.",
    "HebCup": "Creates an identifier for an ETD future instrument."
}
{
    "Origin": "Set the nodeType.",
    "Reference": "Set the type.",
    "HebCup": "Set the type."
}
{
    "Origin": "This method fetches the related content from related content table and assigns them to the corresponding upload field, \nif any is present in the form definition.",
    "Reference": "This method fetches the related content from related content table and assigns them to the corresponding upload field, \nif any is present in the form being fetched.",
    "HebCup": "This method fetches the String String content table and assigns them to the corresponding upload field, if any is present in the form definition."
}
{
    "Origin": "Queries the MinLen Checker to determine if there is a known minimum length for the array\nrepresented by {@code tree}.",
    "Reference": "Queries the Value Checker to determine if there is a known minimum length for the array\nrepresented by {@code tree}.",
    "HebCup": "Queries the Value Checker to determine if there is a known minimum length for the array represented by {@code tree}."
}
{
    "Origin": "This will set the margin between the annotations \"outer\" rectangle defined by\n/Rect and the border.",
    "Reference": "This will set the difference between the annotations \"outer\" rectangle defined by\n/Rect and the border.",
    "HebCup": "This will set the difference between the annotations ``outer`` rectangle defined by /Rect and the border."
}
{
    "Origin": "Parses the --add-exports command line option and returns the package export definitions\nin the form of an IModule.",
    "Reference": "Parses the --add-exports command line option and returns the package export definitions.",
    "HebCup": "Parses the --add-exports command line option and returns the package export definitions in the form of an AddExport."
}
{
    "Origin": "Returns child style ID.",
    "Reference": "Returns child style identifier.",
    "HebCup": "Returns child style ID."
}
{
    "Origin": "Test affinity awareness partition distributions cache size property.",
    "Reference": "Test Partition Awareness partition distributions cache size property.",
    "HebCup": "test Partition Awareness Partition Distributions Cache Size Property."
}
{
    "Origin": "Helper to print change details.",
    "Reference": "Helper to print movies details.",
    "HebCup": "Helper to report change details."
}
{
    "Origin": "Sets the additional trade information, defaulted to an empty instance.",
    "Reference": "Sets the additional information, defaulted to an empty instance.",
    "HebCup": "Sets the additional PortfolioItem information , defaulted to an empty instance."
}
{
    "Origin": "Analyzes the provided query string and returns a space concatenation of the analyzed tokens.",
    "Reference": "Analyzes the provided query string and returns a concatenation of the analyzed tokens.",
    "HebCup": "Analyzes the provided concatTerms string and returns a space concatenation of the analyzed tokens."
}
{
    "Origin": "Any metadata for the dialog node.",
    "Reference": "The metadata for the dialog node.",
    "HebCup": "Any metadata for the dialog node."
}
{
    "Origin": "Report whether the repository instance has been allocated.",
    "Reference": "Report whether the global repository has been allocated.",
    "HebCup": "Report whether the repository GLOBAL has been allocated."
}
{
    "Origin": "Decode an action profile group with members information to a PI action\ngroup.",
    "Reference": "Decode an action profile group with members information to a PI action\nprofile group.",
    "HebCup": "Decode an action profile group with members information to a Pi Action Profile Group."
}
{
    "Origin": "Returns a zoned date-time formed from this date at the specified time.",
    "Reference": "Returns an offset date-time formed from this date at the specified time.",
    "HebCup": "Returns a Offset Date-time formed from this date at the specified time."
}
{
    "Origin": "Creates a worker to execute single pending task.",
    "Reference": "Creates a worker to execute single local continuous task.",
    "HebCup": "Creates a worker to execute single pending task."
}
{
    "Origin": "Returns an immutable map containing ten mappings.",
    "Reference": "Returns an unmodifiable map containing ten mappings.",
    "HebCup": "Returns an Unmodifiable map containing ten mappings."
}
{
    "Origin": "Returns the primitive ID for the primitive.",
    "Reference": "Returns the namespaced primitive name.",
    "HebCup": "Returns the Name for the primitive."
}
{
    "Origin": "The default value must not be null.",
    "Reference": "The default value may be null.",
    "HebCup": "The default value must not be null."
}
{
    "Origin": "Return the result hierarchy.",
    "Reference": "Return the result.",
    "HebCup": "Return the Result."
}
{
    "Origin": "Returns the member request with the primary key or throws a {@link com.liferay.so.NoSuchMemberRequestException} if it could not be found.",
    "Reference": "Returns the member request with the primary key or throws a {@link NoSuchMemberRequestException} if it could not be found.",
    "HebCup": "Returns the member request with the primary key or throws a {@link com.liferay.so.NoSuchMemberRequestException} if it could not be found."
}
{
    "Origin": "Gets the index on which the underlying future fixes.",
    "Reference": "Gets the name of the volatilities.",
    "HebCup": "Gets the FutureOptionVolatilitiesName on which the underlying future fixes."
}
{
    "Origin": "wal2json plugin nor pgoutput include toasted column in the update",
    "Reference": "wal2json plugin include toasted column in the update",
    "HebCup": "wal2json plugin nor pgoutput include toasted column in the update"
}
{
    "Origin": "Gets all of the {@link AlertDefinition}s that exist on the path for\n{@link Components#AMBARI_SERVER}.",
    "Reference": "Gets all of the {@link AlertDefinition}s that exist on the path for\n{@link RootComponent#AMBARI_SERVER}.",
    "HebCup": "Gets all of the {@link AlertDefinition}s that exist on the path for {@link RootComponent#AMBARI_SERVER}."
}
{
    "Origin": "See Immutable List Static Factory Methods for details.",
    "Reference": "See Unmodifiable Lists for details.",
    "HebCup": "See Unmodifiable List Static Factory Methods for details."
}
{
    "Origin": "This method will retrieve all the ExternalSourceEntries for the ExternalSource for the given AuthorityName param",
    "Reference": "This method will retrieve all the ExternalSourceEntries for the ExternalSource for the given externalSourceName\nparam",
    "HebCup": "This method will retrieve all the ExternalSourceEntries for the ExternalSource for the given externalSourceName param"
}
{
    "Origin": "But that is okay\nbecause {@link #constructState(Map)} will give priority to collections in the\nshared collection state over this map.",
    "Reference": "But that is okay\nbecause {@link #constructState(Set)} will give priority to collections in the\nshared collection state over this map.",
    "HebCup": "But that is okay\nbecause {@link #constructState(Map)} will give priority to collections in the\nshared collection state over this map."
}
{
    "Origin": "Decorates all {@link Service}s with the specified {@link DecoratingServiceFunction}.",
    "Reference": "Decorates all {@link HttpService}s with the specified {@link DecoratingHttpServiceFunction}.",
    "HebCup": "Decorates all {@link Service}s with the specified {@link DecoratingHttpServiceFunction}."
}
{
    "Origin": "A hook allowing a subclass to populate the \"names\" field in the sourcemap.",
    "Reference": "Returns the name to be added to the \"names\" field in the sourcemap.",
    "HebCup": "A hook allowing a subclass to populate the \"names\" field in the sourcemap."
}
{
    "Origin": "Add a Warn EventLogItem and log.",
    "Reference": "Add a Warn EventLogEntry and log.",
    "HebCup": "Add a Warn EventLogEntry and log."
}
{
    "Origin": "Returns the LValue of the assignment.",
    "Reference": "Returns the LHS of the assignment.",
    "HebCup": "Returns the LHS of the assignment."
}
{
    "Origin": "timed invokeAll(null) throws NPE",
    "Reference": "timed invokeAll(null) throws NullPointerException",
    "HebCup": "timed invokeAll(null) throws NPE"
}
{
    "Origin": "For the specified list of table ids, return the number of mispartitioned rows using\nthe provided hashinator and hashinator config",
    "Reference": "For the specified list of table ids, return the number of mispartitioned rows using\nthe provided hashinator config",
    "HebCup": "For the specified list of table ids, return the number of mispartitioned rows using\nthe provided hashinator and hashinator config"
}
{
    "Origin": "Checks if the addressed database can simply be opened, or needs to be (re)built.",
    "Reference": "Checks if the addressed database can be opened, or needs to be (re)built.",
    "HebCup": "Checks if the addressed database can simply be opened, or needs to be (re)built."
}
{
    "Origin": "Extends the template type map associated with this type, merging in the\nkeys and values of the specified map.",
    "Reference": "Prepends the template type map associated with this type, merging in the keys and values of the\nspecified map.",
    "HebCup": "Extends the template type map associated with this type, merging in the\nkeys and values of the specified map."
}
{
    "Origin": "test all digits in different locations of strings.",
    "Reference": "test each individual digit in different locations of strings.",
    "HebCup": "test all digits in different locations of strings."
}
{
    "Origin": "Compute the diagonal of a bounding box.",
    "Reference": "Compute the square size of a bounding box.",
    "HebCup": "Compute the diagonal of a bounding box."
}
{
    "Origin": "Parses the specified options and returns the faulty key.",
    "Reference": "Assigns the specified options.",
    "HebCup": "Parses the specified entrys and returns the faulty key."
}
{
    "Origin": "Build the range store with provided {@link StorageServerClientManager}.",
    "Reference": "Build the range store with provided {@link RangeStoreFactory}.",
    "HebCup": "Build the range store with provided {@link StorageServerRangeStore}."
}
{
    "Origin": "Tests assert that the setting can be deleted after unlock the setting.",
    "Reference": "Tests assert that the setting can be deleted after clear read-only of the setting.",
    "HebCup": "Tests assert that the setting can be deleted after unlock the setting."
}
{
    "Origin": "Take most frequent black local max for which key (beam thickness) is larger than about\ntwice the main line thickness and smaller than main white gap between (large) staff\nlines.",
    "Reference": "Take most frequent black local max for which key (beam thickness) is larger than a\nminimum fraction of interline and smaller than main white gap between (large) staff\nlines.",
    "HebCup": "Take most frequent combo local max for which key (beam thickness) is larger than about twice the main line thickness and smaller than main white gap between (large) staff lines."
}
{
    "Origin": "Refreshes the transaction schema cache by reading the central schema cache is read into this transaction cache.",
    "Reference": "Refreshes the transaction schema cache by reading the keyspace schema cache into this transaction cache.",
    "HebCup": "Refreshes the transaction schema cache by reading the central schema cache is read into this transaction cache."
}
{
    "Origin": "Reserve ids used by the predicates or constraints associated with some\njoin graph.",
    "Reference": "Reserve ids used by the constraints for some predicate or join graph.",
    "HebCup": "Reserve ids used by the predicates or constraints associated with some\njoin graph."
}
{
    "Origin": "Creates a {@link MiddlemanType#ERROR_PROPAGATING_MIDDLEMAN error-propagating} middleman.",
    "Reference": "Creates a {@link MiddlemanType#SCHEDULING_DEPENDENCY_MIDDLEMAN scheduling dependency}\nmiddleman.",
    "HebCup": "Creates a {@link MiddlemanType#SCHEDULING_DEPENDENCY_MIDDLEMAN error-propagating} middleman."
}
{
    "Origin": "Loads the available edit groups.",
    "Reference": "Loads the available element views.",
    "HebCup": "Loads the available element Views."
}
{
    "Origin": "Run.",
    "Reference": "Execute.",
    "HebCup": "execute."
}
{
    "Origin": "Tests the {@link BlockWorker#createBlock(long, long, String, long)} method with a tier other\nthan MEM.",
    "Reference": "Tests the {@link BlockWorker#createBlock(long, long, String, String,  long)} method with\na tier other than MEM.",
    "HebCup": "Tests the {@link BlockWorker#createBlock(long, long, String, long)} method with a tier other\nthan MEM."
}
{
    "Origin": "Creates a Cache that will only flush to a central shared cache then the TransactionOLTP is disposed off",
    "Reference": "Creates a Cache that will only exist within the context of a TransactionOLTP",
    "HebCup": "Creates a Cache that will only flush to a central shared cache then the TransactionOLTP is disposed off"
}
{
    "Origin": "Use the endorsed standards override mechanism to load JAX-WS VERSION API",
    "Reference": "Use the standard override mechanism to load JAX-WS VERSION or newer API.",
    "HebCup": "Use the endorsed standards override mechanism to load JAX-WS VERSION API"
}
{
    "Origin": "Tests {@link StringUtils#capitalize(String)}.",
    "Reference": "Tests the {@link StringUtils#capitalize(String)} method.",
    "HebCup": "Tests {@link StringUtils#capitalize(String)}."
}
{
    "Origin": "Upload screenshot file to Amazon S3 using zafira client",
    "Reference": "Upload screenshot file to Amazon S3 using Zafira Client",
    "HebCup": "Upload screenshot file to Amazon S3 using zafira client"
}
{
    "Origin": "Adds a qualified \"exports dynamic\" directive to the declaration.",
    "Reference": "Adds a qualified \"opens\" directive to the declaration.",
    "HebCup": "Adds a qualified ``opens`` directive to the declaration."
}
{
    "Origin": "Gets the number of documents to return per fetch.",
    "Reference": "Returns the number of documents to return per fetch by default.",
    "HebCup": "default the number of documents to return per fetch."
}
{
    "Origin": "Traces a {@link TimeSeriesPoint}.",
    "Reference": "Traces a {@link DiagnosticContext.TimeSeriesPoint}.",
    "HebCup": "Traces a {@link >}."
}
{
    "Origin": "Configure {@link AutoDiscoverable auto-discoverables} in the instance manager.",
    "Reference": "Configure {@link AutoDiscoverable auto-discoverables} in the injection manager.",
    "HebCup": "Configure {@link AutoDiscoverable auto-discoverables} in the Injection Manager."
}
{
    "Origin": "Find cites along a specific line and store them.",
    "Reference": "Find cites along a specific line and add them to a map.",
    "HebCup": "Find cites along a specific line and store them."
}
{
    "Origin": "Gets the filed name.",
    "Reference": "Gets the field name.",
    "HebCup": "Gets the field Name."
}
{
    "Origin": "If only public, module and package access are allowed, the suffix is \"/package\".",
    "Reference": "If public and package access are allowed, the suffix is \"/package\".",
    "HebCup": "If only public, module and package access are allowed, the suffix is \"/package\"."
}
{
    "Origin": "Create a copy of this Logger that does not log exception stack traces, unless the log level is DEBUG or lower.",
    "Reference": "Returns a copy of this Logger that does not log exception stack traces, unless the log level is DEBUG or lower.",
    "HebCup": "Create a copy of this Logger that does not log exception stack traces, unless the log level is DEBUG or lower."
}
{
    "Origin": "See {@link #setPadding(int, int, int, int)}",
    "Reference": "See {@link #setPadding(float, float, float, float)}",
    "HebCup": "See {@link#setPadding (int , float , float , float)}"
}
{
    "Origin": "Create insert optimize unit.",
    "Reference": "Create optimized insert value.",
    "HebCup": "Create Optimized Insert Value unit."
}
{
    "Origin": "Get the display name for this group, including the size of the group.",
    "Reference": "Get the display name for this group.",
    "HebCup": "Get the display name for this group, including the size of the group."
}
{
    "Origin": "Group: producer",
    "Reference": "Group: consumer",
    "HebCup": "Group: producer"
}
{
    "Origin": "Sets the level.",
    "Reference": "Set the level.",
    "HebCup": "Sets the level."
}
{
    "Origin": "Iterate over all the {@link KeyProperties\nkey} by page and call {@link KeyClient#getKey(KeyProperties key properties)}.",
    "Reference": "Iterate over all the {@link KeyProperties\nkey} by page and call {@link KeyClient#getKey(String, String)}.",
    "HebCup": "Iterate over all the {@link KeyProperties PropertiesOfKeys} by page and call {@link KeyClient#getKey(KeyProperties PropertiesOfKeys properties)}."
}
{
    "Origin": "Returns the status code for this change.",
    "Reference": "Returns the server status code for this change.",
    "HebCup": "Returns the status code for this change."
}
{
    "Origin": "Returns a string representation of this object; useful for testing and debugging.",
    "Reference": "Returns a string representation of this object.",
    "HebCup": "Returns a string representation of this object; useful for testing and debugging."
}
{
    "Origin": "When accessing a left child, level value decrements by 1.",
    "Reference": "When enqueueing a left child, column decrements by 1.",
    "HebCup": "When accessing a left child , col value decrements by 1."
}
{
    "Origin": "Sets the identifier of this action profile group.",
    "Reference": "Sets the ID of this action profile group.",
    "HebCup": "Sets the identifier of this.group action profile group."
}
{
    "Origin": "Create Kubernetes watch for KafkaUser resources.",
    "Reference": "Create Kubernetes watch.",
    "HebCup": "Create Kubernetes watch for KafkaUser resources."
}
{
    "Origin": "Encodes the commit time into a key.",
    "Reference": "Encodes the txId into a key.",
    "HebCup": "Encodes the start Time into a key."
}
{
    "Origin": "Generate a file (format csv) to be used by deep learning software,\npopulated by samples features.",
    "Reference": "Generate a file (using CSV format) to be used by deep learning software,\npopulated by all samples features.",
    "HebCup": "Generate a file (format csv).getGlyphDescriptor to be used by deep learning software , populated by samples features."
}
{
    "Origin": "Configures {@link DbEntityManager} with default class path.",
    "Reference": "Configures {@link DbEntityManager} with specified class path.",
    "HebCup": "Configures {@link DbEntityManager} with Total class path."
}
{
    "Origin": "Performs actual Put operation for the specified record in HBase.",
    "Reference": "Performs actual Put/delete operation for the specified record in HBase.",
    "HebCup": "Performs actual Mutation operation for the specified record in HBase."
}
{
    "Origin": "Create and start logging server and client thread pool.",
    "Reference": "Creates and starts logging server and client thread pool.",
    "HebCup": "Create and start logging break and client thread pool."
}
{
    "Origin": "Convert selected metrics from a registry into a map, with metrics in a compact format.",
    "Reference": "Convert selected metrics from a registry into a map, with metrics in a compact AND simple format.",
    "HebCup": "Convert selected metrics from a registry into a map, with metrics in a compact format."
}
{
    "Origin": "Always returns {@code DUMMY_TARGET}.",
    "Reference": "Always returns {@code null}.",
    "HebCup": "Always returns {@code DUMMY_TARGET}."
}
{
    "Origin": "Return the string representations of the annotation types for\nthe given doc.",
    "Reference": "Adds the annotatation types for the given Element.",
    "HebCup": "htmltree.the string representations of the annotation types for the given doc."
}
{
    "Origin": "Set the preventEncryptionScopeOverride property: Optional.",
    "Reference": "Set the encryptionScopeOverridePrevented property: Optional.",
    "HebCup": "Set the setEncryptionScopeOverridePrevented property: Optional."
}
{
    "Origin": "Returns a string representation of this object; useful for testing and debugging.",
    "Reference": "Returns a string representation of this object.",
    "HebCup": "Returns a string representation of this object; useful for testing and debugging."
}
{
    "Origin": "See Immutable Set Static Factory Methods for details.",
    "Reference": "See Unmodifiable Sets for details.",
    "HebCup": "See Unmodifiable Set Static Factory Methods for details."
}
{
    "Origin": "Returns the length of this path.",
    "Reference": "its number of steps.",
    "HebCup": "Returns the length of this path."
}
{
    "Origin": "Code snippets for {@link LeaseClientBuilder#buildAsyncClient()}.",
    "Reference": "Code snippets for {@link BlobLeaseClientBuilder#buildAsyncClient()}.",
    "HebCup": "Code snippets for {@link BlobLeaseClientBuilder#buildAsyncClient ()}."
}
{
    "Origin": "\"Allow\", \"Accept\").",
    "Reference": "\"Allow\", \"Accept\", etc.",
    "HebCup": "\"Allow\", \"Accept\")."
}
{
    "Origin": "query by given selectBuilder",
    "Reference": "Query by given selectBuilder",
    "HebCup": "query by given selectBuilder"
}
{
    "Origin": "Sets date ranges.",
    "Reference": "Sets the dateRanges.",
    "HebCup": "Sets date dateRanges."
}
{
    "Origin": "The client will connect to servers in the cluster according to the pattern specified by theconfigured\n{@link ServerSelectionStrategy}.",
    "Reference": "The client will connect to servers in the cluster according to the pattern specified by the configured\n{@link ServerSelectionStrategy}.",
    "HebCup": "The client will connect to servers in the cluster according to the pattern specified by theconfigured\n{@link ServerSelectionStrategy}."
}
{
    "Origin": "This variant retrieves {@link Class#getDeclaredMethods()} from a local cache\nin order to avoid the JVM's SecurityManager check and defensive array copying.",
    "Reference": "Variant of {@link Class#getDeclaredMethods()} that uses a local cache in\norder to avoid the JVM's SecurityManager check and new Method instances.",
    "HebCup": "This variant retrieves {@link Class#getDeclaredMethods()} from a local cache\nin order to avoid the JVM's SecurityManager check and defensive array copying."
}
{
    "Origin": "Return true if the given attribute name is the name of a pre-defined\nattribute that is not allowed in the class file.",
    "Reference": "Return true if the given attribute name is the name of a pre-defined\nattribute in JVMS VERSION that is not allowed in a module-info class.",
    "HebCup": "Return true if the given attribute name is the name of a pre-defined\nattribute that is not allowed in the class file."
}
{
    "Origin": "Get the result hierarchy.",
    "Reference": "Get the result.",
    "HebCup": "Get the Result."
}
{
    "Origin": "Steinbach, M. and Karypis, G. and Kumar, V.",
    "Reference": "M. Steinbach, G. Karypis, V. Kumar",
    "HebCup": "Steinbach, M. Steinbach Karypis, G. and Kumar, V."
}
{
    "Origin": "Adds a control metadata.",
    "Reference": "Adds a packet metadata.",
    "HebCup": "Adds a Packet Metadata."
}
{
    "Origin": "Returns the sync d l objects before and after the current sync d l object in the ordered set where companyId = ?",
    "Reference": "Returns the sync d l objects before and after the current sync d l object in the ordered set where repositoryId = ?",
    "HebCup": "Returns the sync d l objects before and after the current sync d l object in the ordered set where repositoryId = ?"
}
{
    "Origin": "Returns the distanceFunction.",
    "Reference": "Returns the distance.",
    "HebCup": "Returns the distance."
}
{
    "Origin": "Turn a toX of Eithers into a single Either with Lists of values.",
    "Reference": "Turn a Collection of Eithers into a single Either with Lists of values.",
    "HebCup": "Turn a toSeq of Eithers into a single Either with Lists of values."
}
{
    "Origin": "The text of the user input example.",
    "Reference": "The text of a user input example.",
    "HebCup": "The text of the user input example."
}
{
    "Origin": "Returns a new instance of a query executor that handles the specified\ndata type.",
    "Reference": "Returns a new instance of the executor using the config from the\ngraph node.",
    "HebCup": "Returns a new instance of a Execution Graph executor that handles the specified data type."
}
{
    "Origin": "Returns the ratings stats total score of this asset entry set.",
    "Reference": "Returns the asset entry set likes count of this asset entry set.",
    "HebCup": "Returns the Asset Entry Set Likes Count of this asset entry set."
}
{
    "Origin": "Returns a string representation of this object; useful for testing and debugging.",
    "Reference": "Returns a string representation of this object.",
    "HebCup": "Returns a string representation of this object; useful for testing and debugging."
}
{
    "Origin": "Symbolic links are not moved to the destination when encountered: neither the link nor the linked file is moved,\nand the symlink file is deleted.",
    "Reference": "It is also worth noting that symbolic links are not moved to the destination when encountered: neither the link\nnor the linked file is moved, and the symlink file is deleted.",
    "HebCup": "Symbolic links are not moved to the destination when encountered: neither the link nor the linked IO is moved , and the symlink IO is deleted."
}
{
    "Origin": "Sets the {@link IGetAndSetLocator} for the given application.",
    "Reference": "Sets the {@link IPropertyLocator} for the given application.",
    "HebCup": "Sets the {@link IPropertyLocator} for the given application."
}
{
    "Origin": "**See also:** [Specifying a voice](URL).",
    "Reference": "**See also:** [Listing all available\nvoices](URL).",
    "HebCup": "**See also:** [Specifying a json](URL)."
}
{
    "Origin": "Creates new {@link AggregationExpression} that returns the month of a date as a number between 1 and 12 in the\nfactory timezone (default UTC).",
    "Reference": "Creates new {@link AggregationExpression} that returns the month of a date as a number between 1 and 12.",
    "HebCup": "Creates new {@link AggregationExpression} that returns the Month.month of a date as a number between 1 and 12 in the factory timezone (default UTC)."
}
{
    "Origin": "Get the DicomAccessor instance which is being used to read the underlying DICOM instance.",
    "Reference": "Get the DicomImageAccessor instance which is being used to read the underlying DICOM instance.",
    "HebCup": "Get the Accessor instance which is being used to read the underlying DICOM instance."
}
{
    "Origin": "Construct the NBT representation of the channel list, for use during login handshaking",
    "Reference": "Construct the Map representation of the channel list, for use during login handshaking",
    "HebCup": "Construct the Map representation of the channel list , for use during login handshaking"
}
{
    "Origin": "Creates a reference to an already declared or referenced function.",
    "Reference": "Creates a call to an already declared or referenced function.",
    "HebCup": "Creates a reference to an already declared or referenced function."
}
{
    "Origin": "Build mongo template mongo template.",
    "Reference": "Build mongo template.",
    "HebCup": "Client Uri Mongo template mongo template."
}
{
    "Origin": "Adds a new job to the job queue to remove the specified extension from the specified namespace.",
    "Reference": "Adds a new job to the job queue to perform the given uninstall request.",
    "HebCup": "Adds a new job to the job queue to remove the specified Uninstall from the specified namespace."
}
{
    "Origin": "Prepare project for using.",
    "Reference": "Prepare a project for using.",
    "HebCup": "Prepare project for using."
}
{
    "Origin": "Returns a string representation of this object; useful for testing and debugging.",
    "Reference": "Returns a string representation of this object.",
    "HebCup": "Returns a string representation of this object; useful for testing and debugging."
}
{
    "Origin": "The given  is\nconverted to the actual user class if necessary, @see ClassUtils#getUserClass.",
    "Reference": "The given  is\nconverted to the actual user class if necessary, @see ProxyUtils#getUserClass.",
    "HebCup": "The given is converted to the actual user class if necessary , @see ProxyUtils#getUserClass."
}
{
    "Origin": "Client will automatically attempt to reconnect to the server if the\nconnection is lost.",
    "Reference": "Sets whether the client will automatically attempt to reconnect to\nthe server if the connection is lost.",
    "HebCup": "Client will automatically attempt to reconnect to the server if the\nconnection is lost."
}
{
    "Origin": "This method must only be\nused for type references whose sort is {@link #THROWS THROWS}.",
    "Reference": "This method must only be used for type references whose sort is {@link\n#THROWS}.",
    "HebCup": "This method must only be\nused for type references whose sort is {@link #THROWS THROWS}."
}
{
    "Origin": "Indicate to associated {@link ExportGeneration}s to become\nmasters for the given partition id",
    "Reference": "Indicate to associated {@link ExportGeneration}s to become\nleaders for the given partition id",
    "HebCup": "Indicate to associated {@link ExportGeneration}s to become\nmasters for the given partition id"
}
{
    "Origin": "Writes a collection of values to an output stream.",
    "Reference": "Writes a sequence of values to an output stream.",
    "HebCup": "Writes a collection of values to an output stream."
}
{
    "Origin": "null, vertical tab, formfeed, etc.)",
    "Reference": "null, vertical tab, form-feed, etc.)",
    "HebCup": "null , vertical tab , formfeed , etc. ="
}
{
    "Origin": "Resources ending in \"{@code .class}\" or where\nthe package name is not a Java identifier are resources that can\nnever be encapsulated.",
    "Reference": "Resources ending in \"{@code .class}\"\nor where the package name is not a legal package name can not be\nencapsulated.",
    "HebCup": "Resources ending in ``{@code .class}`` or where the package name is not a Package Name are resources that can never be encapsulated."
}
{
    "Origin": "Stores the parsed complete object.",
    "Reference": "Stores the parsed zone.",
    "HebCup": "Stores the parsed complete ZoneId."
}
{
    "Origin": "Save a fileEntry and return to the the path.",
    "Reference": "Save a fileEntry.",
    "HebCup": "Save a fileEntry and return to the the path."
}
{
    "Origin": "Decorates and binds the specified {@link ServiceWithRoutes} at multiple {@link Route}s\nof the default {@link VirtualHost}.",
    "Reference": "Decorates and binds the specified {@link HttpServiceWithRoutes} at multiple {@link Route}s\nof the default {@link VirtualHost}.",
    "HebCup": "Decorates and binds the specified {@link HttpServiceWithRoutes} at multiple {@link Route}s of the default {@link VirtualHost}."
}
{
    "Origin": "Key keys} with key material included of the specified versions.",
    "Reference": "KeyVaultKey keys} with key material included of the specified versions.",
    "HebCup": "PropertiesOfKey keys} with PropertiesOfKey material included of the specified versions."
}
{
    "Origin": "Enriches an environment with new/modified properties and returns the new instance.",
    "Reference": "Enriches an environment with new/modified properties or views and returns the new instance.",
    "HebCup": "Enriches an environment with new/modified properties and returns the new instance."
}
{
    "Origin": "Code snippets for {@link LeaseClientBuilder#buildAsyncClient()}.",
    "Reference": "Code snippets for {@link BlobLeaseClientBuilder#buildAsyncClient()}.",
    "HebCup": "Code snippets for {@link BlobLeaseClientBuilder#buildAsyncClient ()}."
}
{
    "Origin": "Returns an immutable set containing an arbitrary number of elements.",
    "Reference": "Returns an unmodifiable set containing an arbitrary number of elements.",
    "HebCup": "Returns an Unmodifiable set containing an arbitrary number of elements."
}
{
    "Origin": "The revision string.",
    "Reference": "Initialise output layer.",
    "HebCup": "The revision void."
}
{
    "Origin": "Unregisters a previously registered listener to be called when the primitive's status changes.",
    "Reference": "Unregisters a previously registered listener to be called when the primitive's state changes.",
    "HebCup": "Unregisters a previously registered listener to be called when the primitive's PrimitiveState changes."
}
{
    "Origin": "Attaches an application created from a WADL description document to the\ncomponent.",
    "Reference": "Attaches an application created from a Swagger description document to the\ncomponent.",
    "HebCup": "Attaches an application created from a swagger description document to the component."
}
{
    "Origin": "Returns a string representation of this object; useful for testing and debugging.",
    "Reference": "Returns a string representation of this object.",
    "HebCup": "Returns a string representation of this object; useful for testing and debugging."
}
{
    "Origin": "Sort a subset of an array of number primitives.",
    "Reference": "Sort a subset of an array using the given comparator",
    "HebCup": "Sort a subset of an array of number primitives."
}
{
    "Origin": "or throws a {@link com.liferay.mail.NoSuchMessageException} if it could not be found.",
    "Reference": "or throws a {@link NoSuchMessageException} if it could not be found.",
    "HebCup": "or throws a {@link com.liferay.mail.NoSuchMessageException} if it could not be found."
}
{
    "Origin": "Validates the {@code item} using item validators added using\n{@link #withValidator(Validator)} and returns the result of the\nvalidation as a list of validation results.",
    "Reference": "Validates the {@code bean} using validators added using\n{@link #withValidator(Validator)} and returns the result of the\nvalidation as a list of validation results.",
    "HebCup": "Validates the {@code Bean} using Bean validators added using {@link#withValidator (Validator)} and returns the result of the validation as a list of validation results."
}
{
    "Origin": "Registers a callback to be invoked when the fullscreen mode should be changed.",
    "Reference": "Sets a listener to be called when the fullscreen mode should be changed.",
    "HebCup": "Registers a callback to be invoked when the fullscreen mode should be changed."
}
{
    "Origin": "Deletes the specified variable from the configuration.",
    "Reference": "Deletes the specified variable from the CONFIGURATION.",
    "HebCup": "Deletes the specified variable from the CONFIGURATION."
}
{
    "Origin": "Throws a SystemException when the http status code is outsdie of the range 200 - 300.",
    "Reference": "Throws SystemException when the http status code is outsdie of the 200 and 400 range",
    "HebCup": "Throws a SystemException when the http doExtractResponse code is outsdie of the range 200 - 300."
}
{
    "Origin": "Adds a resource file to the artifact classes folder.",
    "Reference": "Adds a resource file to the artifact folder.",
    "HebCup": "Adds a resource file to the artifact classes folder."
}
{
    "Origin": "Calling this method will\ncommit an open transaction, even if the new level is the same as the old\none, except if the level is not supported.",
    "Reference": "Calling this method will\ncommit an open transaction, even if the new level is the same as the old\none.",
    "HebCup": "Calling this method will\ncommit an open transaction, even if the new level is the same as the old\none, except if the level is not supported."
}
{
    "Origin": "Replaces existing tags of the specified {@link NamespacedEntityId} with a new set of tags.",
    "Reference": "Replaces existing tags of the specified {@link MetadataEntity} with a new set of tags.",
    "HebCup": "Replaces existing tags of the specified {@link MetadataEntity} with a new set of tags."
}
{
    "Origin": "Create an instance of {@link JAXBElement }{@code <}{@link CTMarkupRange }{@code >}}",
    "Reference": "Create an instance of {@link JAXBElement }{@code <}{@link CTMoveToRangeEnd }{@code >}}",
    "HebCup": "Create an instance of {@link JAXBElement} {@code <} {@link CTMoveToRangeEnd} {@code >}}"
}
{
    "Origin": "Returns the database ID of the user to whom this permission is granted.",
    "Reference": "Returns the database ID of the entity to whom this permission is\ngranted.",
    "HebCup": "Returns the database ID of the Entity to whom this permission is granted."
}
{
    "Origin": "Allocates a byte array of the specified length in unmanaged memory.",
    "Reference": "Allocates a byte array of the specified length.",
    "HebCup": "Allocates a byte array of the specified length in unmanaged memory."
}
{
    "Origin": "(optional) the attribute index (1-based), otherwise all attributes\n   except class are changed",
    "Reference": "(optional) the attribute index (1-based), otherwise all\nattributes except class are changed Assumption: last attribute is class\nattribute",
    "HebCup": "=optional) the attribute index =1-based), otherwise all attributes except class are changed"
}
{
    "Origin": "Receives all emails that matches given {@link EmailFilter filter} and\nmark all messages as 'seen' and 'deleted'.",
    "Reference": "Receives all emails that matches given {@link EmailFilter} and\nmark all messages as 'seen' and 'deleted'.",
    "HebCup": "Receives all emails that matches given {@link filter filter} and mark all messages as 'seen' and 'deleted'."
}
{
    "Origin": "Code snippets for {@link LeaseClientBuilder#buildAsyncClient()}.",
    "Reference": "Code snippets for {@link BlobLeaseClientBuilder#buildAsyncClient()}.",
    "HebCup": "Code snippets for {@link BlobLeaseClientBuilder#buildAsyncClient ()}."
}
{
    "Origin": "The meta-property for the {@code price} property.",
    "Reference": "The meta-property for the {@code tradedPrice} property.",
    "HebCup": "The meta-property for the {@code tradedPrice} property."
}
{
    "Origin": "Tests if this string ends with any specified suffixes.",
    "Reference": "Tests if this CharSequence ends with any specified suffixes.",
    "HebCup": "Tests if this CharSequence ends with any specified suffixes."
}
{
    "Origin": "Returns the parent folder to the resource from the root site.",
    "Reference": "Returns the parent folder of this resource from the root site.",
    "HebCup": "Returns the Path Parent Folder to the resource from the root site."
}
{
    "Origin": "The state of playback should be updated to\n{@link SessionPlayer2#PLAYER_STATE_PAUSED} after the prefetch is done.",
    "Reference": "The state of playback should be updated to\n{@link SessionPlayer2#PLAYER_STATE_PAUSED} after the prepare is done.",
    "HebCup": "The state of playback should be updated to {@link SessionPlayer2#PLAYER_STATE_PAUSED} after the Prepare is done."
}
{
    "Origin": "Test method for {@link org.infinispan.spring.provider.SpringRemoteCacheManager#stop()}.",
    "Reference": "Test method for {@link org.infinispan.spring.remote.provider.SpringRemoteCacheManager#stop()}.",
    "HebCup": "Test method for {@link org.infinispan.spring.provider.SpringRemoteCacheManager#stop()}."
}
{
    "Origin": "The option is a:\n type.",
    "Reference": "The option will be converted to a  type.",
    "HebCup": "The option is a:\n type."
}
{
    "Origin": "Returns the first sync d l object in the ordered set where companyId = ?",
    "Reference": "Returns the first sync d l object in the ordered set where repositoryId = ?",
    "HebCup": "Returns the first sync d l object in the ordered set where repositoryId = ?"
}
{
    "Origin": "Gets the confidence.",
    "Reference": "Set the value.",
    "HebCup": "value the confidence."
}
{
    "Origin": "If {@code labels = \"\"}, settings without any label are returned.",
    "Reference": "If {@code labelFilter = \"\"}, settings without any label are returned.",
    "HebCup": "If {@code LabelFilter = ````} , settings without any label are returned."
}
{
    "Origin": "Get the content of this element.",
    "Reference": "Gets the value of the content property.",
    "HebCup": "Get the content of this element."
}
{
    "Origin": "Check if the resource is an http resource and apply filter.",
    "Reference": "Check if the resource is an http resource and inject ParamOrderConfig annotation.",
    "HebCup": "Check if the resource is an http resource and apply filter."
}
{
    "Origin": "Fire WNA OPEN/CLOSE metrics and update the actual state after a state change is received.",
    "Reference": "Fire WNA metrics and update the actual state after a state change is received.",
    "HebCup": "Fire WNA OPEN/CLOSE metrics and update the actual state after a state change is received."
}
{
    "Origin": "If {@code labels = \"abc1234\"}, settings with a label equal to \"abc1234\" are returned.",
    "Reference": "If {@code labelFilter = \"abc1234\"}, settings with a label equal to \"abc1234\" are returned.",
    "HebCup": "If {@code LabelFilter = ``abc1234``} , settings with a label equal to ``abc1234`` are returned."
}
{
    "Origin": "Main method to invoke this demo about how to extract key phrases of a text input.",
    "Reference": "Main method to invoke this demo about how to extract the key phrases of an input text.",
    "HebCup": "Main method to invoke this demo about how to extract key phrases of a text input."
}
{
    "Origin": "Client will automatically attempt to reconnect to the server if the\nconnection is lost.",
    "Reference": "Sets whether the client will automatically attempt to reconnect to\nthe server if the connection is lost.",
    "HebCup": "Client will automatically attempt to reconnect to the server if the\nconnection is lost."
}
{
    "Origin": "Try to process recorded events for 'maxtime' miliseconds.",
    "Reference": "Try to process recorded events for 'maxDuration' miliseconds.",
    "HebCup": "Try to process recorded events for 'maxDuration' miliseconds."
}
{
    "Origin": "Returns true if the class has the specified annotation class.",
    "Reference": "Returns true if the class has the specified annotation type.",
    "HebCup": "Returns true if the class has the specified annotation class."
}
{
    "Origin": "Sets the value of the sourceFileName property.",
    "Reference": "Sets the value of the componentName property.",
    "HebCup": "Sets the value of the ComponentName property."
}
{
    "Origin": "Implements {@link PacketFilter}.",
    "Reference": "Implements {@link StanzaFilter}.",
    "HebCup": "Implements {@link StanzaFilter}."
}
{
    "Origin": "Gets the tag message of a logging event",
    "Reference": "Gets the logcat tag string of a logging event",
    "HebCup": "Gets the tag message of a logging event"
}
{
    "Origin": "Read the parameter meta data from the transfer object.",
    "Reference": "Read the parameter meta data from the out object.",
    "HebCup": "Read the parameter meta data from the TransferInputStream object."
}
{
    "Origin": "Sets {@link CommitContext.ValidationType} for associated commit.",
    "Reference": "Sets {@link CommitContext.ValidationMode} for associated commit.",
    "HebCup": "Sets {@link CommitContext.ValidationMode} for associated commit."
}
{
    "Origin": "Default method - returns \"input\"",
    "Reference": "Default method - returns \"success\"",
    "HebCup": "Default method - returns ``SUCCESS``"
}
{
    "Origin": "Returns a string representation of this object; useful for testing and debugging.",
    "Reference": "Returns a string representation of this object.",
    "HebCup": "Returns a string representation of this object; useful for testing and debugging."
}
{
    "Origin": "Get the map of all processed certificates until now.",
    "Reference": "Get the set of all processed certificates until now.",
    "HebCup": "Get the Set of all processed certificates until now."
}
{
    "Origin": "Corresponds to `hex.tree.drf.DrfMojoModel.score0()`",
    "Reference": "Corresponds to `hex.tree.gbm.GbmMojoModel.score0()`",
    "HebCup": "Corresponds to `hex.tree.drf.DrfMojoModel.score0()`"
}
{
    "Origin": "Code Samples\n{@codesnippet com.azure.security.keyvault.secretclient.getSecret#secretProperties}",
    "Reference": "{@codesnippet com.azure.security.keyvault.secretclient.deleteSecret#string}",
    "HebCup": "Code Samples {@codesnippet com.azure.security.keyvault.secretclient.client.beginDeleteSecret#secretProperties}"
}
{
    "Origin": "Checks if the given type id is of the edit group type.",
    "Reference": "Checks if the given type id is of the element view type.",
    "HebCup": "Checks if the given type id is of the element View Type."
}
{
    "Origin": "Writes the node to the specified output stream.",
    "Reference": "Finalizes the index and writes the node to the specified output stream.",
    "HebCup": "Writes the node to the specified output stream."
}
{
    "Origin": "Fits a CRF.",
    "Reference": "Fits a CRF model.",
    "HebCup": "Fits a CRF."
}
{
    "Origin": "Asserts that all channels of the processor channel combination, processed the correct number of messages",
    "Reference": "Asserts that source channel, processed the correct number of messages",
    "HebCup": "Asserts that all channels of the processor channel combination, processed the correct number of messages"
}
{
    "Origin": "Example: [30, 60, 70, 90], the 75 percentile is 30 (i.e.",
    "Reference": "Example: [30, 60, 70, 90], the 75 percentile is VERSION (i.e.",
    "HebCup": "Example: [30 , 60 , 70 , 90] , the 75 quantileScale is 30 (i.e."
}
{
    "Origin": "Adds a new document to this collection with the specified POJO as contents, assigning it a\ndocument ID automatically.",
    "Reference": "Adds a new document to this collection with the specified data, assigning it a document ID\nautomatically.",
    "HebCup": "Adds a new document to this collection with the specified fields as contents , assigning it a document ID automatically."
}
{
    "Origin": "Tests assert that the setting can not be deleted after lock the setting.",
    "Reference": "Tests assert that the setting can not be deleted after set the setting to read-only.",
    "HebCup": "Tests assert that the SettingWithResponse can not be deleted after lock the setting."
}
{
    "Origin": "User can use the returned value to\ncontrol when to enter the scope of this span.",
    "Reference": "User can control when to enter the\nscope of this span.",
    "HebCup": "User can use the returned value to control when to enter the scope of this HttpRequestContext."
}
{
    "Origin": "Returns the definition with the primary key or throws a {@link com.liferay.ams.NoSuchDefinitionException} if it could not be found.",
    "Reference": "Returns the definition with the primary key or throws a {@link NoSuchDefinitionException} if it could not be found.",
    "HebCup": "Returns the definition with the primary key or throws a {@link com.liferay.ams.NoSuchDefinitionException} if it could not be found."
}
{
    "Origin": "Returns the sync d l objects before and after the current sync d l object in the ordered set where companyId = ?",
    "Reference": "Returns the sync d l objects before and after the current sync d l object in the ordered set where repositoryId = ?",
    "HebCup": "Returns the sync d l objects before and after the current sync d l object in the ordered set where repositoryId = ?"
}
{
    "Origin": "Builds a new {@link CheckInDialogFragment} setting all values based on the given episode TVDb\nid.",
    "Reference": "Builds and shows a new {@link CheckInDialogFragment} setting all values based on the given\nepisode TVDb id.",
    "HebCup": "Builds a new {@link boolean} setting all values based on the given episode TVDb id."
}
{
    "Origin": "Adds new units to an existing TypeOracle.",
    "Reference": "Adds new units to an existing TypeOracle and indexes their type hierarchy.",
    "HebCup": "Adds new units to an existing loggerOracle."
}
{
    "Origin": "The default behavior of this method is to return\n{@link HttpServletRequest#getPushBuilder()} on the wrapped request object.",
    "Reference": "The default behavior of this method is to return\n{@link HttpServletRequest#newPushBuilder()} on the wrapped request object.",
    "HebCup": "The default behavior of this method is to return {@link HttpServletRequest#newPushBuilder ()} on the wrapped request object."
}
{
    "Origin": "Integers 0 ... n.",
    "Reference": "Integers 0 ... n - 1.",
    "HebCup": "Integers 0 ... n."
}
{
    "Origin": "Registers a connection status listener and attempts a connection.",
    "Reference": "Registers a connection status listener and attempts a connection if there is none so far.",
    "HebCup": "Registers a connection status listener and attempts a connection."
}
{
    "Origin": "Set the incoming binding sets associated with the optimized\nquery plan (after running the optimizers).",
    "Reference": "Set the incoming binding sets associated with the optimized AST.",
    "HebCup": "Set the incoming binding sets associated with the optimized Optimized AST Binding (after running the optimizers)."
}
{
    "Origin": "Suitable surface metadata can be created using\n{@link Surfaces#swaptionNormalExpiryTenor(String, DayCount, FixedIborSwapConvention)}.",
    "Reference": "Suitable surface metadata can be created using\n{@link Surfaces#swaptionNormalExpiryTenor(String, DayCount)}.",
    "HebCup": "Suitable surface metadata can be created using\n{@link Surfaces#swaptionNormalExpiryTenor(String, DayCount, FixedIborSwapConvention)}."
}
{
    "Origin": "Default prarmeters will be overrided if a their names are\ncontaind in the given -map.",
    "Reference": "Default parameters will be overridden if a their names are\ncontained in the given -map.",
    "HebCup": "Default prarmeters will be overrided if a their names are\ncontaind in the given -map."
}
{
    "Origin": "Also, puts the new names->nodes map in the TsurgeonPattern that called copy.",
    "Reference": "Also, puts the new names->nodes map in the TsurgeonMatcher that called copy.",
    "HebCup": "Also , puts the new names->nodes map in the TsurgeonMatcher that called copy."
}
{
    "Origin": "Convert strings to a collection of {@link Node Nodes}.",
    "Reference": "Convert a collection of strings to a set of {@link Node Nodes}.",
    "HebCup": "Convert strings to a Set of {@link Node Nodes}."
}
{
    "Origin": "Lookup an ephemeral or persistent access key.",
    "Reference": "Lookup an ephemeral or persistent access key with caching.",
    "HebCup": "lookupCached an ephemeral or persistent access key."
}
{
    "Origin": "Gets a Map mapping IInventories to the amount of items of the type passed in that exist",
    "Reference": "Gets a Map mapping IInventories to the number of matching items.",
    "HebCup": "Gets a Map mapping IInventories to the amount of Corporea Request of the type passed in that exist"
}
{
    "Origin": "Set value of the Cosmos DB resource throughput.",
    "Reference": "Set the resource value.",
    "HebCup": "Set value of the Cosmos DB resource Resource."
}
{
    "Origin": "Computes the minimum for each pixel across all bands in the {@link Planar} image.",
    "Reference": "Computes the average for each pixel across all bands in the {@link Planar} image.",
    "HebCup": "Computes the minimum for each pixel across all bands in the {@link Planar} image."
}
{
    "Origin": "Returns the next available packet.",
    "Reference": "Returns the next available stanza.",
    "HebCup": "Returns the next available packet."
}
{
    "Origin": "The default\n implementation returns {@link AttributeFactory#DEFAULT_ATTRIBUTE_FACTORY}.",
    "Reference": "The default\n implementation returns {@link TokenStream#DEFAULT_TOKEN_ATTRIBUTE_FACTORY}.",
    "HebCup": "The default implementation returns {@link TokenStream#DEFAULT_ATTRIBUTE_FACTORY}."
}
{
    "Origin": "Computes the minimum for each pixel across all bands in the {@link Planar} image.",
    "Reference": "Computes the minimum for each pixel across selected bands in the {@link Planar} image.",
    "HebCup": "Computes the minimum for each pixel across all bands in the {@link Planar} image."
}
{
    "Origin": "Returns a string representation of this object; useful for testing and debugging.",
    "Reference": "Returns a string representation of this object.",
    "HebCup": "Returns a string representation of this object; useful for testing and debugging."
}
{
    "Origin": "Flat the linked hashmap of profiles into a single optional profile.",
    "Reference": "Flat the list of profiles into a single optional profile.",
    "HebCup": "Flat the Collection hashmap of profiles into a single optional profile."
}
{
    "Origin": "Combine (raw) data for reducible annotations (those that use raw data in gVCFs)",
    "Reference": "Combine (raw) data for reducible annotations (those that use raw data in gVCFs) according to their primary raw key",
    "HebCup": "Combine (raw) data for reducible annotations (those that use raw data in gVCFs)"
}
{
    "Origin": "Appends the information about the given handle to {@link #buf buf}.",
    "Reference": "Appends a string representation of the given handle to {@link #stringBuilder}.",
    "HebCup": "Appends the information about the given handle to {@link#stringBuilder stringBuilder}."
}
{
    "Origin": "Save basic clusters.",
    "Reference": "Save cluster basic configuration.",
    "HebCup": "Save basic clusters."
}
{
    "Origin": "Report the target export file if present on the CLI",
    "Reference": "Report the output folder if present on the CLI",
    "HebCup": "Report the target Output file if present on the CLI"
}
{
    "Origin": "make a=b to a=b,c), please use the {@link KarafDistributionConfigurationFileExtendOption}",
    "Reference": "make a=b to a=b,c) please make use of the\n{@link KarafDistributionConfigurationFileExtendOption}.",
    "HebCup": "make a=b to a=b,c), please use the {@link KarafDistributionConfigurationFileExtendOption}"
}
{
    "Origin": "This allows additional information to be attached to the trade.",
    "Reference": "This allows additional information to be attached.",
    "HebCup": "This allows additional information to be attached to the PortfolioItem."
}
{
    "Origin": "The {@code onErrorResumeNext} method changes this\nbehavior.",
    "Reference": "The {@code onErrorResumeWith} method changes this\nbehavior.",
    "HebCup": "The {@code onErrorResumeWith} method changes this behavior."
}
{
    "Origin": "If an element from the given annotation is not in the\nmapping, it is ignored.",
    "Reference": "If an\nelement from the given annotation is not a key in the map, it is ignored.",
    "HebCup": "If an element from the given annotation is not in the elementNameRenaming , it is ignored."
}
{
    "Origin": "Returns a snapshot of all instances",
    "Reference": "Returns a snapshot of all applications",
    "HebCup": "Returns a snapshot of all Applications"
}
{
    "Origin": "Switches to the requested site.",
    "Reference": "Changes to the given site and path.",
    "HebCup": "Switches to the requested site."
}
{
    "Origin": "Authenticate the user to this UserContext.",
    "Reference": "Authenticate user with the provided credentials.",
    "HebCup": "Authenticate the Authenticated to this UserContext."
}
{
    "Origin": "Sets the bootstrap locations.",
    "Reference": "Sets the bootstrap nodes.",
    "HebCup": "Sets the bootstrap Nodes."
}
{
    "Origin": "Sets the selection listener that will be notified.",
    "Reference": "Sets the wakeup listener that will be notified.",
    "HebCup": "Sets the Wakeup Listener that will be notified."
}
{
    "Origin": "Sets the specified value to the {@code favorDecSpeed} field.",
    "Reference": "Sets the specified value to the {@code autoFlush} field.",
    "HebCup": "Sets the specified value to the {@code autoFlush} field."
}
{
    "Origin": "return the DataFlavors for this",
    "Reference": "Return the DataFlavors for this",
    "HebCup": "return the DataFlavors for this"
}
{
    "Origin": "when two configurations are the same, prefer the one with less alignments,\nor less summed mismatches if still tie.",
    "Reference": "when two configurations are the same,\nput the one with less alignments,\nor less summed mismatches if still tie\nfirst",
    "HebCup": "when two configurations are the same , prefer the one with less)s , or less summed mismatches if still tie."
}
{
    "Origin": "Tested Methods:\ncopy(vector), TOIMPL: copy(Matrix), columPackedCopy(Matrix), rowPackedcCopy(Matrix)",
    "Reference": "Tested Methods:\ncopy(vector), copy(Matrix), columPackedCopy(Matrix), rowPackedcCopy(Matrix)",
    "HebCup": "Tested Methods: res (vector) , TOIMPL: res (Matrix) , columPackedCopy (Matrix) , rowPackedcCopy (Matrix)"
}
{
    "Origin": "Tests if this string ends with any specified suffixes.",
    "Reference": "Tests if this CharSequence ends with any specified suffixes.",
    "HebCup": "Tests if this CharSequence ends with any specified suffixes."
}
{
    "Origin": "The default implementation\ndoes nothing and is intended to be overridden.",
    "Reference": "This behavior is intended to be\noverridden.",
    "HebCup": "The default implementation\ndoes nothing and is intended to be overridden."
}
{
    "Origin": "Returns an adjusted date-time based on this date-time.",
    "Reference": "Returns an adjusted copy of this date-time.",
    "HebCup": "Returns an adjusted date-time based on this date-time."
}
{
    "Origin": "Initiate {@code CLIENT LIST} on all connections and return the {@link Requests}.",
    "Reference": "Initiate {@code INFO CLIENTS} on all connections and return the {@link Requests}.",
    "HebCup": "Initiate {@code CLIENT CLIENTS} on all connections and return the {@link Requests}."
}
{
    "Origin": "Create an instance of {@link JAXBElement }{@code <}{@link CTMarkupRange }{@code >}}",
    "Reference": "Create an instance of {@link JAXBElement }{@code <}{@link CTMoveFromRangeEnd }{@code >}}",
    "HebCup": "Create an instance of {@link JAXBElement} {@code <} {@link CTMoveFromRangeEnd} {@code >}}"
}
{
    "Origin": "Get BlobStoreType from BlobStoreConfig class",
    "Reference": "Get BlobStoreType from BlobStoreInfo class",
    "HebCup": "Get BlobStoreType from BlobStoreInfo class"
}
{
    "Origin": "Returns the descriptor corresponding to this Java type.",
    "Reference": "Returns the descriptor corresponding to this type.",
    "HebCup": "Returns the Builder corresponding to this Java type."
}
{
    "Origin": "Returns a string representation of this object; useful for testing and debugging.",
    "Reference": "Returns a string representation of this object.",
    "HebCup": "Returns a string representation of this object; useful for testing and debugging."
}
{
    "Origin": "Set values of managed limits.",
    "Reference": "Set values of managed resource limits.",
    "HebCup": "Set values of Resource Limits."
}
{
    "Origin": "Compares two strings based not on the strings\nthemselves, but on an encoding of the two\nstrings using the StringEncoder this Comparator\nwas created with.",
    "Reference": "Compares two strings based not on the strings themselves, but on an encoding of the two strings using the",
    "HebCup": "Compares two strings based not on the strings themselves, but on an encoding of the two strings using the String? this Comparator was created with."
}
{
    "Origin": "Generate sync point information from the thrift representation.",
    "Reference": "Generate sync point information from the proto representation.",
    "HebCup": "Generate sync point information from the Proto representation."
}
{
    "Origin": "The\n{@code mark()} method does nothing, and the {@code reset()} method\nthrows {@code IOException}.",
    "Reference": "The\n{@code mark()} and {@code reset()} methods throw an {@code IOException}.",
    "HebCup": "The\n{@code mark()} method does nothing, and the {@code reset()} method\nthrows {@code IOException}."
}
{
    "Origin": "The default implementation replaces any combination of leading '/' and\ncontrol characters (00-1F and 7F) with a single \"/\" or \"\".",
    "Reference": "Any combination of leading slash and control characters (00-1F and 7F)\nwith a single \"/\" or \"\".",
    "HebCup": "The default implementation replaces any combination of leading '/' and control characters (00-1F and 7F path with a single ``/`` or ````."
}
{
    "Origin": "Dump binlog.",
    "Reference": "Start dump binlog.",
    "HebCup": "subscribe binlog."
}
{
    "Origin": "base type\n  @extends\n  @implements\n  @lend\n  @param\n  @return\n  @template\n  @this\n  @throws\n  @type",
    "Reference": "@extends\n  @implements\n  @lend\n  @param\n  @return\n  @template\n  @this\n  @throws\n  @type",
    "HebCup": "base type\n  @extends\n  @implements\n  @lend\n  @param\n  @return\n  @template\n  @this\n  @throws\n  @type"
}
{
    "Origin": "Adds a {@link TemporalMemory} to this {@code Layer}",
    "Reference": "Adds a {@link OldTemporalMemory} to this {@code Layer}",
    "HebCup": "Adds a {@link OldTemporalMemory} to this {@code Layer}"
}
{
    "Origin": "Getter Parameter Value for currencyTypeId",
    "Reference": "Getter Parameter Value for Currency Type",
    "HebCup": "Getter Parameter Value for conversionTypeId"
}
{
    "Origin": "If\nyou specify a SourceType but do not specify a SourceIdentifier, you\nwill receive notice of the events for that source type for all your\nRDS sources.",
    "Reference": "SourceType but do not specify a SourceIdentifier, you will receive notice\nof the events for that source type for all your RDS sources.",
    "HebCup": "If\nyou specify a SourceType but do not specify a SourceIdentifier, you\nwill receive notice of the events for that source type for all your\nRDS sources."
}
{
    "Origin": "Utility method for creation of CandidateURIs found extracting\nlinks from this CrawlURI.",
    "Reference": "Utility method for creation of CrawlURIs found extracting\nlinks from this CrawlURI.",
    "HebCup": "Utility method for creation of CandidateURIs found extracting LinkContext from this CrawlURI."
}
{
    "Origin": "Tests assert that the setting can not be deleted after lock the setting.",
    "Reference": "Tests assert that the setting can not be deleted after set the setting to read-only.",
    "HebCup": "Tests assert that the setting can not be deleted after lock the setting."
}
{
    "Origin": "Sets the focus of the screen.",
    "Reference": "Sets the focus index.",
    "HebCup": "Sets the focus of the screen widgets."
}
{
    "Origin": "Whether to use suffix pattern matching.",
    "Reference": "Whether to use registered suffixes for pattern matching.",
    "HebCup": "Whether to use suffix pattern matching."
}
{
    "Origin": "Example server version string:  VERSION",
    "Reference": "Example  version string:  VERSION",
    "HebCup": "Example Version string: VERSION"
}
{
    "Origin": "Compute the Mahalanobis distance of a vector.",
    "Reference": "Compute the Mahalanobis distance from the centroid for a given vector.",
    "HebCup": "Compute the L Inplace of a vector."
}
{
    "Origin": "Equality comparison is performed with this object's {@link #sameKeys}\n method.",
    "Reference": "Equality comparison is performed with this object's {@link #equals(Object, Object)}\n method.",
    "HebCup": "Equality comparison is performed with this object's {@link #sameKeys}\n method."
}
{
    "Origin": "This method will first search the class loader of\nthe context class for the resource before searching all other {@link ClassLoader}s.",
    "Reference": "This method will first search the class loader of\nthe context class for the resource before searching all other {@code ClassLoader}s.",
    "HebCup": "This method will first search the class loader of\nthe context class for the resource before searching all other {@link ClassLoader}s."
}
{
    "Origin": "Retrieves the LDAP configuration if exists and adds it to services.json",
    "Reference": "Retrieves the Ambari configuration if exists and adds it to services.json",
    "HebCup": "Retrieves the LDAP configuration if exists and adds it to services.String"
}
{
    "Origin": "Access Control Using AWS Identity and Access Management (IAM) \n.",
    "Reference": "For more information, see Access Control Using AWS Identity and Access Management (IAM).",
    "HebCup": "Access Control Using AWS Identity and Access Management (IAM) \n."
}
{
    "Origin": "Returns if there are changed inherit properties.",
    "Reference": "Returns if there are changed properties.",
    "HebCup": "Returns if there are Changed Properties."
}
{
    "Origin": "Gets the list of {@link ConfigurationSetting ConfigurationSettings} on this page.",
    "Reference": "Gets the iterable stream of {@link ConfigurationSetting ConfigurationSettings} on this page.",
    "HebCup": "Gets the IterableStream of {@link ConfigurationSetting ConfigurationSettings} on this page."
}
{
    "Origin": "Custom code can use or change all the local variables, but should not\nchange state of the stack.",
    "Reference": "Subclasses can use or change all the local variables, but should not change state\nof the stack.",
    "HebCup": "Custom code can use or change all the local variables, but should not\nchange state of the stack."
}
{
    "Origin": "Sets the tooling.",
    "Reference": "Set the tooling.",
    "HebCup": "Sets the tooling."
}
{
    "Origin": "Generates a code sample for using {@link ShareDirectoryAsyncClient#deleteSubDirectoryWithResponse(String)} ()}",
    "Reference": "Generates a code sample for using {@link ShareDirectoryAsyncClient#deleteSubdirectoryWithResponse(String)} ()}",
    "HebCup": "Generates a code sample for using {@link ShareDirectoryAsyncClient#deleteSubdirectoryWithResponse (String)} ()}"
}
{
    "Origin": "Ensures that {@code component} is present in the manifest as an exported and enabled launcher\nactivity.",
    "Reference": "Ensures that {@code component} is present in the manifest as an exported and enabled activity.",
    "HebCup": "Ensures that {@code component} is present in the manifest as an exported and enabled launcher\nactivity."
}
{
    "Origin": "Get mail server settings\n### Functional Description:   DRACOON email server configuration entry point.",
    "Reference": "Get mail server settings\n## \u26a0 Deprecated since version VERSION  ### Functional Description:   DRACOON email server configuration entry point.",
    "HebCup": "Get mail server settings\n### Functional Description:   DRACOON email server configuration entry point."
}
{
    "Origin": "Sets the identifier of this action profile group.",
    "Reference": "Sets the ID of this action profile group.",
    "HebCup": "Sets the identifier of this.group action profile group."
}
{
    "Origin": "Returns a string representation of this object; useful for testing and debugging.",
    "Reference": "Returns a string representation of this object.",
    "HebCup": "Returns a string representation of this object; useful for testing and debugging."
}
{
    "Origin": "invokeAll(empty collection) returns empty collection",
    "Reference": "invokeAll(empty collection) returns empty list",
    "HebCup": "invokeAll(empty collection) returns empty collection"
}
{
    "Origin": "All the following mouse and key events apply to the given modifiers.",
    "Reference": "All the following mouse and key events apply to the given modifiersEx.",
    "HebCup": "All the following mouse and key events apply to the given modifiersEx."
}
{
    "Origin": "With this HMM as the initial model, learn an HMM by the Baum-Welch\nalgorithm.",
    "Reference": "Updates the HMM by the Baum-Welch algorithm.",
    "HebCup": "With this HMM as the initial model , update an HMM by the Baum-Welch algorithm."
}
{
    "Origin": "Create an instance of {@link JAXBElement }{@code <}{@link CTMarkupRange }{@code >}}",
    "Reference": "Create an instance of {@link JAXBElement }{@code <}{@link CTMoveToRangeEnd }{@code >}}",
    "HebCup": "Create an instance of {@link JAXBElement} {@code <} {@link CTMoveToRangeEnd} {@code >}}"
}
{
    "Origin": "Set the IterationListeners for the ComputationGraph (and all layers in the network)",
    "Reference": "Set the trainingListeners for the ComputationGraph (and all layers in the network)",
    "HebCup": "Set the org.deeplearning4j.optimize.api.TrainingListeners for the ComputationGraph (and all layers in the network)"
}
{
    "Origin": "Returns a random temporary name for the specified database name.",
    "Reference": "Creates a random database directory and returns its name.",
    "HebCup": "Returns a createRandom temporary name for the specified database name."
}
{
    "Origin": "Counts empty lines before given.",
    "Reference": "Counts empty lines between given parameters.",
    "HebCup": "Counts Empty Lines Between given."
}
{
    "Origin": "Encrypt message locally using an 'RSA_DECRYPT_OAEP_2048_SHA256' public key\nretrieved from Cloud KMS",
    "Reference": "Encrypt data locally using an 'RSA_DECRYPT_OAEP_2048_SHA256' public key\nretrieved from Cloud KMS",
    "HebCup": "Encrypt plaintext locally using an 'RSA_DECRYPT_OAEP_2048_SHA256' public key retrieved from Cloud KMS"
}
{
    "Origin": "Obtains an instance of {@code ZoneChronoDateTime} from an {@code ChronoOffsetDateTime}.",
    "Reference": "Obtains an instance of {@code ZoneChronoDateTime} from an {@code Instant}.",
    "HebCup": "Obtains an instance of {@code).ensureChronoLocalDateTimeChronoDateTime} from an {@code ChronoOffsetDateTime}."
}
{
    "Origin": "Retrieves all the properties for the specified {@link NamespacedEntityId}.",
    "Reference": "Retrieves all the properties for the specified {@link MetadataEntity}.",
    "HebCup": "Retrieves all the properties for the specified {@link MetadataEntity}."
}
{
    "Origin": "Tests for the {@link BaseFileSystem#createDirectory(AlluxioURI, CreateDirectoryOptions)}\nmethod.",
    "Reference": "Tests for the {@link BaseFileSystem#createDirectory(AlluxioURI, CreateDirectoryPOptions)}\nmethod.",
    "HebCup": "Tests for the {@link BaseFileSystem#createDirectory (AlluxioURI , CreateDirectoryPOptions.getDefault)} method."
}
{
    "Origin": "Whether this codec is capable of decoding the given CQL type.",
    "Reference": "Whether this codec is capable of processing the given CQL type.",
    "HebCup": "Whether this codec is capable of decoding the given CQL type."
}
{
    "Origin": "If not, it will be wrapped by a new\n{@link AnnotationEventListenerAdapter}.",
    "Reference": "If not, it will be wrapped by\na new {@link AnnotationEventHandlerAdapter}.",
    "HebCup": "If not, it will be wrapped by a new {@link AnnotationEventMessageListenerAdapter}."
}
{
    "Origin": "Check if the browser is IE6,7,8,9.",
    "Reference": "Check if the browser is IE8,9.",
    "HebCup": "Check if the browser is IE6,7,8,9."
}
{
    "Origin": "Sets the interval.",
    "Reference": "Handle interval change.",
    "HebCup": "Sets the)."
}
{
    "Origin": "Creates a flux of {@link PagedResponse} starting from the next page associated with the given\ncontinuation token.",
    "Reference": "Creates a Flux of {@link PagedResponse} starting from the next page associated with the given\ncontinuation token.",
    "HebCup": "Creates a flux of {@link PagedResponse} starting from the next page associated with the given\ncontinuation token."
}
{
    "Origin": "Deletes the specified variable from the configuration.",
    "Reference": "Deletes the specified variable from the CONFIGURATION.",
    "HebCup": "Deletes the specified variable from the CONFIGURATION."
}
{
    "Origin": "To prevent excessive polling on all\nsources\nit is preferable to do the majority of polling on a single source.",
    "Reference": "it is preferable to do the majority of polling on a single source.",
    "HebCup": "To prevent excessive polling on all sources it assert preferable to do the majority of polling on a single source."
}
{
    "Origin": "Set the value for some metadata on a collection alias.",
    "Reference": "Set the value for some properties on a collection alias.",
    "HebCup": "Set the value for some Properties on a collection alias."
}
{
    "Origin": "line string key is measurement + tag values",
    "Reference": "line string key is measurement + tag values + measurement keys",
    "HebCup": "line string key is measurement + tag values"
}
{
    "Origin": "Checks if the type of worklet is same as that of wfdesc Json.",
    "Reference": "Checks the schema of workflow data.",
    "HebCup": "Checks if the type of worklet is same as that of wfdesc Json."
}
{
    "Origin": "Creates an audit entry for the 'service updated' event.",
    "Reference": "Creates an audit entry for the 'API updated' event.",
    "HebCup": "Creates an audit entry for the 'api Updated' event."
}
{
    "Origin": "Test that the given Module reads all module in the given Layer\nand its parent Layers.",
    "Reference": "Test that the given Module reads all module in the given layer\nand its parent layers.",
    "HebCup": "Test that the given Module reads all module in the given ModuleLayer and its parent Layers."
}
{
    "Origin": "Returns whether or not image pixel at the specified X and Y coordinates is fully transparent.",
    "Reference": "Returns whether or not specified {@link BufferedImage} pixel is fully transparent.",
    "HebCup": "Returns whether or not bufferedImage pixel at the specified X and Y coordinates is fully transparent."
}
{
    "Origin": "All bindable types have been collected, do the actual processing.",
    "Reference": "All bindable types have been collected for this round, do the actual processing.",
    "HebCup": "All bindable types have been collected, do the actual processing."
}
{
    "Origin": "Start building a new factory instance-based service binding.",
    "Reference": "Start building a new supplier instance-based service binding.",
    "HebCup": "Start building a new Supplier Instance-based service binding."
}
{
    "Origin": "Returns the pivot of a view on a specific axis, when it is swiped.",
    "Reference": "Returns the pivot of an item on a specific axis, when it is swiped.",
    "HebCup": "Returns the pivot of a AbstractItem on a specific axis , when it is swiped."
}
{
    "Origin": "If the wrapping fails, then null is returned.",
    "Reference": "If wrapping fails, returns null.",
    "HebCup": "If the wrapping fails, then null is returned."
}
{
    "Origin": "Channel number or timeslot for this message",
    "Reference": "Timeslot / Channel number for this message",
    "HebCup": "int or timeslot for this message"
}
{
    "Origin": "Handles all the tags with the given handler.",
    "Reference": "Handles all the semantic tokens of the JavaDoc.",
    "HebCup": "Handles all the Semantics with the given handler."
}
{
    "Origin": "Prints message to the terminal at {@code verbosity} level, without a newline.",
    "Reference": "Prints message to the terminal's standard output at {@code verbosity} level, without a newline.",
    "HebCup": "Prints message to the terminal at {@code verbosity} level, without a newline."
}
{
    "Origin": "If not found, look for \"dspace.dir\" initial context parameter.",
    "Reference": "If not found, use value provided in \"dspace.dir\" in Spring Environment",
    "HebCup": "If not found, look for ``String.dir`` initial context parameter."
}
{
    "Origin": "Sets the value of the 'dec' field.",
    "Reference": "Sets the value of the 'ts' field.",
    "HebCup": "Sets the value of the 'Ts' field."
}
{
    "Origin": "KeyCreateOptions#getNotBefore() notBefore} values are optional.",
    "Reference": "CreateKeyOptions#getNotBefore() notBefore} values are optional.",
    "HebCup": "CreateKeyOptions#getNotBefore () notBefore} values are optional."
}
{
    "Origin": "Create an instance of {@link JAXBElement }{@code <}{@link CTMarkupRange }{@code >}}",
    "Reference": "Create an instance of {@link JAXBElement }{@code <}{@link CTMoveFromRangeEnd }{@code >}}",
    "HebCup": "Create an instance of {@link JAXBElement} {@code <} {@link CTMoveFromRangeEnd} {@code >}}"
}
{
    "Origin": "Generates a random transaction with a random hash.",
    "Reference": "Generates a transaction with a hash.",
    "HebCup": "Generates a Transaction with a random hash."
}
{
    "Origin": "Convert wiki name in database/schema name.",
    "Reference": "Convert wiki name in database name.",
    "HebCup": "Convert wiki name in database/Database name."
}
{
    "Origin": "Gets the value of the cryptAlgorithmType property.",
    "Reference": "Gets the value of the algorithmName property.",
    "HebCup": "Gets the value of the algorithmName property."
}
{
    "Origin": "The {@link Flux} will\ncontain one or several feed response of the read cosmos items.",
    "Reference": "The {@link CosmosContinuablePagedFlux} will\ncontain one or several feed response of the read cosmos items.",
    "HebCup": "The {@link Flux} will contain one or several Cosmos Continuable Paged Flux of the read cosmos items."
}
{
    "Origin": "Returns the last jid that the party with the specified address\ncontacted us from or null if we don't have a jid for the\nspecified address yet.",
    "Reference": "Returns the last jid that the party with the specified address\ncontacted us from or null(or bare jid) if we don't have a jid\nfor the specified address yet.",
    "HebCup": "Returns the last jid that the party with the specified address\ncontacted us from or null if we don't have a jid for the\nspecified address yet."
}
{
    "Origin": "String representation of \"this\" with packagename and the path.",
    "Reference": "String representation of \"this\" with elementname and the path.",
    "HebCup": "String representation of ``this`` with elementName and the path."
}
{
    "Origin": "Checks a filename to see if it matches the specified wildcard matcher\nusing the case rules of the system.",
    "Reference": "Checks a fileName to see if it matches the specified wildcard matcher\nusing the case rules of the system.",
    "HebCup": "Checks a fileName to see if it matches the specified wildcard matcher using the case rules of the system."
}
{
    "Origin": "Sets the value of the 'BloomFilter' field.",
    "Reference": "Sets the value of the 'bloomFilter' field.",
    "HebCup": "Sets the value of the 'bloomFilter' field."
}
{
    "Origin": "ModifiedAccessConditions, BlobAccessConditions, Duration, Context)}",
    "Reference": "ModifiedAccessConditions, BlobAccessConditions, Duration)}",
    "HebCup": "ModifiedAccessConditions , BlobAccessConditions , Duration , Context).getCopyId}"
}
{
    "Origin": "Get the {@linkplain ExecutionEvent execution events} as a {@link Stream}.",
    "Reference": "Get the {@linkplain Event events} as a {@link Stream}.",
    "HebCup": "Get the {@linkplain Event execution events} as a {@link Stream}."
}
{
    "Origin": "/api/v1/topology/:id/profiling/dumpheap/:host-port/:timeout -> dump heap.",
    "Reference": "/api/v1/topology/:id/profiling/dumpheap/:host-port -> dump heap.",
    "HebCup": "/api/v1/topology/:id/profiling/dumpheap/:host-port/:timeout -> dump heap."
}
{
    "Origin": "Get {@link Repo} from event",
    "Reference": "Get {@link Repository} from event",
    "HebCup": "Get {@link Repository} from event"
}
{
    "Origin": "Provide configuration in the form of {@link RSocketStrategies} instance\nwhich can also be re-used to initialize a client-side\n{@link RSocketRequester}.",
    "Reference": "Configure this handler through an {@link RSocketStrategies} instance which\ncan be re-used to initialize a client-side {@link RSocketRequester}.",
    "HebCup": "Provide configuration in the form of {@link RSocketStrategies} instance\nwhich can also be re-used to initialize a client-side\n{@link RSocketRequester}."
}
{
    "Origin": "Use full publisher confirms, with correlation data and a callback for each message.",
    "Reference": "Use full (correlated) publisher confirms, with correlation data and a callback for\neach message.",
    "HebCup": "Use full Confirm Type.CORRELATED, with correlation data and a callback for each message."
}
{
    "Origin": "Set the {@link MongoDbFactory} that this instance should manage transactions for.",
    "Reference": "Set the {@link MongoDatabaseFactory} that this instance should manage transactions for.",
    "HebCup": "Set the {@link MongoDatabaseFactory} that this instance should manage transactions for."
}
{
    "Origin": "Creates a temporary snapshot directory for the given path.",
    "Reference": "Creates a local temporary snapshot directory for the given path.",
    "HebCup": "Creates a temporary snapshot directory for the given File."
}
{
    "Origin": "Retrieves all the tags for the specified {@link NamespacedEntityId}.",
    "Reference": "Retrieves all the tags for the specified {@link MetadataEntity}.",
    "HebCup": "Retrieves all the tags for the specified {@link MetadataEntity}."
}
{
    "Origin": "Returns an adapter which converts a {@link MultimapSideInputHandlerFactory} to a {@link",
    "Reference": "Returns an adapter which converts a {@link SideInputHandlerFactory} to a {@link",
    "HebCup": "Returns an adapter which converts a {@link SideInputHandlerFactory} to a {@link"
}
{
    "Origin": "Get Valid Level Instance of MFMDunning",
    "Reference": "Get Valid Level for dunning, all",
    "HebCup": "Get Valid true Instance of MFMDunning"
}
{
    "Origin": "Creates a temporary snapshot directory for the given path.",
    "Reference": "Creates a local temporary snapshot directory for the given path.",
    "HebCup": "Creates a temporary snapshot directory for the given File."
}
{
    "Origin": "Method to insert code snippets for {@link SecretClient#getSecret(SecretProperties)}",
    "Reference": "Method to insert code snippets for {@link SecretClient#getSecret(String, String)}",
    "HebCup": "Method to insert code snippets for {@link KeyVaultSecretClient#getKeyVaultSecret(KeyVaultSecretProperties)}"
}
{
    "Origin": "API base URL.",
    "Reference": "Set a fixed API base URL.",
    "HebCup": "API base URL."
}
{
    "Origin": "Retrieves the Session needed to open the Transaction.",
    "Reference": "Creates a Session needed to open Transactions.",
    "HebCup": "Retrieves the Session needed to open the Transaction."
}
{
    "Origin": "Gets the sentenceLocation.",
    "Reference": "Gets the sentenceLocations.",
    "HebCup": "Gets the sentenceLocations."
}
{
    "Origin": "Creates a new ImgPlus with specified dimensions and axes.",
    "Reference": "Creates a new {@link ImgPlus} with specified dimensions and axes.",
    "HebCup": "Creates a new ImgPlus with specified dimensions and axisTypes."
}
{
    "Origin": "Returns the int value if this primitive value is of type int.",
    "Reference": "Returns the int value if this primitive value is of size 4",
    "HebCup": "Returns the int value if this primitive value is of size int."
}
{
    "Origin": "Hit the test servlet to see if getUniqueGroupIdsForUser works when supplied with a invalid user(EntityOutOfRealmScope).",
    "Reference": "Hit the test servlet to see if getUniqueGroupIdsForUser works when supplied with a invalid user (EntityNotInRealmScopeException).",
    "HebCup": "Hit the test servlet to see if getUniqueGroupIdsForUser works when supplied with a invalid user(EntityNotInRealmScope)."
}
{
    "Origin": "Although ImageDecoder\nwas added in Android O a bug prevents it from scaling images with exif orientations until P.",
    "Reference": "Although ImageDecoder\nwas added in Android O a bug prevents it from scaling images with exif orientations until Q.",
    "HebCup": "Although ImageDecoder\nwas added in Android O a bug prevents it from scaling images with exif orientations until P."
}
{
    "Origin": "Count the number of children of the given PLSQL node.",
    "Reference": "Count the number of children of the given node.",
    "HebCup": "Count the number of children of the given PLSQL node."
}
{
    "Origin": "Add object to the array, deletes the old one if it exists",
    "Reference": "Add object, deletes the old one if it exists",
    "HebCup": "Add String to the array , deletes the old one if it exists"
}
{
    "Origin": "Return the HTTP response.",
    "Reference": "Return the native HTTP response.",
    "HebCup": "Return the HTTP NativeResponse."
}
{
    "Origin": "The input file must be a list of tab-separated verb-POS pairs, one verb\nper line.",
    "Reference": "The input file must be a list of whitespace-separated verb-lemma-POS triples, one verb\nform per line.",
    "HebCup": "The input file must be a list of tab-separated verb-POS pairs, one verb per line: ."
}
{
    "Origin": "Report the potential key signature in this measure for the specified staff index.",
    "Reference": "Report the potential key signature in this measure for the specified staff index\nin part.",
    "HebCup": "Report the potential key signature in this measure for the specified staff index."
}
{
    "Origin": "Add component to be presented in the ScrollPane viewport",
    "Reference": "Set component to be presented in the ScrollPane viewport",
    "HebCup": "set Component To be presented in the ScrollPane viewport"
}
{
    "Origin": "Prefixes are used to enrich the mappings of every {@code @RequestMapping}\nmethod whose controller type is matched by the corresponding\n{@link HandlerTypePredicate}.",
    "Reference": "Prefixes are used to enrich the mappings of every {@code @RequestMapping}\nmethod whose controller type is matched by the corresponding\n{@code Predicate}.",
    "HebCup": "Prefixes are used to enrich the mappings of every {@code @RequestMapping} method whose controller type is matched by the corresponding {@link Predicate}."
}
{
    "Origin": "Sends a message to all connected members.",
    "Reference": "Sends a message to all connected clients.",
    "HebCup": "Sends a message to all connected members."
}
{
    "Origin": "Returns the tuple of parameter default values of this function value.",
    "Reference": "Returns the optional tuple of default values for optional parameters.",
    "HebCup": "Returns the tuple of parameter null of this function value."
}
{
    "Origin": "Subclasses content with\nthis format may add additional details in\n{@link #explain(List, BasicStats, int, double, double)}.",
    "Reference": "Subclasses content with\nthis format may add additional details in\n{@link #explain(List, BasicStats, double, double)}.",
    "HebCup": "Subclasses content with\nthis format may add additional details in\n{@link #explain(List, BasicStats, int, double, double)}."
}
{
    "Origin": "Retrieves the ticket corresponding to the client/server principal\npair from the Subject in the specified AccessControlContext.",
    "Reference": "Retrieves the initial TGT corresponding to the client principal\nfrom the Subject in the specified AccessControlContext.",
    "HebCup": "Retrieves the ticket corresponding to the client/null pair from the Subject in the specified AccessControlContext."
}
{
    "Origin": "Set the preventEncryptionScopeOverride property: The\npreventEncryptionScopeOverride property.",
    "Reference": "Set the encryptionScopeOverridePrevented property: The\nencryptionScopeOverridePrevented property.",
    "HebCup": "Set the setEncryptionScopeOverridePrevented property: The setEncryptionScopeOverridePrevented property."
}
{
    "Origin": "Updates the number of bytes read, error count, startTime and elapsedTime",
    "Reference": "Updates the number of bytes read and sent, error count, startTime and elapsedTime",
    "HebCup": "Updates the number of bytes read, error count, startTime and elapsedTime"
}
{
    "Origin": "Sets the base section paint and sends a {@link PlotChangeEvent} to all\nregistered listeners.",
    "Reference": "Sets the default section paint and sends a {@link PlotChangeEvent} to all\nregistered listeners.",
    "HebCup": "Sets the Default Section Paint and sends a {@link PlotChangeEvent} to all registered listeners."
}
{
    "Origin": "Returns the {@code Platform} of the given OS name specified\nin the {@code ModuleTarget} attribute.",
    "Reference": "Returns the {@code Platform} derived from the target platform\nin the {@code ModuleTarget} attribute.",
    "HebCup": "Returns the {@code Platform} of the given target Platform specified in the {@code ModuleTarget} attribute."
}
{
    "Origin": "Skip lines that only contain {@code TokenTypes.ANNOTATION}s.",
    "Reference": "Skip all {@code TokenTypes.ANNOTATION}s to the first non-annotation.",
    "HebCup": "Skip lines that only contain {@code TokenTypes.Modifier}s."
}
{
    "Origin": "An alternative to this method is to print/parse the instant as a single\nepoch-seconds value.",
    "Reference": "An alternative to this method is to format/parse the instant as a single\nepoch-seconds value.",
    "HebCup": "An alternative to this method is to print/parse the instant as a single\nepoch-seconds value."
}
{
    "Origin": "This creates an empty  object based\non a specific parser implementation.",
    "Reference": "This creates an empty  object based\non the current JAXP parser implementation.",
    "HebCup": "This creates an empty object based on a specific Document implementation."
}
{
    "Origin": "Reverses the order of all elements in the given interval.",
    "Reference": "Reverses the order of all entries in the given interval.",
    "HebCup": "Reverses the order of all elements in the given interval."
}
{
    "Origin": "Creates an instance from another byte source.",
    "Reference": "Obtains an instance from another byte source.",
    "HebCup": "Creates an instance from another byte source."
}
{
    "Origin": "Get name of the Cosmos DB table.",
    "Reference": "Get the resource value.",
    "HebCup": "Get name of the Cosmos DB resource."
}
{
    "Origin": "Returns the j i r a issue with the primary key or throws a {@link com.liferay.socialcoding.NoSuchJIRAIssueException} if it could not be found.",
    "Reference": "Returns the j i r a issue with the primary key or throws a {@link NoSuchJIRAIssueException} if it could not be found.",
    "HebCup": "Returns the j i r a issue with the primary key or throws a {@link com.liferay.socialcoding.NoSuchJIRAIssueException} if it could not be found."
}
{
    "Origin": "AND o onto v inplace, i.e.",
    "Reference": "AND o onto v in-place, i.e.",
    "HebCup": "AND o onto v inplace, j.e."
}
{
    "Origin": "Populates the given {@link BasicDBList} with values from the given {@link Collection}.",
    "Reference": "Populates the given {@link Collection sink} with converted values from the given {@link Collection source}.",
    "HebCup": "Populates the given {@link Collection} with values from the given {@link Collection}."
}
{
    "Origin": "This method assumes that it is\nalready in an array context.",
    "Reference": "This method assumes that it is already in an object context.",
    "HebCup": "This method assumes that it is\nalready in an array context."
}
{
    "Origin": "Returns a string representation of this object; useful for testing and debugging.",
    "Reference": "Returns a string representation of this object.",
    "HebCup": "Returns a string representation of this object; useful for testing and debugging."
}
{
    "Origin": "Getter accessor for attribute 'description'.",
    "Reference": "Getter accessor for attribute 'evaluationStrategy'.",
    "HebCup": "Getter accessor for attribute 'EvaluationStrategy'."
}
{
    "Origin": "Returns the function that has a media type whose quality factor matches the HTTP request best.",
    "Reference": "Returns the functions with media type whose quality factors match best.",
    "HebCup": "Returns the function that has a media type whose quality factor matches the HTTP request list.size."
}
{
    "Origin": "Returns the set of all compilation unit type names (both regular and super sourced).",
    "Reference": "Returns the set of all compilation unit type source names (both regular and super sourced).",
    "HebCup": "Returns the set of all compilation Unit Type Source Names (both regular and super sourced)."
}
{
    "Origin": "Expands the given item.",
    "Reference": "Expands the given items.",
    "HebCup": "Expands the given items."
}
{
    "Origin": "Destroys all the keys created during this test run.",
    "Reference": "Destroys all the key versions created during this test run.",
    "HebCup": "Destroys all the keys created during this test run."
}
{
    "Origin": "Negative test, when a CORS request arrives, with a null origin.",
    "Reference": "Negative test, when a CORS request arrives, with no origin header.",
    "HebCup": "Negative test, when a CORS request arrives, with a No Origin."
}
{
    "Origin": "The string passed in is assumed to be a canonical name - it is not checked.",
    "Reference": "The string passed in is assumed to be a class name - it is not checked.",
    "HebCup": "The string passed in is assumed to be a name - it is not checked."
}
{
    "Origin": "Starts a resumable upload to a share.",
    "Reference": "Starts a resumable (chunked) upload to a share.",
    "HebCup": "Starts a resumable upload to a share."
}
{
    "Origin": "Get the sqrt-normalized mutual information (normalized, 0 = unequal)",
    "Reference": "Get the geometric mean normalized mutual information (using the square\nroot).",
    "HebCup": "Get the sqrt-normalized mutual information (normalized , 0 = unequal ?"
}
{
    "Origin": "See {@link MethodVisitor#visitTryCatchAnnotation}.",
    "Reference": "MethodVisitor#visitTryCatchAnnotation}.",
    "HebCup": "See {@link MethodVisitor#visitTryCatchAnnotation}."
}
{
    "Origin": "The {@link #getProductType() product type} must be {@link EtdProductType#FUTURE}\notherwise an exception will be thrown.",
    "Reference": "The {@link #getType() type} must be {@link EtdType#FUTURE} otherwise an exception will be thrown.",
    "HebCup": "The {@link#getProductType () product type} must be {@link EtdType#FUTURE} otherwise an exception will be thrown."
}
{
    "Origin": "Adds a column/value pair to the values inserted by this INSERT statement.",
    "Reference": "Adds a column/value pair to the values inserted by this {@code INSERT} statement.",
    "HebCup": "Adds a column/value pair to the values inserted by this INSERT statement."
}
{
    "Origin": "Collects all load statements.",
    "Reference": "Checks all load statements.",
    "HebCup": "Collects all load statements."
}
{
    "Origin": "The {@link EcKeyCreateOptions#isEnabled() enabled} field is set to true by Azure Key Vault, if\nnot specified.",
    "Reference": "The {@link CreateEcKeyOptions#isEnabled() enabled} field is set to true by Azure Key Vault, if\nnot specified.",
    "HebCup": "The {@link CreateEcKeyOptions#isEnabled () enabled} field is set to true by Azure Key Vault , if not specified."
}
{
    "Origin": "- (optional bool) when true then additional detailed metrics\n  will be collected.",
    "Reference": "- (optional bool, default false) when true then additional detailed metrics\n  will be collected.",
    "HebCup": "- (optional bool) when true then additional detailed metrics\n  will be collected."
}
{
    "Origin": "By default this is set to {@link ServerCodecConfigurer} with defaults.",
    "Reference": "By default this is set to the {@link ServerCodecConfigurer}'s defaults.",
    "HebCup": "By default this is set to {@link >} with defaults."
}
{
    "Origin": "If not in position swap it with A[A[p]-1]",
    "Reference": "If not in position swap it with nums[nums[p]-1]",
    "HebCup": "If not in position swap it with nums[nums[p]-1]"
}
{
    "Origin": "Returns {@link SessionToken2} so that developers create their own\n{@link androidx.media2.MediaController2} instance.",
    "Reference": "Returns {@link SessionToken} so that developers create their own\n{@link androidx.media2.MediaController} instance.",
    "HebCup": "Returns {@link SessionToken} so that developers create their own {@link androidx.media2.MediaController2} instance."
}
{
    "Origin": "Apply the rotation transformation of the given {@link Quaterniond} to this matrix while using (ox, oy, oz) as the rotation origin.",
    "Reference": "Apply the rotation transformation of the given {@link Quaterniondc} to this matrix while using (ox, oy, oz) as the rotation origin.",
    "HebCup": "Apply the rotation transformation of the given {@link Quaterniondc} to this matrix while using (ox , oy , oz) as the rotation origin."
}
{
    "Origin": "Sets the database ID of the user to whom this permission is granted.",
    "Reference": "Sets the database ID of the entity to whom this permission is granted.",
    "HebCup": "Sets the database ID of the Entity to whom this permission is granted."
}
{
    "Origin": "create a working, portable runtime of MultiBit in a temporary directory",
    "Reference": "Create a working, portable runtime of MultiBit in a temporary directory.",
    "HebCup": "create a working, portable runtime of MultiBit in a temporary directory"
}
{
    "Origin": "Loop over the {@link KeyProperties key}\nand call {@link KeyClient#getKey(KeyProperties key properties)}.",
    "Reference": "Loop over the {@link KeyProperties key}\nand call {@link KeyClient#getKey(String, String)}.",
    "HebCup": "Loop over the {@link KeyProperties PropertiesOfKeys} and call {@link KeyClient#getKey(KeyProperties PropertiesOfKeys properties)}."
}
{
    "Origin": "The meta-property for the {@code bondGroup} property.",
    "Reference": "The meta-property for the {@code repoGroup} property.",
    "HebCup": "The meta-property for the {@code RepoGroup} property."
}
{
    "Origin": "Set Search Key.",
    "Reference": "Set Token Value.",
    "HebCup": "set Token Search Key."
}
{
    "Origin": "Test an {@link Array} used as a LIFO stack.",
    "Reference": "Test an {@link XQArray} used as a LIFO stack.",
    "HebCup": "Test an {@link XQArray} used as a LIFO stack."
}
{
    "Origin": "If {@code labels = \"abc*\"}, settings with a label starting with \"abc\" are returned.",
    "Reference": "If {@code labelFilter = \"abc*\"}, settings with a label starting with \"abc\" are returned.",
    "HebCup": "If {@code LabelFilter = ``abc*``} , settings with a label starting with ``abc`` are returned."
}
{
    "Origin": "Pre-multiply the rotation transformation of the given {@link Quaterniond} to this matrix and store\nthe result in .",
    "Reference": "Pre-multiply the rotation transformation of the given {@link Quaterniondc} to this matrix and store\nthe result in .",
    "HebCup": "Pre-multiply the rotation transformation of the given {@link Quaterniondc} to this matrix and store the result in ."
}
{
    "Origin": "Shows roles - manager user.",
    "Reference": "Shows role permissions.",
    "HebCup": "Shows role - manager user."
}
{
    "Origin": "This method wraps raw in the character provided by {@link #getNameEscape()}.",
    "Reference": "This method escapes raw using method {@link #escapeName(String)}.",
    "HebCup": "This method wraps raw in the character provided by {@link#getNameEscape (escape}."
}
{
    "Origin": "This method uses a ConcurrentHashMap for caching method lookups.",
    "Reference": "This method uses a ConcurrentReferenceHashMap for caching method lookups.",
    "HebCup": "This method uses a ConcurrentHashMap for caching method lookups."
}
{
    "Origin": "Removes all metadata (including properties and tags) for the specified {@link NamespacedEntityId}.",
    "Reference": "Removes all metadata (including properties and tags) for the specified {@link MetadataEntity}.",
    "HebCup": "Removes all metadata (including properties and tags) for the specified {@link MetadataEntity}."
}
{
    "Origin": "Returns the default SelectorProvider.",
    "Reference": "Returns the default SelectorProvider implementation.",
    "HebCup": "Returns the default SelectorProviderImpl."
}
{
    "Origin": "Resets the PRNG back to the creation state.",
    "Reference": "Set the seed value of the PRNG.",
    "HebCup": "setSeed the PRNG back to the creation state."
}
{
    "Origin": "Returns the election ID last used in a MasterArbitrationUpdate message\nsent by the client to the server.",
    "Reference": "Returns the election ID last used in a MasterArbitrationUpdate message\nsent by the client to the server for the given P4Runtime-internal device\nID.",
    "HebCup": "Returns the election ID last used in a MasterArbitrationUpdate message sent by the Clients.get to the server."
}
{
    "Origin": "Tries to find a DOI inside the given text.",
    "Reference": "Tries to find a DOI/Short DOI inside the given text.",
    "HebCup": "Tries to find a DOI inside the given text."
}
{
    "Origin": "Returns true if field ttlActionNotUsed is set (has been assigned a value) and false otherwise",
    "Reference": "Returns true if field ttlAction is set (has been assigned a value) and false otherwise",
    "HebCup": "Returns true if field TtlAction is set (has been assigned a value) and false otherwise"
}
{
    "Origin": "Keep persistent copies of all pages, by default on disk.",
    "Reference": "Keep persistent copies of all pages on disk.",
    "HebCup": "Keep persistent copies of all pages, by default on disk."
}
{
    "Origin": "Anything less than 2 would close the cursor so that is the minimum batchSize and `Integer.MAX_VALUE` is the maximum\nbatchSize.",
    "Reference": "When using requested\ndemand, values less than 2 would close the cursor so that is the minimum batchSize and `Integer.MAX_VALUE` is the maximum.",
    "HebCup": "Anything less than 2 would close the cursor so that is the minimum batchSize and `Integer.MAX_VALUE` is the maximum\nbatchSize."
}
{
    "Origin": "The negative of {@code startsWith} is {@link #startsNotWith}.",
    "Reference": "The negative of {@code startsWith} is {@link #notStartingWith}.",
    "HebCup": "The negative of {@code startsWith} is {@link#notStartingWith}."
}
{
    "Origin": "By default this is set to {@link ServerCodecConfigurer} with defaults.",
    "Reference": "By default this is set to {@link ServerCodecConfigurer}'s readers with defaults.",
    "HebCup": "By default this is set to {@link >} with defaults."
}
{
    "Origin": "By default it will be setup/teardown per test (per test method).",
    "Reference": "By default it will be setup/teardown per test method.",
    "HebCup": "By default it will be setup/teardown per test (per test method)."
}
{
    "Origin": "Queries this contact source for the given queryString.",
    "Reference": "Creates query for the given queryString.",
    "HebCup": "Queries this Contact Query for the given queryString."
}
{
    "Origin": "Locks a policy for execution.",
    "Reference": "Locks a policy to prevent concurrent execution.",
    "HebCup": "Locks a policy for execution."
}
{
    "Origin": "Writer for genotypes of arbitrary chromosomes.",
    "Reference": "Create a writer for genotypes of arbitrary chromosomes.",
    "HebCup": "Writer for genotypesWriter of arbitrary chromosomes."
}
{
    "Origin": "Creates an instance of a {@code CatalogResolver} using the specified feature\nsettings and path to one or more catalog files.",
    "Reference": "Creates an instance of a {@code CatalogResolver} using the specified feature\nsettings and uri(s) to one or more catalog files.",
    "HebCup": "Creates an instance of a {@code CatalogResolver} using the specified feature settings and uri to one or more catalog files."
}
{
    "Origin": "Gets whether the user can sort this column or not.",
    "Reference": "Gets whether sorting is enabled for this column.",
    "HebCup": "Gets whether the user can sort this column or not."
}
{
    "Origin": "This method iteratively calls {@link\n#doFeatureIteration(TrainingEstimator, Collection, Vector, Vector, double)}  to train\nthe feature.",
    "Reference": "This method iteratively calls {@link\n#doFeatureIteration(TrainingEstimator, Collection, RealVector, RealVector, double)}  to train\nthe feature.",
    "HebCup": "This method iteratively calls {@link#doFeatureIteration (TrainingEstimator , Collection , RealVector , RealVector , double)} to train the feature."
}
{
    "Origin": "Chops the path and the file suffix of the specified filename\nand returns the database name.",
    "Reference": "Chops the path, file suffix and special characters from the specified filename and\nreturns the database name.",
    "HebCup": "Chops the path and the file suffix of the specified filename\nand returns the database name."
}
{
    "Origin": "Reads boolean type system property.",
    "Reference": "Reads a system property.",
    "HebCup": "Reads String type system property."
}
{
    "Origin": "Sets the border size that defines the attack range for a {@link robocode.BorderSentryRobot SentryRobot}.",
    "Reference": "Returns the sentry border size for a {@link robocode.BorderSentry BorderSentry}.",
    "HebCup": "Sets the border size that defines the attack range for a {@link robocode.sentryBorderSentryRobot}."
}
{
    "Origin": "Final implementation of the Button's onSubmit.",
    "Reference": "This method\nwill be called before the form's onSubmit method.",
    "HebCup": "Final implementation of the Button's onSubmitBeforeForm."
}
{
    "Origin": "Sets a new value by changing the offset and docID.",
    "Reference": "Sets a new value by changing the offset.",
    "HebCup": "Sets a new Offset by changing the offset and docID."
}
{
    "Origin": "Must be larger than the last successfully claimed key.",
    "Reference": "Must be larger than the last attempted key.",
    "HebCup": "Must be larger than the last successfully claimed key."
}
{
    "Origin": "Test of local method, of class ABITracer.",
    "Reference": "Test of URL method, of class ABITracer.",
    "HebCup": "Test of local method, of class ABITracer."
}
{
    "Origin": "Execute tests for a given {@link EngineDiscoveryRequest} using the\nprovided {@link TestEngine}.",
    "Reference": "Execute tests for the given {@link EngineDiscoveryRequest} using the\nsupplied {@link TestEngine}.",
    "HebCup": "Execute tests for a given {@link EngineDiscoveryRequest} using the\nprovided {@link TestEngine}."
}
{
    "Origin": "Client Initiated - no data - alternate close code",
    "Reference": "Client Initiated - no data - server supplied alternate close code",
    "HebCup": "Client Initiated - no data - alternate close code"
}
{
    "Origin": "{@codesnippet com.azure.security.keyvault.certificates.CertificateClient.listIssuers#context}",
    "Reference": "{@codesnippet com.azure.security.keyvault.certificates.CertificateClient.listPropertiesOfIssuers#context}",
    "HebCup": "{@codesnippet com.azure.security.keyvault.certificates.CertificateClient.listPropertiesOfIssuers#context}"
}
{
    "Origin": "This Function will set the HCat token to jobconf",
    "Reference": "This Function will set the HCat token to configuration",
    "HebCup": "This Function will set the HCat token to jobconf"
}
{
    "Origin": "This method must only be used for type references\nwhose sort is {@link #METHOD_FORMAL_PARAMETER METHOD_FORMAL_PARAMETER}.",
    "Reference": "This\nmethod must only be used for type references whose sort is {@link #METHOD_FORMAL_PARAMETER}.",
    "HebCup": "This method must only be used for type references\nwhose sort is {@link #METHOD_FORMAL_PARAMETER METHOD_FORMAL_PARAMETER}."
}
{
    "Origin": "Produces a CCProcessed SemanticGraph with no extras.",
    "Reference": "Produces a CCProcessed SemanticGraph.",
    "HebCup": "Produces a CCProcessed SemanticGraph with no extras."
}
{
    "Origin": "Set body of the User Defined Function.",
    "Reference": "Set the resource value.",
    "HebCup": "Set Resource of the User Defined Function."
}
{
    "Origin": "Returns a string representation of this object; useful for testing and debugging.",
    "Reference": "Returns a string representation of this object.",
    "HebCup": "Returns a string representation of this object; useful for testing and debugging."
}
{
    "Origin": "Returns the asset with the primary key or throws a {@link com.liferay.ams.NoSuchAssetException} if it could not be found.",
    "Reference": "Returns the asset with the primary key or throws a {@link NoSuchAssetException} if it could not be found.",
    "HebCup": "Returns the asset with the primary key or throws a {@link com.liferay.ams.NoSuchAssetException} if it could not be found."
}
{
    "Origin": "Servlet VERSION based implementations will receive\n{@link WriteListener#onError(Throwable)} event.",
    "Reference": "Servlet VERSION based implementations will receive\n{@code javax.servlet.WriteListener#onError(Throwable)} event.",
    "HebCup": "Servlet VERSION based implementations will receive\n{@link WriteListener#onError(Throwable)} event."
}
{
    "Origin": "Returns the query parameters as map.",
    "Reference": "Returns query parameters.",
    "HebCup": "Returns the query parameters as (."
}
{
    "Origin": "Wait for this task to meet the expected number of records as defined by {@code\nexpectedRecords}.",
    "Reference": "Wait up to the specified timeout for this task to meet the expected number of records as\ndefined by {@code expectedRecords}.",
    "HebCup": "Wait for this task to meet the expected number of records as defined by {@code\nexpectedRecords}."
}
{
    "Origin": "Set the value of statusBefore, used in parameter comment.",
    "Reference": "Set the value of clustername, used in parameter comment.",
    "HebCup": "Set the value of clustername , used in parameter comment."
}
{
    "Origin": "Returns the currently selected accountDeviceInstances",
    "Reference": "Returns the currently selected nodes",
    "HebCup": "Returns the currently selected selectedNodes"
}
{
    "Origin": "Returns split button icon.",
    "Reference": "Returns menu icon.",
    "HebCup": "Returns Menu button icon."
}
{
    "Origin": "Returns all instances of a tenant",
    "Reference": "Returns a snapshot of all applications of a tenant",
    "HebCup": "Returns all Applications of a tenant"
}
{
    "Origin": "Writes {@code value} followed by newline character.",
    "Reference": "Writes {@code value} followed by the delimiter byte sequence.",
    "HebCup": "Writes {@code value} followed by delimiter character."
}
{
    "Origin": "Creates a {@link PropertyMatcher} to match against a\nslot position.",
    "Reference": "Creates a {@link KeyValueMatcher} to match against a\nslot position.",
    "HebCup": "Creates a {@link KeyValueMatcher} to match against a slot position."
}
{
    "Origin": "An Exception\noccured which may be retrieved from the arguments., FAILED_TRUNCATED -",
    "Reference": "An Exception occured which may be retrieved from the arguments., FAILED_TRUNCATED - Parsing failed.",
    "HebCup": "An Exception\noccured which may be retrieved from the arguments., FAILED_TRUNCATED -"
}
{
    "Origin": "Embeds the tag regions into an image (represented as an AbstractFile).",
    "Reference": "Embeds the tag regions into an image.",
    "HebCup": "Embeds the tag regions into an image (represented as an AbstractFile)."
}
{
    "Origin": "Get name of the Cosmos DB Cassandra keyspace.",
    "Reference": "Get the resource value.",
    "HebCup": "Get name of the Cosmos DB resource."
}
{
    "Origin": "Invoke Builder.newRequires(Set mods, String mn)",
    "Reference": "Invoke Builder.newRequires(Set mods, String mn, String compiledVersion)",
    "HebCup": "Invoke Builder.newRequires(Set mods, String mn)"
}
{
    "Origin": "If this lookup object has private access, then the caller class is the lookupClass.",
    "Reference": "If this lookup object has full privilege access, then the caller class is the lookupClass.",
    "HebCup": "If this lookup object has Full Privilege Access, then the caller class is the lookupClass."
}
{
    "Origin": "Merges this frame with the given frame.",
    "Reference": "Merges the given frame into this frame.",
    "HebCup": "Merges this frame.n with the given frame."
}
{
    "Origin": "Sets the delimiter.",
    "Reference": "Set the delimiter.",
    "HebCup": "Sets the delimiter."
}
{
    "Origin": "Clears the value of the 'BloomFilter' field",
    "Reference": "Clears the value of the 'bloomFilter' field.",
    "HebCup": "Clears the value of the 'bloomFilter' field"
}
{
    "Origin": "Creates new {@link DayOfYear} in UTC.",
    "Reference": "Creates new {@link DayOfYear}.",
    "HebCup": "Creates new {@link DayOfYear} in UTC."
}
{
    "Origin": "If keys = \"abc*\", settings with a key starting with \"abc\" are returned.",
    "Reference": "If {@code keyFilter = \"abc*\"}, settings with a key starting with \"abc\" are returned.",
    "HebCup": "If KeyFilter = ``abc*`` , settings with a key starting with ``abc`` are returned."
}
{
    "Origin": "Makes a copy of this offset and removes any added terms that are accesses to the length of\nthe listed arrays.",
    "Reference": "Makes a copy of this offset and removes any added terms that are accesses to the length of\nthe listed sequences.",
    "HebCup": "Makes a copy of this offset and removes any added terms that are accesses to the length of the listed sequences."
}
{
    "Origin": "This method will interpolate between each two successive quaternions via {@link #slerp(Quaterniond, double)} using their relative interpolation weights.",
    "Reference": "This method will interpolate between each two successive quaternions via {@link #slerp(Quaterniondc, double)} using their relative interpolation weights.",
    "HebCup": "This method will interpolate between each two successive quaternions via {@link #slerp(Quaterniondc, double)} using their relative interpolation weights."
}
{
    "Origin": "Update current starting address in the data store.",
    "Reference": "Update current head segment in the data store.",
    "HebCup": "Update current HEAD _ SEGMENT _ RECORD in the data store."
}
{
    "Origin": "Construct XML data source from the underneath byte channel which is associated with the entity struct.",
    "Reference": "Construct XML data source from the underneath byte channel which is associated with the entity object.",
    "HebCup": "Construct XML data source from the underneath byte channel which is associated with the entity Obj."
}
{
    "Origin": "Gets the value of the sourceFileName property.",
    "Reference": "Gets the value of the componentName property.",
    "HebCup": "Gets the value of the componentName property."
}
{
    "Origin": "If --interface is specified, --entity and --defaultSearchResult will be visible",
    "Reference": "If --entity is specified, --interface and --defaultSearchResult will be visible",
    "HebCup": "If --interface is specified , --interface and --defaultSearchResult will be visible"
}
{
    "Origin": "Indicates to the user interface whether the history logging is enabled\nfor the supplied MetaContact.",
    "Reference": "Indicates to the user interface whether the history logging is enabled\nfor the supplied id (id for metacontact or for chat room).",
    "HebCup": "Indicates to the user interface whether the history logging is enabled for the supplied String."
}
{
    "Origin": "This function implements a subset of quoted-printable encoding specification (rule REF and rule REF) as defined in\nRFC 1521.",
    "Reference": "This function fully implements the quoted-printable encoding specification (rule REF through rule REF) as\ndefined in RFC 1521.",
    "HebCup": "This function implements a subset of quoted-printable encoding specification (rule REF and rule REF) as defined in\nRFC 1521."
}
{
    "Origin": "RsaKeyCreateOptions#isEnabled() enabled} field is set to true by Azure Key Vault, if not specified.",
    "Reference": "CreateRsaKeyOptions#isEnabled() enabled} field is set to true by Azure Key Vault, if not specified.",
    "HebCup": "CreateRsaKeyOptions#isEnabled () enabled} field is set to true by Azure Key Vault , if not specified."
}
{
    "Origin": "Returns a new Task that, when this task completes\nnormally, executes the given action using the supplied Scheduler.",
    "Reference": "Returns a new Task that, when this task completes\nnormally, executes the given action using the supplied Executor.",
    "HebCup": "Returns a new Task that, when this task completes normally, executes the given action using the supplied Executor."
}
{
    "Origin": "Gets the list of {@link DeletedCertificate deletedSecrets} on this page.",
    "Reference": "Gets the iterable stream of {@link DeletedCertificate deletedSecrets} on this page.",
    "HebCup": "Gets the IterableStream of {@link DeletedCertificate deletedSecrets} on this page."
}
{
    "Origin": "Stop the executor, no longer allowing tasks to be submitted\nthrough {@link #submit(Task)}.",
    "Reference": "Stop the executor, no longer allowing works to be submitted\nthrough {@link #submit(WorkSet)}.",
    "HebCup": "Stop the executor, no longer allowing tasks to be submitted through {@link #submit(work)}."
}
{
    "Origin": "Sets the specified value to the {@code bitfield} field.",
    "Reference": "Sets the specified value to the {@code baselineUsesContext} field.",
    "HebCup": "Sets the specified value to the {@code baselineUsesContext} field."
}
{
    "Origin": "Returns a string representation of this object; useful for testing and debugging.",
    "Reference": "Returns a string representation of this object.",
    "HebCup": "Returns a string representation of this object; useful for testing and debugging."
}
{
    "Origin": "Converts the provided outcome to a message describing the outcome.",
    "Reference": "Converts the provided error to a message describing the error.",
    "HebCup": "Converts the provided Error to a message describing the outcome."
}
{
    "Origin": "Write the task state to the {@link ProvisionerDataset}, retrying if any exception is caught.",
    "Reference": "Write the task state to the {@link ProvisionerStore}, retrying if any exception is caught.",
    "HebCup": "Write the task state to the {@link ProvisionerprovisionerStore}, retrying if any exception is caught."
}
{
    "Origin": "Bind contract provider model to a provider instance using the supplied instance manager.",
    "Reference": "Bind contract provider model to a provider instance using the supplied injection manager.",
    "HebCup": "Bind contract provider model to a provider instance using the supplied Injection Manager."
}
{
    "Origin": "The {@link EcKeyCreateOptions#getCurve() key curve} can be\noptionally specified.",
    "Reference": "The {@link CreateEcKeyOptions#getCurveName() key curve} can be\noptionally specified.",
    "HebCup": "The {@link CreateEcKeyOptions#getCurve () key curve} can be optionally specified."
}
{
    "Origin": "Create an instance of {@link JAXBElement }{@code <}{@link CTMarkupRange }{@code >}}",
    "Reference": "Create an instance of {@link JAXBElement }{@code <}{@link CTMoveToRangeEnd }{@code >}}",
    "HebCup": "Create an instance of {@link JAXBElement} {@code <} {@link CTMoveToRangeEnd} {@code >}}"
}
{
    "Origin": "TkFallback can throw an IOException when no fallback is available.",
    "Reference": "TkFallback can throw an Exception when no fallback is available.",
    "HebCup": "TkFallback can throw an Exception when no fallback is available."
}
{
    "Origin": "Set the incoming binding sets associated with the optimized\nquery plan (after running the optimizers).",
    "Reference": "Set the incoming binding sets associated with the optimized AST.",
    "HebCup": "Set the incoming binding sets associated with the optimized Optimized AST Binding (after running the optimizers)."
}
{
    "Origin": "Produces a Collapsed SemanticGraph with no extras.",
    "Reference": "Produces a Collapsed SemanticGraph.",
    "HebCup": "Produces a Collapsed SemanticGraph with no extras."
}
{
    "Origin": "Process the given resource path to be used.",
    "Reference": "Process the given resource path.",
    "HebCup": "Process the given resource path to be used."
}
{
    "Origin": "As a special case, resources ending with \"{@code .class}\" are\n    never encapsulated.",
    "Reference": "If the resource name ends with  \"{@code .class}\" then it is not\n    encapsulated.",
    "HebCup": "As a special case, resources ending with \"{@code .class}\" are\n    never encapsulated."
}
{
    "Origin": "Register a HealthCheck to the Set of HealthChecks based on appName.",
    "Reference": "Register a HealthCheck to the Set of HealthChecks based on appName to execute when\nperformHealthChecks is called.",
    "HebCup": "Register a HealthCheck to the Set of HealthChecks based on appName."
}
{
    "Origin": "Search for a partial match of the pattern at the start of the data.",
    "Reference": "Search for a possibly partial match of the pattern at the start of the data.",
    "HebCup": "Search for a partial match of the pattern at the start of the data."
}
{
    "Origin": "Creates new {@link AggregationExpression} that returns the day of the year for a date as a number between 1 and\n366 in the factory timezone (default UTC).",
    "Reference": "Creates new {@link AggregationExpression} that returns the day of the year for a date as a number between 1 and\n366.",
    "HebCup": "Creates new {@link AggregationExpression} that returns the Day Of Year.day Of the year for a date as a number between 1 and 366 in the factory timezone (default UTC)."
}
{
    "Origin": "Get Discount Amount.",
    "Reference": "Get Skonto.",
    "HebCup": "Get Discount Amount."
}
{
    "Origin": "Produce the evaluation result for a particular clustering.",
    "Reference": "Estimate the confidence probability of a clustering.",
    "HebCup": "Produce the double for a particular clustering."
}
{
    "Origin": "Returns active {@code HierarchyMapper}",
    "Reference": "Returns the {@code HierarchyMapper} used by this data communicator.",
    "HebCup": "Returns active {@code HierarchyHierarchyMapper}"
}
{
    "Origin": "Update current starting address in the data store.",
    "Reference": "Update current head segment in the data store.",
    "HebCup": "Update current HEAD _ SEGMENT _ RECORD in the data store."
}
{
    "Origin": "Log access to a target class by a caller class.",
    "Reference": "Log access by a caller.",
    "HebCup": "Log access to a target class by a caller class."
}
{
    "Origin": "Returns a string representation of this object; useful for testing and debugging.",
    "Reference": "Returns a string representation of this object.",
    "HebCup": "Returns a string representation of this object; useful for testing and debugging."
}
{
    "Origin": "Total runtime size is 1296 bytes",
    "Reference": "Total runtime size is 14048 bytes",
    "HebCup": "Total runtime size is 1296 bytes"
}
{
    "Origin": "Determines whether a character is a letter according to {@linkplain Character#isLetter(char)",
    "Reference": "Determines whether a character is a BMP letter according to\n{@linkplain Character#isLetter(char) Java's definition}.",
    "HebCup": "Determines whether a character is a letter according to {@linkplain Character#isLetter(char)"
}
{
    "Origin": "Tests that when an etag is passed to set it will only set if the current representation of the setting has the\netag.",
    "Reference": "Tests that when an ETag is passed to set it will only set if the current representation of the setting has the\nETag.",
    "HebCup": "Tests that when an etag is passed to setConfiguration it will only setConfiguration if the current representation of the setting has the etag."
}
{
    "Origin": "Each type will\nbe instantiated by Bootique and added to the Guice DI container.",
    "Reference": "Each type will\nbe instantiated by Bootique and added to the DI container.",
    "HebCup": "Each type will\nbe instantiated by Bootique and added to the Guice DI container."
}
{
    "Origin": "Wraps a loaded value to add the refresh value.",
    "Reference": "Wraps a loaded value to add the refreshed value.",
    "HebCup": "Wraps a loaded value to add the Refreshed value."
}
{
    "Origin": "Get the preferences for given project.",
    "Reference": "Get the FindBugs core preferences for given project.",
    "HebCup": "Get the preferences for given project."
}
{
    "Origin": "Return the locked state of this parameter map.",
    "Reference": "Get the locked state of this parameter map.",
    "HebCup": "Return the locked state of this parameter map."
}
{
    "Origin": "Sets the journal serializer, returning the builder for method chaining.",
    "Reference": "Sets the journal namespace, returning the builder for method chaining.",
    "HebCup": "Sets the journal Namespace , returning the builder for method chaining."
}
{
    "Origin": "Unregisters the given MBeans (untracked).",
    "Reference": "Unregisters the MBeans that were registered on start.",
    "HebCup": "Unregisters the given resourceBeans (untracked)."
}
{
    "Origin": "Determines whether a room is created for each user that is created by automatic import (like a home folder).",
    "Reference": "DEPRECATED, will be ignored Determines whether a room is created for each user that is created by automatic import (like a home folder).",
    "HebCup": "Determines whether a room is created for each user that is created by automatic import (like a home folder)."
}
{
    "Origin": "Get all Pinot offline table names",
    "Reference": "Get all offline table names.",
    "HebCup": "new Pinot offline table names"
}
{
    "Origin": "Set Untergruppe.",
    "Reference": "Set Unterregister.",
    "HebCup": "Set Untergruppe."
}
{
    "Origin": "the property of this\nnode",
    "Reference": "The property of this node.",
    "HebCup": "the property of this\nnode"
}
{
    "Origin": "Get the application-configured instance manager.",
    "Reference": "Get the application-configured injection manager.",
    "HebCup": "Get the application-configured Injection Manager."
}
{
    "Origin": "Get service locator.",
    "Reference": "Get instance manager.",
    "HebCup": "Get Instance Manager."
}
{
    "Origin": "If the value is null, then the default value is\nreturned.",
    "Reference": "If the value is null, then an",
    "HebCup": "If the value is null, then the default value is\nreturned."
}
{
    "Origin": "within the chart's domain and range) represented by the given pixel coordinates, if\nthat pixel is within the chart region described by {@link #contentRectMinusAllMargins}.",
    "Reference": "within the chart's domain and range) represented by the given pixel coordinates, if\nthat pixel is within the chart region described by {@link #contentRect}.",
    "HebCup": "within the chart's domain and range) represented by the given pixel coordinates , if that pixel is within the chart region described by {@link#contentRect}."
}
{
    "Origin": "Gets the entityName.",
    "Reference": "Gets the entity.",
    "HebCup": "Gets the entity."
}
{
    "Origin": "Creates an audit entry for the 'service version created' event.",
    "Reference": "Creates an audit entry for the 'API version created' event.",
    "HebCup": "Creates an audit entry for the 'api Version Created' event."
}
{
    "Origin": "Print scored parse trees for one sentence in format used by charniak parser",
    "Reference": "Print scored parse trees for one sentence in format used by Charniak parser.",
    "HebCup": "Print scored parse trees for one sentence in format used by charniak parser"
}
{
    "Origin": "May be null if the inetAddress\nis unknown or explicitly omitted.",
    "Reference": "May be null if the\nhost name/IP is unknown or explicitly omitted.",
    "HebCup": "May be null if the String is unknown or explicitly omitted."
}
{
    "Origin": "Validates that the client is properly configured for using cpk.",
    "Reference": "Validates that the client is properly configured to use https.",
    "HebCup": "Validates that the client is properly configured for using Validation."
}
{
    "Origin": "Collects data how often components are created",
    "Reference": "Collects data how often a resource reference is created",
    "HebCup": "Collects data how often components are created"
}
{
    "Origin": "Returns a range of all the sync d l objects where parentFolderId = ?.",
    "Reference": "Returns a range of all the sync d l objects where modifiedTime > ?",
    "HebCup": "Returns a range of all the sync d l objects where repositoryId = ?."
}
{
    "Origin": "Equivalent to {@code load(file, true)}.",
    "Reference": "Equivalent to {@code load(module, true)}.",
    "HebCup": "Equivalent to {@code load(module, true)}."
}
{
    "Origin": "Report the algebraic area between function and x axis, from x1 to x2.",
    "Reference": "Report the area between function and y line, from x1 to x2.",
    "HebCup": "Report the algebraic area between function and x axis, from x1 to x2."
}
{
    "Origin": "Getter Parameter Value for statementdate",
    "Reference": "Getter Parameter Value for Statement date",
    "HebCup": "Getter Parameter Value for StatementDate"
}
{
    "Origin": "Whether there is currently a bound execution.",
    "Reference": "Whether there is currently an active bound execution.",
    "HebCup": "Whether there is currently a Active execution."
}
{
    "Origin": "Creates an {@code FxSwap} using forward points, specifying a date adjustment.",
    "Reference": "Creates an {@code FxSwap} using decimal forward points, specifying a date adjustment.",
    "HebCup": "Creates an {@code FxSwap} using decimal Forward Points, specifying a date adjustment."
}
{
    "Origin": "Recursively perform a depth-first search of jar interdependencies, breaking cycles if necessary, to determine\nthe final classpath element order.",
    "Reference": "Recursively perform a depth-first traversal of child classpath elements, breaking cycles if necessary, to\ndetermine the final classpath element order.",
    "HebCup": "Recursively perform a depth-first search of jar interdependencies, breaking cycles if necessary, to determine the final toplevel Classpath order."
}
{
    "Origin": "Sets the timeline on this fake player, which notifies listeners with the changed timeline and\nthe given timeline change reason.",
    "Reference": "Sets the timeline on this fake player, which notifies listeners with the changed timeline.",
    "HebCup": "Sets the timeline on this fake player, which notifies listeners with the changed timeline and the given prepared."
}
{
    "Origin": "Sets the forbidden context map.",
    "Reference": "Sets the allowed contexts.",
    "HebCup": "Sets the allowed Context Map."
}
{
    "Origin": "Calculate Sum of squares of all elements in the Matrix",
    "Reference": "Calculate Sum of squares of all elements in the DRM.",
    "HebCup": "Calculate Sum of squares of all elements in the Matrix"
}
{
    "Origin": "Binds views for the given {@link KindSectionData} list.",
    "Reference": "Binds views for the given {@link KindSectionData}.",
    "HebCup": "Binds views for the given {@link KindSectionData} list."
}
{
    "Origin": "Copies the specified {@link PointerBuffer} to the {@code data.l} field.",
    "Reference": "Copies the specified {@link CLongBuffer} to the {@code data.l} field.",
    "HebCup": "Copies the specified {@link CLongBuffer} to the {@code data.l} field."
}
{
    "Origin": "Visit all of the SqlExpressableTypes associated with this this Writeable.",
    "Reference": "Visit all of the SqlExpressableTypes associated with this this Bindable.",
    "HebCup": "Visit all of the JdbcMappingTypes associated with this this Writeable."
}
{
    "Origin": "Binds the specified {@link Service} under the specified directory.",
    "Reference": "Binds the specified {@link HttpService} under the specified directory.",
    "HebCup": "Binds the specified {@link HttpService} under the specified directory."
}
{
    "Origin": "Checks whether replacing array with replacementArray in this qualifier creates\nreplacementArray's entry in other.",
    "Reference": "Checks whether replacing sequence with replacementSequence in this qualifier creates\nreplacementSequence entry in other.",
    "HebCup": "Checks whether replacing array with replacementSequence in this qualifier creates replacementArray's entry in other."
}
{
    "Origin": "Obtains an instance from the specified unique name.",
    "Reference": "Obtains an instance from the specified name.",
    "HebCup": "Obtains an instance from the specified name."
}
{
    "Origin": "Add insert optimize result unit.",
    "Reference": "Add optimized insert value.",
    "HebCup": "Add Optimized Insert Value."
}
{
    "Origin": "Block for a collection of futures, with an optional timeout for each future.",
    "Reference": "Block for a collection of futures, with optional timeout.",
    "HebCup": "Block for a collection of futures, with an optional timeout for each future."
}
{
    "Origin": "If an empty ItemStack, or none of the type\n{{@link Material#FIREWORK}} was given, a new Firework ItemStack will be created.",
    "Reference": "If an empty ItemStack, or none of the type\n{{@link Material#FIREWORK_ROCKET}} was given, a new Firework ItemStack will be created.",
    "HebCup": "If an empty ItemStack , or none of the type {{@link Material#FIREWORK_ROCKET}} was given , a new FIREWORK_ROCKET ItemStack will be created."
}
{
    "Origin": "Simple test -- dump and execute appJar with the given appClasses in classlist.",
    "Reference": "Simple test -- dump and execute appJar with the given classList in classlist.",
    "HebCup": "Simple test -- dump and execute appJar with the given classList in classlist."
}
{
    "Origin": "Creates the {@link com.univocity.parsers.fixed.FixedWidthFieldLengths} instance based on the headers and field\nlengths.",
    "Reference": "Creates the {@link com.univocity.parsers.fixed.FixedWidthFields} instance based on the headers and field\nlengths.",
    "HebCup": "Creates the {@link com.univocity.parsers.fixed.FixedWidthFields} instance based on the headers and field lengths."
}
{
    "Origin": "Must hold {@code },\n{@code }",
    "Reference": "Must hold {@code },\n{@code },\n{@code }",
    "HebCup": "Must hold {@code },\n{@code }"
}
{
    "Origin": "Resolution for each tick of the timer wheel for scheduling deadlines.",
    "Reference": "Resolution in nanoseconds for each tick of the timer wheel for scheduling deadlines.",
    "HebCup": "ResolutionNs for each tick of the timer wheel for scheduling deadlines."
}
{
    "Origin": "If the JAR file has a {@code Main-Class} attribute in its\n    main manifest then its value is the {@link",
    "Reference": "If the JAR file has a {@code Main-Class} attribute in its\n    main manifest then its value is the module {@link",
    "HebCup": "If the JAR file has a {@code Main-Class} attribute in its\n    main manifest then its value is the {@link"
}
{
    "Origin": "Colors and labels that will be appended to the end of the auto calculated\ncolors and labels arrays after calculating the legend.",
    "Reference": "Entries that will be appended to the end of the auto calculated\n  entries after calculating the legend.",
    "HebCup": "Colors and labels that will be appended to the end of the auto calculated colors and labels arrays after calculating the legendMath.min"
}
{
    "Origin": "create an AccessLogElement implementation which needs header string",
    "Reference": "create an AccessLogElement implementation which needs an element name",
    "HebCup": "create an AccessLogElement implementation which needs name string"
}
{
    "Origin": "So we call\n{@link Utils#rSuicide(String)} instead.",
    "Reference": "So we call\n{@link RSuicide#rSuicide(String)} instead.",
    "HebCup": "So we call {@link RSuicide#rSuicide (String)} instead."
}
{
    "Origin": "Note that this method doesn't serialize the CharSequence of the TokenStream - the caller\nhas to take care of serializing this if necessary.",
    "Reference": "Note that this method doesn't serialize the CharSequence of the TwitterTokenStream - the caller\nhas to take care of serializing this if necessary.",
    "HebCup": "Note that this method doesn't serialize the CharSequence of the TwitterTokenStream - the caller has to take care of serializing this if necessary."
}
{
    "Origin": "Monitoring of beans methods having the {@link Scheduled} or {@link Schedules} annotations,\nonly if  is added in application.yml.",
    "Reference": "Monitoring of beans methods having the {@link Scheduled} or {@link Schedules} annotations.",
    "HebCup": "Monitoring of beans methods having the {@link Scheduled} or {@link Schedules} annotations,\nonly if  is added in application.yml."
}
{
    "Origin": "Discard the peaks that are too light compared with the others, unless they are\ndistant enough from immediate neighbors.",
    "Reference": "Discard the peaks that are too light compared with the others and have a close\nneighbor.",
    "HebCup": "Discard the sortedPeaks.subList that are too light compared with the others , unless they are distant enough from immediate neighbors."
}
{
    "Origin": "Acquire a SAXParser from the pool; create one if it\ndoesn't exist.",
    "Reference": "Acquire a SAXParser from the pool.",
    "HebCup": "Acquire a SAXParser from the pool; create one if it\ndoesn't exist."
}
{
    "Origin": "Get all supported realms",
    "Reference": "Get all supported providers",
    "HebCup": "Get all supported Providers"
}
{
    "Origin": "Loads the class defined by the specified name and path.",
    "Reference": "Loads and returns the class defined by the specified name and path.",
    "HebCup": "Loads the class defined by the specified name and path."
}
{
    "Origin": "Creates query for the given queryString.",
    "Reference": "Queries this contact source for the given queryString.",
    "HebCup": "Creates Source for the given queryString."
}
{
    "Origin": "Implementations of SkylarkValue may define their own behavior of {@code repr}.",
    "Reference": "Implementations of StarlarkValue may define their own behavior of {@code repr}.",
    "HebCup": "Implementations of StarlarkValue may define their own behavior of {@code repr}."
}
{
    "Origin": "With this HMM as the initial model, learn an HMM by the Baum-Welch\nalgorithm.",
    "Reference": "Updates the HMM by the Baum-Welch algorithm.",
    "HebCup": "With this HMM as the initial model , update an HMM by the Baum-Welch algorithm."
}
{
    "Origin": "Checks if secondary package, i.e.",
    "Reference": "Checks if a secondary package, i.e.",
    "HebCup": "Checks if secondary package, i.e."
}
{
    "Origin": "Runs the java launcher with the given arguments.",
    "Reference": "Runs the java launcher with the given arguments, expecting a 0 exit code",
    "HebCup": "test the java launcher with the given arguments."
}
{
    "Origin": "Returns a new Task that, when this task completes\nnormally, is executed using the supplied Scheduler, with this\ntask's result as the argument to the supplied action.",
    "Reference": "Returns a new Task that, when this task completes\nnormally, is executed using the supplied Executor, with this\ntask's result as the argument to the supplied action.",
    "HebCup": "Returns a new Task that , when this task completes normally , is executed using the supplied Executor , with this task's result as the argument to the supplied action."
}
{
    "Origin": "Adds continuous task object.",
    "Reference": "Adds local continuous task object.",
    "HebCup": "Adds Local Continuous Task object."
}
{
    "Origin": "Test of var method, of class ShiftedGeometricDistribution.",
    "Reference": "Test of variance method, of class ShiftedGeometricDistribution.",
    "HebCup": "Test of Variance method , of class ShiftedGeometricDistribution."
}
{
    "Origin": "Gets the service either from the cache or from ES.",
    "Reference": "Gets the api either from the cache or from ES.",
    "HebCup": "Gets the Api either from the cache or from ES."
}
{
    "Origin": "Returns a string representation of this object; useful for testing and debugging.",
    "Reference": "Returns a string representation of this object.",
    "HebCup": "Returns a string representation of this object; useful for testing and debugging."
}
{
    "Origin": "Get the list of statuses concerning the given events and the current user.",
    "Reference": "Get the list of statuses concerning the given composite events and the current user.",
    "HebCup": "Get the return of statuses concerning the given events and the current user."
}
{
    "Origin": "Builds a JFreeChart time series from a Ta4j time series and an indicator.",
    "Reference": "Builds a JFreeChart time series from a Ta4j bar series and an indicator.",
    "HebCup": "Builds a JFreeChart time series from a Ta4j time series and an indicator."
}
{
    "Origin": "Serialize the given object.",
    "Reference": "Serialize the given object using the given  instance.",
    "HebCup": "Serialize the given object."
}
{
    "Origin": "Checks the consistency of the transactions.",
    "Reference": "Check the consistency of the transactions.",
    "HebCup": "Checks the consistency of the transactions."
}
{
    "Origin": "Set Lieferdatum.",
    "Reference": "Set Bewegungsdatum.",
    "HebCup": "set Movement Lieferdatum."
}
{
    "Origin": "Wraps up any pending operations for the current phase\nand switches to the next phase.",
    "Reference": "Wraps up any pending operations for the current phase and switches to the given phase.",
    "HebCup": "Wraps up any pending operations for the current phase\nand switches to the next phase."
}
{
    "Origin": "Other method on {@link Descriptor}\nwill be ignored.",
    "Reference": "Other method on {@link Binding}\nwill be ignored.",
    "HebCup": "Other method on {@link Binding} will be ignored."
}
{
    "Origin": "Returns all the unique combinations of dimension values which have values set reachable from this profile.",
    "Reference": "Returns all the unique combinations of dimension values which have values reachable from this profile.",
    "HebCup": "Returns all the unique combinations of dimension values which have values set reachable from this profile."
}
{
    "Origin": "For EL need to unquote everything but no need to convert anything.",
    "Reference": "Once inside EL, no need to unquote or convert anything.",
    "HebCup": "For EL need to unquote everything but no need to convert anything."
}
{
    "Origin": "Returns the index for this dimension, or empty if it is not a number",
    "Reference": "Returns the index expression for this dimension, or empty if it is not a number",
    "HebCup": "Returns the index for this dimension, or empty if it is not a number"
}
{
    "Origin": "Returns the module with the given name in this layer, or if not in this\nlayer, the {@linkplain #parent parent} layer.",
    "Reference": "Returns the module with the given name in this layer, or if not in this\nlayer, the {@linkplain #parents parents} layers.",
    "HebCup": "Returns the module with the given name in this layer , or if not in this layer , the {@linkplain#layers layers} layer."
}
{
    "Origin": "Check predicate for field which has simple char array type (byte[]).",
    "Reference": "Check predicate for field which has simple byte array type (byte[]).",
    "HebCup": "Check predicate for field which has simple char array type (byte[])."
}
{
    "Origin": "Returns {@link MadvocConfig Madvoc config} once web application is started.",
    "Reference": "Configures the {@link MadvocConfig}.",
    "HebCup": "Returns {@link this Madvoc config} once web application is started."
}
{
    "Origin": "Returns true if the given port exists in the given\nports list.",
    "Reference": "Returns {@code true} if the given port exists in the given\nports list.",
    "HebCup": "Returns true if the given port exists in the given port2 list."
}
{
    "Origin": "Test ModuleFinder.of with a file path to a directory containing a file\nstarting with \".",
    "Reference": "Test ModuleFinder.of with a file path to a directory containing a file\nthat will not be recognized as a module.",
    "HebCup": "Test ModuleFinder.of with a file path to a Directory1 containing a file starting with ``."
}
{
    "Origin": "This method has no effect if the package is already exported to the\ngiven module.",
    "Reference": "This method has no effect if the package is already exported (or\nopen) to the given module.",
    "HebCup": "This method has no effect if the package is already exported to the\ngiven module."
}
{
    "Origin": "Handles listing of shallow metric representations.",
    "Reference": "Lists metric resources.",
    "HebCup": "Handles listing of shallow metric representations."
}
{
    "Origin": "If Main Branch = 100 LOCs and the \"largest long-lived branch\" is 80 LOCs, I'm expecting to consider the value 100.",
    "Reference": "If Main Branch = 100 LOCs and the \"largest branch\" is 80 LOCs, I'm expecting to consider the value 100.",
    "HebCup": "If Main Branch = 100 LOCs and the ``largest BRANCH-lived branch`` is 80 LOCs, I'm expecting to consider the value 100."
}
{
    "Origin": "If the string argument is a configuration short-cut, then the short-cut is parsed and used to configure the returned Titan graph.",
    "Reference": "If the string argument is a configuration short-cut, then the short-cut is parsed and used to configure the returned JanusGraph graph.",
    "HebCup": "If the string argument is a configuration short-cut, then the short-cut is parsed and used to configure the returned Janus Graph."
}
{
    "Origin": "Resolve host part of the given URI to the bottom A-Record or the latest available CNAME",
    "Reference": "Resolve host name to the bottom A-Record or the latest available CNAME",
    "HebCup": "Resolve host part of the given URI to the bottom A-Record or the latest available CNAME"
}
{
    "Origin": "Creates a new HTTP authorization {@link Service} decorator using the specified\n{@link Authorizer}s.",
    "Reference": "Creates a new HTTP authorization {@link HttpService} decorator using the specified\n{@link Authorizer}s.",
    "HebCup": "Creates a new HTTP authorization {@link ?} decorator using the specified {@link Authorizer}s."
}
{
    "Origin": "Returns the set of points whose data values are within the range of\ninterest.",
    "Reference": "Returns the set of points whose data values are less than the range of\ninterest.",
    "HebCup": "Returns the set of pointsLess whose data values are within the range of interest."
}
{
    "Origin": "or throws a {@link com.liferay.socialcoding.NoSuchSVNRepositoryException} if it could not be found.",
    "Reference": "or throws a {@link NoSuchSVNRepositoryException} if it could not be found.",
    "HebCup": "or throws a {@link com.liferay.socialcoding.NoSuchSVNRepositoryException} if it could not be found."
}
{
    "Origin": "The prefix for the first matching\npredicate is used, assuming the input map has predictable order.",
    "Reference": "The prefix for the first matching predicate is used.",
    "HebCup": "The prefix for the first matching\npredicate is used, assuming the input map has predictable order."
}
{
    "Origin": "The returned login is not validated.",
    "Reference": "The returned uuid is not validated.",
    "HebCup": "The returned login is not validated."
}
{
    "Origin": "Opens a Titan graph with the previously configured options.",
    "Reference": "Opens a JanusGraph graph with the previously configured options.",
    "HebCup": "Opens a Janus Graph with the previously configured options."
}
{
    "Origin": "{@link Keys#EGG_TIMER}",
    "Reference": "{@link Keys#EGG_TIME}",
    "HebCup": "{@link Keys#EGG_TIME}"
}
{
    "Origin": "An Encog division by zero exception can occur.",
    "Reference": "a/b An Encog division by\nzero exception can occur.",
    "HebCup": "An Encog division by zero exception can occur."
}
{
    "Origin": "The {@link EcKeyCreateOptions#getCurve() key curve} can be\noptionally specified.",
    "Reference": "The {@link CreateEcKeyOptions#getCurveName() key curve} can be\noptionally specified.",
    "HebCup": "The {@link CreateEcKeyOptions#getCurve () key curve} can be optionally specified."
}
{
    "Origin": "Primitive operation which removes and returns the node at the head of the frontier.",
    "Reference": "Removes and returns the node at the head of the frontier.",
    "HebCup": "Primitive operation which removes and returns the node at the head of the frontier."
}
{
    "Origin": "This method sets the value of the database column m_monitor_item.user",
    "Reference": "This method sets the value of the database column m_monitor_item.username",
    "HebCup": "This method sets the value of the database column m_monitor_item.Username"
}
{
    "Origin": "SemaphoreBasedRateLimiter is totally blocking by it's nature.",
    "Reference": "Semaphores are totally blocking by it's nature.",
    "HebCup": "SemaphoreBasedRateLimiter is totally blocking by it's nature."
}
{
    "Origin": "Checks {@link JTree} and {@link TreeModel} support.",
    "Reference": "Checks {@link TreeModel} for {@link FilterableNodes} support.",
    "HebCup": "Checks {@link Nullable} and {@link TreeModel} support."
}
{
    "Origin": "Returns true if the server has a cluster.",
    "Reference": "Returns true if the local server has the requested cluster.",
    "HebCup": "Returns true if the server isServerContaining a cluster."
}
{
    "Origin": "Atomically updates the current lo value with the results of\napplying the given delta, returning the updated value.",
    "Reference": "Atomically adds the given delta to the current lo value, returning the updated lo value.",
    "HebCup": "Atomically adds the current lo value with the results of applying the given delta , returning the updated value."
}
{
    "Origin": "or throws a {@link com.liferay.marketplace.NoSuchAppException} if it could not be found.",
    "Reference": "or throws a {@link NoSuchAppException} if it could not be found.",
    "HebCup": "or throws a {@link com.liferay.marketplace.NoSuchAppException} if it could not be found."
}
{
    "Origin": "RxRatpack.promise(",
    "Reference": "RxRatpack.promiseAll(",
    "HebCup": "RxRatpack.promise("
}
{
    "Origin": "### \u24d8 Further Information: The removal of deleted nodes from the Recycle Bin is irreversible.",
    "Reference": "### \u24d8 Further Information: The removal of deleted nodes from the recycle bin is irreversible.",
    "HebCup": "### \u24d8 Further Information: The removal of Token nodes from the Recycle Bin is irreversible."
}
{
    "Origin": "See {@link #setPadding(int, int, int, int)}",
    "Reference": "See {@link #setPadding(float, float, float, float)}",
    "HebCup": "See {@link#setPadding (int , float , float , float)}"
}
{
    "Origin": "Call KeyFactory.keyToString() on the underlying Key.",
    "Reference": "Call toUrlSafe() on the underlying Key.",
    "HebCup": "Call KeyFactory.keyToString() on the underlying Key."
}
{
    "Origin": "Creates new {@link IsoDayOfWeek} in the UTC timezone.",
    "Reference": "Creates new {@link IsoDayOfWeek}.",
    "HebCup": "Creates new {@link IsoDayOfWeek} in the UTC timezone."
}
{
    "Origin": "Test of var method, of class GeometricDistribution.",
    "Reference": "Test of variance method, of class GeometricDistribution.",
    "HebCup": "Test of Variance method , of class GeometricDistribution."
}
{
    "Origin": "Computes the average for each pixel across all bands in the {@link Planar} image.",
    "Reference": "Computes the average for each pixel across selected bands in the {@link Planar} image.",
    "HebCup": "Computes the average for each pixel across all bands in the {@link Planar} image."
}
{
    "Origin": "Prepare project for using.",
    "Reference": "Prepare a project for using.",
    "HebCup": "Prepare project for using."
}
{
    "Origin": "If it's successfully completed, {@link BrowserResult#getMediaItems()} will return the list\nof children.",
    "Reference": "If it's successfully completed, {@link LibraryResult#getMediaItems()} will return the list\nof children.",
    "HebCup": "If it's successfully completed , {@link LibraryResult#getMediaItems ()} will return the list of children."
}
{
    "Origin": "Index rewritings in nested XPath expressions (GH-1210).",
    "Reference": "Index rewritings in nested XPath expressions.",
    "HebCup": "gh1210 rewritings in nested XPath expressions (GH-1210)."
}
{
    "Origin": "The meta-property for the {@code sensitivity} property.",
    "Reference": "The meta-property for the {@code zeroRateSensitivity} property.",
    "HebCup": "The meta-property for the {@code zeroRateSensitivity} property."
}
{
    "Origin": "Test for {@link ArrayBuilder#append(Array)}.",
    "Reference": "Test for {@link ArrayBuilder#append(XQArray)}.",
    "HebCup": "Test for {@link XQArrayBuilder#append(XQArray)}."
}
{
    "Origin": "Execute an accumulation along one or more dimensions",
    "Reference": "Execute an reduceOp along one or more dimensions",
    "HebCup": "Execute an ReduceOp along one or more dimensions"
}
{
    "Origin": "Returns the session string for admin user",
    "Reference": "Returns the translations for rubrics",
    "HebCup": "Returns the session string for admin user"
}
{
    "Origin": "Gets an ordered list of all of the upgrade checks.",
    "Reference": "Gets a list of all of the built-in upgrade checks.",
    "HebCup": "Gets an ordered list of all of the Built In Upgrade Checks."
}
{
    "Origin": "Returns the Jaas Module entry of the specified realm, named as moduleName.",
    "Reference": "Returns the JAAS Module entry of the specified realm, identified by the given name.",
    "HebCup": "Returns the Jaas Module Login of the specified realm , named as moduleName."
}
{
    "Origin": "Sends a message to all connected members except to the one with the given id.",
    "Reference": "Sends a message to all connected clients except to the one with the given id.",
    "HebCup": "Sends a message to all connected clients except to the one with the given id."
}
{
    "Origin": "Sets the minimum standard deviation.",
    "Reference": "Sets the phi factor.",
    "HebCup": "Sets the minimum Factor deviation."
}
{
    "Origin": "Returns a string representation of this object; useful for testing and debugging.",
    "Reference": "Returns a string representation of this object.",
    "HebCup": "Returns a string representation of this object; useful for testing and debugging."
}
{
    "Origin": "Checks the dirty status of the 'stmPriority' field.",
    "Reference": "Checks the dirty status of the 'reprUrl' field.",
    "HebCup": "Checks the dirty status of the 'ReprUrl' field."
}
{
    "Origin": "IMPORTANT:Workers should set their client side socket timeout\nto at least 70 seconds (10 seconds higher than the maximum time\nservice may hold the poll request).",
    "Reference": "Workers should set their client side socket timeout to at\nleast 70 seconds (10 seconds higher than the maximum time service may\nhold the poll request).",
    "HebCup": "IMPORTANT:Workers should set their client side socket timeout\nto at least 70 seconds (10 seconds higher than the maximum time\nservice may hold the poll request)."
}
{
    "Origin": "When true the cookie should only be sent\nusing a secure protocol (https).",
    "Reference": "When {@code true} the cookie should only be sent\nusing a secure protocol (https).",
    "HebCup": "When true the cookie should only be sent\nusing a secure protocol (https)."
}
{
    "Origin": "TaskManagerOptions#NETWORK_BUFFERS_MEMORY_MAX}.",
    "Reference": "NetworkEnvironmentOptions#NETWORK_BUFFERS_MEMORY_MAX}.",
    "HebCup": "NetworkEnvironmentOptions#NETWORK_BUFFERS_MEMORY_MAX}."
}
{
    "Origin": "Returns the width of the specified column, or 0 if the table layout has not been validated.",
    "Reference": "Returns the width of the specified column.",
    "HebCup": "Returns the width of the specified column, or 0 if the table layout has not been validated."
}
{
    "Origin": "Creates a {@code For}-comprehension of two Iterables.",
    "Reference": "Creates a {@code For}-comprehension of two Options.",
    "HebCup": "Creates a {@code For}-comprehension of two Iterables."
}
{
    "Origin": "Creates a ModuleReference to a module packaged as a JMOD.",
    "Reference": "Creates a ModuleReference to a module in a JMOD file.",
    "HebCup": "Creates a ModuleReference to a module packaged as a JMOD."
}
{
    "Origin": "{@codesnippet com.azure.storage.blob.specialized.BlobAsyncClientBase.setHTTPHeaders#BlobHTTPHeaders}",
    "Reference": "{@codesnippet com.azure.storage.blob.specialized.BlobAsyncClientBase.setHTTPHeaders#BlobHttpHeaders}",
    "HebCup": "{@codesnippet com.azure.storage.blob.specialized.BlobAsyncClientBase.setHTTPHeaders#BlobHttpHeaders}"
}
{
    "Origin": "Loop over the {@link IssuerProperties issuerProperties} and\ncall {@link CertificateClient#getIssuer(IssuerProperties issuerProperties)} .",
    "Reference": "Loop over the {@link IssuerProperties issuerProperties} and\ncall {@link CertificateClient#getIssuer(String)}.",
    "HebCup": "Loop over the {@link IssuerProperties PropertiesOfIssuersProperties} and call {@link CertificateClient#getIssuer(IssuerProperties PropertiesOfIssuersProperties)} ."
}
{
    "Origin": "Part size does not match The size of each part except the last\nmust match the size specified in the corresponding",
    "Reference": "Part size does not matchThe size of each part except the last must\nmatch the size specified in the corresponding",
    "HebCup": "Part size does not match The size of each part except the last\nmust match the size specified in the corresponding"
}
{
    "Origin": "Ack message in SQS",
    "Reference": "Ack message",
    "HebCup": "Ack Message in SQS"
}
{
    "Origin": "Getter for {@link #allowMethods}",
    "Reference": "Getter for {@link #allowedHeaders}",
    "HebCup": "Getter for {@link#allowedHeaders}"
}
{
    "Origin": "JAX-WS VERSION API is loaded from {0}, But JAX-WS runtime requires JAX-WS VERSION API.",
    "Reference": "JAX-WS VERSION API is loaded from {0}, But JAX-WS runtime requires JAX-WS VERSION or newer API.",
    "HebCup": "JAX-WS VERSION API is loaded from {0}, But JAX-WS runtime requires JAX-WS VERSION API."
}
{
    "Origin": "This will attempt to forcibly terminate currently executing tasks,\nand will remove pending tasks from the queue.",
    "Reference": "This will attempt to forcibly terminate currently executing works,\nand will remove pending works from the queue.",
    "HebCup": "This will attempt to forcibly terminate currently executing works , and will remove pending works from the queue."
}
{
    "Origin": "Expected 2 barriers for the Serial GC and 4 for G1 (2 pre + 2 post).",
    "Reference": "Expected 2 barriers for the card mark GCs and 4 for G1 (2 pre + 2 post).",
    "HebCup": "Expected 2 barriers for the Serial GC and 4 for G1 (2 pre + 2 post)."
}
{
    "Origin": "Handle spawning chicks when the egg breaks.",
    "Reference": "Handle spawning entities when the egg breaks.",
    "HebCup": "Handle spawning chicks when the egg breaks."
}
{
    "Origin": "Fetch objects to a local disk up to {@link PrefetchConfig#maxFetchCapacityBytes}.",
    "Reference": "Fetch objects to a local disk up to {@link FetchConfig#maxFetchCapacityBytes}.",
    "HebCup": "Fetch objects to a local disk up to {@link fetchConfig#maxFetchCapacityBytes}."
}
{
    "Origin": "Create a new {@link MongoClient} with defaults suitable for replica set usage.",
    "Reference": "Create a new {@link com.mongodb.MongoClient} with defaults suitable for replica set usage.",
    "HebCup": "Create a new {@link com.mongodb.MongoClient} with defaults suitable for replica set usage."
}
{
    "Origin": "Expected:\n         IOException is thrown",
    "Reference": "IllegalArgumentException is thrown",
    "HebCup": "Expected: IllegalArgumentException is thrown"
}
{
    "Origin": "Returns a Flowable that emits the results of a specified combiner function applied to combinations of\nn items emitted, in sequence, by the n Publishers emitted by a specified Publisher.",
    "Reference": "Returns a Flowable that emits the results of a specified combiner function applied to combinations of\nitems emitted, in sequence, by an Iterable of other Publishers.",
    "HebCup": "Returns a Flowable that emits the results of a specified combiner function applied to combinations of n items emitted, in sequence, by the n Publishers emitted by a specified Null."
}
{
    "Origin": "This is a mutually exclusive option to {@link #samlServiceProvider(ServiceProviderConfigurationResolver)}",
    "Reference": "This is a mutually exclusive option to {@link #saml2Login(ServiceProviderConfigurationResolver)}",
    "HebCup": "This is a mutually exclusive option to {@link#saml2Login (ServiceProviderConfigurationResolver)}"
}
{
    "Origin": "The bound resource instance is internally cached to make sure any sub-sequent attempts to bind the\nclass are silently ignored.",
    "Reference": "The bound resource instance is internally cached to make sure any sub-sequent attempts to service the\nclass are silently ignored.",
    "HebCup": "The bound resource instance is internally cached register make sure any sub-sequent attempts register bind the class are silently ignored."
}
{
    "Origin": "Write out this workbook to an Outputstream.",
    "Reference": "Write out this workbook to an OutputStream.",
    "HebCup": "Write out this workbook to an Outputstream."
}
{
    "Origin": "Get request parameter \"response_type\".",
    "Reference": "Returns the value of the request parameter \"response_type\".",
    "HebCup": "Get request parameter ``\\``response_type\\````."
}
{
    "Origin": "Sets the {@link IpRange} which determines the IP ranges that are allowed to use the SAS.",
    "Reference": "Sets the {@link SasIpRange} which determines the IP ranges that are allowed to use the SAS.",
    "HebCup": "Sets the {@link SasIpRange} which determines the IP ranges that are allowed to use the SAS."
}
{
    "Origin": "Scenario successful connection to the back end service via basic auth.",
    "Reference": "Scenario successful connection to the back end API via basic auth.",
    "HebCup": "Scenario successful connection to the back end api via basic auth."
}
{
    "Origin": "Returns either namePrimary or nameAlternative based on the {@link ContactsPreferences}.",
    "Reference": "Returns either namePrimary or nameAlternative based on the value of sortOrderPreference",
    "HebCup": "Returns either namePrimary or nameAlternative based on the {@link int}."
}
{
    "Origin": "The hash code for a module directive is computed as  using {@code int} arithmetic.",
    "Reference": "using {@code int} arithmetic.",
    "HebCup": "The hash code for a module directive is computed as  using {@code int} arithmetic."
}
{
    "Origin": "Opens a {@link TitanGraph} database configured according to the provided configuration.",
    "Reference": "Opens a {@link JanusGraph} database configured according to the provided configuration.",
    "HebCup": "Opens a {@link JanusGraph} database configured according to the provided configuration."
}
{
    "Origin": "Queries this ContactSourceService for SourceContacts\nwhich match a specific query String.",
    "Reference": "Creates query that searches for SourceContacts\nwhich match a specific query String.",
    "HebCup": "Queries this ContactQueryService for SourceContacts which match a specific query String."
}
{
    "Origin": "Sets the CPU status (free or busy).",
    "Reference": "Sets the CPU status (free or busy since some ms).",
    "HebCup": "Sets the CPU status (free or Since)."
}
{
    "Origin": "KeyImportOptions#getKeyMaterial() key material} cannot be null.",
    "Reference": "ImportKeyOptions#getKey() key material} cannot be null.",
    "HebCup": "ImportKeyOptions#getKeyMaterial () key material} cannot be null."
}
{
    "Origin": "A {@code DateTimeAccessor} represents some form of date and time information.",
    "Reference": "A {@code TemporalAccessor} represents some form of date and time information.",
    "HebCup": "A {@code DateTimeAccessor} represents some form of date and time information."
}
{
    "Origin": "Returns a string representation of this object; useful for testing and debugging.",
    "Reference": "Returns a string representation of this object.",
    "HebCup": "Returns a string representation of this object; useful for testing and debugging."
}
{
    "Origin": "The action MUST set one of the {@code id}, {@code event}, {@code data}.",
    "Reference": "The action MUST set one of {@code id}, {@code event}, {@code data} or {@code comment}.",
    "HebCup": "The action MUST set one of the {@code id} , {@code event} , {@code Comment}."
}
{
    "Origin": "Computes the maximum for each pixel across all bands in the {@link Planar} image.",
    "Reference": "Computes the maximum for each pixel across selected bands in the {@link Planar} image.",
    "HebCup": "Computes the maximum for each pixel across all bands in the {@link Planar} image."
}
{
    "Origin": "Returns an SslContextFactory that should be used by a jetty server based on the specified\nSSLConfig param which may be null.",
    "Reference": "Returns an SslContextFactory.Server that should be used by a jetty server based on the specified\nSSLConfig param which may be null.",
    "HebCup": "Returns an SslContextFactory.Server that should be used by a jetty server based on the specified SSLConfig param which may be null."
}
{
    "Origin": "Gets a data URI for this image.",
    "Reference": "Gets the raw data of the image.",
    "HebCup": "Gets a data URI for this image."
}
{
    "Origin": "Updates IJ2 options dialog settings to reflect values set by IJ1 plugins.",
    "Reference": "Updates modern ImageJ options dialog settings to reflect values set by\nlegacy ImageJ plugins.",
    "HebCup": "Updates ModernImageJ options dialog settings to reflect values set by IJ1 plugins."
}
{
    "Origin": "Executes random mutator and accessor operations on {@link AsynchronousDataStore} validating\nthat the used data structures can be used simultaneously.",
    "Reference": "Executes random mutator and accessor operations on {@link AsynchronousPageStore} validating\nthat the used data structures can be used simultaneously.",
    "HebCup": "Executes random mutator and accessor operations on {@link AsynchronousDataStore} validating that the used ASYNC_PAGE structures can be used simultaneously."
}
{
    "Origin": "and repositoryId = ?.",
    "Reference": "and parentFolderId = ?.",
    "HebCup": "and parentFolderId = ?."
}
{
    "Origin": "Receive a message as a String.",
    "Reference": "Receive a message as a String with the default Charset.",
    "HebCup": "Receive a message as a String."
}
{
    "Origin": "Extracts an LTPA sso cookie from the subject of current thread\nand builds a ltpa cookie out of it for use on downstream web invocations.",
    "Reference": "Extracts an LTPA sso cookie from the subject of current thread\nand builds a ltpa cookie out of it without a list of attributes for use on downstream web invocations.",
    "HebCup": "Extracts an LTPA sso cookie from the subject of current thread\nand builds a ltpa cookie out of it for use on downstream web invocations."
}
{
    "Origin": "When the client is opened, it will attempt to connect to and register a session with each unique configured server\n{@link Address}.",
    "Reference": "When the client is connected, it will attempt to connect to and register a session with each unique configured server\n{@link Address}.",
    "HebCup": "When the client is opened, it will attempt to connect to and register a session with each unique configured server\n{@link Address}."
}
{
    "Origin": "If the channel is released or\ncurrently does not need extra buffers, the buffer should be recycled to the buffer pool.",
    "Reference": "If the channel is released or\ncurrently does not need extra buffers, the buffer should be returned to the buffer pool.",
    "HebCup": "If the channel is released or currently does not need extra buffers , the Result should be recycled to the Result pool."
}
{
    "Origin": "Otherwise, the results returned match the parameters given in {@code options}.",
    "Reference": "Otherwise, the results returned match the parameters given in {@code selector}.",
    "HebCup": "Otherwise, the results returned match the parameters given in {@code options}."
}
{
    "Origin": "Create renew check decision state.",
    "Reference": "Create renew check state.",
    "HebCup": "create Renew Check Action State."
}
{
    "Origin": "Note that this method does only allow DNS names and not\nIP addresses.",
    "Reference": "This method takes DNS names and\nIP addresses.",
    "HebCup": "Note that this method does only allow dns names and not IP addresses."
}
{
    "Origin": "Sets the value of the 'cf_name' field.",
    "Reference": "Sets the value of the 'cfName' field.",
    "HebCup": "Sets the value of the 'cfName' field."
}
{
    "Origin": "Returns the {@link Tab} (metadata) for a component.",
    "Reference": "Returns the {@link Tab} (metadata) with the given index.",
    "HebCup": "Returns the {@link Tab} (metadata) for a component."
}
{
    "Origin": "Security attributes, provide the ability to associate arbitrary information\nwith a security contract specification in a key-value map.",
    "Reference": "Attributes provide the ability to associate arbitrary information\nwith a security contract specification in a key-value map.",
    "HebCup": "Attribute, provide the ability to associate arbitrary information with a security contract specification in a key-value map."
}
{
    "Origin": "Set the URL of the framework as a Maven URL reference.",
    "Reference": "Sets the URL of the frameworks as a maven reference.",
    "HebCup": "Set the URL of the framework as a Maven URL."
}
{
    "Origin": "Creates an OSM turn relation out of an unspecified OSM relation",
    "Reference": "Creates turn relations out of an unspecified OSM relation",
    "HebCup": "Creates an OSM turn relation out of an unspecified OSM relation"
}
{
    "Origin": "Traverse the OCSP certificate.",
    "Reference": "Traverse a certificate.",
    "HebCup": "Traverse the OCSP certificate."
}
{
    "Origin": "Sets the {@link PlatformConnectionManager} managing the connections to the AxonServer platform.",
    "Reference": "Sets the {@link AxonServerConnectionManager} managing the connections to the AxonServer platform.",
    "HebCup": "Sets the {@link AxonServerConnectionManager} managing the connections to the AxonServer platform."
}
{
    "Origin": "Get isManualImport.",
    "Reference": "Get IsManualImport.",
    "HebCup": "Get IsManualImport."
}
{
    "Origin": "Enqueues a task to be run.",
    "Reference": "Enqueues a event to be run.",
    "HebCup": "Enqueues a task to be run."
}
{
    "Origin": "adds a new bag out of the given data and adds it to the output",
    "Reference": "adds a new bag out of the given data to the output",
    "HebCup": "adds a new bag out of the given data and adds it to the output"
}
{
    "Origin": "Get data form from stanza.",
    "Reference": "Get data form from a stanza.",
    "HebCup": "Get data form from StanzaView."
}
{
    "Origin": "By constrast with {@link Optionals#sequencePresent(CollectionX)} if any Optional types are zero\nthe return type will be an zero Optional",
    "Reference": "By constrast with {@link Optionals#sequencePresent(IterableX)} if any Optional types are zero\nthe return type will be an zero Optional",
    "HebCup": "By constrast with {@link Optionals#sequencePresent(CollectionX)} if any Optional types are zero\nthe return type will be an zero Optional"
}
{
    "Origin": "Convert to object types, returning null if text is null.",
    "Reference": "Convert to object types, returning null if text is null or empty.",
    "HebCup": "Convert to object types, returning null if text is null."
}
{
    "Origin": "Check if cluster permissions allow for the given action, also checks whether the limited by role allows the given actions",
    "Reference": "Check if cluster permissions allow for the given action,\nalso checks whether the limited by role allows the given actions in the context of given\nauthentication.",
    "HebCup": "Check if cluster permissions allow for the given action, also checks whether the limited by role allows the given actions"
}
{
    "Origin": "This method should only be used for steps whose value is\n{@link #TYPE_ARGUMENT TYPE_ARGUMENT}.",
    "Reference": "This method should\nonly be used for steps whose value is {@link #TYPE_ARGUMENT}.",
    "HebCup": "This method should only be used for steps whose value is\n{@link #TYPE_ARGUMENT TYPE_ARGUMENT}."
}
{
    "Origin": "Returns the default ValueFormatter that has been determined by the chart\nconsidering the provided minimum and maximum values.",
    "Reference": "Returns the default IValueFormatter that has been determined by the chart\nconsidering the provided minimum and maximum values.",
    "HebCup": "Returns the default IValueFormatter that has been determined by the chart considering the provided minimum and maximum values."
}
{
    "Origin": "Sets the actionType.",
    "Reference": "Set the type.",
    "HebCup": "Sets the type."
}
{
    "Origin": "Return an ordered collection of SQL statements that need to be run to create a table.",
    "Reference": "Return an list of SQL statements that need to be run to create a table.",
    "HebCup": "Return an ordered collection of SQL statements that need to be run to create a table."
}
{
    "Origin": "Decreases by one the incoming reference count for this resource, and notifies the owner if said\ncount reached zero as a result of this operation.",
    "Reference": "Decreases by one the reference count for this resource, and notifies the owner if said count\nreached zero as a result of this operation.",
    "HebCup": "Decreases by one the incoming reference count for this resource, and notifies the owner if said\ncount reached zero as a result of this operation."
}
{
    "Origin": "Resolution for each tick of the timer wheel for scheduling deadlines.",
    "Reference": "Resolution in nanoseconds for each tick of the timer wheel for scheduling deadlines.",
    "HebCup": "ResolutionNs for each tick of the timer wheel for scheduling deadlines."
}
{
    "Origin": "Getter for the URL of the content review icon associated with this item",
    "Reference": "Getter for the css class of the content review icon associated with this item",
    "HebCup": "Getter for the CssClass of the content review icon associated with this item"
}
{
    "Origin": "Returns a zoned date-time formed from this date-time and the specified time-zone.",
    "Reference": "Returns a zoned date-time formed from this date-time and the specified zone ID.",
    "HebCup": "Returns a zoned date-time formed from this date-time and the specified time-Date."
}
{
    "Origin": "directories with .class files or empty directories).",
    "Reference": "directories with .class files or empty directories) will\ncause exception in running log.",
    "HebCup": "directories with .class Stage or empty directories)."
}
{
    "Origin": "Returns a newly-created {@link LoggingService} decorating {@code delegate} based on the properties of\nthis builder.",
    "Reference": "Returns a newly-created {@link LoggingService} decorating {@link HttpService} based on the properties\nof this builder.",
    "HebCup": "Returns a newly-created {@link LoggingHttpService} decorating {@code delegate} based on the properties of this builder."
}
{
    "Origin": "When the config has been successfully retrieved it must be put in the cache.",
    "Reference": "When the config has been successfully retrieved it must be updated in cache.",
    "HebCup": "When the config has been successfully retrieved it must be put in the cache."
}
{
    "Origin": "If the etag's value is equal to the wildcard character ({@code \"*\"}), the setting will\nalways be updated.",
    "Reference": "If the ETag's value is equal to the wildcard character ({@code \"*\"}), the setting will\nalways be updated.",
    "HebCup": "If the etag's value is equal to the wildcard character ({@code ``*``}) , the ConfigurationSetting will always be updated."
}
{
    "Origin": "Returns whether the template node is stateful (has at least one @state variable).",
    "Reference": "Returns whether the template node is stateful (has at least one @prop variable).",
    "HebCup": "Returns whether the template node is stateful (has at least one @Prop variable)."
}
{
    "Origin": "Given a {@link Tab}, selects the corresponding mode in the {@link SplitEditor}, i.e.",
    "Reference": "Given a {@link Tab}, selects the corresponding mode in the {@link DesignToolsSplitEditor}, i.e.",
    "HebCup": "Given a {@link Tab} , selects the corresponding mode in the {@link DesignToolsSplitEditor} , i.e."
}
{
    "Origin": "Trading Strategy - we expect the engine to shutdown.",
    "Reference": "Exception from Trading Strategy - we expect the engine to shutdown.",
    "HebCup": "Trading Strategy - we expect the engine to shutdown."
}
{
    "Origin": "Starts zookeeper up on the configured port.",
    "Reference": "Starts zookeeper up on an ephemeral port.",
    "HebCup": "Starts zookeeper up on the configured port."
}
{
    "Origin": "If this happens, a configuration {@link ConfigurationEvent event} will\nbe sent to all registered listeners.",
    "Reference": "If this happens, a CONFIGURATION {@link ConfigurationEvent event} will\nbe sent to all registered listeners.",
    "HebCup": "If this happens , a CONFIGURATION {@link ConfigurationEvent event} will be sent to all registered listeners."
}
{
    "Origin": "Process the server section, if any, of a configuration file.",
    "Reference": "Find the server resource in a configuration file.",
    "HebCup": "find the server section , if any , of a configuration file."
}
{
    "Origin": "Convert a raw value to an Avro object to serialize in Avro type system.",
    "Reference": "Convert a raw value to an Avro object to serialize in Avro type system, using the provided character set when necessary.",
    "HebCup": "Convert a raw value to an Avro object to serialize in Avro type system."
}
{
    "Origin": "Get a map of data source Ids to their string names for the current case.",
    "Reference": "Get a map of data source Ids to their string names (data source file name\nonly) for the current case.",
    "HebCup": "Get a map of data source Ids to their string names for the current case."
}
{
    "Origin": "Returns the Java type corresponding to the given type descriptor.",
    "Reference": "Returns the {@link Type} corresponding to the given type descriptor.",
    "HebCup": "final the Java type corresponding to the given type descriptor."
}
{
    "Origin": "Sets the typing.",
    "Reference": "Set the typing.",
    "HebCup": "Sets the typing."
}
{
    "Origin": "Tests that a suspended checkpoint coordinator calls suspend on\nthe store and counter.",
    "Reference": "Tests that the checkpoint coordinator is shut down if the execution graph\nis suspended.",
    "HebCup": "Tests that a suspended checkpoint coordinator calls Shutdown on the store and counter."
}
{
    "Origin": "Action that allows to display the view on image (or binary table)",
    "Reference": "Action that allows to display the view on initial image.",
    "HebCup": "Action that allows to display the view on image (or Initial table)"
}
{
    "Origin": "Returns an immutable list containing eight elements.",
    "Reference": "Returns an unmodifiable list containing eight elements.",
    "HebCup": "Returns an Unmodifiable list containing eight elements."
}
{
    "Origin": "Removes a variable scope from the stack.",
    "Reference": "Removes and returns the current variable scope.",
    "HebCup": "removeLast a variable scope from the stack."
}
{
    "Origin": "Set the sort mode for the context",
    "Reference": "Get the sort mode from the state",
    "HebCup": "get the sort mode for the context"
}
{
    "Origin": "Set UPC/EAN.",
    "Reference": "Set CU-UPC.",
    "HebCup": "set UPC _ CU/EAN."
}
{
    "Origin": "Find all ChildGlideModules",
    "Reference": "Find all LibraryGlideModules",
    "HebCup": "Find all libraryGlideModules"
}
{
    "Origin": "Clears the value of the 'zk_Quorum' field",
    "Reference": "Clears the value of the 'zkQuorum' field.",
    "HebCup": "Clears the value of the 'zkQuorum' field"
}
{
    "Origin": "A\n is built when the JAR is created.",
    "Reference": "A\n class is built when the JAR is\ncreated.",
    "HebCup": "A\n is built when the JAR is created."
}
{
    "Origin": "Tests l7dlog(Priority, String, Object[], Throwable).",
    "Reference": "Tests l7dlog(FQN, Priority, String, Object[], Throwable) log.",
    "HebCup": "Tests l7dlog(Priority, String, Object[], Throwable)."
}
{
    "Origin": "Tests resilency when D2 device is down.",
    "Reference": "Tests resiliency when D2 device is down.",
    "HebCup": "Tests resiliency when D2 device is down."
}
{
    "Origin": "NOTE:This operation is eventually consistent.",
    "Reference": "This operation is eventually consistent.",
    "HebCup": "NOTE:This operation is eventually consistent."
}
{
    "Origin": "Returns a new {@link RouterOptions} with default settings.",
    "Reference": "Create a {@link Builder} using the options configured in this instance.",
    "HebCup": "Returns a new {@link Builder} with default settings."
}
{
    "Origin": "IMPORTANT:Deciders should set their client-side socket timeout\nto at least 70 seconds (10 seconds higher than the timeout).",
    "Reference": "Deciders should set their client-side socket timeout to at\nleast 70 seconds (10 seconds higher than the timeout).",
    "HebCup": "IMPORTANT:Deciders should set their client-side socket timeout\nto at least 70 seconds (10 seconds higher than the timeout)."
}
{
    "Origin": "Perform checks on the packet represented by this instance and\nreturn true if it is found to be invalid.",
    "Reference": "Perform checks on the RTP/RTCP packet represented by this instance and\nreturn true if it is found to be invalid.",
    "HebCup": "Perform checks on the packet represented by this instance and\nreturn true if it is found to be invalid."
}
{
    "Origin": "If {@code cursor#getNext()} is\n{@code null}, this method adds all the scalar values in current\narray to the result.",
    "Reference": "If {@code pathCursor#getNext()} is\n{@code null}, this method adds all the scalar values in current\narray to the result.",
    "HebCup": "If {@code pathCursor#getNext ()} is {@code null} , this method adds all the scalar values in current array to the result."
}
{
    "Origin": "Notify listeners at the end of activation.",
    "Reference": "Notify listeners on node start.",
    "HebCup": "Notify listeners at the end of activation."
}
{
    "Origin": "Returns a new instance of {@link io.bootique.BQModule.Builder} initialized with module for this provider.",
    "Reference": "Returns a new instance of {@link BQModuleMetadata.Builder} initialized with module for this provider.",
    "HebCup": "Returns a new instance of {@link io.bootique.BQModuleMetadata.Builder} initialized with module for this provider."
}
{
    "Origin": "Creates a ModuleReference to a module packaged as a modular JAR.",
    "Reference": "Creates a ModuleReference to a possibly-patched module in a modular JAR.",
    "HebCup": "Creates a ModuleReference to a module packaged as a modular JAR."
}
{
    "Origin": "Return all querys in the {@link Playlist}",
    "Reference": "Return all queries in the {@link Playlist}",
    "HebCup": "ArrayList all querys in the {@link Playlist}"
}
{
    "Origin": "/api/v1/topology/:id/profiling/restartworker/:host-port/:timeout -> restart worker.",
    "Reference": "/api/v1/topology/:id/profiling/restartworker/:host-port -> restart worker.",
    "HebCup": "/api/v1/topology/:id/profiling/restartworker/:host-port/:timeout -> restart worker."
}
{
    "Origin": "set duration specifications according to 'rate' requirements",
    "Reference": "To set duration specifications according to 'rate' requirements",
    "HebCup": "set duration specifications according to 'rate' requirements"
}
{
    "Origin": "Returns a wrapped instance of {@link ClientConnectionManager}\nto capture the necessary performance metrics.",
    "Reference": "Returns a wrapped instance of {@link HttpClientConnectionManager}\nto capture the necessary performance metrics.",
    "HebCup": "Returns a wrapped instance of {@link HttpClientConnectionManager} to capture the necessary performance metrics."
}
{
    "Origin": "Appends {@link UserDefinedFunctionInfo} protos to a {@link ModuleInfo.Builder}.",
    "Reference": "Appends {@link StarlarkFunctionInfo} protos to a {@link ModuleInfo.Builder}.",
    "HebCup": "Appends {@link StarlarkFunctionInfo} protos to a {@link ModuleInfo.Builder}."
}
{
    "Origin": "Returns the connecting client ID.",
    "Reference": "Returns the connection ID.",
    "HebCup": "Returns the connecting connection ID."
}
{
    "Origin": "Test of setParams method, of class OldAgentConnector.",
    "Reference": "Test of addMetric method, of class OldAgentConnector.",
    "HebCup": "Test of addMetric method , of class OldAgentConnector."
}
{
    "Origin": "See {@link #setIgnoreGestureInsetBottom(boolean)}.",
    "Reference": "See {@link #setGestureInsetBottomIgnored(boolean)}.",
    "HebCup": "See {@link #setgestureInsetBottomIgnored(boolean)}."
}
{
    "Origin": "Updates the current packet.",
    "Reference": "Updates the current chunk.",
    "HebCup": "Updates the Current Chunk."
}
{
    "Origin": "Gets dimensions based on relationships and attributes from {@link EntityProjection}.",
    "Reference": "Gets dimensions except time dimensions based on relationships and attributes from {@link EntityProjection}.",
    "HebCup": "Gets dimensions based on relationships and attributes from {@link EntityProjection}."
}
{
    "Origin": "Test of var method, of class FDistribution.",
    "Reference": "Test of variance method, of class FDistribution.",
    "HebCup": "Test of Variance method , of class FDistribution."
}
{
    "Origin": "Converting {@code ws} and  URIs to their HTTP equivalent",
    "Reference": "Converting {@code ws} and {@code wss} URIs to their HTTP equivalent",
    "HebCup": "Converting {@code ws} and  URIs to their HTTP equivalent"
}
{
    "Origin": "Maps all index descriptors according to {@link #indexReferenceNoLocking(IndexDescriptor)}.",
    "Reference": "Maps all index descriptors according to {@link #indexReferenceNoLocking(IndexDescriptor2)}.",
    "HebCup": "Maps all index descriptors according to {@link #IndexDescriptor2NoLocking(IndexDescriptor)}."
}
{
    "Origin": "The max size\nof the file path data is 255 bytes while the max size of the file contents\nis 10KB.",
    "Reference": "The max size\nof the file path data is 255 bytes while the max size of the file contents\nis determined by provider quotas(default size is 10KB).",
    "HebCup": "The max size\nof the file path data is 255 bytes while the max size of the file contents\nis 10KB."
}
{
    "Origin": "Returns true if the class has the specified annotation class.",
    "Reference": "Returns true if the class has the specified annotation type.",
    "HebCup": "Returns true if the class has the specified annotation class."
}
{
    "Origin": "Handles an iterate commit.",
    "Reference": "Handles an iterator next commit.",
    "HebCup": "Handles an position commit."
}
{
    "Origin": "return all SysProc durable plan fragments that needs to be registered",
    "Reference": "return all SysProc plan fragments that needs to be registered",
    "HebCup": "return all SysProc Allowable Sysproc fragments that needs to be registered"
}
{
    "Origin": "When enabled, SMTP socket factory class will be not set,\nand Plaintext Authentication over TLS will be enabled.",
    "Reference": "When enabled,  will be not set,\nand Plaintext Authentication over TLS will be enabled.",
    "HebCup": "When enabled, SMTP socket factory class will be not set,\nand Plaintext Authentication over TLS will be enabled."
}
{
    "Origin": "Will only return non-null for\nfields that have constant initializers, which is usually only fields of primitive type, or String constants.",
    "Reference": "Will only return\nnon-null for fields that have constant initializers, which is usually only fields of primitive type, or",
    "HebCup": "Will only return non-null for StaticFinalField that have constant initializers, which is usually only StaticFinalField of primitive type, or String constants."
}
{
    "Origin": "This method both takes into account the ordering of known qualifiers as well as lexical ordering for unknown\nqualifiers.",
    "Reference": "This method takes into account the ordering of known qualifiers then unknown qualifiers with lexical ordering.",
    "HebCup": "This method both takes into account the ordering of known qualifiers as well as lexical ordering for unknown\nqualifiers."
}
{
    "Origin": "Returns all the arguments.",
    "Reference": "Returns all the remaining arguments.",
    "HebCup": "Returns all the arguments."
}
{
    "Origin": "Normally this is one of the strings listed in {@link Protocols}.",
    "Reference": "Normally this is one of the strings listed in {@link HttpProtocolNames}.",
    "HebCup": "Normally this is one of the strings listed in {@link Protocols}."
}
{
    "Origin": "Retrieve the {@code ExchangeResult} for the given \"request-id\" header value.",
    "Reference": "Retrieve the {@link Info} for the given \"request-id\" header value.",
    "HebCup": "Retrieve the {@code Info} for the given ``request-id`` header value."
}
{
    "Origin": "Creates new {@link AggregationExpression} that converts a string to a date object in the factory timezone",
    "Reference": "Creates new {@link AggregationExpression} that converts a date/time string to a date object.",
    "HebCup": "Creates new {@link AggregationExpression} that converts a string to a date object in the factory timezone"
}
{
    "Origin": "Retrieve the {@link Graph} with the specified ID from the cache.",
    "Reference": "Retrieve the {@link Store} with the specified ID from the cache.",
    "HebCup": "Retrieve the {@link store} with the specified ID from the cache."
}
{
    "Origin": "If two ranges overlap, this range strictlyContains either the begin or the end of the other range.",
    "Reference": "If two ranges overlap, this range or the other range strictlyContains the begin or the end of the other range.",
    "HebCup": "If two ranges overlap, this range strictlyContains either the begin or the end of the other range."
}
{
    "Origin": "Gets the label for this waypoint based on the artifact type.",
    "Reference": "Gets the label for this waypoint.",
    "HebCup": "Gets the label for this waypoint based on the attributeMap type."
}
{
    "Origin": "Handles an {@link HttpResponseException} that occurs.",
    "Reference": "Handles an {@link ResponseException} that occurs.",
    "HebCup": "Handles an {@link ResponseException} that occurs."
}
{
    "Origin": "Register a CollectionStateWatcher to be called when the state of a collection changes",
    "Reference": "Register a CollectionStateWatcher to be called when the state of a collection changes\nor the set of live nodes changes.",
    "HebCup": "Register a CollectionStateWatcher to be called when the state of a collection changes"
}
{
    "Origin": "Setting the manifest is not allowed after a call to {@link\n#setMediaSource(MediaSource)}.",
    "Reference": "Setting the manifest is not allowed after a call to {@link\n#setMediaSources(MediaSource...)}.",
    "HebCup": "Setting the manifest is not allowed after a call to {@link #setmediaSources(mediaSources)}."
}
{
    "Origin": "Thus 31st January plusWrapField one day goes to the 1st January.",
    "Reference": "Thus 31st January addWrapField one day goes to the 1st January.",
    "HebCup": "Thus 31st January addWrapFieldToCopy one day goes to the 1st January."
}
{
    "Origin": "Note: this callback may be called on the main thread, regardless of the callback\nexecutor.",
    "Reference": "Interoperability: this callback may be called on the main thread, regardless of the\ncallback executor.",
    "HebCup": "Note: this callback may be called on the main thread, regardless of the callback\nexecutor."
}
{
    "Origin": "Get the maximum size of a binary message buffer (for streaming writing)",
    "Reference": "Get the maximum size of a binary message buffer.",
    "HebCup": "Get the maximum size of a Binary Message (for streaming writing)"
}
{
    "Origin": "Annotate for coreference (statistical)",
    "Reference": "Annotate for coreference (statistical or hybrid)",
    "HebCup": "Annotate for coreference (statistical)"
}
{
    "Origin": "This method will create an {@link com.google.gwt.user.client.Element} for the given HTML.",
    "Reference": "This method will create an {@link com.google.gwt.dom.client.Element} for the given HTML.",
    "HebCup": "This method will create an {@link Element} for the given HTML."
}
{
    "Origin": "Writes a CSV line to the underlying.",
    "Reference": "Writes a single CSV line to the underlying.",
    "HebCup": "Writes a CSV cell to the underlying."
}
{
    "Origin": "Writes meta data about this package if the destination directory exists, and the \"vespaversion\" property is set.",
    "Reference": "Writes meta data about this package if the destination directory exists.",
    "HebCup": "Writes meta data about this package if the destination directory exists, and the \"vespaversion\" property is set."
}
{
    "Origin": "Returns a default credential for the application.",
    "Reference": "Returns the Application Default Credentials.",
    "HebCup": "Returns a default credential for for application."
}
{
    "Origin": "Verify the validity of an 'RSA_SIGN_PSS_2048_SHA256' signature for the\nspecified plaintext message",
    "Reference": "Verify the validity of an 'RSA_SIGN_PSS_2048_SHA256' signature for the\nspecified message",
    "HebCup": "Verify the validity of an 'RSA_SIGN_PSS_2048_SHA256' signature for the\nspecified plaintext message"
}
{
    "Origin": "Gets the list of {@link KeyProperties KeyProperties} on this page.",
    "Reference": "Gets the iterable stream of {@link KeyProperties KeyProperties} on this page.",
    "HebCup": "Gets the IterableStream of {@link KeyProperties KeyProperties} on this page."
}
{
    "Origin": "Sets the statistic repository with the specified statistic repository.",
    "Reference": "Sets the option repository with the specified option repository.",
    "HebCup": "Sets the Option Repository with the specified Option Repository."
}
{
    "Origin": "Creates query for the given queryString.",
    "Reference": "Queries this search source for the given queryString.",
    "HebCup": "Creates Source for the given queryString."
}
{
    "Origin": "Builds a channel to the given server URI with the first supported channel creds config.",
    "Reference": "Builds a channel to one of the provided management servers.",
    "HebCup": "Builds a channel to the given server URI with the first supported channel creds config."
}
{
    "Origin": "Deletes a question by its auto-generated ID.",
    "Reference": "Deletes a feedback question cascade its responses and comments.",
    "HebCup": "Deletes a question by its auto-generated ID."
}
{
    "Origin": "Put attribute consent enabled.",
    "Reference": "Put service into flashscope.",
    "HebCup": "put Service Into Flash Scope."
}
{
    "Origin": "Returns the {@code Platform} of the given OS name specified\nin the {@code ModuleTarget} attribute.",
    "Reference": "Returns the {@code Platform} derived from the target platform\nin the {@code ModuleTarget} attribute.",
    "HebCup": "Returns the {@code Platform} of the given target Platform specified in the {@code ModuleTarget} attribute."
}
{
    "Origin": "Initialise a new {@link Keyspace} by opening and closing a transaction on it.",
    "Reference": "Initialise a new Keyspace by opening and closing a transaction on it.",
    "HebCup": "Initialise a new {@link KeyspaceImpl} by opening and closing a transaction on it."
}
{
    "Origin": "Return the location of a dataset if it is backed by TDB, else null",
    "Reference": "Tes whether a dataset is backed by TDB or not.",
    "HebCup": "Return the location of a dataset if it Database Mgr.is Backed By TDB, else null"
}
{
    "Origin": "Returns a literal for the {@link Reference} availability.",
    "Reference": "Returns a literal for the {@link ScrService.Reference} availability.",
    "HebCup": "Returns a literal for the {@link ScrService.Reference} availability."
}
{
    "Origin": "Caches the promise result and provides it to all future subscribers, if it satisfies the predicate.",
    "Reference": "Caches the promise result eternally and provide it to all future subscribers, if it satisfies the predicate.",
    "HebCup": "Caches the promise result and provides it to all future subscribers , if it satisfies the predicate."
}
{
    "Origin": "Return a scalar {@code Codec} for the given range.",
    "Reference": "Return a scalar {@code Encodec} for the given range.",
    "HebCup": "Return a scalar {@code Encodec} for the given range."
}
{
    "Origin": "Test to make sure that field names are not interned.",
    "Reference": "Test to make sure that field names are interned.",
    "HebCup": "Test to make sure that field names are not interned."
}
{
    "Origin": "Collapses the given item.",
    "Reference": "Collapse the given items.",
    "HebCup": "Collapses the given items."
}
{
    "Origin": "Get the number of messages processed in one transaction.",
    "Reference": "Return the number of messages processed in one transaction.",
    "HebCup": "Get the number of messages processed in one transaction."
}
{
    "Origin": "Sets the right selection.",
    "Reference": "Handle interval field focus.",
    "HebCup": "Sets the right Focus."
}
{
    "Origin": "The file is fully in memory only if\nall the blocks of the file are in memory, in other words, the in memory percentage is 100.",
    "Reference": "The file is fully in Alluxio only if\nall the blocks of the file are in Alluxio, in other words, the in-Alluxio percentage is 100.",
    "HebCup": "The file is Fully In Alluxio only if all the blocks of the file are in memory, in other words, the in memory percentage is 100."
}
{
    "Origin": "Gets the default type id for entry point folders.",
    "Reference": "Gets the default type id for subsitemap folders.",
    "HebCup": "Gets the default type id for Subsitemap folders."
}
{
    "Origin": "Attempt to transform this Monad to the same type as the supplied Monoid, using supplied function",
    "Reference": "Attempt to transform this Stream to the same type as the supplied Monoid, using supplied function",
    "HebCup": "Attempt to transform this Monad to the same type as the supplied Monoid, using supplied function"
}
{
    "Origin": "Returns a string representation of this object; useful for testing and debugging.",
    "Reference": "Returns a string representation of this object.",
    "HebCup": "Returns a string representation of this object; useful for testing and debugging."
}
{
    "Origin": "Method to insert code snippets for {@link SecretAsyncClient#getSecret(SecretProperties)}",
    "Reference": "Method to insert code snippets for {@link SecretAsyncClient#getSecret(String, String)}",
    "HebCup": "Method to insert code snippets for {@link SecretAsyncClient#getSecret(SecretProperties)}"
}
{
    "Origin": "Create client response filtering stage using the instance manager.",
    "Reference": "Create client response filtering stage using the injection manager.",
    "HebCup": "Create client response filtering stage using the Injection Manager."
}
{
    "Origin": "Get the number of outstanding Checkpoints.",
    "Reference": "Get the outstanding Checkpoints.",
    "HebCup": "Get the number of outstanding Checkpoints."
}
{
    "Origin": "Evaluates a job.",
    "Reference": "Evaluates a query as job.",
    "HebCup": "Evaluates a job."
}
{
    "Origin": "Call the native function being represented by this object, returning\na struct by value.",
    "Reference": "Call the native function, returning a struct by value.",
    "HebCup": "Call the native function being represented by this object, returning\na struct by value."
}
{
    "Origin": "Creates a new tracing {@link Client} decorator using the specified {@link Tracing} instance\nand remote service name.",
    "Reference": "Creates a new tracing {@link Client} decorator using the specified {@link Tracing} instance\nand the remote service name.",
    "HebCup": "Creates a new tracing {@link Client} decorator using the specified {@link Tracing} instance and http Tracing."
}
{
    "Origin": "Evaluates {@code lhs @= rhs} and returns the result, possibly mutating {@code lhs}.",
    "Reference": "Evaluates {@code x @= y} and returns the result, possibly mutating {@code x}.",
    "HebCup": "Evaluates {@code x @= rhs} and returns the result , possibly mutating {@code x}."
}
{
    "Origin": "Group: common",
    "Reference": "Group: security",
    "HebCup": "Group: common"
}
{
    "Origin": "If the size\nof the new entry is larger than the table's capacity, the dynamic table will be cleared.",
    "Reference": "If the size\nof the new entry is larger than the table's maxHeaderTableSize, the dynamic table will be cleared.",
    "HebCup": "If the size of the new entry is larger than the table's maxHeaderTableSize , the dynamic table will be cleared."
}
{
    "Origin": "the name will normally start with the prefix\n\"trace\" followed by a 9 digit number followed by a \".log\" suffix.",
    "Reference": "the name will start with the prefix \"trace\"\nfollowed by a 9 digit number followed by a \".log\" suffix.",
    "HebCup": "the name will normally start with the prefix\n\"trace\" followed by a 9 digit number followed by a \".log\" suffix."
}
{
    "Origin": "If the item is currently expanded, does nothing.",
    "Reference": "If an item is currently expanded, does nothing.",
    "HebCup": "If the items is currently expanded , does nothing."
}
{
    "Origin": "Gets the intentName.",
    "Reference": "Gets the intent.",
    "HebCup": "Gets the intent."
}
{
    "Origin": "Are the naturals id values cached here (if any) for the given persister+pk combo the same as the given values?",
    "Reference": "Are the naturals id values cached here (if any) for the given descriptor+pk combo the same as the given values?",
    "HebCup": "Are the naturals id values cached here (if any) for the given TypeDescriptor+pk combo the same as the given values?"
}
{
    "Origin": "Convenience method for calling {@link #newGenericExecuteException(TemplateCallableModel, boolean, String)}.",
    "Reference": "Convenience method for calling\n{@link #newGenericExecuteException(String, TemplateCallableModel, boolean, Throwable)}",
    "HebCup": "Convenience method for calling {@link #newGenericExecuteException(TemplateCallableModel, boolean, String)}."
}
{
    "Origin": "Returns a string representation of this object; useful for testing and debugging.",
    "Reference": "Returns a string representation of this object.",
    "HebCup": "Returns a string representation of this object; useful for testing and debugging."
}
{
    "Origin": "Returns a string representation of this object; useful for testing and debugging.",
    "Reference": "Returns a string representation of this object.",
    "HebCup": "Returns a string representation of this object; useful for testing and debugging."
}
{
    "Origin": "Sets the read only state to the given value for all currently bound\nfields.",
    "Reference": "Sets the read only state to the given value for all current bindings.",
    "HebCup": "Sets the read only state to the given value for all currently bound fields."
}
{
    "Origin": "Returns an immutable set containing seven elements.",
    "Reference": "Returns an unmodifiable set containing seven elements.",
    "HebCup": "Returns an Unmodifiable set containing seven elements."
}
{
    "Origin": "Waits during {@code timeout} until update is finished by checking that only single master pod\nis present and it has incremented {@code masterVersionBeforeUpdate} number in name.",
    "Reference": "Waits during {@code timeoutInSec} until update is finished by checking that only single master\npod is present and it has incremented {@code masterVersionBeforeUpdate} number in name.",
    "HebCup": "Waits during {@code timeoutInSec} until update is finished by checking that only single master pod is present and it has incremented {@code masterVersionBeforeUpdate} number in name."
}
{
    "Origin": "By default we check the attributes\nnames of the annotation, if present.",
    "Reference": "By default we\ncheck the specified attribute names in the annotation value, if any.",
    "HebCup": "By default we check the attributes\nnames of the annotation, if present."
}
{
    "Origin": "Add a system classpath element.",
    "Reference": "Add a system classpath entry.",
    "HebCup": "Add a System Classpath Entry."
}
{
    "Origin": "Converts a java object to a sequence of bytes using a ProtoStream {@link SerializationContext}.",
    "Reference": "Converts a java object to a sequence of bytes using a ProtoStream {@link ImmutableSerializationContext}.",
    "HebCup": "Converts a java object to a sequence of bytes using a ProtoStream {@link ImmutableSerializationContext}."
}
{
    "Origin": "Obtains an instance of {@code OffsetDateTime} from an {@code Instant} and offset.",
    "Reference": "Obtains an instance of {@code OffsetDateTime} from an {@code Instant} and zone ID.",
    "HebCup": "Obtains an instance of {@code OffsetDateTime} from an {@code Instant} and offset."
}
{
    "Origin": "Contrast this behaviour to {@link #plus(int)}.",
    "Reference": "Contrast this behaviour to {@link #addCopy(int)}.",
    "HebCup": "Contrast this behaviour to {@link#add (int)}."
}
{
    "Origin": "Gets called by  fromValueMap",
    "Reference": "Gets called by  fromValueMapWithClass",
    "HebCup": "Gets called by fromValueMapWithClass"
}
{
    "Origin": "If not missing node, {@code this} is returned to allow chaining; otherwise\n{@link IllegalArgumentException} is thrown.",
    "Reference": "If not missing node, {@code this} is returned to allow chaining;\notherwise exception is thrown.",
    "HebCup": "If not missing node, {@code this} is returned to allow chaining; otherwise\n{@link IllegalArgumentException} is thrown."
}
{
    "Origin": "This is the price agreed when the trade occurred.",
    "Reference": "This is the price agreed when the trade occurred, in decimal form.",
    "HebCup": "This is the tradedPrice agreed when the trade occurred."
}
{
    "Origin": "Sets each pixel in the output image to log( 1 + input(x,y)) of the input image.",
    "Reference": "Sets each pixel in the output image to log( val + input(x,y)) of the input image.",
    "HebCup": "Sets each pixel in the output image to log( 1 + input(x,y)) of the input image."
}
{
    "Origin": "Path parameter: endpointType (required)",
    "Reference": "Path parameter: path (required)",
    "HebCup": "Path parameter: endpointType (required)"
}
{
    "Origin": "Returns the builder for the settings used for calls to labelAudio.",
    "Reference": "Returns the builder for the settings used for calls to listEvaluationJobs.",
    "HebCup": "Returns the builder for the settings used for calls to ListEvaluationJobs."
}
{
    "Origin": "If the session folder (folder that contains the\nfile) does not exist and createSessionFolder is true, the folder will be created.",
    "Reference": "If the session folder (folder that contains the\nfile) does not exist, the folder will be created.",
    "HebCup": "If the session folder (folder that contains the file) does not exist and true is true , the folder will be created."
}
{
    "Origin": "If {@code features} is null, it will be deduced\nfrom {@code env}.",
    "Reference": "If {@code features} is not null, it will be used instead of those deduced from\n{@code env}.",
    "HebCup": "If {@code features} is null, it will be deduced\nfrom {@code env}."
}
{
    "Origin": "Returns the value of the node as an Enum value, or null if the node is undefined.",
    "Reference": "Returns the value of the node as an Enum value.",
    "HebCup": "Returns the value of the node as an value value , or null if the node is undefined."
}
{
    "Origin": "Queries this search source for the given queryString.",
    "Reference": "Creates query for the given queryString.",
    "HebCup": "Queries this search source for the given createString."
}
{
    "Origin": "Set the entity ID that determines the type of entity.",
    "Reference": "Get the type of entity.",
    "HebCup": "get the entity ID that determines the type of entity."
}
{
    "Origin": "XeWhen can build XML response.",
    "Reference": "XeWhen can build XML response with positive condition.",
    "HebCup": "XeWhen can build Xml Response From Positive Condition."
}
{
    "Origin": "Calculates the set of stale types and clears their cached Js and StatementRanges.",
    "Reference": "Calculates the set of stale types and clears their cached Js, StatementRanges and SourceMaps.",
    "HebCup": "Calculates the set of stale types and clears their cached Cached Type StatementRanges."
}
{
    "Origin": "Throw RuntimeException if query does not pass validation.",
    "Reference": "Throw exception if query does not pass validation.",
    "HebCup": "Throw IllegalStateException if query does not pass validation."
}
{
    "Origin": "Can get a bean for Script Load Balancer.",
    "Reference": "Can get a bean for Script Cluster Selector.",
    "HebCup": "Can get a bean for Script Cluster Selector."
}
{
    "Origin": "If true, given partial blocks are not evaluated when defined but when used.",
    "Reference": "If true, partial blocks will implicitly be evaluated before the partials will actually\nbe executed.",
    "HebCup": "If true , given Evaluate blocks are not evaluated when defined but when used."
}
{
    "Origin": "Retrieve listing of secrets and metadata",
    "Reference": "Retrieve listing of secret names.",
    "HebCup": "Retrieve listing of secrets and metadata"
}
{
    "Origin": "KeyCreateOptions#getNotBefore() notBefore} values are optional.",
    "Reference": "CreateKeyOptions#getNotBefore() notBefore} values are optional.",
    "HebCup": "CreateKeyOptions#getNotBefore () notBefore} values are optional."
}
{
    "Origin": "This let's the\ndeoptimization stub return to the exception handler instead of the regular return address of\nthe deoptimization target.",
    "Reference": "This lets the\ndeoptimization stub return to the exception handler instead of the regular return address of\nthe deoptimization target.",
    "HebCup": "This let's the\ndeoptimization stub return to the exception handler instead of the regular return address of\nthe deoptimization target."
}
{
    "Origin": "Creates a new values list and add a value.",
    "Reference": "Creates a new value list and adds a value.",
    "HebCup": "Creates a new add list and add a value."
}
{
    "Origin": "Returns the w s r p producer with the primary key or throws a {@link com.liferay.wsrp.NoSuchProducerException} if it could not be found.",
    "Reference": "Returns the w s r p producer with the primary key or throws a {@link NoSuchProducerException} if it could not be found.",
    "HebCup": "Returns the w s r p producer with the primary key or throws a {@link com.liferay.wsrp.NoSuchProducerException} if it could not be found."
}
{
    "Origin": "Get the {@code DatagramSocketImpl} attached to this socket,\ncreating it if necessary.",
    "Reference": "Return the {@code DatagramSocketImpl} attached to this socket.",
    "HebCup": "Get the {@code DatagramSocketImpl} attached to this socket,\ncreating it if necessary."
}
{
    "Origin": ":",
    "Reference": ":\n   property1 = value1,value2,\"a quoted value\",'another quoted value'",
    "HebCup": ":"
}
{
    "Origin": "If {@link ConfigurationSetting#getETag() etag} is specified, the configuration value is updated if the current\nsetting's etag matches.",
    "Reference": "If {@link ConfigurationSetting#getETag() ETag} is specified, the configuration value is updated if the current\nsetting's ETag matches.",
    "HebCup": "If {@link ConfigurationConfigurationSetting#getETag() etag} is specified, the configuration value is updated if the current ConfigurationSetting's etag matches."
}
{
    "Origin": "GeneratedRootGlideModule.",
    "Reference": "GeneratedAppGlideModule.",
    "HebCup": "GeneratedAppGlideModule."
}
{
    "Origin": "Returns the ratings entry remote service.",
    "Reference": "Returns the asset entry set like local service.",
    "HebCup": "Returns the asset Entry Set Like Local remote service."
}
{
    "Origin": "Sets departement.",
    "Reference": "Sets department.",
    "HebCup": "Sets department."
}
{
    "Origin": "- current OBIS identifier\n- current OBIS value\n- current OBIS data object",
    "Reference": "- current OBIS identifier\n- current OBIS value",
    "HebCup": "- current OBIS identifier - current OBIS value - current OBIS data Value"
}
{
    "Origin": "Get the value for the given key if the entry is cached.",
    "Reference": "Get the value from the given entry.",
    "HebCup": "Get the value for the given key V the entry is cached."
}
{
    "Origin": "Returns the ECKey identified in the connected output, for either P2PKH scripts or P2PK scripts.",
    "Reference": "Returns the ECKey identified in the connected output, for either P2PKH, P2WPKH or P2PK scripts.",
    "HebCup": "Returns the ECKey identified in the connected output, for either P2PKH scripts or P2PK scripts."
}
{
    "Origin": "This methods sets this armature in its bind pose (aligned with the undeformed mesh)",
    "Reference": "This methods sets this armature in its bind pose (aligned with the mesh to deform)",
    "HebCup": "This methods sets this armature in its bind pose (aligned with the undeformed mesh)"
}
{
    "Origin": "If the variable was set, a configuration {@link ConfigurationEvent event} will be passed to\nall registered listeners.",
    "Reference": "If the variable was set, a CONFIGURATION {@link ConfigurationEvent event} will be passed to\nall registered listeners.",
    "HebCup": "If the variable was set , a CONFIGURATION {@link ConfigurationEvent event} will be passed to all registered listeners."
}
{
    "Origin": "Sets the preference.",
    "Reference": "Set the preference.",
    "HebCup": "Sets the preference."
}
{
    "Origin": "Checks that semicolon is in empty for initializer.",
    "Reference": "Checks that semicolon is in empty for initializer or condition.",
    "HebCup": "Checks that semicolon is In Empty For Initializer Or Condition."
}
{
    "Origin": "Returns the data being sent to a potential remote executor.",
    "Reference": "Returns the remote execution properties.",
    "HebCup": "Returns the data being sent to a potential remote executor."
}
{
    "Origin": "Returns the line number of the source line containing the\nnew expression.",
    "Reference": "Returns the line number of the source line containing the\n expression.",
    "HebCup": "Returns the line number of the source line containing the\nnew expression."
}
{
    "Origin": "Test of var method, of class Gamma.",
    "Reference": "Test of variance method, of class Gamma.",
    "HebCup": "Test of Variance method , of class Gamma."
}
{
    "Origin": "Time defaults to midnight in UTC.",
    "Reference": "Time defaults to midnight in default timezone.",
    "HebCup": "Time defaults to midnight in getDefault."
}
{
    "Origin": "Sets the value of the 'zk_Quorum' field.",
    "Reference": "Sets the value of the 'zkQuorum' field.",
    "HebCup": "Sets the value of the 'zkQuorum' field."
}
{
    "Origin": "The children will be ordered from right to left rather than the default left to right.",
    "Reference": "The children will be displayed last to first.",
    "HebCup": "The children will be ordered from right to left rather than the default left to right."
}
{
    "Origin": "Enables all schedules which were disabled or added between startTime and endTime in a given namespace.",
    "Reference": "Enables all schedules which were disabled or added between startTimeMillis and endTimeMillis in a given namespace.",
    "HebCup": "Enables all schedules which were disabled or added between startTimeMillis and endTime in a given namespace."
}
{
    "Origin": "Find exactly one concrete element for a key in a Map of Sets.",
    "Reference": "Find exactly one concrete element in a collection.",
    "HebCup": "Find exactly one concrete element from a key in a Map of Sets."
}
{
    "Origin": "Send request for execution via {@link #cliIo}.",
    "Reference": "Send request for execution via corresponding singleIo from {@link #ios} or sticky singleIo.",
    "HebCup": "Send request for execution via {@link #cliIo}."
}
{
    "Origin": "Backs up the subscriptions and bookmarks databases to external storage.",
    "Reference": "Backs up the databases to external storage.",
    "HebCup": "Backs up the subscriptions and bookmarks databases to external storage."
}
{
    "Origin": "Returns a string representation of this object; useful for testing and debugging.",
    "Reference": "Returns a string representation of this object.",
    "HebCup": "Returns a string representation of this object; useful for testing and debugging."
}
{
    "Origin": "Replace actual names found in a string with meaningless randomized names.",
    "Reference": "Replace actual names found in a string with redacted names.",
    "HebCup": "Replace actual sorted found in a string with meaningless randomized names."
}
{
    "Origin": "Copies the specified {@link PointerBuffer} to the {@code data.l} field.",
    "Reference": "Copies the specified {@link CLongBuffer} to the {@code data.l} field.",
    "HebCup": "Copies the specified {@link CLongBuffer} to the {@code data.l} field."
}
{
    "Origin": "Obtains an instance from the specified unique name.",
    "Reference": "Obtains an instance from the specified name.",
    "HebCup": "Obtains an instance from the specified name."
}
{
    "Origin": "This method returns the value of the database column m_prj_risk.dateraised",
    "Reference": "This method returns the value of the database column m_prj_risk.raisedDate",
    "HebCup": "This method returns the value of the database column m_prj_risk.Raiseddate"
}
{
    "Origin": "Add a record to all the accumulators.",
    "Reference": "Add a record to the full accumulator.",
    "HebCup": "Add a record to all the accumulators."
}
{
    "Origin": "Return the rack for which an endpoint resides in",
    "Reference": "Return the rack for which an node resides in",
    "HebCup": "Return the rack for which an Node resides in"
}
{
    "Origin": "Returns the appropriate {@link ActionContext} to execute the given {@link Spawn} with.",
    "Reference": "Returns a list of appropriate {@link ActionContext}s to execute the given {@link Spawn} with.",
    "HebCup": "Returns the appropriate {@link ActionContexts} to execute the given {@link Spawn} with."
}
{
    "Origin": "Deletes the specified variable from the configuration.",
    "Reference": "Deletes the specified variable from the CONFIGURATION.",
    "HebCup": "Deletes the specified variable from the CONFIGURATION."
}
{
    "Origin": "Rotate this vector the specified radians about the given rotation axis.",
    "Reference": "Rotate this vector the specified radians around the given rotation axis.",
    "HebCup": "Rotate this vector the specified radians Axis the given rotation axis."
}
{
    "Origin": "Pre-multiply the rotation transformation of the given {@link Quaterniond} to this matrix while using (ox, oy, oz)\nas the rotation origin.",
    "Reference": "Pre-multiply the rotation transformation of the given {@link Quaterniondc} to this matrix while using (ox, oy, oz)\nas the rotation origin.",
    "HebCup": "Pre-multiply the rotation transformation of the given {@link Quaterniondc} to this matrix while using (ox , oy , oz) as the rotation origin."
}
{
    "Origin": "Sets the id attribute of this Media to\nid",
    "Reference": "Sets the id attribute of this Media's element to\nid",
    "HebCup": "Sets the id attribute of this mediaElement to id"
}
{
    "Origin": "If session is not created, default one\nwill be used.",
    "Reference": "If {@link Session} is not created, default one will be used.",
    "HebCup": "If getSession is not created , default one will be used."
}
{
    "Origin": "After all member accounts accept the handshake, you finalize the migration by accepting the handshake that\ncontains .",
    "Reference": "After all invited member accounts accept the handshake, you finalize the feature set change by accepting the\nhandshake that contains .",
    "HebCup": "After all member accounts accept the handshake, you finalize the migration by accepting the handshake that\ncontains ."
}
{
    "Origin": "Create client request filtering stage using the service locator.",
    "Reference": "Create client request filtering stage using the instance manager.",
    "HebCup": "Create client request filtering stage using the Instance Manager."
}
{
    "Origin": "Gets a string representation of this charset.",
    "Reference": "Returns a string describing this charset.",
    "HebCup": "name a string representation of this charset."
}
{
    "Origin": "Objects of the following type(s) are allowed in the list\n{@link CTGroupShape }\n{@link CTShape }",
    "Reference": "Objects of the following type(s) are allowed in the list\n{@link CTShape }\n{@link CTGroupShape }",
    "HebCup": "Objects of the following type(s) are allowed in the list\n{@link CTGroupShape }\n{@link CTShape }"
}
{
    "Origin": "A typical use case would be to convert index names to curve names valid for an underlying system.",
    "Reference": "A typical use case would be to normalize parameter metadata tenors to be valid for an underlying system.",
    "HebCup": "A typical use case would be to convert index mds to curve mds valid for an underlying system."
}
{
    "Origin": "Returns a string representation of this object; useful for testing and debugging.",
    "Reference": "Returns a string representation of this object.",
    "HebCup": "Returns a string representation of this object; useful for testing and debugging."
}
{
    "Origin": "Report all Java ClassFile files available available from the specified files\nand/or directories, including sub directories.",
    "Reference": "Report all Java ClassFile files available from the specified files\nand/or directories, including sub directories.",
    "HebCup": "Report all Java ClassFile files available available from the specified files\nand/or directories, including sub directories."
}
{
    "Origin": "Returns {@code true} if this method is the first JsMethod in the method hierarchy that exposes\nan existing non-JsMethod inside a class.",
    "Reference": "Returns {@code true} if this method is the first JsMember in the method hierarchy that exposes\nan existing non-JsMember inside a class.",
    "HebCup": "Returns {@code true} if this method is the first JsMember in the method hierarchy that exposes an existing non-JsMethod inside a class."
}
{
    "Origin": "Validates the given @Asynchronous annotation.",
    "Reference": "Validates the given {@link Asynchronous} annotation.",
    "HebCup": "Validates the given @Asynchronous annotation permitted."
}
{
    "Origin": "Removes the specified tags from the {@link NamespacedEntityId}",
    "Reference": "Removes the specified tags from the {@link MetadataEntity}",
    "HebCup": "Removes the specified tags from the {@link MetadataEntity}"
}
{
    "Origin": "Ensures that the service referenced by the Contract at the head of\nthe iterator actually exists (is published).",
    "Reference": "Ensures that the api referenced by the Contract at the head of\nthe iterator actually exists (is published).",
    "HebCup": "Ensures that the Api referenced by the Contract at the head of the iterator actually exists (is published)."
}
{
    "Origin": "Creates a new ClassLoader and a new class inside that ClassLoader.",
    "Reference": "Creates a new ClassLoader and a new {@link Serializable} class inside that ClassLoader.",
    "HebCup": "Creates a new Serializable and a new class inside that ClassLoader."
}
{
    "Origin": "Authorized the given DDLWork2.",
    "Reference": "Authorized the given DDLWork.",
    "HebCup": "Authorized the given DDLWork."
}
{
    "Origin": "Returns a string representation of this object; useful for testing and debugging.",
    "Reference": "Returns a string representation of this object.",
    "HebCup": "Returns a string representation of this object; useful for testing and debugging."
}
{
    "Origin": "Utilization of database statistics (GH-1202).",
    "Reference": "Utilization of database statistics.",
    "HebCup": "Utilization of database statistics (GH-1202)."
}
{
    "Origin": "Creates a global symbol of the form {@code \"JVM\" + container name}.",
    "Reference": "Creates a global symbol of the form {@code \"A\" + container name}.",
    "HebCup": "Creates a global symbol of the form {@code ``A`` + container name}."
}
{
    "Origin": "Type strategy that maps an {@link InputTypeValidator} to a {@link TypeStrategy} if the validator\nmatches.",
    "Reference": "Type strategy that maps an {@link InputTypeStrategy} to a {@link TypeStrategy} if the input strategy\ninfers identical types.",
    "HebCup": "Type strategy that maps an {@link InputTypeStrategy} to a {@link TypeStrategy} if the validator matches."
}
{
    "Origin": "-\njava.lang.StringLatin1.inflate([BI[CII)V",
    "Reference": "Intrinsic for {@code java.lang.StringLatin1.inflate([BI[CII)V}.",
    "HebCup": "-\njava.lang.StringLatin1.inflate([BI[CII)V"
}
{
    "Origin": "Gets the list of {@link DeletedKey deletedSecrets} on this page.",
    "Reference": "Gets the iterable stream of {@link DeletedKey deletedSecrets} on this page.",
    "HebCup": "Gets the IterableStream of {@link DeletedKey deletedSecrets} on this page."
}
{
    "Origin": "Cleans the sequences in this schema.",
    "Reference": "Cleans the objects of these types in this schema.",
    "HebCup": "Cleans the Objects in this schema."
}
{
    "Origin": "Gets the edit data for all cms-editable elements in the page.",
    "Reference": "Gets the edit data for all oc-editable elements in the page.",
    "HebCup": "Gets the edit data for all CmsGwtConstants elements in the page."
}
{
    "Origin": "Converts a Swagger parameter to an instance of {@link Entity}.",
    "Reference": "Converts a Swagger parameter to an instance of {@link PayLoad}.",
    "HebCup": "Converts a Swagger parameter to an instance of {@link PayLoad}."
}
{
    "Origin": "Returns the storage serializer.",
    "Reference": "Returns the storage namespace.",
    "HebCup": "Returns the storage Namespace."
}
{
    "Origin": "Scheduler:\n {@code onErrorResumeNext} does not operate by default on a particular {@link Scheduler}.",
    "Reference": "Scheduler:\n {@code onErrorResumeWith} does not operate by default on a particular {@link Scheduler}.",
    "HebCup": "Scheduler: {@code onErrorResumeWith} does not operate by default on a particular {@link Scheduler}."
}
{
    "Origin": "Gets metadata information about the specified table.",
    "Reference": "Gets the Table by tableId",
    "HebCup": "Gets metadata information about the specified stub."
}
{
    "Origin": "Sets whether or not resources in the root (WEB-INF) folder can be accessed.",
    "Reference": "Sets whether or not resources in the web root folder can be accessed.",
    "HebCup": "Sets whether or not resources in the root (Root-INF) folder can be accessed."
}
{
    "Origin": "Sets the member location provider.",
    "Reference": "Sets the membership provider.",
    "HebCup": "Sets the member Membership Provider."
}
{
    "Origin": "If no mock can be assigned to a field, skip it silently",
    "Reference": "If no mock can be assigned to a field, skip the field silently",
    "HebCup": "If no mock can be assigned to a field, skip it silently"
}
{
    "Origin": "Returns a stream of trace events.",
    "Reference": "Returns a trace reader for the access events.",
    "HebCup": "Returns a Trace of trace events."
}
{
    "Origin": "Register a CollectionStateWatcher to be called when the state of a collection changes",
    "Reference": "Register a CollectionStateWatcher to be called when the state of a collection changes\nor the set of live nodes changes.",
    "HebCup": "Register a CollectionStateWatcher to be called when the state of a collection changes"
}
{
    "Origin": "The supplied function is invoked for each market data name in this sensitivities.",
    "Reference": "The supplied function is invoked for each parameter metadata in this sensitivities.",
    "HebCup": "The supplied function is invoked for each market data md in this sensitivities."
}
{
    "Origin": "Retrieves whether the permission of the given type has been granted to\nthe given user.",
    "Reference": "Retrieves whether the permission of the given type has been granted to\nthe given entity.",
    "HebCup": "Retrieves whether the permission of the given type has been granted to the given Permissions."
}
{
    "Origin": "Given a bunch of NodeRefs, create SimpleFeatures from the results.",
    "Reference": "Given a bunch of NodeRefs, create Features from the results.",
    "HebCup": "Given a bunch of NodeRefs , create Features from the results."
}
{
    "Origin": "Asserts that the cache contains the given data for {@code uriString}.",
    "Reference": "Asserts that the cache contains necessary data for the {@code requestSet}.",
    "HebCup": "Asserts that the cache contains the given CachedData for {@code uriString}."
}
{
    "Origin": "Creates an UnicastProcessor with the given internal buffer capacity hint, delay error flag and a callback for\nthe case when the single Subscriber cancels its subscription.",
    "Reference": "Creates an UnicastProcessor with the given internal buffer capacity hint, delay error flag and a callback for\nthe case when the single Subscriber cancels its subscription or\nthe processor is terminated.",
    "HebCup": "Creates an UnicastProcessor with the given internal buffer capacity hint, delay error flag and a callback for\nthe case when the single Subscriber cancels its subscription."
}
{
    "Origin": "The annotation is sorted by array and then offset.",
    "Reference": "The annotation is sorted by sequence and then offset.",
    "HebCup": "The annotation is sorted by sequence and then offset."
}
{
    "Origin": "Note this method creates a HotStream that starts emitting data\nimmediately.",
    "Reference": "Note this method creates a Connectable that starts emitting data\nimmediately.",
    "HebCup": "Note this method creates a Connectable that starts emitting data immediately."
}
{
    "Origin": "Computes the average for each pixel across all bands in the {@link Planar} image.",
    "Reference": "Computes the average for each pixel across selected bands in the {@link Planar} image.",
    "HebCup": "Computes the average for each pixel across all bands in the {@link Planar} image."
}
{
    "Origin": "Creates query for the given queryString.",
    "Reference": "Queries this contact source for the given queryString.",
    "HebCup": "Creates Source for the given queryString."
}
{
    "Origin": "Deleted by user info",
    "Reference": "Deleted by user",
    "HebCup": "Deleted by user info"
}
{
    "Origin": "Applies an action to this value, if this option is defined, otherwise does nothing.",
    "Reference": "Applies an action to this value if this is defined, otherwise nothing happens.",
    "HebCup": "Applies an action to this value, if this option is defined, otherwise does nothing."
}
{
    "Origin": "Return the {@link VarNode} associated with the optional\n{@link Annotations#FAST_RANGE_COUNT} property.",
    "Reference": "Return the {@link VarNode} associated with the optional\n{@link Annotations#FAST_RANGE_COUNT_VAR} property.",
    "HebCup": "Return the {@link VarNode} associated with the optional {@link Annotations#FAST_RANGE_COUNT_VAR} property."
}
{
    "Origin": "Returns a string representation of this object; useful for testing and debugging.",
    "Reference": "Returns a string representation of this object.",
    "HebCup": "Returns a string representation of this object; useful for testing and debugging."
}
{
    "Origin": "After that, the binding lease status is active.",
    "Reference": "After that, the binding lease status is leased.",
    "HebCup": "After that , the binding available status is active."
}
{
    "Origin": "By\ndefault, it returns the {@link Finder} class.",
    "Reference": "By\ndefault, it returns the {@link org.restlet.resource.Finder} class.",
    "HebCup": "By default , it returns the {@link org.restlet.resource.Finder} class."
}
{
    "Origin": "Standard setter for the rightwardLabel String for this RelationshipType",
    "Reference": "Standard setter for the rightwardType String for this RelationshipType",
    "HebCup": "Standard setter for the rightwardType String for this RelationshipType"
}
{
    "Origin": "Initializes the {@link DecryptionStatusTracker}",
    "Reference": "Initializes the {@link CryptoJobStatusTracker}",
    "HebCup": "Initializes the {@link cryptoJobStatusTracker}"
}
{
    "Origin": "Returns builtin the operator table for this environment.",
    "Reference": "Returns builtin the operator table and external the operator for this environment.",
    "HebCup": "Returns builtin the operator table for this environment."
}
{
    "Origin": "Traverses this Multimap sequentially, mapping the (key, value) pairs to elements.",
    "Reference": "Iterates this Multimap sequentially, mapping the (key, value) pairs to elements.",
    "HebCup": "Traverses this Multimap sequentially , mapping the (key , value).map pairs to elements."
}
{
    "Origin": "This should be called before specifying the data source",
    "Reference": "This should be called before specifying the videos uri or path",
    "HebCup": "This should be called before specifying the data source"
}
{
    "Origin": "Returns a rule that restricts access according to the IP address of the\nrequest's client.",
    "Reference": "Adds a rule that restricts access according to the IP address of the\nrequest's client.",
    "HebCup": "Returns a rule that restricts access according to the , of the request's client."
}
{
    "Origin": "Test of npara method, of class HyperGeometricDistribution.",
    "Reference": "Test of length method, of class HyperGeometricDistribution.",
    "HebCup": "Test of Length method , of class HyperGeometricDistribution."
}
{
    "Origin": "{@link NewObject} example, large structure",
    "Reference": "{@link ObjectRemoved} example",
    "HebCup": "{@link NewObject} example, large structure"
}
{
    "Origin": "The algorithm looks for requested table\nin following paths in that order:",
    "Reference": "The algorithm looks for requested table\nin the following paths in that order:",
    "HebCup": "The algorithm looks for requested table\nin following paths in that order:"
}
{
    "Origin": "If mapRepetition is enabled the map repeats in every direction and scrolling wraps around the\nedges.",
    "Reference": "If horizontalMapRepetition is enabled the map repeats in top/bottom direction and scrolling wraps around the\nedges.",
    "HebCup": "If verticalMapRepetition is enabled the map repeats in every direction and scrolling wraps around the edges."
}
{
    "Origin": "Returns an iterator of all of the registered {@code SaslClientFactory}s where the order is based on the\norder of the Provider registration and/or class path order.",
    "Reference": "Returns a collection of all of the registered {@code SaslClientFactory}s where the order is based on the\norder of the Provider registration and/or class path order.",
    "HebCup": "Returns an Collection of all of the registered {@code SaslClientFactory}s where the order is based on the order of the Provider registration and/or class path order."
}
{
    "Origin": "Return a scalar {@code Codec} for the given range.",
    "Reference": "Return a scalar {@code Encodec} for the given range.",
    "HebCup": "Return a scalar {@code Encodec} for the given range."
}
{
    "Origin": "Gets the user name and group name from the user id.",
    "Reference": "Gets the group name from the user id.",
    "HebCup": "Gets the user name and group name from the user id."
}
{
    "Origin": "Note, the default is MapReduceCommand.OutputType.REPLACE",
    "Reference": "Note, the default is {@link MapReduceAction#REPLACE}.",
    "HebCup": "Note , the default is)"
}
{
    "Origin": "Returns the {@link Query} at the given position but does not update the internal {@link",
    "Reference": "Returns the {@link PlaylistEntry} at the given position but does not update the internal\n{@link PlaylistEntry} iterator.",
    "HebCup": "Returns the {@link PlaylistEntry} at the given position but does not update the internal {@link"
}
{
    "Origin": "Chosen bits are [8, 6, 7]",
    "Reference": "Chosen bits are [11, 6, 4]",
    "HebCup": "Chosen bits are [8, 6, 4]"
}
{
    "Origin": "Method setTuple sets the tuple of this TupleEntry object.",
    "Reference": "Method setTuple sets the tuple of this TupleEntry object, no copy will be performed.",
    "HebCup": "Method setTuple sets the tuple of this TupleEntry object."
}
{
    "Origin": "Creates a new Jetty connection factory.",
    "Reference": "Creates new internal Jetty connection factories.",
    "HebCup": "Creates a new Jetty Connection Factories."
}
{
    "Origin": "{@codesnippet com.azure.data.appconfiguration.ConfigurationClient.addSettingWithResponse#ConfigurationSetting-Context}",
    "Reference": "{@codesnippet com.azure.data.appconfiguration.ConfigurationClient.addConfigurationSettingWithResponse#ConfigurationSetting-Context}",
    "HebCup": "{@codesnippet com.azure.data.appconfiguration.ConfigurationClient.addConfigurationSettingWithResponse#ConfigurationSetting-Context}"
}
{
    "Origin": "Report the algebraic area between function and x axis.",
    "Reference": "Report the area above x axis.",
    "HebCup": "Report the algebraic area between function and x axis."
}
{
    "Origin": "Creates a new adapter for an object of class '{@link org.bimserver.models.ifc4.ListOfEInt List Of EInt}'.",
    "Reference": "Creates a new adapter for an object of class '{@link org.bimserver.models.ifc4.ListOfELong List Of ELong}'.",
    "HebCup": "Creates a new adapter for an object of class '{@link org.bimserver.models.ifc4.ListOfELong List Of EInt}'."
}
{
    "Origin": "Makes a text component using strings from a locale and supports passing an undefined number of variables to the LocaleLoader",
    "Reference": "Makes a text component using strings from a locale and supports passing an undefined number of variables to the LocaleManager",
    "HebCup": "Makes a text component using strings from a locale and supports passing an undefined number of variables to the pluginRef.getLocaleManager"
}
{
    "Origin": "Is the value with this qualifier less than the length of array?",
    "Reference": "Is the value with this qualifier less than the length of sequence?",
    "HebCup": "Is the value with this qualifier less than the length of sequence?"
}
{
    "Origin": "Copies the specified element values from the given annotation, using the specified name\nmapping.",
    "Reference": "Copies the specified element values from the given annotation, using the specified renaming\nmap.",
    "HebCup": "Copies the specified element values from the given annotation, using the specified name elementNameRenaming."
}
{
    "Origin": "Returns the status of the global rotation assigned to this.",
    "Reference": "Returns the status of the global rotation(s) assigned to this",
    "HebCup": "Returns the status of the global rotation assigned to this."
}
{
    "Origin": "Checks whether two filenames are equal using the case rules of the system.",
    "Reference": "Checks whether two fileNames are equal using the case rules of the system.",
    "HebCup": "Checks whether two filenames are equal using the case rules of the system."
}
{
    "Origin": "The documentation of {@link FCPPluginClientTracker#getClient(UUID)} applies to this\nfunction.",
    "Reference": "The documentation of {@link FCPPluginClientTracker#getConnection(UUID)} applies to this\nfunction.",
    "HebCup": "The documentation of {@link FCPPluginClientTracker#getConnection (UUID)} applies to this function."
}
{
    "Origin": "Returns the group name used as a publisher group name for authentication\non the target endpoint.",
    "Reference": "Returns the cluster name used as a publisher cluster name for authentication\non the target endpoint.",
    "HebCup": "Returns the cluster Name used as a publisher cluster Name for authentication on the target endpoint."
}
{
    "Origin": "Get user keypair\n### Functional Description:   Retrieve the user's keypair.",
    "Reference": "Get user's key pair\n### Functional Description:   Retrieve the user's key pair.",
    "HebCup": "Get user keypair\n### Functional Description:   Retrieve the user's keypair."
}
{
    "Origin": "Returns a string representation of this object; useful for testing and debugging.",
    "Reference": "Returns a string representation of this object.",
    "HebCup": "Returns a string representation of this object; useful for testing and debugging."
}
{
    "Origin": "Stop managing a location.",
    "Reference": "Stop managing a DatasetGraph.",
    "HebCup": "Stop managing a DatasetGraph."
}
{
    "Origin": "Obtains an instance from the specified unique name.",
    "Reference": "Obtains an instance from the specified name.",
    "HebCup": "Obtains an instance from the specified name."
}
{
    "Origin": "In case all entries are invalid, the resolver\nwill return as no mapping is found.",
    "Reference": "Any resolution operation using the\nresolver therefore will return as no mapping is found.",
    "HebCup": "In case all entries are invalid, the resolver\nwill return as no mapping is found."
}
{
    "Origin": "Adds one more acceptable indentation level.",
    "Reference": "Combines 2 acceptable indentation level classes.",
    "HebCup": "Adds one more acceptable indentation result.levels."
}
{
    "Origin": "If a {@link #getCipher() cipher} is available, it will be used to first decrypt the byte array.",
    "Reference": "If a {@link #getCipherService() cipherService} is available, it will be used to first decrypt the byte array.",
    "HebCup": "If a {@link#getCipherService () cipher} is available , it will be used to first decrypt the byte array."
}
{
    "Origin": "Returns a string representation of this object; useful for testing and debugging.",
    "Reference": "Returns a string representation of this object.",
    "HebCup": "Returns a string representation of this object; useful for testing and debugging."
}
{
    "Origin": "Decorates {@link Service}s whose {@link Route} matches the specified {@link Route}.",
    "Reference": "Decorates {@link HttpService}s whose {@link Route} matches the specified {@link Route}.",
    "HebCup": "Decorates {@link HttpService}s whose {@link Route} matches the specified {@link Route}."
}
{
    "Origin": "Morewover, said statement must use\nbind variables since it is those bind variables that will be bound to values by the\nresulting writer.",
    "Reference": "Moreover, said statement must use\nbind variables since these variables will be bound to values by the resulting writer.",
    "HebCup": "Morewover, said statement must use\nbind variables since it is those bind variables that will be bound to values by the\nresulting writer."
}
{
    "Origin": "Returns if this resource is a folder.",
    "Reference": "Sets the publish resource info.",
    "HebCup": "Returns if this resource set a folder."
}
{
    "Origin": "When transforming a vector by the resulting matrix the rotation transformation will be applied first and then the translation.",
    "Reference": "When transforming a vector by the resulting matrix the rotation - and possibly scaling - transformation will be applied first and then the translation.",
    "HebCup": "When transforming a vector by the resulting matrix the rotation transformation will be applied first and then the translation."
}
{
    "Origin": "The width of the output fraction can be controlled.",
    "Reference": "The width of the printed fraction can be controlled.",
    "HebCup": "The width of the output fraction can be controlled."
}
{
    "Origin": "Get the transcripts as a of transcripts in order.",
    "Reference": "Get the transcripts as a set, but preserve the order.",
    "HebCup": "Get the transcripts as a of transcripts in order."
}
{
    "Origin": "Upsert the blob metadata document in the CosmosDB collection, retrying as necessary.",
    "Reference": "Upsert the blob metadata document in the CosmosDB collection.",
    "HebCup": "Upsert the blob metadata asyncDocument in the CosmosDB collection , retrying as necessary."
}
{
    "Origin": "Calls to {@code register} are idempotent; adding the same\nannotated class more than once has no additional effect.",
    "Reference": "Calls to {@code register} are idempotent; adding the same\ncomponent class more than once has no additional effect.",
    "HebCup": "Calls to {@code register} are idempotent; adding the same component Class more than once has no additional effect."
}
{
    "Origin": "Determine if a specific piece of text appears in log output.",
    "Reference": "Determine if a specific pattern appears in log output.",
    "HebCup": "Determine if a specific piece of text appears in log output."
}
{
    "Origin": "Code snippets for {@link BlobAsyncClient#downloadWithResponse(BlobRange, ReliableDownloadOptions,",
    "Reference": "Code snippets for {@link BlobAsyncClient#downloadWithResponse(BlobRange, DownloadRetryOptions,",
    "HebCup": "Code snippets for {@link BlobAsyncClient#downloadWithResponse (BlobRange , DownloadRetryOptions ,"
}
{
    "Origin": "Truncates log entries with indexes {@code >= entryIndex}.",
    "Reference": "Deletes all log entries with {@code index >= entryIndex}.",
    "HebCup": "Truncates log entries with indexes {@code >= entryIndex}."
}
{
    "Origin": "Ping\n### Functional Description: Test connection to DRACOON Server (while authenticated).",
    "Reference": "(authenticated) Ping\n### Functional Description: Test connection to DRACOON Server (while authenticated).",
    "HebCup": "Ping\n### Functional Description: Test connection to DRACOON Server (while authenticated)."
}
{
    "Origin": "Gets the value of the egBlockLevelElts property.",
    "Reference": "Gets the value of the content property.",
    "HebCup": "Gets the value of the content property."
}
{
    "Origin": "or throws a {@link com.liferay.wsrp.NoSuchConsumerPortletException} if it could not be found.",
    "Reference": "or throws a {@link NoSuchConsumerPortletException} if it could not be found.",
    "HebCup": "or throws a {@link com.liferay.wsrp.NoSuchConsumerPortletException} if it could not be found."
}
{
    "Origin": "Clears the value of the 'cf_name' field",
    "Reference": "Clears the value of the 'cfName' field.",
    "HebCup": "Clears the value of the 'cfName' field"
}
{
    "Origin": "Use {@link HostAccessPolicy#EXPLICIT} or\n{@link HostAccessPolicy#ALL}.",
    "Reference": "Use {@link HostAccess#EXPLICIT} or\n{@link HostAccess#ALL}.",
    "HebCup": "Use {@link HostAccess#EXPLICIT} or {@link HostAccess#ALL}."
}
{
    "Origin": "Gets the value of the paragraphContent property.",
    "Reference": "Gets the value of the content property.",
    "HebCup": "Gets the value of the content property."
}
{
    "Origin": "Creates an UnicastProcessor with the given internal buffer capacity hint and a callback for\nthe case when the single Subscriber cancels its subscription.",
    "Reference": "Creates an UnicastProcessor with the given internal buffer capacity hint and a callback for\nthe case when the single Subscriber cancels its subscription or the\nprocessor is terminated.",
    "HebCup": "Creates an UnicastProcessor with the given internal buffer capacity hint and a callback for\nthe case when the single Subscriber cancels its subscription."
}
{
    "Origin": "Check if the container size if valid.",
    "Reference": "Check if the container size is valid.",
    "HebCup": "Check if the container size if valid."
}
{
    "Origin": "Currently only ever returns true for default constructors\nadded by the compiler.",
    "Reference": "Returns true for default constructors added by the compiler.",
    "HebCup": "Currently only ever returns true for default constructors\nadded by the compiler."
}
{
    "Origin": "Returns the item with weight calculation.",
    "Reference": "Returns the item with an enriched score value.",
    "HebCup": "Returns the item with weight calculation."
}
{
    "Origin": "If endIndex > this.seriesEndIndex+1 the new TimeSeries will end at the last available Bar of this TimeSeries",
    "Reference": "If endIndex > this.seriesEndIndex+1 the new BaseBarSeries will end at the last available Bar of this BaseBarSeries",
    "HebCup": "If endIndex > this.seriesEndIndex+1 the new TimeSeries will end at the last available BaseBar of this TimeSeries"
}
{
    "Origin": "Deletes a single document from the Solr server.",
    "Reference": "Deletes a single document from the Solr client.",
    "HebCup": "Deletes a single document from the Solr Client."
}
{
    "Origin": "Tests similarity transform on the example provided in the EPSG projection guide, page 99",
    "Reference": "Tests similarity transform on the example provided in the EPSG projection guide, page 140",
    "HebCup": "Tests similarity transform on the example provided in the EPSG projection guide, page 99"
}
{
    "Origin": "Sets the client transport.",
    "Reference": "Sets the client protocol.",
    "HebCup": "Sets the Client Protocol."
}
{
    "Origin": "Returns the long value if this primitive value is of type long.",
    "Reference": "Returns the long value if this primitive value is of size 8",
    "HebCup": "Returns the long value if this primitive value is of size long."
}
{
    "Origin": "If --interface parameter has been specified, --all parameter will not be visible\nto prevent conflicts.",
    "Reference": "If --entity parameter has been specified, --all parameter will not be visible\nto prevent conflicts.",
    "HebCup": "If --entity parameter has been specified , --all parameter will not be visible to prevent conflicts."
}
{
    "Origin": "The\ntransition from native in {@link CFunctionEpilogueNode#cFunctionEpilogue()} might block if a\nsafepoint is in progress when I reach that call.",
    "Reference": "The\ntransition from native in {@link CFunctionEpilogueNode#cFunctionEpilogue(int)} might block if\na safepoint is in progress when I reach that call.",
    "HebCup": "The\ntransition from native in {@link CFunctionEpilogueNode#cFunctionEpilogue()} might block if a\nsafepoint is in progress when I reach that call."
}
{
    "Origin": "does not exist) an IntrospectionError is thrown.",
    "Reference": "does not exist) an {@link IntrospectionError} is thrown.",
    "HebCup": "does not exist) an IntrospectionError is thrown."
}
{
    "Origin": "This can be used to perform simply scoping of the on\nnext failure strategy or to override the the inherited strategy in a sub-stream for example in a flatMap.",
    "Reference": "It can be used for easier scoping of\nthe on next failure strategy or to override the inherited strategy in a sub-stream\n(for example in a flatMap).",
    "HebCup": "This can be used to perform simply scoping of the on next failure Error or to override the the inherited Error in a sub-stream for example in a flatMap."
}
{
    "Origin": "Returns split button part hitbox.",
    "Reference": "Returns menu button part hitbox.",
    "HebCup": "Returns Menu Button part hitbox."
}
{
    "Origin": "Gets the value of the saltData property.",
    "Reference": "Gets the value of the spinValue property.",
    "HebCup": "Gets the value of the spinValue property."
}
{
    "Origin": "Set the HTTP {@code Accept:} header used to when making a SPARQL Protocol query.",
    "Reference": "Set the HTTP {@code Accept:} header used to when making a\nSPARQL Protocol query if no query type specific setting available.",
    "HebCup": "Set the HTTP {@code Accept:} header used to when making a SPARQL Protocol query."
}
{
    "Origin": "Initializes the inter-cluster distance matrix and the prototypes of possible merges",
    "Reference": "Initializes the inter-cluster distance matrix of possible merges",
    "HebCup": "Initializes the inter-cluster distance matrix and the prototypes of possible merges"
}
{
    "Origin": "Sets the {@literal PING} before activate connection flag.",
    "Reference": "Sets the {@link ProtocolVersion} to use.",
    "HebCup": "Sets the {@literal protocol} before activate connection flag."
}
{
    "Origin": "Returns a string representation of this object; useful for testing and debugging.",
    "Reference": "Returns a string representation of this object.",
    "HebCup": "Returns a string representation of this object; useful for testing and debugging."
}
{
    "Origin": "Requests that the player prefetch a media item with the specific {@link Uri} for playback.",
    "Reference": "Requests that the player prepare a media item with the specific {@link Uri} for playback.",
    "HebCup": "Requests that the player prepare a media item with the specific {@link Uri} for playback."
}
{
    "Origin": "This method will interpolate between each two successive quaternions via {@link #nlerp(Quaterniond, double)}\nusing their relative interpolation weights.",
    "Reference": "This method will interpolate between each two successive quaternions via {@link #nlerp(Quaterniondc, double)}\nusing their relative interpolation weights.",
    "HebCup": "This method will interpolate between each two successive quaternions via {@link #nlerp(Quaterniondc, double)} using their relative interpolation weights."
}
{
    "Origin": "Returns the (biased) kurtosis excess of all the values within a\n{@link Dataset}",
    "Reference": "Returns the (biased) skew of all the values within a {@link Dataset}",
    "HebCup": "Returns the (biased) population Skew of all the values within a {@link Dataset}"
}
{
    "Origin": "Track the height of previous added key point.",
    "Reference": "Return a list of key points.",
    "HebCup": "Track the height of previous added key point."
}
{
    "Origin": "However, the problem with exposing the\ninformation is that people running from an IDE can observe stale\ndata from old  class files left from a\nprevious build of a JAR.",
    "Reference": "However, people running from an IDE will\nobserve stale data from old \nclass files left from a previous build of a JAR.",
    "HebCup": "However, the problem with exposing the\ninformation is that people running from an IDE can observe stale\ndata from old  class files left from a\nprevious build of a JAR."
}
{
    "Origin": "Returns true if field traceIdList is set (has been assigned a value) and false otherwise",
    "Reference": "Returns true if field localTraceIdList is set (has been assigned a value) and false otherwise",
    "HebCup": "Returns true if field LocalTraceIdList is set (has been assigned a value) and false otherwise"
}
{
    "Origin": "Decreases the reference count by {@code decrement} and de-allocates this object if the reference count reaches {@code 0}",
    "Reference": "Decreases the reference count by {@code decrement} and deallocates this response if the count reaches {@code 0}.",
    "HebCup": "Decreases the reference count by {@code decrement} and de-allocates this object if the reference count reaches {@code 0}"
}
{
    "Origin": "IMPORTANT:If the type already exists, then a TypeAlreadyExists\nfault is returned.",
    "Reference": "If the type already exists, then a\n fault is returned.",
    "HebCup": "IMPORTANT:If the type already exists, then a TypeAlreadyExists\nfault is returned."
}
{
    "Origin": "Obtains an instance from the curve currency, date, bond group and value.",
    "Reference": "Obtains an instance from the curve currency, date, group and value.",
    "HebCup": "Obtains an instance from the curve currency, date, Repo Group and value."
}
{
    "Origin": "Example:",
    "Reference": "Example: f4e0e692208520203de05557244e573e981f6c72",
    "HebCup": "Example:"
}
{
    "Origin": "Get the conflict resolution policy for the graph.",
    "Reference": "Get the resource value.",
    "HebCup": "Get the Gremlin Graph Get Properties Resource for the graph."
}
{
    "Origin": "Returns a lightweight, low-level preceding axis iterator.",
    "Reference": "Returns a light-weight, low-level preceding axis iterator.",
    "HebCup": "Returns a lightweight , low-level precedingIter axis iterator."
}
{
    "Origin": "Add listeners to the checkbox/list set.",
    "Reference": "Add listeners to the checkbox/list set if listeners have not already been\nadded.",
    "HebCup": "Add listeners to the checkbox/list set."
}
{
    "Origin": "Calculates stats based on the calculated course grade values",
    "Reference": "Calculates stats based on the calculated course grade values, excluding any empty grades",
    "HebCup": "Calculates stats based on the calculated course grade values"
}
{
    "Origin": "To add/remove/change points, you must call setPoints again.",
    "Reference": "To remove/change points, you must call setPoints again.",
    "HebCup": "To add/remove/change points, you must call setPoints again."
}
{
    "Origin": "Error units is pixels squared.",
    "Reference": "Error units are pixels squared.",
    "HebCup": "Error units is pixels squared."
}
{
    "Origin": "Configure HK2 binders in the HK2 service locator and enable JAX-RS features.",
    "Reference": "Configure binders in the instance manager and enable JAX-RS features.",
    "HebCup": "Configure HK2 binders in the HK2 Instance Manager and enable JAX-RS features."
}
{
    "Origin": "Convert wiki name in database/schema name.",
    "Reference": "Convert wiki name in database name.",
    "HebCup": "Convert wiki name in database/Database name."
}
{
    "Origin": "The scheduler that decides how this task runs.",
    "Reference": "The executor that decides how this task runs.",
    "HebCup": "The Executor that decides how this task runs."
}
{
    "Origin": "The offset is not part of the calculation and will be unchanged in the result.",
    "Reference": "In this case, the offset is not part of the calculation and will be unchanged.",
    "HebCup": "The offset is not part of the calculation and will be unchanged in the result."
}
{
    "Origin": "This method returns a URL for a cover query for the Spotify API.",
    "Reference": "This method returns a URL for a cover query for the",
    "HebCup": "This method returns a q for a cover query for the Spotify API."
}
{
    "Origin": "Sets the secure value of a cookie.",
    "Reference": "Sets the secure status of the cookie.",
    "HebCup": "Sets the secure value of a cookie."
}
{
    "Origin": "checking if we can avoid Serialization - relevant to RDDs.",
    "Reference": "Check if we can avoid Serialization.",
    "HebCup": "checking if we can canAvoid Serialization - relevant to RDDs."
}
{
    "Origin": "Shiro's {@code BlowfishCipher} already has a configured symmetric key to use for\nencryption and decryption, but it is recommended to provide your own for added security.",
    "Reference": "This {@code RememberMeManager} implementation already has a configured symmetric key\nto use for encryption and decryption, but it is recommended to provide your own for added security.",
    "HebCup": "Shiro's {@code BlowfishCipherService} already has a configured symmetric key to use for encryption and decryption, but it is recommended to provide your own for added security."
}
{
    "Origin": "Whether the decoder supports the given {@code codec}.",
    "Reference": "Whether the decoder supports the codec of the given {@code format}.",
    "HebCup": "Whether the decoder supports the given {@code format.codecs}."
}
{
    "Origin": "Applies to all URLs requested by the\nclient.",
    "Reference": "Applies to all URLs requested by the\nbuilder.",
    "HebCup": "Applies to all URLs requested by the return."
}
{
    "Origin": "Please note that Netscape draft specification does not fully\nconform to the HTTP header format.",
    "Reference": "Please note that the Netscape draft specification does not fully conform to the HTTP\nheader format.",
    "HebCup": "Please note that Netscape draft specification does not fully conform to the HTTP ! format."
}
{
    "Origin": "String, BlobRange, ParallelTransferOptions, ReliableDownloadOptions, BlobRequestConditions, boolean)}",
    "Reference": "String, BlobRange, ParallelTransferOptions, DownloadRetryOptions, BlobRequestConditions, boolean)}",
    "HebCup": "String , BlobRange , ParallelTransferOptions , DownloadRetryOptions , BlobRequestConditions , boolean)}"
}
{
    "Origin": "Configure a {@link Command} for RSocket request type.",
    "Reference": "Configure a {@link Command} for the RSocket request type.",
    "HebCup": "Configure a {@link InteractionModel} for RSocket request type."
}
{
    "Origin": "This method receives the {@link android.support.v4.app.TaskStackBuilder} with the constructed series of",
    "Reference": "This method receives the {@link androidx.core.app.TaskStackBuilder} with the constructed series of",
    "HebCup": "This method receives the {@link android.support.v4.app.TaskStackBuilder} with the constructed series of"
}
{
    "Origin": "{@link Query#rx()}.",
    "Reference": "{@link Query#__InternalRx()}.",
    "HebCup": "{@link Query#__InternalRx ()}."
}
{
    "Origin": "Sets the {@code eventListeners} this {@link EventHandlerInvoker} will forward all its events to.",
    "Reference": "Sets the {@code eventHandlers} this {@link EventHandlerInvoker} will forward all its events to.",
    "HebCup": "Sets the {@code eventHandlers} this {@link EventHandlerInvoker} will forward all its events to."
}
{
    "Origin": "The object is unlocked on commit or\nrollback.",
    "Reference": "Table is unlocked on commit or rollback.",
    "HebCup": "The object is unlocked on commit or\nrollback."
}
{
    "Origin": "ID of the room in which the individual rooms for users will be created.",
    "Reference": "DEPRECATED, will be ignored ID of the room in which the individual rooms for users will be created.",
    "HebCup": "ID of the room in which the individual rooms for users will be created."
}
{
    "Origin": "Construct the CordovaWebView object.",
    "Reference": "Construct the default web view object.",
    "HebCup": "Construct the CordovaWebView object."
}
{
    "Origin": "Group: producer",
    "Reference": "Group: consumer",
    "HebCup": "Group: producer"
}
{
    "Origin": "Decodes the given object using the configured {@link #serializer()}.",
    "Reference": "Decodes the given object using the configured {@link #userSerializer}.",
    "HebCup": "Decodes the given object using the configured {@link#userSerializer ()}."
}
{
    "Origin": "Helper Method : Concept by range from-to in periods from a different payroll (Old Compatibility)",
    "Reference": "Helper Method : Concept by range from-to in periods from a different payroll\n periods with values 0 -1 1, etc.",
    "HebCup": "Helper Method : Concept by range from-to in periods from a different payroll (Old Compatibility)"
}
{
    "Origin": "See Immutable List Static Factory Methods for details.",
    "Reference": "See Unmodifiable Lists for details.",
    "HebCup": "See Unmodifiable List Static Factory Methods for details."
}
{
    "Origin": "If the block is a procedure block, this getProcedureArguments{@code getProcedureArguments}\nreturns the argument list.",
    "Reference": "If the block is a procedure block, this {@code getProcedureArguments} returns the argument\nlist.",
    "HebCup": "If the block is a procedure block, this getProcedureArguments{@code getProcedureArguments}\nreturns the argument list."
}
{
    "Origin": "If more than one stream has a message it decides which\nmessage to return using the {@link #comparator}.",
    "Reference": "If more than one stream has a message it decides which\nmessage to return using the {@link #trackedEventComparator}.",
    "HebCup": "If more than one stream has a message it decides which message to return using the {@link#trackedEventComparator}."
}
{
    "Origin": "Loads configuration from meta master.",
    "Reference": "Loads configuration from meta master in one RPC.",
    "HebCup": "Loads configuration from meta master."
}
{
    "Origin": "Queries this search source for the given queryString.",
    "Reference": "Creates query for the given queryString.",
    "HebCup": "Queries this search source for the given createString."
}
{
    "Origin": "Returns a string representation of this object; useful for testing and debugging.",
    "Reference": "Returns a string representation of this object.",
    "HebCup": "Returns a string representation of this object; useful for testing and debugging."
}
{
    "Origin": "Gets the warningId.",
    "Reference": "Gets the message.",
    "HebCup": "Gets the message."
}
{
    "Origin": "But that is okay\nbecause {@link #constructState(Map)} will give priority to collections in the\nshared collection state over this map.",
    "Reference": "But that is okay\nbecause {@link #constructState(Set)} will give priority to collections in the\nshared collection state over this map.",
    "HebCup": "But that is okay\nbecause {@link #constructState(Map)} will give priority to collections in the\nshared collection state over this map."
}
{
    "Origin": "Respond with provided message in reply to each intercepted outbound message.",
    "Reference": "Respond with provided message in response to each intercepted outbound message.",
    "HebCup": "Respond with provided Message reply to each intercepted outbound message."
}
{
    "Origin": "Returns the int label of this dimension, or -1 if no label is specified for it",
    "Reference": "Returns the numeric label of this dimension, or -1 if no label is specified for it",
    "HebCup": "Returns the int label of this dimension, or -1 if no label is specified for it"
}
{
    "Origin": "The meta-property for the {@code index} property.",
    "Reference": "The meta-property for the {@code volatilitiesName} property.",
    "HebCup": "The meta-property for the {@code CapletFloorletVolatilitiesName} property."
}
{
    "Origin": "Blocks until stopped in a timely fashion (see {@link org.sonar.process.StopperThread})",
    "Reference": "Blocks until stopped in a timely fashion (see {@link HardStopperThread})",
    "HebCup": "Blocks until stopped in a timely fashion (see {@link org.sonar.process.hardStopperThread})"
}
{
    "Origin": "Sets the selector.",
    "Reference": "Set the selector.",
    "HebCup": "Sets the selector."
}
{
    "Origin": "Encode hi and lo int values into a long",
    "Reference": "Encodes hi and lo values into a long.",
    "HebCup": "Encode hi and lo int values into a return"
}
{
    "Origin": "Provide a {@link Mutate} {@link PTransform} to delete data to a Cassandra database.",
    "Reference": "Provide a {@link Write} {@link PTransform} to delete data to a Cassandra database.",
    "HebCup": "Provide a {@link Write} {@link PTransform} to delete data to a Cassandra database."
}
{
    "Origin": "Parses a length with an allowed metric unit (px, in, cm, mm, pc, em or ex) or numeric value (e.g.",
    "Reference": "Parses a length with an allowed metric unit (px, pt, in, cm, mm, pc, em or ex) or numeric value (e.g.",
    "HebCup": "Parses a length with an allowed metric unit (px, in, cm, mm, pc, em or ex) or numeric value (e.g."
}
{
    "Origin": "Check if the event is one that kicks off the flow",
    "Reference": "Determine if this event is one that starts a feed flow",
    "HebCup": "Check if the event is one that kicks off the flow"
}
{
    "Origin": "Create a new {@link MergedAnnotation} instance from the specified\nannotation type and attributes map.",
    "Reference": "Create a new {@link MergedAnnotation} instance of the specified\nannotation type with attributes values supplied by a map.",
    "HebCup": "Create a new {@link MergedAnnotation} instance of the specified annotation type and attributes map."
}
{
    "Origin": "Checks for internet connection and then initializes the recycler view with 25 categories of the searched query",
    "Reference": "Checks for internet connection and then initializes the recycler view with all(max 500) categories of the searched query",
    "HebCup": "Checks for internet connection and then initializes the recycler view with 25 categories of the searched query"
}
{
    "Origin": "Checks if the specified expression is a valid database name.",
    "Reference": "Checks if the specified expression contains valid database patterns.",
    "HebCup": "Checks if the specified expression is a valid database pattern."
}
{
    "Origin": "Find DSpace's \"home\" directory.",
    "Reference": "Find DSpace's \"home\" directory (from current environment)",
    "HebCup": "Find DSpace's ``Utils`` directory."
}
{
    "Origin": "Returns the color that has been set as {@code colorPrimary} on the current Theme of this",
    "Reference": "Returns the color id that has been set as {@code colorPrimary} on the current Theme of this",
    "HebCup": "Returns the color that has been set as {@code colorPrimary} on the current Theme of this"
}
{
    "Origin": "Generates a random transaction.",
    "Reference": "Generates a transaction.",
    "HebCup": "Generates a Transaction."
}
{
    "Origin": "***** Property SXEXTENSIONS *****",
    "Reference": "***** Property EXTENSIONSFOLDER *****",
    "HebCup": "***** Property SXEXTENSIONSFOLDER *****"
}
{
    "Origin": "Checks whether the extension of the filename is that specified.",
    "Reference": "Checks whether the extension of the fileName is that specified.",
    "HebCup": "Checks whether the extension of the fileName is that specified."
}
{
    "Origin": "Computes the median for each pixel across all bands in the {@link Planar} image.",
    "Reference": "Computes the median for each pixel across selected bands in the {@link Planar} image.",
    "HebCup": "Computes the median for each pixel across all bands in the {@link Planar} image."
}
{
    "Origin": "Adds the given context to the registry.",
    "Reference": "Adds the executor graph to the registry.",
    "HebCup": "Adds the given graph to the registry."
}
{
    "Origin": "The calibration is defined using {@link CurveGroupDefinition}.",
    "Reference": "The calibration is defined using {@link RatesCurveGroupDefinition}.",
    "HebCup": "The calibration is defined using {@link RatesCurveGroupDefinition}."
}
{
    "Origin": "Does not close the channel when the flux is terminated, but\ndoes {@linkplain #release(DataBuffer) release} the data buffers in the\nsource.",
    "Reference": "Does not close the channel when the flux is terminated, and does\nnot {@linkplain #release(DataBuffer) release} the data buffers in the\nsource.",
    "HebCup": "Does not close the channel when the flux is terminated, but\ndoes {@linkplain #release(DataBuffer) release} the data buffers in the\nsource."
}
{
    "Origin": "Test of var method, of class LogisticDistribution.",
    "Reference": "Test of variance method, of class LogisticDistribution.",
    "HebCup": "Test of Variance method , of class LogisticDistribution."
}
{
    "Origin": "The {@link KeyCreateOptions#isEnabled() enabled}\nfield is set to true by Azure Key Vault, if not specified.",
    "Reference": "The {@link CreateKeyOptions#isEnabled() enabled}\nfield is set to true by Azure Key Vault, if not specified.",
    "HebCup": "The {@link CreateKeyOptions#isEnabled () enabled} field is set to true by Azure Key Vault , if not specified."
}
{
    "Origin": "Attempt to parse a {@link Repo} from the given {@link Uri}",
    "Reference": "Attempt to parse a {@link Repository} from the given {@link Uri}",
    "HebCup": "Attempt to parse a {@link Repository} from the given {@link Uri}"
}
{
    "Origin": "Creates a {@code TypescriptFormatExtension} using the specified npm package versions.",
    "Reference": "Creates a {@code TypescriptFormatExtension} using exactly the specified npm packages.",
    "HebCup": "Creates a {@code TypescriptFormatExtension} using the specified npm package devDependencies."
}
{
    "Origin": "A {@code DateTimeAccessor} represents some form of date and time information.",
    "Reference": "A {@code TemporalAccessor} represents some form of date and time information.",
    "HebCup": "A {@code DateTimeAccessor} represents some form of date and time information."
}
{
    "Origin": "Creates new {@link AggregationExpression} that returns the week number in ISO 8601-2018 format, ranging from 1 to\n53 in the factory timezone (default UTC).",
    "Reference": "Creates new {@link AggregationExpression} that returns the week number in ISO 8601-2018 format, ranging from 1 to\n53.",
    "HebCup": "Creates new {@link AggregationExpression} that returns the week number in IsoWeek.iso 8601-2018 format , ranging from 1 to 53 in the factory timezone (default UTC)."
}
{
    "Origin": "Returns an immutable map containing four mappings.",
    "Reference": "Returns an unmodifiable map containing four mappings.",
    "HebCup": "Returns an Unmodifiable map containing four mappings."
}
{
    "Origin": "Returns the j i r a project with the primary key or throws a {@link com.liferay.socialcoding.NoSuchJIRAProjectException} if it could not be found.",
    "Reference": "Returns the j i r a project with the primary key or throws a {@link NoSuchJIRAProjectException} if it could not be found.",
    "HebCup": "Returns the j i r a project with the primary key or throws a {@link com.liferay.socialcoding.NoSuchJIRAProjectException} if it could not be found."
}
{
    "Origin": "Gets the value of the spid property.",
    "Reference": "Gets the value of the pic property.",
    "HebCup": "Gets the value of the Pic property."
}
{
    "Origin": "Extracts the expressions from a selection query, expands {@code 'SELECT *'} to all physical columns if applies.",
    "Reference": "Extracts the expressions from a selection order-by query, expands {@code 'SELECT *'} to all physical columns if\napplies.",
    "HebCup": "Extracts the expressions from a order By query, expands {@code 'SELECT *'} to all physical columns if applies."
}
{
    "Origin": "Scheduler:\n{@code onErrorResumeNext} does not operate by default on a particular {@link Scheduler}.",
    "Reference": "Scheduler:\n{@code onErrorResumeWith} does not operate by default on a particular {@link Scheduler}.",
    "HebCup": "Scheduler: {@code onErrorResumeWith} does not operate by default on a particular {@link Scheduler}."
}
{
    "Origin": "Write a line of the CoNLL output.",
    "Reference": "Produce a line of the CoNLL output.",
    "HebCup": "Write a line of the CoNLL output."
}
{
    "Origin": "Read an optional Long value form a JSON value.",
    "Reference": "Read an optional Date value form a JSON value.",
    "HebCup": "Read an Optional Date value form a JSON value."
}
{
    "Origin": "Throw a multiexception.",
    "Reference": "Throw a MultiException.",
    "HebCup": "Throw a multiexception."
}
{
    "Origin": "Checks if the current user has write permissions on the given resource.",
    "Reference": "Checks if the current user has view permissions on the given resource.",
    "HebCup": "Checks if the current user has VIEW permissions on the given resource."
}
{
    "Origin": "NOTE: You don't need to know the size of the archive when you\nstart a multipart upload because Amazon Glacier does not require you\nto specify the overall archive size.",
    "Reference": "You don't need to know the size of the archive when you start a multipart\nupload because Amazon Glacier does not require you to specify the overall\narchive size.",
    "HebCup": "NOTE: You don't need to know the size of the archive when you\nstart a multipart upload because Amazon Glacier does not require you\nto specify the overall archive size."
}
{
    "Origin": "Reset this stub to its BINARY step.",
    "Reference": "Reset this stub to end of its BINARY step.",
    "HebCup": "Reset this stub to its BINARY step."
}
{
    "Origin": "If you specify both tag keys and tag values in the same request,",
    "Reference": "If you specify both tag keys and tag values in the same request, Amazon",
    "HebCup": "If you specify both tag keys and tag values in the same request,"
}
{
    "Origin": "Process the potential key signature of the underlying staff.",
    "Reference": "Process the potential key signature of the underlying staff in isolation.",
    "HebCup": "Process the potential key signature of the underlying staff."
}
{
    "Origin": "Set the time this object was last used to the\ncurrent time in ms.",
    "Reference": "Sets the time this object was last used to the current time in milliseconds.",
    "HebCup": "Set the time this object was last Used Millis to the current time in ms."
}
{
    "Origin": "Generates a code sample for using {@link FileClient#createWithResponse(long, FileHTTPHeaders, FileSmbProperties,",
    "Reference": "Generates a code sample for using {@link FileClient#createWithResponse(long, FileHttpHeaders, FileSmbProperties,",
    "HebCup": "Generates a code sample for using {@link FileClient#createWithResponse (long , FileHttpHeaders , FileSmbProperties ,"
}
{
    "Origin": "Obtains an instance of {@code WeekDefinition} from the first day-of-week and minimal days.",
    "Reference": "Obtains an instance of {@code WeekFields} from the first day-of-week and minimal days.",
    "HebCup": "Obtains an instance of {@code WeekDefinition} from the first day-of-week and minimal days."
}
{
    "Origin": "Tests for the {@link BaseFileSystem#unmount(AlluxioURI, UnmountOptions)} method.",
    "Reference": "Tests for the {@link BaseFileSystem#unmount(AlluxioURI, UnmountPOptions)} method.",
    "HebCup": "Tests for the {@link BaseFileSystem#unmount (AlluxioURI , UnmountPOptions.getDefault)} method."
}
{
    "Origin": "This test will take a little over a second per reservoir",
    "Reference": "This test will take a little over a second",
    "HebCup": "This test will take a little over a second per rate"
}
{
    "Origin": "get LoadBalancer.Factory for etcd client.",
    "Reference": "get the load balancer policy for etcd client.",
    "HebCup": "get String for etcd client."
}
{
    "Origin": "Builds a {@code TransitiveOptionDetails} for the given set of options.",
    "Reference": "Builds a {@code TransitiveOptionDetails} for the given set of native and Starlark options.",
    "HebCup": "Builds a {@code TransitiveOptionDetails} for the given set of options."
}
{
    "Origin": "Returns true if field isAcid is set (has been assigned a value) and false otherwise",
    "Reference": "Returns true if field isTransactional is set (has been assigned a value) and false otherwise",
    "HebCup": "Returns true if field IsTransactional is set (has been assigned a value) and false otherwise"
}
{
    "Origin": "Find out possible longest length...",
    "Reference": "Find out possible longest length, capped by available memory.",
    "HebCup": "Find out possible longest length..."
}
{
    "Origin": "WorkflowExecutionCancelRequested event is recorded in the history of\nthe current open workflow execution with the specified workflowId in\nthe domain.",
    "Reference": "If the runId is not specified, the\n event is recorded in the\nhistory of the current open workflow execution with the specified\nworkflowId in the domain.",
    "HebCup": "WorkflowExecutionCancelRequested event is recorded in the history of\nthe current open workflow execution with the specified workflowId in\nthe domain."
}
{
    "Origin": "The file should\ncontain an X.509 certificate chain in PEM format.",
    "Reference": "The file should\ncontain an X.509 certificate collection in PEM format.",
    "HebCup": "The file should contain an X.509 certificate Collection in PEM format."
}
{
    "Origin": "Test {@link SubunitCluster#divideInternally(double, double, int)}",
    "Reference": "Test {@link SubunitCluster#divideInternally(SubunitClustererParameters)}",
    "HebCup": "Test {@link SubunitCluster#divideInternally(double, double, int)}"
}
{
    "Origin": "Output a description of the current annotation configuration to\nstandard error.",
    "Reference": "Output a description of the current annotation configuration.",
    "HebCup": "Output a description of the current annotation configuration to\nstandard error."
}
{
    "Origin": "Adds an existing job to the pending jobs queue.",
    "Reference": "Adds an auto ingest job to the pending jobs queue.",
    "HebCup": "Adds an existing job to the pending jobs queue."
}
{
    "Origin": "Send action request and check execution result with assert function and specific grid instances count.",
    "Reference": "Send action request and check execution result with assert function.",
    "HebCup": "Send action request and check execution result with execute function and specific grid instances count."
}
{
    "Origin": "Returns the value of the {@code bitfield} field.",
    "Reference": "Returns the value of the {@code baselineUsesContext} field.",
    "HebCup": "Returns the value of the {@code baselineUsesContext} field."
}
{
    "Origin": "Returns the value of the given manifest attribute with consideration to the capsule's mode.",
    "Reference": "Returns the value of the given capsule manifest attribute with consideration to the capsule's mode.",
    "HebCup": "Returns the value of the given manifest ManifestAttribute with consideration to the capsule's mode."
}
{
    "Origin": "Gets the parent object in the object tree representing the unmarshalled xml document.",
    "Reference": "Gets the value of the ignorable property.",
    "HebCup": "Gets the parent String in the String tree representing the unmarshalled xml document."
}
{
    "Origin": "Appends the name of the given label to {@link #buf buf}.",
    "Reference": "Appends the name of the given label to {@link #stringBuilder}.",
    "HebCup": "Appends the name of the given label to {@link#stringBuilder stringBuilder}."
}
{
    "Origin": "Gets a {@link Set} of directories containing the symbol files corresponding to the architecture of the session currently selected.",
    "Reference": "Gets a {@link List} of directories containing the symbol files corresponding to the architecture of the session currently selected.",
    "HebCup": "Gets a {@link List} of directories containing the symbol files corresponding to the architecture of the session currently selected."
}
{
    "Origin": "Test for {@link Array#cons(Value)} and {@link Array#snoc(Value)}.",
    "Reference": "Test for {@link XQArray#cons(Value)} and {@link XQArray#snoc(Value)}.",
    "HebCup": "Test for {@link XQArray#cons (Value)} and {@link XQArray#snoc (Value)}."
}
{
    "Origin": "Setter of publicationDateMax.",
    "Reference": "Setter of publicationDateMin.",
    "HebCup": "Setter of publicationDateMin."
}
{
    "Origin": "Obtains an instance from the specified unique name.",
    "Reference": "Obtains an instance from the specified name.",
    "HebCup": "Obtains an instance from the specified name."
}
{
    "Origin": "Gets the value of the 'cf_name' field",
    "Reference": "Gets the value of the 'cfName' field.",
    "HebCup": "Gets the value of the 'cfName' field"
}
{
    "Origin": "Returns a new Task that, when this task completes\nnormally, executes the given action using the supplied Scheduler.",
    "Reference": "Returns a new Task that, when this task completes\nnormally, executes the given action using the supplied Executor.",
    "HebCup": "Returns a new Task that, when this task completes normally, executes the given action using the supplied Executor."
}
{
    "Origin": "Insert a clone of the given entry.",
    "Reference": "Insert a clone of each given entry.",
    "HebCup": "Insert a clone of the given Entries."
}
{
    "Origin": "Also figures out the name of android/android.bat\nso that it can be called explicitly.",
    "Reference": "Also figures out the name of android/android.bat/android.exe\nso that it can be called explicitly.",
    "HebCup": "Also figures out the name of android/android.bat\nso that it can be called explicitly."
}
{
    "Origin": "{@codesnippet com.azure.data.applicationconfig.configurationclient.setReadOnlyWithResponse#ConfigurationSetting-Context}",
    "Reference": "{@codesnippet com.azure.data.applicationconfig.configurationclient.setReadOnlyWithResponse#ConfigurationSetting-boolean-Context}",
    "HebCup": "{@codesnippet com.azure.data.applicationconfig.configurationclient.setReadOnlyWithResponse#ConfigurationSetting-Context}"
}
{
    "Origin": "Note that the order of extracted values is consistent with the iteration order of the array under test.",
    "Reference": "Note that the order of extracted values is consistent with the order of given extractor functions.",
    "HebCup": "Note that the order of extracted values is consistent with the iteration order of the array under test."
}
{
    "Origin": "Convert to primitive types, returning default value if text is null.",
    "Reference": "Convert to duration, returning default value if text is inconvertible.",
    "HebCup": "Convert to primitive types, returning default value if text is null."
}
{
    "Origin": "This method finds index of selected world from array list.",
    "Reference": "Looks for the index of a selected world from the given list.",
    "HebCup": "This method finds index of selected world from array list."
}
{
    "Origin": "Get Bewegungsdatum.",
    "Reference": "Get Inventurdatum.",
    "HebCup": "Get Bewegungsdatum."
}
{
    "Origin": "Retrieve all ports attached to a server.",
    "Reference": "Retrieve all ports attached to a device.",
    "HebCup": "Retrieve all ports attached to a Device."
}
{
    "Origin": "Waits during {@code timeout} until attribute with specified {@code attributeName} has {@code\nexpectedValue}.",
    "Reference": "Waits during {@code timeout} until attribute with specified {@code attributeName} has {@code\nexpected} value.",
    "HebCup": "Waits during {@code timeout} until attribute with specified {@code attributeName} has {@code\nexpectedValue}."
}
{
    "Origin": "Configure the the maximum size of a file part.",
    "Reference": "Configure the maximum amount of disk space allowed for file parts.",
    "HebCup": "Configure the the maximum size of a Disk Usage Per Part."
}
{
    "Origin": "Test of var method, of class ChiSquareDistribution.",
    "Reference": "Test of variance method, of class ChiSquareDistribution.",
    "HebCup": "Test of Variance method , of class ChiSquareDistribution."
}
{
    "Origin": "Aggregates the service, app, and plan policies into a single ordered list.",
    "Reference": "Aggregates the api, app, and plan policies into a single ordered list.",
    "HebCup": "Aggregates the Api , app , and plan policies into a single ordered list."
}
{
    "Origin": "Get Discount Amount.",
    "Reference": "Get Skonto.",
    "HebCup": "Get Discount Amount."
}
{
    "Origin": "outputs the simple name of the type",
    "Reference": "Outputs the simple name of the type.",
    "HebCup": "outputs the simple name of the type"
}
{
    "Origin": "Get system defaults\n### Functional Description:   DRACOON system defaults configuration entry point.",
    "Reference": "Get system defaults\n### \ud83d\ude80 Since version VERSION  ### Functional Description:   DRACOON system defaults configuration entry point.",
    "HebCup": "Get system defaults\n### Functional Description:   DRACOON system defaults configuration entry point."
}
{
    "Origin": "Get the set of default providers registered for the given service provider contract\nin the underlying {@link ServiceLocator HK2 service locator} container.",
    "Reference": "Get the set of default providers registered for the given service provider contract\nin the underlying {@link InstanceManager instance manager} container.",
    "HebCup": "Get the set of default providers registered for the given service provider contract in the underlying {@link InstanceManager HK2 service locator} container."
}
{
    "Origin": "Tests that after initialization, reinitialize with a different URI should fail.",
    "Reference": "Tests that after initialization, reinitialize with a different URI.",
    "HebCup": "Tests that after initialization, reinitialize with a different URI should fail."
}
{
    "Origin": "SourceIdentifier, you will be notified of events generated from all\nRDS sources belonging to your customer account.",
    "Reference": "If you do\nnot specify either the SourceType nor the SourceIdentifier, you will be\nnotified of events generated from all RDS sources belonging to your\ncustomer account.",
    "HebCup": "SourceIdentifier, you will be notified of events generated from all\nRDS sources belonging to your customer account."
}
{
    "Origin": "Special case where we want to do the issue tracking with the merge branch, and copy matched issue to the current branch.",
    "Reference": "Special case where we want to do the issue tracking with the reference branch, and copy matched issue to the current branch.",
    "HebCup": "Special case where we want to do the issue tracking with the merge return , and copy matched issue to the current branch."
}
{
    "Origin": "Returns an immutable set containing four elements.",
    "Reference": "Returns an unmodifiable set containing four elements.",
    "HebCup": "Returns an Unmodifiable set containing four elements."
}
{
    "Origin": "Return \"t.foo\" from \"region__t__foo\"",
    "Reference": "Return \"t.foo\" from \"/region__/t__foo\"",
    "HebCup": "Return ``t.foo`` from ``/region__t__foo``"
}
{
    "Origin": "Creates a new instance of {@link Address} from thrift representation.",
    "Reference": "Creates a new instance of {@link Address} from proto representation.",
    "HebCup": "Creates a new instance of {@link Address} from Proto representation."
}
{
    "Origin": "Updates the various repositories and configurations for services\nparticipating in the upgrade or downgrade.",
    "Reference": "Updates the various mpack associations and configurations for services\nparticipating in the upgrade or downgrade.",
    "HebCup": "Updates the various Mpacks And configurations for services participating in the upgrade or downgrade."
}
{
    "Origin": "Access Control Using AWS Identity and Access Management (IAM) \n.",
    "Reference": "For more information, see Access Control Using AWS Identity and Access Management (IAM).",
    "HebCup": "Access Control Using AWS Identity and Access Management (IAM) \n."
}
{
    "Origin": "Checks to see if the current sequence number should be send to the\nchannel, or whether the channel must wait for a new sequence number to\narrive.",
    "Reference": "Checks to see if the current sequence should be send to the channel, or\nwhether the channel must wait for a new sequence number to arrive.",
    "HebCup": "Checks to see if the current Sequence should be send to the channel, or whether the channel must wait for a Sequence number to arrive."
}
{
    "Origin": "Detects if the requested time falls into a non-existent time range due to\nlocal time advancing into daylight savings time.",
    "Reference": "Detects if the requested time falls into a non-existent time range due to local time advancing\ninto daylight savings time or is ambiguous due to going out of daylight savings.",
    "HebCup": "Detects if the requested jsdate falls into a non-existent jsdate range due to local jsdate advancing into daylight savings time."
}
{
    "Origin": "Returns all the sync d l objects where companyId = ?",
    "Reference": "Returns all the sync d l objects where modifiedTime > ?",
    "HebCup": "Returns all the sync d l objects where companyId = ?"
}
{
    "Origin": "If --controller parameter has been specified, --all parameter will not be visible\nto prevent conflicts.",
    "Reference": "If --entity parameter has been specified, --all parameter will not be visible\nto prevent conflicts.",
    "HebCup": "If --entity parameter has been specified , --all parameter will not be visible to prevent conflicts."
}
{
    "Origin": "{@codesnippet com.azure.storage.file.share.ShareDirectoryAsyncClient.deleteSubDirectoryWithResponse#string}",
    "Reference": "{@codesnippet com.azure.storage.file.share.ShareDirectoryAsyncClient.deleteSubdirectoryWithResponse#string}",
    "HebCup": "{@codesnippet com.azure.storage.file.share.ShareDirectoryAsyncClient.deleteSubdirectoryWithResponse#string}"
}
{
    "Origin": "Writes this to {@code directory} the standard directory structure.",
    "Reference": "Writes this to {@code directory} as UTF-8 using the standard directory structure.",
    "HebCup": "Writes this to {@code directory} the standard directory structure."
}
{
    "Origin": "Returns the identifying name for the audio properties.",
    "Reference": "Returns a string containing all identifying audio properties.",
    "HebCup": "Returns the identifying name for the audio properties."
}
{
    "Origin": "Add the opcodes for numeric operations to a context.",
    "Reference": "Add the opcodes for numeric operations to a context, do not use protected\ndivision.",
    "HebCup": "Add the opcodes for numeric operations to a context."
}
{
    "Origin": "Obtains an instance from the specified unique name.",
    "Reference": "Obtains an instance from the specified name.",
    "HebCup": "Obtains an instance from the specified name."
}
{
    "Origin": "Returns the {@link View.OnClickListener} of the {@code CarMenuItem}.",
    "Reference": "Returns the {@link OnClickListener} of the {@code CarMenuItem}.",
    "HebCup": "Returns the {@link OnClickListener} of the {@code CarMenuItem}."
}
{
    "Origin": "The {@link KeyCreateOptions} is required.",
    "Reference": "The {@link CreateKeyOptions} is required.",
    "HebCup": "The {@link CreateKeyOptions} is required."
}
{
    "Origin": "Returns the base URI of the resource function.",
    "Reference": "Returns the base URI of the request.",
    "HebCup": "Returns the base String of the resource function."
}
{
    "Origin": "{@codesnippet com.azure.security.keyvault.certificates.CertificateClient.getCertificateWithResponse#String}",
    "Reference": "{@codesnippet com.azure.security.keyvault.certificates.CertificateClient.getCertificateWithResponse#String-Context}",
    "HebCup": "{@codesnippet com.azure.security.keyvault.certificates.CertificateClient.getCertificateWithResponse#String}"
}
{
    "Origin": "Creates an introspected table implementation that is only usable for validation (i.e.",
    "Reference": "Creates an introspected table implementation that is only usable for validation .",
    "HebCup": "Creates an introspected table implementation that is only usable for validation (i.e."
}
{
    "Origin": "List recording descriptors from a recording id with a limit of record count for a given channel and stream id.",
    "Reference": "List recording descriptors from a recording id with a limit of record count for a given channelFragment and\nstream id.",
    "HebCup": "List recording descriptors from a recording id with a limit of record count for a given channelFragment and stream id."
}
{
    "Origin": "Create an instance of {@link JAXBElement }{@code <}{@link CTMarkupRange }{@code >}}",
    "Reference": "Create an instance of {@link JAXBElement }{@code <}{@link CTMoveToRangeEnd }{@code >}}",
    "HebCup": "Create an instance of {@link JAXBElement} {@code <} {@link CTMoveToRangeEnd} {@code >}}"
}
{
    "Origin": "Adds many members to this action profile group.",
    "Reference": "Adds all members to this action profile group with default weight.",
    "HebCup": "Adds many memberInstances to this action profile group."
}
{
    "Origin": "The current thread might\nbe already in any request scope and in that case the scope will be changed to the\nscope defined by the {@link RequestScope.Instance scope instance}.",
    "Reference": "The current thread might\nbe already in any request scope and in that case the scope will be changed to the\nscope defined by the {@link RequestContext scope context}.",
    "HebCup": "The current thread might be already in any request scope and in that case the scope will be changed to the scope defined by the {@link RequestScope.Instance scope RequestContext}."
}
{
    "Origin": "Returns a string representation of this object; useful for testing and debugging.",
    "Reference": "Returns a string representation of this object.",
    "HebCup": "Returns a string representation of this object; useful for testing and debugging."
}
{
    "Origin": "construct an object from a byte stream\n(similar semantically to previous method, we are deciding\n which one to support)",
    "Reference": "Construct an object from a byte stream\n(similar semantically to previous method, we are deciding\n which one to support)",
    "HebCup": "construct an object from a byte stream\n(similar semantically to previous method, we are deciding\n which one to support)"
}
{
    "Origin": "Gets the edit group configuration resource type.",
    "Reference": "Gets the element view configuration resource type.",
    "HebCup": "Gets the Element View configuration resource type."
}
{
    "Origin": "Returns a range of all the push notifications devices where platform = ?.",
    "Reference": "Returns a range of all the push notifications devices where userId = any ?",
    "HebCup": "Returns a range of all the push notifications devices where U_P = ?."
}
{
    "Origin": "Returns the string up to but not including any delimiter characters.",
    "Reference": "Reads the value up to but not including any delimiter characters.",
    "HebCup": "Returns the) up to but not including any delimiter characters."
}
{
    "Origin": "Sets the record's sequence number.",
    "Reference": "Update the record's sequence number.",
    "HebCup": "update the record's sequence number."
}
{
    "Origin": "HmRqBody can describe in readable way.",
    "Reference": "HmBody can describe in readable way.",
    "HebCup": "HmBody can describe in readable way."
}
{
    "Origin": "Gets the default SSLHostConfig name.",
    "Reference": "Gets the default SslHostConfig name.",
    "HebCup": "Gets the default SslHostConfig name."
}
{
    "Origin": "Retrieve a user userprofile.",
    "Reference": "Retrieve a user profile.",
    "HebCup": "Retrieve a user userprofile."
}
{
    "Origin": "Gets the Certificate Information of the last Signature.",
    "Reference": "Gets the certificate information of a signature.",
    "HebCup": "Gets the Certificate Information of the last Signature."
}
{
    "Origin": "Returns a string representation of this object; useful for testing and debugging.",
    "Reference": "Returns a string representation of this object.",
    "HebCup": "Returns a string representation of this object; useful for testing and debugging."
}
{
    "Origin": "***** Property SYSAPP *****",
    "Reference": "***** Property SYSAPPDATA *****",
    "HebCup": "***** Property SXSYSAPPDATA *****"
}
{
    "Origin": "Renders this vertex into the given {@link VertexBuffer}, assuming that the {@link VertexFormat} is\n{@link DefaultVertexFormats#BLOCK}.",
    "Reference": "Renders this vertex into the given {@link BufferBuilder}, assuming that the {@link VertexFormat} is\n{@link DefaultVertexFormats#BLOCK}.",
    "HebCup": "Renders this vertex into the given {@link BufferBuilder} , assuming that the {@link VertexFormat} is {@link DefaultVertexFormats#BLOCK}."
}
{
    "Origin": "Get the joint-normalized mutual information (normalized, 0 = unequal)",
    "Reference": "Get the joint-normalized mutual information.",
    "HebCup": "Get the joint-normalized mutual information (normalized , 0 = unequal ?"
}
{
    "Origin": "Services incoming range write calls.",
    "Reference": "Services incoming multi write calls.",
    "HebCup": "Services incoming multi Write calls."
}
{
    "Origin": "This year will be passed to the formatter\n{@link DateTimeFormatter#print(TemporalAccessor) print method}.",
    "Reference": "This year will be passed to the formatter\n{@link DateTimeFormatter#format(TemporalAccessor) print method}.",
    "HebCup": "This year will be passed to the formatter {@link DateTimeFormatter#format (TemporalAccessor) format method}."
}
{
    "Origin": "If all field level validators pass, and {@link #bind(Object)} has been\nused to bind to an item, item level validators are run for that bean.",
    "Reference": "If all field level validators pass, and {@link #bind(Object)} has been\nused to bind to a bean, bean level validators are run for that bean.",
    "HebCup": "If all field level validators pass , and {@link#bind (Object)} has been used to bind to an Bean , Bean level validators are run for that bean."
}
{
    "Origin": "Sometimes we need to be able to avoid this happening if it will lead to\na circular reference.",
    "Reference": "Sometimes we need to be able to avoid this happening, e.g.",
    "HebCup": "Sometimes we need to be able to avoid this happening if it will lead to\na circular reference."
}
{
    "Origin": "Get Stop Function Snippet Block.",
    "Reference": "Get Graceful Stop Function Snippet Block.",
    "HebCup": "get Graceful Stop Function Snippet Block."
}
{
    "Origin": "Test of var method, of class Poisson.",
    "Reference": "Test of variance method, of class Poisson.",
    "HebCup": "Test of Variance method , of class Poisson."
}
{
    "Origin": "This method iteratively calls {@link\n#doFeatureIteration(TrainingEstimator, Collection, RealVector, RealVector, double)}  to train\nthe feature.",
    "Reference": "This method iteratively calls {@link\n#doFeatureIteration(TrainingEstimator, List, RealVector, RealVector, double)}  to train\nthe feature.",
    "HebCup": "This method iteratively calls {@link#doFeatureIteration (TrainingEstimator , List , RealVector , RealVector , double)} to train the feature."
}
{
    "Origin": "Get the score for all movesets, in either defence or attack score.",
    "Reference": "Get the score for all movesets, in either defence or attack score from an online database.",
    "HebCup": "Get the PokemonScore for all movesets , in either defence or attack score."
}
{
    "Origin": "The timestamp for the last update to the example.",
    "Reference": "The timestamp for the most recent update to the object.",
    "HebCup": "The timestamp for the last update to the example."
}
{
    "Origin": "Evaluates {@code lhs @ rhs}, where {@code @} is the operator, and returns the result.",
    "Reference": "Evaluates {@code x @ y}, where {@code @} is the operator, and returns the result.",
    "HebCup": "Evaluates {@code lhs @ rhs} , where {@code @} is the TokenKind , and returns the result."
}
{
    "Origin": "If just need to do additional\nthings before firing the drop event, then you should override\n{@link #onDrop(String, DropEffect)} instead.",
    "Reference": "If just need to do additional\nthings before firing the drop event, then you should override\n{@link #onDrop(List, Map, DropEffect)} instead.",
    "HebCup": "If just need to do additional\nthings before firing the drop event, then you should override\n{@link #onDrop(String, DropEffect)} instead."
}
{
    "Origin": "Gets the {@link Value.Mutable} for the {@link ParrotVariant} of this\n{@link Parrot}.",
    "Reference": "Gets the {@link Value.Mutable} for the {@link ParrotType} of this\n{@link Parrot}.",
    "HebCup": "Gets the {@link Value.Mutable} for the {@link ParrotType} of this {@link Parrot}."
}
{
    "Origin": "Extracts geometry information from the instance, if present.",
    "Reference": "Extracts geometry information from the given xpath path in the given instance.",
    "HebCup": "Extracts geometry information from the instance, if present."
}
{
    "Origin": "Adds one member to this action profile group.",
    "Reference": "Adds one member to this action profile group with default weight.",
    "HebCup": "Adds one memberInstance to this action profile group."
}
{
    "Origin": "This does NOT close or\nrelease datasets or graphs held by client code.",
    "Reference": "All release datasets or graphs held by client code are no longer valid.",
    "HebCup": "This does NOT close or\nrelease datasets or graphs held by client code."
}
{
    "Origin": "Indicates if the current variant is equal to the given variant.",
    "Reference": "Indicates if the current variant is equal to the given object.",
    "HebCup": "Indicates if the current variant is equal to the given variant."
}
{
    "Origin": "Gets the value of the category property.",
    "Reference": "Gets the value of the item property.",
    "HebCup": "Gets the value of the Item property."
}
{
    "Origin": "The maximum number of file\npath/content pairs that can be supplied is 5.",
    "Reference": "The maximum number of file path/content pairs that can be supplied\nis determined by provider quotas(default is 5).",
    "HebCup": "The maximum number of file\npath/content pairs that can be supplied is 5."
}
{
    "Origin": "The file should\ncontain an X.509 certificate chain in PEM format.",
    "Reference": "The file should\ncontain an X.509 certificate collection in PEM format.",
    "HebCup": "The file should contain an X.509 certificate Collection in PEM format."
}
{
    "Origin": "This method should be called\nbefore reusing same instructions list between several\ns.",
    "Reference": "This method should be called before reusing an\ninstruction list between several s.",
    "HebCup": "This method should be called\nbefore reusing same instructions list between several\ns."
}
{
    "Origin": "Gets the confidence.",
    "Reference": "New builder.",
    "HebCup": "Gets the Builder."
}
{
    "Origin": "See\n{@link GlobalCheckpointTracker#updateFromMaster(long, Set, Set, Set)} for details.",
    "Reference": "See\n{@link GlobalCheckpointTracker#updateFromMaster(long, Set, IndexShardRoutingTable, Set)} for details.",
    "HebCup": "See\n{@link GlobalCheckpointTracker#updateFromMaster(long, Set, Set, Set)} for details."
}
{
    "Origin": "Evaluate if a feature is toggled based on the information in store and\ncurrent execution context (key/value as threadLocal).",
    "Reference": "Evaluate if a feature is toggled based on the information in store and provided\nexecution context (key/value)",
    "HebCup": "Evaluate if a feature is toggled based on the information in store and\ncurrent execution context (key/value as threadLocal)."
}
{
    "Origin": "Get authentication settings\n### Functional Description:   Retrieve the settings of authentication configuration.",
    "Reference": "Get authentication settings\n## \u26a0 Deprecated since version VERSION  ### Functional Description:   Retrieve the settings of authentication configuration.",
    "HebCup": "Get authentication settings\n### Functional Description:   Retrieve the settings of authentication configuration."
}
{
    "Origin": "Gets the receiver (sequence) of a length access node, or null if lengthNode is not a length\naccess.",
    "Reference": "Gets the receiver sequence of a length access node, or null if {@code lengthNode} is not a\nlength access.",
    "HebCup": "Gets the receiver (sequence) of a length access node , or null if Length is not a length access."
}
{
    "Origin": "Obtains an instance of {@code LocalDate} from a date-time object.",
    "Reference": "Obtains an instance of {@code LocalDate} from a temporal object.",
    "HebCup": "Obtains an instance of {@code LocalDate} from a date-time object."
}
{
    "Origin": "Return all elements until specified time period has elapsed",
    "Reference": "Skip all elements until specified time period has passed",
    "HebCup": "Return all elements until specified time period has elapsed"
}
{
    "Origin": "Collect capabilities of an index.",
    "Reference": "Collect the field capabilities for an index.",
    "HebCup": "Collect capabilities of an index."
}
{
    "Origin": "Returns the paramConsolescript.",
    "Reference": "Returns the web server script parameter.",
    "HebCup": "Returns the ParamWebserverscript."
}
{
    "Origin": "If only public access and unconditional access are allowed, the suffix is \"/publicLookup\".",
    "Reference": "If only unconditional access is allowed, the suffix is \"/publicLookup\".",
    "HebCup": "If only public access and unconditional access are allowed, the suffix is \"/publicLookup\"."
}
{
    "Origin": "Returns the {@link ImageCapture.CaptureMode}.",
    "Reference": "Returns the {@link CaptureMode}.",
    "HebCup": "Returns the {@link CaptureMode}."
}
{
    "Origin": "Tests the getCompactLongLength() method.",
    "Reference": "Tests the getCompactIntLength() method.",
    "HebCup": "Tests the writeCompactLongLength() method."
}
{
    "Origin": "It will cause\nthe service to transition from {@link State#STOPPING} to {@link State#TERMINATED}.",
    "Reference": "It will cause\nthe service to transition from {@link State#STARTING} or {@link State#STOPPING} to {@link",
    "HebCup": "It will cause\nthe service to transition from {@link State#STOPPING} to {@link State#TERMINATED}."
}
{
    "Origin": "The option will be converted to a\n type.",
    "Reference": "The option will be converted to a",
    "HebCup": "The option will be converted to a\n type."
}
{
    "Origin": "The command is ignored if an update\noperation takes place.",
    "Reference": "Commands are ignored if an update operation takes place.",
    "HebCup": "The command is ignored if an update\noperation takes place."
}
{
    "Origin": "Tests assert that the setting can be deleted after unlock the setting.",
    "Reference": "Tests assert that the setting can be deleted after clear read-only of the setting.",
    "HebCup": "Tests assert that the SettingWithResponse can be deleted after unlock the setting."
}
{
    "Origin": "Index roll dates are 20th March and September.",
    "Reference": "The semiannual roll dates are 20th March and September.",
    "HebCup": "Semiannual Roll dates are 20th March and September."
}
{
    "Origin": "Perform the \"enhanced key schedule\" step described by Provos and Mazieres in\n\"A Future-Adaptable Password Scheme\" URL",
    "Reference": "Provos and Mazieres in \"A Future-Adaptable Password Scheme\"\nURL",
    "HebCup": "Perform the ``enhanced 1 schedule`` step described by Provos and Mazieres in ``A Future-Adaptable Password Scheme`` URL"
}
{
    "Origin": "Send request to gracefully stop to the process (via ipc shared memory)",
    "Reference": "Send request to quickly stop to the process (via ipc shared memory)",
    "HebCup": "Send request to gracefully HardStop to the process (via ipc shared memory)"
}
{
    "Origin": "Set the parameter expression at the given index.",
    "Reference": "Adds the parameter expression.",
    "HebCup": "add the parameter expression at the given index."
}
{
    "Origin": "Getter for bookModified property",
    "Reference": "Getter for bookModifiedOrUpgraded property",
    "HebCup": "Getter for bookModifiedOrUpgraded property"
}
{
    "Origin": "Tokenize a CharSequence based on the given CharSequence delimiter.",
    "Reference": "Tokenize a CharSequence based on the given CharSequence.",
    "HebCup": "Tokenize a CharSequence based on the given CharSequence delimiter."
}
{
    "Origin": "Efficient version of {@link #lockChild(InodeView, LockPattern)} for when the child path\ncomponents are already known.",
    "Reference": "Efficient version of {@link #lockChild(Inode, LockPattern)} for when the child path\ncomponents are already known.",
    "HebCup": "Efficient version of {@link #lockChild(Inode, LockPattern)} for when the child path components are already known."
}
{
    "Origin": "Updates the underlying schema based on the schema description.",
    "Reference": "Initializes the underlying schema based on the schema description.",
    "HebCup": "Updates the underlying schemaInfo.get based on the schemaInfo.get description."
}
{
    "Origin": "Remove a cache entry for a sentence",
    "Reference": "Remove a cache entries for a sentence",
    "HebCup": "Remove a cache entries for a sentence"
}
{
    "Origin": "The option is a:\n type.",
    "Reference": "The option is a:",
    "HebCup": "The option is a:\n type."
}
{
    "Origin": "Returns true if Wifi calling is enabled for at least one phone.",
    "Reference": "Returns true if Wifi calling is enabled for at least one subscription.",
    "HebCup": "Returns true if Wifi calling is enabled for at least one)."
}
{
    "Origin": "Invokes parent.resolveRequires to resolve the given root modules.",
    "Reference": "Invokes parent.resolve to resolve the given root modules.",
    "HebCup": "Invokes parent.resolve to resolve the given root modules."
}
{
    "Origin": "Client will automatically attempt to reconnect to the server if the\nconnection is lost.",
    "Reference": "Sets whether the client will automatically attempt to reconnect to\nthe server if the connection is lost.",
    "HebCup": "Client will automatically attempt to reconnect to the server if the\nconnection is lost."
}
{
    "Origin": "Check equality of two String objects.",
    "Reference": "Check equality of two CharSequence objects.",
    "HebCup": "Check equality of two CharSequence objects."
}
{
    "Origin": "Returns the default pivot of a view on a specific axis.",
    "Reference": "Returns the default pivot of an item on a specific axis.",
    "HebCup": "Returns the default pivot of a AbstractItem on a specific axis."
}
{
    "Origin": "Returns the {@code Cipher} to use for encrypting and decrypting serialized identity data to prevent easy\ninspection of Subject identity data.",
    "Reference": "Returns the {@code CipherService} to use for encrypting and decrypting serialized identity data to prevent easy\ninspection of Subject identity data.",
    "HebCup": "Returns the {@code CipherService} to use for encrypting and decrypting serialized identity data to prevent easy inspection of Subject identity data."
}
{
    "Origin": "This method returns a collector allowing streams to be gathered into\nan {@link ImmutableMap}.",
    "Reference": "This method returns a collector allowing streams to be gathered into\nan {@link ImmutableMap}, retaining insertion order.",
    "HebCup": "This method returns a collector allowing streams to be gathered into\nan {@link ImmutableMap}."
}
{
    "Origin": "Effectively clones the original proxy object and it adds the ConstantAnnotationMarker\ninterface.",
    "Reference": "Effectively clones the original proxy object and it adds the constant-annotation-marker\ninterface.",
    "HebCup": "Effectively clones the original proxy object and it adds the AnnotationSupport interface."
}
{
    "Origin": "Inspects the value of a K entry and stores all\nmeaningful StructureItem objects that are encountered.",
    "Reference": "Inspects the value of the K entry of a structure element\nand stores all meaningful StructureItem objects that are encountered.",
    "HebCup": "Inspects the value of a K entry and stores all meaningful StructureItem Dict that are encountered."
}
{
    "Origin": "Returns the console script.",
    "Reference": "Returns the web server script.",
    "HebCup": "Returns the console script."
}
{
    "Origin": "This method is not thread-safe for the {@code\ninsertionOrderUnits} and should be called atomically relative to the {@code\ninsertionOrderUnits}.",
    "Reference": "This method is not thread-safe for the {@code\nindexedRemainingUnits} and should be called atomically relative to the {@code\nindexedRemainingUnits}.",
    "HebCup": "This method is not thread-safe for the {@code IndexedRemainingUnits} and should be called atomically relative to the {@code IndexedRemainingUnits}."
}
{
    "Origin": "Add --adminport and --instanceport options with proper default values.",
    "Reference": "Add options with port with proper default values.",
    "HebCup": "Add --adminport and --instanceport options with proper default values."
}
{
    "Origin": "Returns map of {@link StatisticsKind} and statistics values obtained from specified {@link DrillStatsTable}.",
    "Reference": "Returns list of {@link StatisticsKind} and statistics values obtained from specified {@link DrillStatsTable}.",
    "HebCup": "Returns map of {@link StatisticsHolder} and statistics values obtained from specified {@link DrillStatsTable}."
}
{
    "Origin": "Gets the dataset with the specified id and applies the specified changes.",
    "Reference": "Gets the dataset with the specified id.",
    "HebCup": "Gets the dataset with the specified id and applies the specified changes."
}
{
    "Origin": "Get the time a publication will linger in nanoseconds after being drained.",
    "Reference": "Get the time a network publication will linger in nanoseconds after being drained.",
    "HebCup": "Get the time a publication will linger in nanoseconds after being drained."
}
{
    "Origin": "Merges this frame with the given frame (case of a RET instruction).",
    "Reference": "Merges the given frame into this frame (case of a subroutine).",
    "HebCup": "Merges this frame with the given frame (case of a RET instruction)."
}
{
    "Origin": "You cannot use  to\nrestore a table with the same name as an existing table in an Amazon",
    "Reference": "You cannot use  to restore a\ntable with the same name as an existing table in an Amazon Redshift\ncluster.",
    "HebCup": "You cannot use  to\nrestore a table with the same name as an existing table in an Amazon"
}
{
    "Origin": "Copies a file to folder with specified copy params and returns copied destination.",
    "Reference": "Copies a {@link File} to directory with specified copy params and returns copied destination.",
    "HebCup": "Copies a file to folder with specified copy params and returns copied destination."
}
{
    "Origin": "Checks if ast is the default token of an annotation field.",
    "Reference": "Checks if ast is in an annotation field.",
    "HebCup": "Checks if ast is the In token of an annotation field."
}
{
    "Origin": "Adds a {@link TemporalMemory} to this {@code Layer}",
    "Reference": "Adds a {@link OldTemporalMemory} to this {@code Layer}",
    "HebCup": "Adds a {@link OldTemporalMemory} to this {@code Layer}"
}
{
    "Origin": "The module name (\"\" for the unnamed module).",
    "Reference": "The module name ({@code \"\"} for the unnamed module).",
    "HebCup": "The module name (\"\" for the unnamed module)."
}
{
    "Origin": "Get Manufacturing Order.",
    "Reference": "Get Produktionsauftrag.",
    "HebCup": "Get Manufacturing Order."
}
{
    "Origin": "Marks {@code type}, throwing if it is explicitly excluded, or if any of its members are also\nspecifically included.",
    "Reference": "Marks {@code type}, throwing if it is explicitly excluded.",
    "HebCup": "Marks {@code type}, throwing if it is explicitly excluded, or if any of its members are also\nspecifically included."
}
{
    "Origin": "In case nodes are added from within a class-level or cross-parameter\nconstraint, the node representing the constraint element will be\ndropped.",
    "Reference": "In case nodes are added from within a class-level constraint, the node representing\nthe constraint element will be dropped.",
    "HebCup": "In case nodes are added from within a class-level or cross-parameter\nconstraint, the node representing the constraint element will be\ndropped."
}
{
    "Origin": "Gets the value as a long in the {@link MetricsTable} of a given key.",
    "Reference": "Gets the value as a byte array in the {@link MetricsTable} of a given key.",
    "HebCup": "Gets the value as a long in the {@link TopicTable} of a given key."
}
{
    "Origin": "Returns a set of unshifted IP addresses.",
    "Reference": "Returns an unshifted IP address.",
    "HebCup": "Returns a set of return IP addresses."
}
{
    "Origin": "Return the \"Cache-Control\" header value.",
    "Reference": "Return the \"Cache-Control\" header value, if any.",
    "HebCup": "Return the ``Cache-Control`` header value."
}
{
    "Origin": "Returns the {@code Platform} of the given OS name specified\nin the {@code ModuleTarget} attribute.",
    "Reference": "Returns the {@code Platform} derived from the target platform\nin the {@code ModuleTarget} attribute.",
    "HebCup": "Returns the {@code Platform} of the given target Platform specified in the {@code ModuleTarget} attribute."
}
{
    "Origin": "Returns a string representation of this object; useful for testing and debugging.",
    "Reference": "Returns a string representation of this object.",
    "HebCup": "Returns a string representation of this object; useful for testing and debugging."
}
{
    "Origin": "Returns a progress notification for the given download states.",
    "Reference": "Returns a progress notification for the given downloads.",
    "HebCup": "Returns a progress notification for the given int states."
}
{
    "Origin": "Sets an attribute on the given element.",
    "Reference": "Sets a property on the given element.",
    "HebCup": "Sets an attribute on the given Property."
}
{
    "Origin": "This method looks at the authority of a metadata.",
    "Reference": "This method looks at the authority of a metadata value.",
    "HebCup": "This method looks at the authority of a String."
}
{
    "Origin": "Device-General Information reports have 2 key value pairs for every\nattribute.",
    "Reference": "Device-General Information reports generally have 2 key value pairs for\nevery blackboard attribute.",
    "HebCup": "Device-General Information reports have 2 key value pairs for every\nattribute."
}
{
    "Origin": "Returns the sample l a r booking with the primary key or throws a {@link com.liferay.samplelar.NoSuchBookingException} if it could not be found.",
    "Reference": "Returns the sample l a r booking with the primary key or throws a {@link NoSuchBookingException} if it could not be found.",
    "HebCup": "Returns the sample l a r booking with the primary key or throws a {@link com.liferay.samplelar.NoSuchBookingException} if it could not be found."
}
{
    "Origin": "Cookie data is signed it using\n.",
    "Reference": "Session data is signed it using\n.",
    "HebCup": "signed data is signed it using ."
}
{
    "Origin": "Sets the item separator.",
    "Reference": "Prints an item separator.",
    "HebCup": "Sets the item separator."
}
{
    "Origin": "Use {@link HostAccess#EXPLICIT} or {@link HostAccess#PUBLIC}.",
    "Reference": "Use {@link HostAccessPolicy#EXPLICIT} or\n{@link HostAccessPolicy#PUBLIC}.",
    "HebCup": "Use {@link HostAccessPolicy#EXPLICIT} or {@link HostAccessPolicy#PUBLIC}."
}
{
    "Origin": "Before initializing any WebModule we call each WebModule's prepare method\nto allow for a WebModule to leave information useful for other modules on\nthe shared ServletContext.",
    "Reference": "Before initializing any WebModule we call each WebModule's prepare method\nto allow for a WebModule to leave information useful for other modules on\nthe shared WebModuleContext.",
    "HebCup": "Before initializing any WebModule we call each WebModule's prepare method to allow for a WebModule to leave information useful for other modules on the shared WebModuleContext."
}
{
    "Origin": "NOTE: If the specified workflow execution is not open, this\nmethod fails with UnknownResource.",
    "Reference": "If the specified workflow execution is not open,\nthis method fails with .",
    "HebCup": "NOTE: If the specified workflow execution is not open, this\nmethod fails with UnknownResource."
}
{
    "Origin": "Indicates whether an optional content group is enabled.",
    "Reference": "Indicates whether at least one optional content group with this name is enabled.",
    "HebCup": "Indicates whether an optional content ocg is enabled."
}
{
    "Origin": "Returns the flow table for specified device.",
    "Reference": "Returns the flow table for a specific device.",
    "HebCup": "Returns the Period for specified device."
}
{
    "Origin": "Check that removing enum fields requires migration",
    "Reference": "Check that removing enum fields makes the snapshot incompatible",
    "HebCup": "removing that removing enum fields requires migration"
}
{
    "Origin": "Create renew check decision state.",
    "Reference": "Create renew check state.",
    "HebCup": "create Renew Check Action State."
}
{
    "Origin": "Sedec the value of the 'dec' field.",
    "Reference": "Sets the value of the 'dec' field.",
    "HebCup": "Sedec the value of the 'dec' field."
}
{
    "Origin": "Invokes {@link #createServiceProvider}, but checks against recursive calls.",
    "Reference": "Invokes {@link #createFactory(Class, Class, Hints)}, but checks against recursive calls.",
    "HebCup": "Invokes {@link#createFactory} , but checks against recursive calls."
}
{
    "Origin": "When executing as part of a monolithic compilation there will likely only be a moduleDef\navailable.",
    "Reference": "There will likely only be a moduleDef available.",
    "HebCup": "When executing as part of a monolithic compilation there will likely only be a moduleDef\navailable."
}
{
    "Origin": "Converts this module to a strict module with the given dependences",
    "Reference": "Converts this module to a normal module with the given dependences",
    "HebCup": "Converts this module to a Normal Module with the given dependences"
}
{
    "Origin": "Method that overrides waitUntilPageIsLoaded() and waits also for the Groups livetable to load.",
    "Reference": "Method that overrides waitUntilPageIsLoaded() and waits also for the groups live table to load.",
    "HebCup": "Method that overrides waitUntilPageIsLoaded() and waits also for the Groups livetable to load."
}
{
    "Origin": "Set runtime HK2 locator.",
    "Reference": "Set runtime DI locator.",
    "HebCup": "Set runtime HK2 instanceManager."
}
{
    "Origin": "Make sure that cell.setCellType(CellType.BLANK) preserves the cell style",
    "Reference": "Make sure that cell.setBlank() preserves the cell style",
    "HebCup": "Make sure that cell.setBlank (CellType.BLANK) preserves the cell style"
}
{
    "Origin": "This implementation exposes the SavepointManager interface\nof the underlying transaction object, if any.",
    "Reference": "This implementation exposes the {@link SavepointManager} interface\nof the underlying transaction object, if any.",
    "HebCup": "This implementation exposes the SavepointManager interface of the underlying this object , if any."
}
{
    "Origin": "Tests the engine starts up, executes 1 trade cycle successfully, but then receives TradingApiException from",
    "Reference": "Tests the engine starts up, executes 1 trade cycle successfully, but then receives",
    "HebCup": "Tests the engine starts up, executes 1 trade cycle successfully, but then receives TradingApiException from"
}
{
    "Origin": "This version avoids certain types of overflow.",
    "Reference": "This version avoids any possibility of overflow.",
    "HebCup": "This version avoids certain types of overflow."
}
{
    "Origin": "Gets the regularization lambda.",
    "Reference": "Get the regularization lambda.",
    "HebCup": "Gets the regularization getLambda."
}
{
    "Origin": "Get the \"global\" CORS configuration.",
    "Reference": "Get the \"global\" CORS configurations.",
    "HebCup": "Get the ``cors`` CORS configuration."
}
{
    "Origin": "Only included for SyncClient",
    "Reference": "Only avaialable for SyncClient",
    "HebCup": "Checksum. Only included for SyncClient"
}
{
    "Origin": "See Immutable List Static Factory Methods for details.",
    "Reference": "See Unmodifiable Lists for details.",
    "HebCup": "See Unmodifiable List Static Factory Methods for details."
}
{
    "Origin": "Formats the sequence number.",
    "Reference": "Formats the sequence number into a file name.",
    "HebCup": "Formatters the sequence number."
}
{
    "Origin": "The {@link EcKeyCreateOptions#getKeyType() keyType} indicates the type of key to create.",
    "Reference": "The {@link CreateEcKeyOptions#getKeyType() keyType} indicates the type of key to create.",
    "HebCup": "The {@link CreateEcKeyOptions#getKeyType () keyType} indicates the type of key to create."
}
{
    "Origin": "Test of npara method, of class LogisticDistribution.",
    "Reference": "Test of length method, of class LogisticDistribution.",
    "HebCup": "Test of Length method , of class LogisticDistribution."
}
{
    "Origin": "Defaults to running before {@link Form#onSubmit()}.",
    "Reference": "This method will\nbe called after {@link Form#onSubmit()}.",
    "HebCup": "Defaults to running before {@link Form#onSubmit()}."
}
{
    "Origin": "Add a subscription to the list of subscriptions to be subscribed at cancellation time.",
    "Reference": "Add a disposable to the list of disposables to be disposed at cancellation time.",
    "HebCup": "Add a Disposable to the list of subscriptions to be subscribed at cancellation time."
}
{
    "Origin": "testGetProcedure",
    "Reference": "testGetVoltProcedure",
    "HebCup": "testGetVoltProcedure"
}
{
    "Origin": "Sends NX-API request message to the device.",
    "Reference": "Sends NX-API request message to the device with CLI command.",
    "HebCup": "Sends NX-API request message to the device."
}
{
    "Origin": "gets all tv show seasons from database",
    "Reference": "SYNCHRONOUSLY gets all tv show seasons from database",
    "HebCup": "gets all tv show seasons from database"
}
{
    "Origin": "Linear algebraic matrix multiplication, aT * B * c",
    "Reference": "Matrix multiplication, v1T * m2 * v3",
    "HebCup": "Linear algebraic matrix multiplication, v1T * B * c"
}
{
    "Origin": "If the {@code null} is returned,\n{@link ControllerResult#RESULT_CODE_UNKNOWN_ERROR} will be returned.",
    "Reference": "If the {@code null} is returned,\n{@link SessionResult#RESULT_CODE_UNKNOWN_ERROR} will be returned.",
    "HebCup": "If the {@code null} is returned , {@link SessionResult#RESULT_CODE_UNKNOWN_ERROR} will be returned."
}
{
    "Origin": "If it\ncontains a single exception that is thrown, otherwise the this\nmulti exception is thrown.",
    "Reference": "If it\ncontains a single exception then that is thrown, otherwise the this\nmulti exception is thrown.",
    "HebCup": "If it\ncontains a single exception that is thrown, otherwise the this\nmulti exception is thrown."
}
{
    "Origin": "Writes a compilation unit to the currently open file, if any.",
    "Reference": "Writes an entry to the currently open file, if any.",
    "HebCup": "Writes a Unit Cache Entry to the currently open file, if any."
}
{
    "Origin": "For more information about specifying an audio format, including additional details about some of the formats, see\n[Specifying an audio format](URL).",
    "Reference": "For more information about specifying an audio format, including additional details about some of the formats, see\n[Audio formats](URL).",
    "HebCup": "For more information about specifying an audio format, including additional details about some of the formats, see [Specifying an audio format](URL=."
}
{
    "Origin": "Returns a default credential for the application.",
    "Reference": "Returns the Application Default Credentials.",
    "HebCup": "Returns a ApplicationDefault credential for the application."
}
{
    "Origin": "Same as {@link #testModuleWithWorkQueue(KeyFactory, Optional)} but with default task store and\nkey factory.",
    "Reference": "Same as {@link #testModuleWithWorkQueue(KeyFactory)} but with default task store and\nkey factory.",
    "HebCup": "Same as {@link #testModuleWithWorkQueue(KeyFactory, Optional)} but with default task store and\nkey factory."
}
{
    "Origin": "generic method for untyped messages.",
    "Reference": "generic method for untyped remoting.",
    "HebCup": "generic method for untyped messages."
}
{
    "Origin": "Returns an immutable set containing ten elements.",
    "Reference": "Returns an unmodifiable set containing ten elements.",
    "HebCup": "Returns an Unmodifiable set containing ten elements."
}
{
    "Origin": "Sets the paramSitetitle.",
    "Reference": "Sets the site name.",
    "HebCup": "Sets the sitename."
}
{
    "Origin": "Returns value of network address cache ttl property.",
    "Reference": "Returns value of network address cache ttl property if not Android environment.",
    "HebCup": "Returns value of network address cache ttl property."
}
{
    "Origin": "Propagate CDI context across completion stages.",
    "Reference": "Propagate CDI context to a completion stage.",
    "HebCup": "Propagate CDI context across completion stages."
}
{
    "Origin": "Tests the {@link SecurityUtils#getGroupFromThriftClient()} ()} method.",
    "Reference": "Tests the {@link SecurityUtils#getGroupFromGrpcClient()} ()} method.",
    "HebCup": "Tests the {@link SecurityUtils#getGroupFromGrpcClient ()} ()} method."
}
{
    "Origin": "Returns a string representation of this object; useful for testing and debugging.",
    "Reference": "Returns a string representation of this object.",
    "HebCup": "Returns a string representation of this object; useful for testing and debugging."
}
{
    "Origin": "Returns a string representation of this object; useful for testing and debugging.",
    "Reference": "Returns a string representation of this object.",
    "HebCup": "Returns a string representation of this object; useful for testing and debugging."
}
{
    "Origin": "Are we a file and a json file?",
    "Reference": "Are we a file and a JSON or YAML file?",
    "HebCup": "Are we a file and a Process Config File?"
}
{
    "Origin": "This first tries to use {@code sun.misc.Unsafe} to load a class.",
    "Reference": "This first tries to use {@code java.lang.invoke.MethodHandle} to load a class.",
    "HebCup": "This first tries to use {@code sun.misc.Unsafe} to load a class."
}
{
    "Origin": "Unsafe version of {@link #data_l(PointerBuffer) data_l}.",
    "Reference": "Unsafe version of {@link #data_l(CLongBuffer) data_l}.",
    "HebCup": "Unsafe version of {@link #data_l(CLongBuffer) data_l}."
}
{
    "Origin": "{@codesnippet com.azure.security.keyvault.certificates.CertificateClient.getCertificate#CertificateProperties}",
    "Reference": "{@codesnippet com.azure.security.keyvault.certificates.CertificateClient.getCertificateOperation#String}",
    "HebCup": "{@codesnippet com.azure.security.keyvault.certificates.CertificateClient.client.getCertificate#CertificateProperties}"
}
{
    "Origin": "Based on vmchk/checkthreads.c r1.5",
    "Reference": "Based on runtime/vmchk/checkthreads.c",
    "HebCup": "Based on vmchk/checkthreads.c r1.5"
}
{
    "Origin": "Returns a string representation of this object; useful for testing and debugging.",
    "Reference": "Returns a string representation of this object.",
    "HebCup": "Returns a string representation of this object; useful for testing and debugging."
}
{
    "Origin": "if last-modified and date are defined, freshness lifetime is coefficient*(date-lastModified),\nelse freshness lifetime is defaultLifetime",
    "Reference": "The algorithm is as follows:\nif last-modified and date are defined, freshness lifetime is coefficient*(date-lastModified),\nelse freshness lifetime is defaultLifetime",
    "HebCup": "if last-modified and date are defined , freshness lifetime is coefficient* (date-lastModified).compareTo , else freshness lifetime is defaultLifetime"
}
{
    "Origin": "Convert an uploaded file to HTML.",
    "Reference": "Converts a document to HTML.",
    "HebCup": "Convert an uploaded file to HTML."
}
{
    "Origin": "This can be used to change any field, for example to set the year, month of day-of-month.",
    "Reference": "This can be used to change any supported field, such as the year, month or day-of-month.",
    "HebCup": "This can be used to change any field, for example to set the year, month of day-of-month."
}
{
    "Origin": "Put create value of a key",
    "Reference": "Create value of a key",
    "HebCup": "Put create value of a key"
}
{
    "Origin": "Test sendEmail() with parameter list.",
    "Reference": "Test EmailInfoBuilder.create() with parameter list.",
    "HebCup": "Test createEmail() with parameter list."
}
{
    "Origin": "Test that a JAR file with a Main-Class attribute that is not a valid",
    "Reference": "Test that a JAR file with a Main-Class attribute that is not a qualified\ntype name.",
    "HebCup": "Test that a JAR file with a Main-Class attribute that is not a valid"
}
{
    "Origin": "If {@code options} is {@code null}, then all the {@link ConfigurationSetting ConfigurationSettings} are fetched\nin their current state.",
    "Reference": "If {@code selector} is {@code null}, then all the {@link ConfigurationSetting ConfigurationSettings} are fetched\nin their current state.",
    "HebCup": "If {@code options} is {@code null}, then all the {@link ConfigurationSetting ConfigurationSettings} are fetched\nin their current state."
}
{
    "Origin": "This method is always invoked after {@link #dnsStart(Call, String)}.",
    "Reference": "This method is invoked after {@link #dnsStart}.",
    "HebCup": "This method is always invoked after {@link #dnsStart(Call, String)}."
}
{
    "Origin": "If the new lookup class is in a different package\nthan the old one, protected and default (package) members will not be accessible.",
    "Reference": "If the new lookup class is in a different package\n than the old one, protected and default (package) members will not be accessible,\n i.e.",
    "HebCup": "0 the new lookup class is in a different package than the old one , protected and default (package) members will not be accessible."
}
{
    "Origin": "Appends the name of the given label to {@link #buf buf}.",
    "Reference": "Appends the name of the given label to {@link #stringBuilder}.",
    "HebCup": "Appends the name of the given label to {@link#stringBuilder stringBuilder}."
}
{
    "Origin": "{@codesnippet com.azure.storage.blob.specialized.BlobClientBase.startCopyFromURL#URL}",
    "Reference": "{@codesnippet com.azure.storage.blob.specialized.BlobClientBase.startCopyFromURL#String}",
    "HebCup": "{@codesnippet com.azure.storage.blob.specialized.BlobClientBase.startCopyFromURL#String}"
}
{
    "Origin": "Creates a list of arguments to pass to the compiler, including the list of source files to\ncompile.",
    "Reference": "Creates a list of arguments to pass to the compiler.",
    "HebCup": "Creates a list of arguments to pass to the compiler, including the list of source files to\ncompile."
}
{
    "Origin": "Purge head notes in very short ending measure (courtesy measure) if any.",
    "Reference": "Remove head notes in very short ending measure (courtesy measure) if any.",
    "HebCup": "empty head notes in very short ending measure (courtesy measure) if any."
}
{
    "Origin": "runs the initializers defined via @Initializer annotation",
    "Reference": "finds the initializers defined via @RegisterInitializer annotation",
    "HebCup": "runs the initializers defined via @Initializer annotation"
}
{
    "Origin": "Get Lieferdatum.",
    "Reference": "Get Bewegungsdatum.",
    "HebCup": "get Movement Lieferdatum."
}
{
    "Origin": "Evaluates the {@code buildFileAST} into a {@link Package}.",
    "Reference": "Evaluates the {@code filename} into a {@link Package}.",
    "HebCup": "Evaluates the {@code filenameAST} into a {@link Package}."
}
{
    "Origin": "Returns the provider's public no-arg constructor.",
    "Reference": "Returns the public no-arg constructor of a class.",
    "HebCup": "Returns the provider'? public no-arg constructor."
}
{
    "Origin": "Creates a ModuleReference to an exploded module.",
    "Reference": "Creates a ModuleReference to a possibly-patched exploded module.",
    "HebCup": "Creates a ModuleReference to an exploded module."
}
{
    "Origin": "In other words, the returned {@link BasicGraph}\nwill not be updated after modifications to {@code graph}.",
    "Reference": "In other words, the returned {@link Graph} will not\nbe updated after modifications to {@code graph}.",
    "HebCup": "In other words , the returned {@link Graph} will not be updated after modifications to {@code graph}."
}
{
    "Origin": "Retrieves the conflict status of the current row of this\n{@code SyncResolver}, which indicates the operationthe {@code RowSet}\nobject was attempting when the conflict occurred.",
    "Reference": "Retrieves the conflict status of the current row of this\n{@code SyncResolver}, which indicates the operation the {@code RowSet}\nobject was attempting when the conflict occurred.",
    "HebCup": "Retrieves the conflict status of the current row of this\n{@code SyncResolver}, which indicates the operationthe {@code RowSet}\nobject was attempting when the conflict occurred."
}
{
    "Origin": "Starts the service if not started already and stops all downloads.",
    "Reference": "Starts the service if not started already and pauses all downloads.",
    "HebCup": "Starts the service if not started already and Pause all downloads."
}
{
    "Origin": "Fork the {@code routine} to a separate JVM process and return the result\nlocally.",
    "Reference": "Fork the {@code routine} to a separate JVM process and block until the\nresult can be returned locally.",
    "HebCup": "Fork the {@code routine} to a separate JVM process and return the result\nlocally."
}
{
    "Origin": "Get Global ID.",
    "Reference": "Get Data import.",
    "HebCup": "get C _ Data Import _ ID."
}
{
    "Origin": "Creates an instance of {@link RowFactory} using {@link DefaultRowTypeFactory}\nand {@link GeneratedGetterFactory}.",
    "Reference": "Creates an instance of {@link RowFactory} using {@link DefaultSchemaFactory}\nand {@link GeneratedGetterFactory}.",
    "HebCup": "Creates an instance of {@link RowFactory} using {@link DefaultSchemaFactory} and {@link GeneratedGetterFactory}."
}
{
    "Origin": "Returns the entry with the primary key or throws a {@link com.liferay.chat.NoSuchEntryException} if it could not be found.",
    "Reference": "Returns the entry with the primary key or throws a {@link NoSuchEntryException} if it could not be found.",
    "HebCup": "Returns the entry with the primary key or throws a {@link com.liferay.chat.NoSuchEntryException} if it could not be found."
}
{
    "Origin": "Create an instance of {@link JAXBElement }{@code <}{@link CTMarkupRange }{@code >}}",
    "Reference": "Create an instance of {@link JAXBElement }{@code <}{@link CTMoveFromRangeEnd }{@code >}}",
    "HebCup": "Create an instance of {@link JAXBElement} {@code <} {@link CTMoveFromRangeEnd} {@code >}}"
}
{
    "Origin": "See Immutable List Static Factory Methods for details.",
    "Reference": "See Unmodifiable Lists for details.",
    "HebCup": "See Unmodifiable List Static Factory Methods for details."
}
{
    "Origin": "The negative of {@code startsNotWith} is {@link #startsWith}.",
    "Reference": "The negative of {@code startsNotWith} is {@link #startingWith}.",
    "HebCup": "The negative of {@code startsNotWith} is {@link#startingWith}."
}
{
    "Origin": "Return the specified key generator to use, if any.",
    "Reference": "Return the specified key generator to use.",
    "HebCup": "Return the specified key generator to use, if any."
}
{
    "Origin": "Returns the space-separated OAuth scopes to use with the the service account flow or\n{@code null} if not using the service account flow.",
    "Reference": "Returns a collection of OAuth scopes to use with the the service account flow or {@code null}\nif not using the service account flow.",
    "HebCup": "Returns the space-separated OAuth scopes to use with the the service account flow or\n{@code null} if not using the service account flow."
}
{
    "Origin": "Sets the input prompt - a textual prompt that is displayed when the field\nwould otherwise be empty, to prompt the user for input.",
    "Reference": "The placeholder is text that is displayed when\nthe field would otherwise be empty, to prompt the user for input.",
    "HebCup": "Sets the placeholder - a textual prompt that is displayed when the field would otherwise be empty, to prompt the user for input."
}
{
    "Origin": "Validates whether {@code modulus} is at least 2048-bit.",
    "Reference": "Validates whether {@code modulusSize} is at least 2048-bit.",
    "HebCup": "Validates whether {@code modulusSize} is at least 2048-bit."
}
{
    "Origin": "The encoding format of\na single exception with its cause is:",
    "Reference": "The encoding format of\na single exception is:",
    "HebCup": "The encoding format of\na single exception with its cause is:"
}
{
    "Origin": "Returns the {@link UUID} of the request.",
    "Reference": "Returns the {@link RequestId}.",
    "HebCup": "Returns the {@link RequestId} of the request."
}
{
    "Origin": "This option won't be visible is `--entityFormatMessage` has been specified.",
    "Reference": "This option won't be visible if `--entity` has not already been specified.",
    "HebCup": "This option won't be visible is `--entity` has been specified."
}
{
    "Origin": "Get condition values.",
    "Reference": "Get values.",
    "HebCup": "get Values."
}
{
    "Origin": "Iterating with two Progenius for a draw",
    "Reference": "Servant is in play Iterating with two Progenius for a draw",
    "HebCup": "Iterating with two Progenius for a draw"
}
{
    "Origin": "Maven coordinates: org.apache.camel:camel-spark-rest",
    "Reference": "Maven coordinates: org.apache.camel:camel-spark",
    "HebCup": "Maven coordinates: org.apache.camel:camel-spark"
}
{
    "Origin": "Subclasses might decide on different approaches to creating local temporaries.",
    "Reference": "Subclasses might decide on different approaches to naming local temporaries.",
    "HebCup": "Subclasses might decide on different approaches to creating local temporaries."
}
{
    "Origin": "This method logs a warning if\nthe class cannot be registered.",
    "Reference": "This method LOGs a warning if\nthe class cannot be registered.",
    "HebCup": "This method logs a warning if the ClassLoaderUtils cannot be registered."
}
{
    "Origin": "In case of\nfailure the {@link Flux} will error.",
    "Reference": "In case of\nfailure the {@link CosmosContinuablePagedFlux} will error.",
    "HebCup": "In case of\nfailure the {@link Flux} will error."
}
{
    "Origin": "Clear out the cache.",
    "Reference": "Clear out all of internal caches.",
    "HebCup": "Cache out the cache."
}
{
    "Origin": "Convert to WebSocket {@code ws} or  scheme URIs",
    "Reference": "Convert to WebSocket {@code ws} or {@code wss} scheme URIs",
    "HebCup": "Convert to WebSocket {@code ws} or  scheme URIs"
}
{
    "Origin": "Returns the {@link ServletContext} to be injected or {@code null}.",
    "Reference": "Returns the {@link ServletConfig} to be injected or {@code null}.",
    "HebCup": "Returns the {@link ServletContext} to be injected or {@code null}."
}
{
    "Origin": "Converts an entity (POJO) to a DBObject.",
    "Reference": "Converts an entity (POJO) to a Document.",
    "HebCup": "Converts an entity (POJO) to a Document."
}
{
    "Origin": "Build a Map with projection field names and \"path\" field names\nand adds it to the typesFieldMaps Map.",
    "Reference": "Build a Map with field names and \"path\" field names\nand adds it to the typesFieldMaps Map.",
    "HebCup": "Build a Map with Field Names and ``path`` field names and adds it to the typesFieldMaps Map."
}
{
    "Origin": "The difference in seconds is calculated using {@link Temporal#periodUntil(Temporal, TemporalUnit)}.",
    "Reference": "The difference in seconds is calculated using {@link Temporal#until(Temporal, TemporalUnit)}.",
    "HebCup": "The difference in seconds is calculated using {@link Temporal#until (Temporal , TemporalUnit)}."
}
{
    "Origin": "Adds a style for the HTML tag.",
    "Reference": "Sets the style for the HTML tag.",
    "HebCup": "set a style for the HTML tag."
}
{
    "Origin": "Convert the data provider to use a different filter type.",
    "Reference": "Wraps this data provider to create a data provider that uses a different\nfilter type.",
    "HebCup": "withConverted the data provider to use a different filter type."
}
{
    "Origin": "Sets the maximal number of results returned by Solr indexes.",
    "Reference": "Sets the maximal number of results processed for a query to a Solr index.",
    "HebCup": "Sets the maximal number of ProcessedResults returned by Solr indexes."
}
{
    "Origin": "Deletes all the students in the course.",
    "Reference": "Deletes all the students in the course cascade their associated responses and comments.",
    "HebCup": "Deletes all the In Course the course."
}
{
    "Origin": "FilterEvaluator should return {@link Optional#absent()} when the link doesn't match any filters",
    "Reference": "FilterEvaluator should return {@link Optional.empty()} when the link doesn't match any filters",
    "HebCup": "FilterEvaluator should return {@link Optional#empty ()} when the link doesn't match any filters"
}
{
    "Origin": "tries to advance the start of the queue by one element and returns the removed\nelement in case of success, {@code null} otherwise.",
    "Reference": "Tries to advance the start of the queue by one element and returns the removed\nelement in case of success, {@code null} otherwise.",
    "HebCup": "tries to advance the start of the queue by one element and returns the removed\nelement in case of success, {@code null} otherwise."
}
{
    "Origin": "Sets the partition data directory.",
    "Reference": "Sets the compaction configuration.",
    "HebCup": "Sets the partition compaction Config."
}
{
    "Origin": "Tests the {@link FileSystemMaster#delete(AlluxioURI, DeleteOptions)} method with a\nnon-empty directory.",
    "Reference": "Tests the {@link FileSystemMaster#delete(AlluxioURI, DeleteContext)} method with a\nnon-empty directory.",
    "HebCup": "Tests the {@link FileSystemMaster#delete (AlluxioURI , DeleteContext)} method with a non-empty directory."
}
{
    "Origin": "Test to convert between a thrift type and a wire type.",
    "Reference": "Test to convert between a proto type and a wire type.",
    "HebCup": "Test to convert between a proto type and a wire type."
}
{
    "Origin": "Adapts the arguments according to the properties of the {@link TypeInferenceUtil.Result}.",
    "Reference": "Adapts the arguments according to the properties of the {@link Result}.",
    "HebCup": "Adapts the arguments according to the properties of the {@link Result}."
}
{
    "Origin": "Whether to expose and manage the global Reactor Netty resources from the\n{@link HttpResources} holder.",
    "Reference": "Whether to use global Reactor Netty resources via {@link HttpResources}.",
    "HebCup": "Whether to expose and manage the useGlobal Reactor Netty resources from the {@link HttpResources} holder."
}
{
    "Origin": "Calculate A'x (where x is an in-core Vector)",
    "Reference": "Perform A'x operation with a DRM and an in-core Vector to create a new DRM.",
    "HebCup": "Calculate A'x (where x is an in-core Vector)"
}
{
    "Origin": "Creates a new log writer.",
    "Reference": "Returns the log writer.",
    "HebCup": "Creates a new log writer."
}
{
    "Origin": "This method must only be\nused for type references whose sort is {@link #THROWS THROWS}.",
    "Reference": "This method must only be used for type references whose sort is {@link\n#THROWS}.",
    "HebCup": "This method must only be\nused for type references whose sort is {@link #THROWS THROWS}."
}
{
    "Origin": "Usually this is called at the end of a web request.",
    "Reference": "Usually this is called at the end of a web request\nor the end of some processing unit.",
    "HebCup": "Usually this is called at the end of a web request."
}
{
    "Origin": "Conditionally update the {@link #serviceTable} iff it does not exist or\nis empty.",
    "Reference": "Conditionally update the {@link #serviceTableRef} iff it does not exist or\nis empty.",
    "HebCup": "Conditionally update the {@link#serviceTableRef} iff it does not exist or is empty."
}
{
    "Origin": "Logs collection, string\nand throws {@link java.lang.AssertionError}, if not.",
    "Reference": "Logs collection, element\nand throws {@link java.lang.AssertionError}, if not.",
    "HebCup": "Logs collection , T and throws {@link java.lang.AssertionError} , if not."
}
{
    "Origin": "Sets the additional data used for creating new pages.",
    "Reference": "Sets the create parameter used for new pages.",
    "HebCup": "Sets the create Parameter used for creating new pages."
}
{
    "Origin": "Founds the contact corresponding this HistoryID.",
    "Reference": "Founds the contact or chat room corresponding this HistoryID.",
    "HebCup": "Founds the contact corresponding this String."
}
{
    "Origin": "Get JDBC driver class name.",
    "Reference": "Get JDBC driver URL recognizer.",
    "HebCup": "Get JDBC JDBC Driver URL Recognizer."
}
{
    "Origin": "The xpathNodeSet is treated\nas a list of XPath nodes, not as a list of subtrees.",
    "Reference": "The {@code xpathNodeSet} is treated\nas a list of XPath nodes, not as a list of subtrees.",
    "HebCup": "The xpathNodeSet is treated\nas a list of XPath nodes, not as a list of subtrees."
}
{
    "Origin": "Uses tombstones to handle put-remove reorder.",
    "Reference": "Uses tombstones to handle put-remove conflicts.",
    "HebCup": "Uses tombstones to handle put-remove reorder."
}
{
    "Origin": "Generates a code sample for using {@link FileClient#setProperties(long, FileHTTPHeaders, FileSmbProperties,",
    "Reference": "Generates a code sample for using {@link FileClient#setProperties(long, FileHttpHeaders, FileSmbProperties,",
    "HebCup": "Generates a code sample for using {@link FileClient#setProperties (long , FileHttpHeaders , FileSmbProperties ,"
}
{
    "Origin": "Returns true if the session is closed within the past hour of calling this function.",
    "Reference": "Checks if the session closed some time in the last one hour from calling this function.",
    "HebCup": "Returns true if the session is closed within the past hour of calling this function."
}
{
    "Origin": "Makes the given module visitor visit this open declaration.",
    "Reference": "Makes the given module visitor visit this opened package.",
    "HebCup": "Makes the given module visitor visit this open declaration."
}
{
    "Origin": "Returns the full name of the given table path, this name may be padded\nwith current catalog/database name based on the {@code paths} length.",
    "Reference": "Returns the full name of the given table path, this name may be padded\nwith current catalog/database name based on the {@code identifier's} length.",
    "HebCup": "Returns the full identifier of the given table path , this identifier may be padded with current catalog/database identifier based on the {@code paths} length."
}
{
    "Origin": "\"AppenderName\" : \"MASTER_LOG\".",
    "Reference": "\"ProcessType\" : \"MASTER\".",
    "HebCup": "``processType`` : ``MASTER_LOG``."
}
{
    "Origin": "The implementation here sets the\n  header (if needed\n and not already set), the  header\n and the  header.",
    "Reference": "The implementation here sets the\n  header (if needed\n and not already set), the  header (if\n not already set), the  header\n and the  header.",
    "HebCup": "The implementation here sets the\n  header (if needed\n and not already set), the  header\n and the  header."
}
{
    "Origin": "The {@link Flux} will\ncontain one or several feed response of the obtained users.",
    "Reference": "The {@link CosmosContinuablePagedFlux} will\ncontain one or several feed response of the obtained users.",
    "HebCup": "The {@link Flux} will contain one or several Cosmos Continuable Paged Flux of the obtained users."
}
{
    "Origin": "Sets the left border for a region of cells by manipulating the cell style of the individual\ncells on the left",
    "Reference": "Sets the left border style for a region of cells by manipulating the cell style of the individual\ncells on the left",
    "HebCup": "Sets the left border for a region of cells by manipulating the cell style of the individual\ncells on the left"
}
{
    "Origin": "**See also:**\n* [Working with corpora](URL)\n* [Add corpora to the custom language\nmodel](URL).",
    "Reference": "**See also:**\n* [Working with\ncorpora](URL)\n* [Add a corpus to the custom language\nmodel](URL).",
    "HebCup": "**See also:** * [Working with corpora](URL) * [) corpora to the custom language model](URL)."
}
{
    "Origin": "Adds/Updates {@link ConfigHelper#CLUSTER_ENV_STACK_SELECT_PACKAGES_PROPERTY} from stack",
    "Reference": "Adds/Updates {@link ConfigHelper#CLUSTER_ENV_STACK_PACKAGES_PROPERTY} from stack",
    "HebCup": "Adds/Updates {@link ConfigHelper#CLUSTER_ENV_STACK_PACKAGES_PROPERTY} from stack"
}
{
    "Origin": "If it's successfully completed, {@link BrowserResult#getMediaItem()} will return the media\nitem.",
    "Reference": "If it's successfully completed, {@link LibraryResult#getMediaItem()} will return the media\nitem.",
    "HebCup": "If it's successfully completed , {@link LibraryResult#getMediaItem ()} will return the media item."
}
{
    "Origin": "It will replace the previously assigned MediaControlView\ninstance if any.",
    "Reference": "It will replace the previously assigned\n{@link MediaControlView} instance if any.",
    "HebCup": "It will replace the previously assigned MediaControlif instance if any."
}
{
    "Origin": "@Bean\n public SecurityWebFilterChain springSecurityFilterChain(ServerHttpSecurity http) throws Exception {\n     http\n          ...\n         .csrf(csrf ->\n             csrf",
    "Reference": "@Bean\n public SecurityWebFilterChain springSecurityFilterChain(ServerHttpSecurity http) {\n     http\n          ...\n         .csrf(csrf ->\n             csrf",
    "HebCup": "@Bean\n public SecurityWebFilterChain springSecurityFilterChain(ServerHttpSecurity http) throws Exception {\n     http\n          ...\n         .csrf(csrf ->\n             csrf"
}
{
    "Origin": "The formally correct mechanism of disconnecting the returned {@link FCPPluginClient} is to\nnull out the strong reference to it.",
    "Reference": "The formally correct mechanism of disconnecting the returned {@link FCPPluginConnection}\nis to null out the strong reference to it.",
    "HebCup": "The formally correct mechanism of disconnecting the returned {@link FCPPluginConnection} is to null out the strong reference to it."
}
{
    "Origin": "Returns a string representation of this object; useful for testing and debugging.",
    "Reference": "Returns a string representation of this object.",
    "HebCup": "Returns a string representation of this object; useful for testing and debugging."
}
{
    "Origin": "Bind all providers contained in {@code p roviderBag} (classes and instances) using instance manager.",
    "Reference": "Bind all providers contained in {@code p roviderBag} (classes and instances) using injection manager.",
    "HebCup": "Bind all providers contained in {@code p roviderBag} (classes and instances) using Injection Manager."
}
{
    "Origin": "Creates a new Jetty connection factory.",
    "Reference": "Creates new internal Jetty connection factories.",
    "HebCup": "Creates a new Jetty Connection Factories."
}
{
    "Origin": "Returns the {@link MatcherBuilder} representing the set of characters that can be matched by\nthis {@link CharacterClass}.",
    "Reference": "Returns the {@link CharSet} representing the set of characters that can be matched by this\n{@link CharacterClass}.",
    "HebCup": "Returns the {@link CharSet} representing the set of characters that can be matched by this {@link CharacterClass}."
}
{
    "Origin": "Parse card number as int (support base [123] and alternative numbers\n[123b]).",
    "Reference": "Parse card number as int (support base [123] and alternative numbers\n[123b], [U123]).",
    "HebCup": "Parse card number as int (support base [123] and alternative numbers\n[123b])."
}
{
    "Origin": "This method superposes y onto x, so it transforms the coordinates of y.",
    "Reference": "This method superposes x onto y, so it transforms the coordinates of x.",
    "HebCup": "This method superposes y onto x, so it transforms the coordinates of y."
}
{
    "Origin": "Get binded side.",
    "Reference": "Get the currently bound side.",
    "HebCup": "Get binded Side."
}
{
    "Origin": "Gets a Map mapping IInventories to the amount of items of the type passed in that exist",
    "Reference": "Gets a Map mapping IInventories to the number of matching items.",
    "HebCup": "Gets a Map mapping IInventories to the amount of Corporea Request of the type passed in that exist"
}
{
    "Origin": "See Immutable List Static Factory Methods for details.",
    "Reference": "See Unmodifiable Lists for details.",
    "HebCup": "See Unmodifiable List Static Factory Methods for details."
}
{
    "Origin": "Return a {@link JettyRemoteRepositoryManager} for talking to the\n{@link NanoSparqlServer} instance associated with an {@link HAGlue}\ninterface.",
    "Reference": "Return a {@link RemoteRepositoryManager} for talking to the\n{@link NanoSparqlServer} instance associated with an {@link HAGlue}\ninterface.",
    "HebCup": "Return a {@link RemoteRepositoryManager} for talking to the {@link NanoSparqlServer} instance associated with an {@link HAGlue} interface."
}
{
    "Origin": "Returns  if the \"IS_MESSAGE_HISTORY_ENABLED\"\nproperty is true for the contact, otherwise - returns\n.",
    "Reference": "Returns  if the \"IS_MESSAGE_HISTORY_ENABLED\"\nproperty is true for the id, otherwise - returns\n.",
    "HebCup": "Returns if the ``IS_MESSAGE_HISTORY_ENABLED`` property is true for the String , otherwise - returns ."
}
{
    "Origin": "Match statement against pattern for create schedule",
    "Reference": "Match statement against pattern for create task",
    "HebCup": "Match statement against pattern for Create Task"
}
{
    "Origin": "Prepare task event for execution on agent.",
    "Reference": "Prepare exe params for send REST request on node.",
    "HebCup": "Prepare task event for execution on agent."
}
{
    "Origin": "Sets the expected behaviour for tasks in case that they encounter an error in their checkpointing procedure.",
    "Reference": "Sets the expected behaviour for tasks in case that they encounter an error when checkpointing.",
    "HebCup": "Sets the expected behaviour for tasks in case that they encounter an error in their checkpointing procedure."
}
{
    "Origin": "Returns a {@link ResolvingConverter} for the given attribute definition",
    "Reference": "Returns a {@link Converter} for the given attribute definition",
    "HebCup": "Returns a {@link Converter} for the given attribute definition"
}
{
    "Origin": "This method will populate oioGroups with owner OIO Node as key\n and list of corresponding OIO nodes which will run in its thread as value",
    "Reference": "Populates oioGroups with owner OIO Node as key and list of corresponding OIO nodes which will run in its thread as value",
    "HebCup": "This method will populate oioGroups with owner OIO Node as key\n and list of corresponding OIO nodes which will run in its thread as value"
}
{
    "Origin": "{@code n} cannot be valid unless its token is in this set.",
    "Reference": "If {@code n} is a pseudoexpression, it will be considered invalid\nunless its token is in this set.",
    "HebCup": "{@code n} cannot be valid unless its token is in this set."
}
{
    "Origin": "See {@link #withChrono(Chronology)} for more details on overriding.",
    "Reference": "See {@link #withChronology(Chronology)} for more details on overriding.",
    "HebCup": "See {@link #withChronology(Chronology)} for more details on overriding."
}
{
    "Origin": "Indicate whether this {@code MediaType} includes the given media type.",
    "Reference": "Indicate whether this MIME Type includes the given MIME Type.",
    "HebCup": "Indicate whether this {@code MediaType} includes the given media type."
}
{
    "Origin": "This stores a complete object that has been parsed.",
    "Reference": "This stores the zone that has been parsed.",
    "HebCup": "This stores a complete ZoneId that has been parsed."
}
{
    "Origin": "Group: reset",
    "Reference": "Group: producer",
    "HebCup": "Group: reset"
}
{
    "Origin": "Returns profile and level (as defined by {@link CodecProfileLevel}) corresponding to the given\ncodec description string (as defined by RFC 6381).",
    "Reference": "Returns profile and level (as defined by {@link CodecProfileLevel}) corresponding to the codec\ndescription string (as defined by RFC 6381) of the given format.",
    "HebCup": "Returns profile and level (as defined by {@link CodecProfileLevel}) corresponding to the given codec description Format (as defined by RFC 6381)."
}
{
    "Origin": "Represent a zone with a fake email and defaul ttl of 86400.",
    "Reference": "Represent a zone with a fake email.",
    "HebCup": "Represent a zone with a fake email and defaul ttl of 86400."
}
{
    "Origin": "Store last collected and watchlisted timestamps.",
    "Reference": "Store last collected, watchlisted and watched timestamps.",
    "HebCup": "Store last collected and watchlisted timestamps."
}
{
    "Origin": "Optional.absent().",
    "Reference": "Optional.empty().",
    "HebCup": "Optional.absent()."
}
{
    "Origin": "The input file must be a list of tab-separated verb-POS pairs, one verb\nper line.",
    "Reference": "The input file must be a list of whitespace-separated verb-lemma-POS triples, one verb\nform per line.",
    "HebCup": "The input file must be a list of tab-separated verb-POS pairs, one verb per line: ."
}
{
    "Origin": "Checks if the groupby is a supported one, that is, if it's possible to turn to SQL the\nvarious {@link Expression} it's using",
    "Reference": "Checks if the groupBy is a supported one, that is, if it's possible to turn to SQL the\nvarious {@link Expression} it's using",
    "HebCup": "Checks if the groupby is a supported one, that is, if it's possible to turn to SQL the\nvarious {@link Expression} it's using"
}
{
    "Origin": "Return an empty list for no search result, and return {@code null} for the error.",
    "Reference": "Return an empty\nlist for no search result rather than using result code for error.",
    "HebCup": "Return an empty LibraryResult for no search result , and return {@code null} for the error."
}
{
    "Origin": "Unsubscribe from all channel.",
    "Reference": "Unsubscribe from all channels.",
    "HebCup": "Unsubscribe from all null."
}
{
    "Origin": "Sets the specified value to the {@code autoFlush} field.",
    "Reference": "Sets the specified value to the {@code favorDecSpeed} field.",
    "HebCup": "Sets the specified value to the {@code favorDecSpeed} field."
}
{
    "Origin": "The name of the default CRAN mirror.",
    "Reference": "The CRAN mirror to use.",
    "HebCup": "The name of the default CRAN mirror."
}
{
    "Origin": "Expands all child nodes until the specified structure depth is reached.",
    "Reference": "Expands all tree nodes.",
    "HebCup": "Expands all child nodes until the specified structure depth is reached."
}
{
    "Origin": "Deletes a deployment model from storage",
    "Reference": "Deletes a web service from db",
    "HebCup": "Deletes a webService model from storage"
}
{
    "Origin": "Schedules a move media item action to be executed.",
    "Reference": "Schedules a new source preparation action to be executed.",
    "HebCup": "Schedules a prepare Source action to be executed."
}
{
    "Origin": "Sort the input data.",
    "Reference": "Sort the input data and returns an iterator.",
    "HebCup": "Sort the input data."
}
{
    "Origin": "Returns true if the resource is a simple resource that can\nnever be encapsulated.",
    "Reference": "Returns true if the resource is a simple resource.",
    "HebCup": "Returns true if the resource is a simple resource that can\nnever be encapsulated."
}
{
    "Origin": "Returns the properties of this resource in a map.",
    "Reference": "Returns the direct properties of this resource in a map.",
    "HebCup": "Returns the Property of this resource in a map."
}
{
    "Origin": "Returns a suitable content for the argument file given to dx with --main-dex-list.",
    "Reference": "This can be passed to dx as a file with --main-dex-list.",
    "HebCup": "Returns a suitable content for the argument file given Set dx with --main-dex-list."
}
{
    "Origin": "Returns a string representation of this object; useful for testing and debugging.",
    "Reference": "Returns a string representation of this object.",
    "HebCup": "Returns a string representation of this object; useful for testing and debugging."
}
{
    "Origin": "Setter for {@link #exposeOnlyRequestedHeader}",
    "Reference": "Setter for {@link #allowOnlyRequestedHeader}",
    "HebCup": "Setter for {@link#allowOnlyRequestedHeader}"
}
{
    "Origin": "The minimum coverage of the sequence alignment between two subunits to be\nclustered together.",
    "Reference": "The minimum coverage of the structure alignment between two subunits to be\nclustered together.",
    "HebCup": "The minimum structureCoverage of the sequence alignment between two subunits to be clustered together."
}
{
    "Origin": "Add the given {@link HandlerMethodArgumentResolver}s.",
    "Reference": "Add the given {@link HandlerMethodArgumentResolver HandlerMethodArgumentResolvers}.",
    "HebCup": "Add the given {@link HandlerMethodArgumentresolvers}s."
}
{
    "Origin": "Construct JsonDataSource from the underneath byte channel which is associated with the entity struct.",
    "Reference": "Construct JsonDataSource from the underneath byte channel which is associated with the entity object.",
    "HebCup": "Construct JsonDataSource from the underneath byte channel which is associated with the entity Obj."
}
{
    "Origin": "The start within a native image heap section (e.g., read-only or writable).",
    "Reference": "Otherwise, this returns the offset of the object within a native image section\n(e.g., read-only or writable).",
    "HebCup": "The start within a native image heap section (e.g., read-only or writable).get."
}
{
    "Origin": "Default implementation of a complete execution of this operation.",
    "Reference": "Default implementation of a complete execution of this operation against the primary index.",
    "HebCup": "Default implementation of a complete execution of this String."
}
{
    "Origin": "If you specify both tag keys and tag values in the same request,",
    "Reference": "If you specify both tag keys and tag values in the same request, Amazon",
    "HebCup": "If you specify both tag keys and tag values in the same request,"
}
{
    "Origin": "Reads from bytes serialized in TBinaryProtocol",
    "Reference": "Reads from buffer serialized in TBinaryProtocol",
    "HebCup": "Reads from buffer serialized in TBinaryProtocol"
}
{
    "Origin": "returns the number of 64 bit words it would take to hold numBits",
    "Reference": "Returns the number of 64 bit words it would take to hold numBits",
    "HebCup": "returns the number of 64 bit words it would take to hold numBits"
}
{
    "Origin": "If the mapped keys\nmay have duplicates, use {@link #toMap(Function, Function, BinaryOperator)}\ninstead.",
    "Reference": "If the mapped keys\nmight have duplicates, use {@link #toMap(Function, Function, BinaryOperator)}\ninstead.",
    "HebCup": "If the mapped keys\nmay have duplicates, use {@link #toMap(Function, Function, BinaryOperator)}\ninstead."
}
{
    "Origin": "Returns  if the provided key is an \"empty slot\"\nmarker.",
    "Reference": "Returns  if the provided value is an \"empty slot\"\nmarker.",
    "HebCup": "Returns if the provided value is an ``empty slot`` marker."
}
{
    "Origin": "Get all Pinot raw table names.",
    "Reference": "Get all raw table names.",
    "HebCup": "Get all Pinot raw table names."
}
{
    "Origin": "Save the configuration of this tunnel only",
    "Reference": "Remove the configuration of this tunnel only",
    "HebCup": "Save the configuration of this tunnel only"
}
{
    "Origin": "Set schema of the Cosmos DB Cassandra table.",
    "Reference": "Set the resource value.",
    "HebCup": "Set TableGetPropertiesResource of the Cosmos DB Cassandra table."
}
{
    "Origin": "The hash code implementation simply returns the unique type id of this resource type.",
    "Reference": "The hash code implementation uses the type name to generate a hash code.",
    "HebCup": "The hash code implementation simply returns the unique Type Name of this resource type."
}
{
    "Origin": "Any of the\ninput words can also be the answer if one is the parent or grandparent of\nother",
    "Reference": "Any of the\ninput words can also be the answer if one is the parent or grandparent of\nother, or if the input words are the same.",
    "HebCup": "Any of the input words can also be the answer if one is the Parents or grandparent of other"
}
{
    "Origin": "Returns a {@link KeyManagerFactory} based on the configuration in this class.",
    "Reference": "Returns the {@link SSLSocketFactory} based on the latest configuration of this class.",
    "HebCup": "Returns a {@link keyManagerFactory} based on the configuration in this class."
}
{
    "Origin": "Returns a {@code JBIterable} that applies {@code function} to each element of this\niterable and concats the produced iterables in one.",
    "Reference": "Returns a {@code JBIterable} that applies {@code function} to each element of this\niterable and concatenates the produced iterables in one.",
    "HebCup": "Returns a {@code JBIterable} that applies {@code function} to each element of this\niterable and concats the produced iterables in one."
}
{
    "Origin": "The updated module-info.class will have a ConcealedPackages attribute\nwith the set of module-private/non-exported packages.",
    "Reference": "The updated module-info.class will have a Packages attribute\nwith the set of module-private/non-exported packages.",
    "HebCup": "The updated module-info.class will have a ConcealedPackages attribute with the extender of module-private/non-exported packages."
}
{
    "Origin": "A {@code DateTimeAccessor} represents some form of date and time information.",
    "Reference": "A {@code TemporalAccessor} represents some form of date and time information.",
    "HebCup": "A {@code DateTimeAccessor} represents some form of date and time information."
}
{
    "Origin": "Returns a rule that limits the number of requests for a given period of\ntime by request's host domain.",
    "Reference": "Adds a rule that limits the number of requests for a given period of\ntime by request's host domain.",
    "HebCup": "Returns a Utils that limits the number of requests for a given period of time by request's host domain."
}
{
    "Origin": "get the list of children of this\ntrienode.",
    "Reference": "Get the list of children of this trienode.",
    "HebCup": "get the list of children of this\ntrienode."
}
{
    "Origin": "Queries this ContactSourceService for SourceContacts\nwhich match a specific query Pattern.",
    "Reference": "Creates query that searches for SourceContacts\nwhich match a specific query Pattern.",
    "HebCup": "Queries this ContactQueryService for SourceContacts which match a specific query Pattern."
}
{
    "Origin": "If true, applying this lexical relation to this word creates a sentence which is entailed by the original sentence,",
    "Reference": "If true, applying this lexical relation to this word creates a sentence which is negated by the original sentence",
    "HebCup": "If true, applying this lexical relation to this word creates a sentence which is entailed by the original sentence,"
}
{
    "Origin": "Returns the base section paint.",
    "Reference": "Returns the default section paint.",
    "HebCup": "Returns the Default Section paint."
}
{
    "Origin": "Reverse-\ntransforms using the FECReceiver for the SSRC found in\npkts.",
    "Reference": "Reverse-\ntransforms using the AbstractFECReceiver for the SSRC found in\npkts.",
    "HebCup": "Reverse- transforms using the AbstractFECReceiver for the SSRC found in pkts."
}
{
    "Origin": "Sets the subtitle suffix text, and hides or displays the subtitle suffix depending on whether\nthe text is null or not null.",
    "Reference": "Sets the extra info text, and hides or displays the extra info label depending on whether\nthe text is null or not null.",
    "HebCup": "Sets the Extra Info, and hides or displays the subtitle suffix depending on whether the text is null or not null."
}
{
    "Origin": "Key.create(webSafeString) is easier to type than new Key(webSafeString)",
    "Reference": "Key.create(urlSafeString) is easier to type than new Key(urlSafeString)",
    "HebCup": "Key.create(urlSafeString) is easier to type than new Key(urlSafeString)"
}
{
    "Origin": "If the key already exists, the sensitivity value will be merged.",
    "Reference": "Values with the same market data name and currency will be merged.",
    "HebCup": "If the key already exists, the sensitivity value will be merged."
}
{
    "Origin": "In case of\nfailure the {@link Flux} will error.",
    "Reference": "In case of\nfailure the {@link CosmosContinuablePagedFlux} will error.",
    "HebCup": "In case of\nfailure the {@link Flux} will error."
}
{
    "Origin": "Test of p method, of class HMM.",
    "Reference": "Test of logp method, of class HMM.",
    "HebCup": "Test of Joint method , of class HMM."
}
{
    "Origin": "Return the location of the default deployment descriptor",
    "Reference": "Obtain the location of the default deployment descriptor.",
    "HebCup": "Return the location of the default deployment descriptor"
}
{
    "Origin": "Creates a DBObject from this Shape",
    "Reference": "Creates a Document from this Shape",
    "HebCup": "Creates a Document from this Shape"
}
{
    "Origin": "Removes a global option.",
    "Reference": "Removes all global options.",
    "HebCup": "OPTIONS.clear a global option."
}
{
    "Origin": "Returns an {@link InetAddress} of a client who initiated a request.",
    "Reference": "Returns {@link ProxiedAddresses} which were delivered through a proxy server.",
    "HebCup": "Returns an {@link InetSocketAddress} of a client who initiated a request."
}
{
    "Origin": "Return a factory for this kind of label\n(i.e., ).",
    "Reference": "Return a factory for this kind of label\n(i.e., {@code TaggedWord}).",
    "HebCup": "Return a factory for this kind of label\n(i.e., )."
}
{
    "Origin": "Rotate this vector the specified radians about the given rotation axis.",
    "Reference": "Rotate this vector the specified radians around the given rotation axis.",
    "HebCup": "Rotate this vector the specified radians Axis the given rotation axis."
}
{
    "Origin": "If {@code labels = \"abc*\"}, settings with a label starting with \"abc\" are returned.",
    "Reference": "If {@code labelFilter = \"abc*\"}, settings with a label starting with \"abc\" are returned.",
    "HebCup": "If {@code LabelFilter = ``abc*``} , settings with a label starting with ``abc`` are returned."
}
{
    "Origin": "Returns the system's default charset.",
    "Reference": "Returns the default charset of this Java virtual machine.",
    "HebCup": "Returns the system's java.nio.charset.StandardCharsets.UTF charset."
}
{
    "Origin": "Tests if this string starts with any specified prefixes.",
    "Reference": "Tests if this CharSequence starts with any specified prefixes.",
    "HebCup": "Tests if this CharSequence starts with any specified prefixes."
}
{
    "Origin": "Unsafe version of {@link #standingTrackedDevicePose}.",
    "Reference": "Unsafe version of {@link #trackedDevicePose}.",
    "HebCup": "Unsafe version of {@link #standingntrackedDevicePose}."
}
{
    "Origin": "Obtains an instance, specifying sensitivity currency.",
    "Reference": "Obtains an instance.",
    "HebCup": "Obtains an instance, specifying sensitivity currency."
}
{
    "Origin": "Gets the value of the 'InMemory' field.",
    "Reference": "Gets the value of the 'inMemory' field.",
    "HebCup": "Gets the value of the 'inMemory' field."
}
{
    "Origin": "Group: common",
    "Reference": "Group: security",
    "HebCup": "Group: common"
}
{
    "Origin": "Obtains an instance from the specified unique name.",
    "Reference": "Obtains an instance from the specified name.",
    "HebCup": "Obtains an instance from the specified name."
}
{
    "Origin": "Returns whether the code is a valid/known code or not.",
    "Reference": "Returns whether the code is a valid/known {@code ISO 639} code or not.",
    "HebCup": "to whether the code is a valid/known code or not."
}
{
    "Origin": "Safely sets {@link CommandOutput#multi(int)}.",
    "Reference": "Safely sets {@link CommandOutput#set(boolean)}.",
    "HebCup": "Safely sets {@link CommandOutput#Set (int)}."
}
{
    "Origin": "Writes a compilation unit to the disk cache.",
    "Reference": "Writes an entry to the cache.",
    "HebCup": "Writes a Unit Cache Entry to the disk cache."
}
{
    "Origin": "This compares the value of\nthe identifier only.",
    "Reference": "This compares the type and value of\nthe identifier only.",
    "HebCup": "This thiss the value of the identifier only."
}
{
    "Origin": "Sets the vault endpoint url to send HTTP requests to.",
    "Reference": "Sets the vault url to send HTTP requests to.",
    "HebCup": "Sets the vault vaultUrl url to send HTTP requests to."
}
{
    "Origin": "{@codesnippet com.azure.security.certificatevault.certificates.CertificateClient.recoverDeletedCertificateWithResponse#String-Context}",
    "Reference": "{@codesnippet com.azure.security.certificatevault.certificates.CertificateClient.beginRecoverDeletedCertificate#string}",
    "HebCup": "{@codesnippet com.azure.security.certificatevault.certificates.CertificateClient.beginRecoverDeletedCertificate#String-Context}"
}
{
    "Origin": "or throws a {@link com.liferay.so.NoSuchFavoriteSiteException} if it could not be found.",
    "Reference": "or throws a {@link NoSuchFavoriteSiteException} if it could not be found.",
    "HebCup": "or throws a {@link com.liferay.so.NoSuchFavoriteSiteException} if it could not be found."
}
{
    "Origin": "Defaults\nto 5000L (5 seconds).",
    "Reference": "Defaults to 5 seconds.",
    "HebCup": "Defaults to 5000coolDown (5 seconds)."
}
{
    "Origin": "It also re-queues the key so that the file descriptor\nis re-associated at the next select operation.",
    "Reference": "Process the polled events and re-queue the selected keys so the file\ndescriptors are re-associated at the next select operation.",
    "HebCup": "It also re-queues the Ready so that the file descriptor is re-associated at the next select operation."
}
{
    "Origin": "Gets the value of the specified type.",
    "Reference": "Gets a value using a query.",
    "HebCup": "Gets the value of the specified query."
}
{
    "Origin": "get a copy from all member entries",
    "Reference": "Get a copy from all member entries.",
    "HebCup": "get a copy from all member entries"
}
{
    "Origin": "Returns the (unbiased) estimate of the sample standard deviation of the\nvalues within a {@link Dataset}.",
    "Reference": "Returns the (unbiased) skew of all the values within a {@link Dataset}",
    "HebCup": "Returns the (unbiased) estimate of the sample standard deviation of the\nvalues within a {@link Dataset}."
}
{
    "Origin": "Raises the event's class' event on the current context.",
    "Reference": "Raises the event's class' event on the given context.",
    "HebCup": "Raises the event's class' event on the current registrations."
}
{
    "Origin": "A\n is built when the JAR is created.",
    "Reference": "A\n class is built when the JAR is\ncreated.",
    "HebCup": "A\n is built when the JAR is created."
}
{
    "Origin": "The comparison is based on the Unicode value of each character in the strings.",
    "Reference": "The comparison is based on the Unicode value of each character in the CharSequences.",
    "HebCup": "The comparison is based on the Unicode value of each character in the CharSequence."
}
{
    "Origin": "Update a pending or active batch-processing request.",
    "Reference": "Updates a pending or active batch-processing job.",
    "HebCup": "Update a pending or active batch-processing request."
}
{
    "Origin": "Checks the dirty status of the 'stmPriority' field.",
    "Reference": "Checks the dirty status of the 'reprUrl' field.",
    "HebCup": "Checks the dirty status of the 'ReprUrl' field."
}
{
    "Origin": "It's configured to be aligned to  block, hence, it's moved\n     to the right:",
    "Reference": "It's configured to be aligned to {@code 'blih'} block, hence, it's moved\nto the right:",
    "HebCup": "It's configured to be aligned to  block, hence, it's moved\n     to the right:"
}
{
    "Origin": "Returns a range of all the push notifications devices where platform = ?.",
    "Reference": "Returns a range of all the push notifications devices where userId = any ?",
    "HebCup": "Returns a range of all the push notifications devices where U_P = ?."
}
{
    "Origin": "Produces a CCProcessed SemanticGraph with no extras.",
    "Reference": "Produces a CCProcessed SemanticGraph.",
    "HebCup": "Produces a CCProcessed SemanticGraph with no extras."
}
{
    "Origin": "Assert that all {@linkplain ExecutionEvent execution events} contained in\nthis {@code Events} object exactly match the provided conditions.",
    "Reference": "Assert that all {@linkplain Event events} contained in this {@code Events}\nobject exactly match the provided conditions.",
    "HebCup": "Assert that all {@linkplain Event execution events} contained in this {@code Events} object exactly match the provided conditions."
}
{
    "Origin": "Returns the port that the REST server endpoint should listen on.",
    "Reference": "Returns the port range that the REST server endpoint should listen on.",
    "HebCup": "Returns the PortRange that the REST server endpoint should listen on."
}
{
    "Origin": "Throw a , because it doesn't know how to\n      unwrap the object.",
    "Reference": "Throw a {@link TemplateException}, because it doesn't know how to\n      unwrap the object.",
    "HebCup": "Throw a , because it doesn't know how to\n      unwrap the object."
}
{
    "Origin": "Set the drop target's text to either \"Remove\" or \"Cancel\" depending on the drag source.",
    "Reference": "Set the drop target's text to either \"Remove\" or \"Cancel\" depending on the drag item.",
    "HebCup": "Set the drop target's text to either ``Remove`` or ``Cancel`` depending on the Item Info."
}
{
    "Origin": "Returns an instance {@link LineageDataset}.",
    "Reference": "Returns the {@link DatasetId} of the lineage dataset.",
    "HebCup": "Returns an instance {@link LineageDatasetId}."
}
{
    "Origin": "Maps all given field values' classes to a field type using the configured type mapping rules.",
    "Reference": "Maps all given field values' classes to a typeMapping object",
    "HebCup": "Maps all given field values' classes to a field type using the configured type mapping rules."
}
{
    "Origin": "Verifies resultset received to contain data classification information as set.",
    "Reference": "Verifies ResultSet received to contain data classification information as set.",
    "HebCup": "Verifies resultset received to contain data classification information as set."
}
{
    "Origin": "**See also:** [Synthesizing text to\naudio](URL).",
    "Reference": "**See also:** [The HTTP interface](URL).",
    "HebCup": "**See also:** [Synthesizing text to audio](URL=."
}
{
    "Origin": "Getter for {@link #exposeOnlyRequestedHeader}",
    "Reference": "Getter for {@link #allowOnlyRequestedHeader}",
    "HebCup": "Getter for {@link#allowOnlyRequestedHeader}"
}
{
    "Origin": "Note that both this, and {@link Polarity#maintainsTruth(NaturalLogicRelation)}} can be false.",
    "Reference": "Note that both this, and {@link Polarity#introducesNegation(NaturalLogicRelation)} can be false.",
    "HebCup": "Note that both this, and {@link Polarity#maintainsEntailment(NaturalLogicRelation)}} can be false."
}
{
    "Origin": "Removes all keys that satisfy a given predicate from the metadata of the specified {@link NamespacedEntityId}.",
    "Reference": "Removes all keys that satisfy a given predicate from the metadata of the specified {@link MetadataEntity}.",
    "HebCup": "Removes all keys that satisfy a given predicate from the metadata of the specified {@link MetadataEntity}."
}
{
    "Origin": "Statement type is hiding in the 0 and 1 bits of the flags.",
    "Reference": "Statement type is hiding in the 0 and 1 and 2 bits of the flags.",
    "HebCup": "Statement set is hiding in the 0 and 1 bits of the flags."
}
{
    "Origin": "If the cipher is an symmetric cipher (using the same key for both encryption and decryption), you\nshould set your key via one of the three following methods:",
    "Reference": "If the CipherService is a symmetric CipherService (using the same key for both encryption and decryption), you\nshould set your key via one of the three following methods:",
    "HebCup": "If the CipherService is an symmetric CipherService (using the same key for both encryption and decryption) , you should set your key via one of the three following methods:"
}
{
    "Origin": "Try to save the form values to the given job bean.",
    "Reference": "Try to save the form values to the edited bean.",
    "HebCup": "Try to save the form values to the given job bean."
}
{
    "Origin": "or throws a {@link com.liferay.knowledgebase.NoSuchFolderException} if it could not be found.",
    "Reference": "or throws a {@link NoSuchFolderException} if it could not be found.",
    "HebCup": "or throws a {@link com.liferay.knowledgebase.NoSuchFolderException} if it could not be found."
}
{
    "Origin": "Build node path, parent, next, prev relation",
    "Reference": "Build node path and parent, next, prev relation",
    "HebCup": "Build get Parent, parent, next, prev relation"
}
{
    "Origin": "If true, applying this lexical relation to this word creates a sentence which is negated by the original sentence",
    "Reference": "If true, applying this lexical relation to this word creates a sentence which is entailed by the original sentence,",
    "HebCup": "If true, applying this lexical relation to this word creates a sentence which is negated by the original sentence"
}
{
    "Origin": "Use this call to customize the log-on form.",
    "Reference": "Use this call to customize the login form.",
    "HebCup": "Use this call to customize the log-on form."
}
{
    "Origin": "Decorates {@link Service}s with the specified {@link Route}.",
    "Reference": "Decorates {@link HttpService}s with the specified {@link Route}.",
    "HebCup": "Decorates {@link HttpService}s with the specified {@link Route}."
}
{
    "Origin": "or throws a {@link com.liferay.contacts.NoSuchEntryException} if it could not be found.",
    "Reference": "or throws a {@link NoSuchEntryException} if it could not be found.",
    "HebCup": "or throws a {@link com.liferay.contacts.NoSuchEntryException} if it could not be found."
}
{
    "Origin": "Map empty treatment for forwarding block to nop action.",
    "Reference": "Map empty treatment for routing v4 table.",
    "HebCup": "Map Routing treatment for forwarding block to nop action."
}
{
    "Origin": "Obtains an instance from the specified unique name.",
    "Reference": "Obtains an instance from the specified name.",
    "HebCup": "Obtains an instance from the specified name."
}
{
    "Origin": "Sets {@link #createoverview} field to true.",
    "Reference": "Sets {@link HtmlOptions#createOverview} field to true.",
    "HebCup": "Sets {@link#options.createOverview} field to true."
}
{
    "Origin": "The curves themselves are provided in {@link ScenarioMarketData}\nusing {@link CurveId} as the identifier.",
    "Reference": "The curves themselves are provided in {@link ScenarioMarketData}\nusing {@link RatesCurveId} as the identifier.",
    "HebCup": "The curves themselves are provided in {@link ScenarioMarketData} using {@link RatesCurveId} as the identifier."
}
{
    "Origin": "Goes through\nthe tree by left-center-right (then back to root).",
    "Reference": "Goes through\nthe tree by child1-child2 order (then back to root).",
    "HebCup": "Goes through\nthe tree by left-center-right (then back to root)."
}
{
    "Origin": "Suitable surface metadata can be created using\n{@link Surfaces#swaptionBlackExpiryTenor(String, DayCount, FixedIborSwapConvention)}.",
    "Reference": "Suitable surface metadata can be created using\n{@link Surfaces#swaptionBlackExpiryTenor(String, DayCount)}.",
    "HebCup": "Suitable surface metadata can be created using\n{@link Surfaces#swaptionBlackExpiryTenor(String, DayCount, FixedIborSwapConvention)}."
}
{
    "Origin": "Fetches the current value of the property encryption key.",
    "Reference": "Fetches the current property encryptor.",
    "HebCup": "Fetches the current value of the property encryption key."
}
{
    "Origin": "Sets the identifier of the action profile.",
    "Reference": "Sets the ID of the action profile.",
    "HebCup": "Sets the identifier of the action profile."
}
{
    "Origin": "Test affinity awareness Sql cache size property.",
    "Reference": "Test Partition Awareness Sql cache size property.",
    "HebCup": "test Partition Awareness Sql Cache Size Property."
}
{
    "Origin": "Range does not align The byte range value in the request\ndoes not align with the part size specified in the corresponding\ninitiate request.",
    "Reference": "Range does not alignThe byte range value in the request does\nnot align with the part size specified in the corresponding initiate\nrequest.",
    "HebCup": "Range does not align The byte range value in the request\ndoes not align with the part size specified in the corresponding\ninitiate request."
}
{
    "Origin": "Exchange Adapter on the 2nd cycle.",
    "Reference": "Exception from Exchange Adapter on the 2nd cycle.",
    "HebCup": "Exchange Adapter on the 2nd cycle."
}
{
    "Origin": "You can only\ncall this method if the {@link #getInt getXxx} method has returned 0.",
    "Reference": "You only need to\ncall this method if the {@link #getInt getXxx} method has returned 0.",
    "HebCup": "You can only\ncall this method if the {@link #getInt getXxx} method has returned 0."
}
{
    "Origin": "Enables the use of {@link com.google.cloud.Timestamp Timestamps} for timestamp fields in\n{@link DocumentSnapshot DocumentSnapshots}.",
    "Reference": "Specifies whether to use {@link com.google.cloud.Timestamp Timestamps} for timestamp fields\nin {@link DocumentSnapshot DocumentSnapshots}.",
    "HebCup": "Enables the use of {@link com.google.cloud.Timestamp Timestamps} for timestamp fields in\n{@link DocumentSnapshot DocumentSnapshots}."
}
{
    "Origin": "Add the type parameters for the executable member.",
    "Reference": "Add all the parameters for the executable member.",
    "HebCup": "Add the Entity.ZERO _ WIDTH _ SPACE for the executable member."
}
{
    "Origin": "Returns an SslContextFactory that should be used by a jetty server based on this SSLConfig instance,\nor null if SSL should not be used.",
    "Reference": "Returns an SslContextFactory.Server that should be used by a jetty server based on this SSLConfig instance,\nor null if SSL should not be used.",
    "HebCup": "Returns an SslContextFactory.Server that should be used by a jetty server based on this SSLConfig instance , or null if SSL should not be used."
}
{
    "Origin": "Converts the given item into a long value.",
    "Reference": "Converts the given value to a long primitive.",
    "HebCup": "Converts the given item into a long value."
}
{
    "Origin": "Action remove hop exiting this step",
    "Reference": "Action remove hop from this step",
    "HebCup": "Action remove hop exiting this StepName"
}
{
    "Origin": "Return that one\nRDFNode or throw an exception",
    "Reference": "RDFNode or throw an exception.",
    "HebCup": "Return that one\nRDFNode or throw an exception"
}
{
    "Origin": "Getting Information about a Search Domain \nin the Amazon CloudSearch Developer Guide .",
    "Reference": "Amazon CloudSearch Developer Guide.",
    "HebCup": "Getting Information about a Search Domain \nin the Amazon CloudSearch Developer Guide ."
}
{
    "Origin": "Registers a listener to be called when the primitive's status changes.",
    "Reference": "Registers a listener to be called when the primitive's state changes.",
    "HebCup": "Registers a listener to be called when the primitive's PrimitiveState changes."
}
{
    "Origin": "Sets the right border for a region of cells by manipulating the cell style of the individual\ncells on the right",
    "Reference": "Sets the right border style for a region of cells by manipulating the cell style of the individual\ncells on the right",
    "HebCup": "Sets the right border for a region of cells by manipulating the cell style of the individual\ncells on the right"
}
{
    "Origin": "Polling operation to poll on create delete certificate operation status.",
    "Reference": "Polling operation to poll on create recover certificate operation status.",
    "HebCup": "Polling operation to poll on create delete certificate operation status."
}
{
    "Origin": "Default name used for various components.",
    "Reference": "Sets default Joy application name used for various components.",
    "HebCup": "Default appName used for various components."
}
{
    "Origin": "If {@code keys = \"*abc*\"}, settings with a key containing \"abc\" are returned.",
    "Reference": "If {@code keyFilter = \"*abc*\"}, settings with a key containing \"abc\" are returned.",
    "HebCup": "If {@code KeyFilter = ``*abc*``} , settings with a key containing ``abc`` are returned."
}
{
    "Origin": "See Immutable Set Static Factory Methods for details.",
    "Reference": "See Unmodifiable Sets for details.",
    "HebCup": "See Unmodifiable Set Static Factory Methods for details."
}
{
    "Origin": "Gets the path from a full filename, which excludes the prefix, and\nalso excluding the final directory separator.",
    "Reference": "Gets the path from a full fileName, which excludes the prefix, and\nalso excluding the final directory separator.",
    "HebCup": "Gets the path from a full fileName , which excludes the prefix , and also excluding the final directory separator."
}
{
    "Origin": "Sets each pixel in the output image to sgn*log( 1 + sgn*input(x,y)) of the input image.",
    "Reference": "Sets each pixel in the output image to sgn*log( val + sgn*input(x,y)) of the input image.",
    "HebCup": "Sets each pixel in the output image to sgn*log( 1 + sgn*input(x,y)) of the input image."
}
{
    "Origin": "Get the Date that this Token expires",
    "Reference": "Get the ZonedDateTime that this Token expires",
    "HebCup": "Get the ZonedDateTime that this Token expires"
}
{
    "Origin": "Create an instance of {@link JAXBElement }{@code <}{@link CTMarkupRange }{@code >}}",
    "Reference": "Create an instance of {@link JAXBElement }{@code <}{@link CTMoveFromRangeEnd }{@code >}}",
    "HebCup": "Create an instance of {@link JAXBElement} {@code <} {@link CTMoveFromRangeEnd} {@code >}}"
}
{
    "Origin": "Finishes a drag to the given coordinate with no-op afterwards.",
    "Reference": "Finishes a drag to the given coordinate and executes a callback when doing so.",
    "HebCup": "Finishes a drag to the given coordinate with no-op afterwards."
}
{
    "Origin": "Sets the current data source for this DataCommunicator.",
    "Reference": "Sets the current data provider for this DataCommunicator.",
    "HebCup": "Sets the current Data Provider for this DataCommunicator."
}
{
    "Origin": "Sets the base section paint.",
    "Reference": "Sets the default section paint.",
    "HebCup": "Sets the Default Section paint."
}
{
    "Origin": "Creates a {@code For}-comprehension of 4 Iterables.",
    "Reference": "Creates a {@code For}-comprehension of 4 Options.",
    "HebCup": "Creates a {@code For}-comprehension of 4 Iterables."
}
{
    "Origin": "Takes SPIR-V as a sequence of 32-bit words, validates it, then compiles to GLSL.",
    "Reference": "Takes SPIR-V as a sequence of 32-bit words, validates it, then creates the internal compiler for translating to GLSL and performing reflection.",
    "HebCup": "Takes SPIR-V as a sequence of 32-bit words , validates it , then initializes to GLSL."
}
{
    "Origin": "The {@link MultimapSideInputHandlerFactory} is required to handle all multimap side inputs\ncontained within the {@link ExecutableProcessBundleDescriptor}.",
    "Reference": "The {@link SideInputHandlerFactory} is required to handle all side inputs contained within\nthe {@link ExecutableProcessBundleDescriptor}.",
    "HebCup": "The {@link SideInputHandlerFactory} is required to handle all multimap side inputs contained within the {@link ExecutableProcessBundleDescriptor}."
}
{
    "Origin": "Invoking this\nmethod from the transport thread is not a good idea.",
    "Reference": "Invoking this\nmethod from a transport thread is not a good idea.",
    "HebCup": "Invoking this\nmethod from the transport thread is not a good idea."
}
{
    "Origin": "Gets the type id for a type name.",
    "Reference": "Gets the type for a type name.",
    "HebCup": "Gets the type id for a type name."
}
{
    "Origin": "Use the given {@link Function}s to extract the values from the object under test into an array, this new array becoming\nthe object under test.",
    "Reference": "Use the given {@link Function}s to extract the values from the object under test into a list, this new list becoming\nthe object under test.",
    "HebCup": "Use the given {@link Function}s to extract the values from the List under test into an array , this new array becoming the List under test."
}
{
    "Origin": "Diff a watermark based on watermark type",
    "Reference": "Adjust a watermark based on watermark type by diff",
    "HebCup": "Diff a watermark based on watermark type"
}
{
    "Origin": "Get extra information for a given realm",
    "Reference": "Get extra information for a given provider",
    "HebCup": "Get extra information for a given Provider"
}
{
    "Origin": "Sets default lifetime in seconds to be used if heuristic freshness\ncalculation is not possible.",
    "Reference": "Sets default lifetime to be used if heuristic freshness calculation\nis not possible.",
    "HebCup": "Sets default lifetime in seconds to be used if heuristic freshness\ncalculation is not possible."
}
{
    "Origin": "Returns the RedeemData identified in the connected output, for either P2PKH scripts, P2PK\nor P2SH scripts.",
    "Reference": "Returns the RedeemData identified in the connected output, for either P2PKH, P2WPKH, P2PK\nor P2SH scripts.",
    "HebCup": "Returns the RedeemData identified in the connected output, for either P2PKH scripts, P2PK\nor P2SH scripts."
}
{
    "Origin": "This method creates a list of all properties (Field or Method) in dependency order,\nwhere dependencies are specified using the dependsUpon specifier of the Property annotation.",
    "Reference": "This method creates a list of all properties (field or method) in dependency order,\nwhere dependencies are specified using the dependsUpon specifier of the Property annotation.",
    "HebCup": "This method creates a list of all properties (Field or Method) in dependency order,\nwhere dependencies are specified using the dependsUpon specifier of the Property annotation."
}
{
    "Origin": "Add the given {@link HandlerMethodArgumentResolver}s.",
    "Reference": "Add the given {@link HandlerMethodArgumentResolver HandlerMethodArgumentResolvers}.",
    "HebCup": "Add the given {@link HandlerMethodArgumentresolvers}s."
}
{
    "Origin": "Creates {@code DatasetTrainer} with same training logic, but able to accept labels of given new type\nof labels.",
    "Reference": "Creates {@link DatasetTrainer} with same training logic, but able to accept labels of given new type\nof labels.",
    "HebCup": "Creates {@code DatasetTrainer} with same training logic, but able to accept labels of given new type\nof labels."
}
{
    "Origin": "The time as the number of millseconds since the epoch.",
    "Reference": "The time as the number of milliseconds since the epoch start.",
    "HebCup": "The EpochMillis as the number of millseconds since the epoch."
}
{
    "Origin": "Sets up the {@link HASendService} or the {@link HAReceiveService} as\nappropriate depending on whether or not this service is the first in the\npipeline order.",
    "Reference": "This implementation sets up the {@link HASendService} or the\n{@link HAReceiveService} as appropriate depending on whether or not\nthis service is the first in the pipeline order.",
    "HebCup": "Sets up the {@link HASendService} or the {@link HAReceiveService} as\nappropriate depending on whether or not this service is the first in the\npipeline order."
}
{
    "Origin": "SlotsChurn: How frequently slots of this size are re-allocated (SlotsRecycled/SlotsAllocated)",
    "Reference": "SlotsChurn: A measure of how frequently slots of this size are re-allocated\nprovided by totalAllocations/reservedSlots",
    "HebCup": "SlotsChurn: How frequently slots of this size are re-allocated (slotsAllocated/SlotsAllocated)"
}
{
    "Origin": "Get the fileContentMD5 property: Sets the file's MD5 hash.",
    "Reference": "Get the contentMD5 property: Sets the file's MD5 hash.",
    "HebCup": "Get the ContentMD5 property: Sets the file's MD5 hash."
}
{
    "Origin": "Decorates all {@link Service}s with the specified {@code decorator}.",
    "Reference": "Decorates all {@link HttpService}s with the specified {@code decorator}.",
    "HebCup": "Decorates all {@link Service}s with the specified {@code decorator}."
}
{
    "Origin": "Add an attribute.",
    "Reference": "Add an property.",
    "HebCup": "Add an Property."
}
{
    "Origin": "This option allows to extend configurations in each configuration file based on  location.",
    "Reference": "This option allows to extend configurations in each configuration file based on the karaf.home location.",
    "HebCup": "This option allows to extend configurations in each configuration file based on  location."
}
{
    "Origin": "Parses the response body into a {@link ManifestTemplate}.",
    "Reference": "Parses the response body into a {@link ManifestAndDigest}.",
    "HebCup": "Parses the response body into a {@link ManifestTemplate}."
}
{
    "Origin": "It will no longer\nreceive navigation events.",
    "Reference": "It will no longer receive callbacks.",
    "HebCup": "It will no longer\nreceive navigation events."
}
{
    "Origin": "Returns a new {@link Partitioner.OnVNodes} based on the partition key token.",
    "Reference": "Returns a new {@link Partitioner.OnVirtualNodes} based on the partition key token.",
    "HebCup": "Returns a new {@link Partitioner.OnVirtualNodes} based on the partition key token."
}
{
    "Origin": "Returns a string representation of this object; useful for testing and debugging.",
    "Reference": "Returns a string representation of this object.",
    "HebCup": "Returns a string representation of this object; useful for testing and debugging."
}
{
    "Origin": "The {@link #getProductType() product type} must be {@link EtdProductType#OPTION}\notherwise an exception will be thrown.",
    "Reference": "The {@link #getType() type} must be {@link EtdType#OPTION} otherwise an exception will be thrown.",
    "HebCup": "The {@link#getProductType () product type} must be {@link EtdType#OPTION} otherwise an exception will be thrown."
}
{
    "Origin": "add a child to the existing node",
    "Reference": "Add a child to the existing node.",
    "HebCup": "add a child to the existing node"
}
{
    "Origin": "Returns an offset time formed from this time and the specified offset.",
    "Reference": "Returns a local date-time formed from this time at the specified date.",
    "HebCup": "Returns an Local Date Time formed from this time and the specified offset."
}
{
    "Origin": "get Local video duration",
    "Reference": "get Local  duration",
    "HebCup": "get Local Duration"
}
{
    "Origin": "Creates a new internal Jetty connector.",
    "Reference": "Creates a new Jetty connection factory.",
    "HebCup": "Creates a new internal Jetty ConnectionFactory."
}
{
    "Origin": "Returns the module with the primary key or throws a {@link com.liferay.marketplace.NoSuchModuleException} if it could not be found.",
    "Reference": "Returns the module with the primary key or throws a {@link NoSuchModuleException} if it could not be found.",
    "HebCup": "Returns the module with the primary key or throws a {@link com.liferay.marketplace.NoSuchModuleException} if it could not be found."
}
{
    "Origin": "In that case, since\nthere is no FuncallExpression to evaluate, stack trace mechanism cannot record this call.",
    "Reference": "CallExpression to evaluate, stack trace mechanism cannot record this call.",
    "HebCup": "In that case, since there is no CallExpression to evaluate, stack trace mechanism cannot record this call."
}
{
    "Origin": "The {@link EcKeyCreateOptions#getKeyType() keyType} indicates the type of key to create.",
    "Reference": "The {@link CreateEcKeyOptions#getKeyType() keyType} indicates the type of key to create.",
    "HebCup": "The {@link CreateEcKeyOptions#getKeyType () keyType} indicates the type of key to create."
}
{
    "Origin": "The same as {@link #indexReference(IndexDescriptor)}, except no schema lock is taken.",
    "Reference": "The same as {@link #indexReference(IndexDescriptor2)}, except no schema lock is taken.",
    "HebCup": "The same as {@link#IndexDescriptor2 (IndexDescriptor)} , except no schema lock is taken."
}
{
    "Origin": "(Just an alias/synonym for getJaxbElement())",
    "Reference": "(An alias/synonym for older getJaxbElement(), but now throws exception)",
    "HebCup": "(Just an alias/synonym for is ())"
}
{
    "Origin": "Setter for {@link #allowOrigins}",
    "Reference": "Setter for {@link #allowedOrigins}",
    "HebCup": "Setter for {@link#allowedOrigins}"
}
{
    "Origin": "Adds many members to this action profile group.",
    "Reference": "Adds all members to this action profile group with default weight.",
    "HebCup": "Adds many memberInstances to this action profile group."
}
{
    "Origin": "This method\nperforms three checks.",
    "Reference": "This method\nperforms four checks.",
    "HebCup": "This method\nperforms three checks."
}
{
    "Origin": "This will scramble the decoded string\nand eventually result in an authentication Assert.failure.",
    "Reference": "This will scramble the decoded string\nand eventually result in an IllegalArgumentException.",
    "HebCup": "This will scramble the decoded string\nand eventually result in an authentication Assert.failure."
}
{
    "Origin": "`DEPRECATED`: Maximal total size of uploaded files (in bytes)",
    "Reference": "`DEPRECATED`: Maximal total size of uploaded files (in bytes)  [Deprecated since version VERSION]",
    "HebCup": "`DEPRECATED`: Maximal total size of uploaded files (in bytes)"
}
{
    "Origin": "Specifies the text displayed by the checkbox.",
    "Reference": "Specifies the text displayed by the %type%.",
    "HebCup": "Specifies the text displayed by the checkbox."
}
{
    "Origin": "In a nullable type, get the schema for the non-nullable type.",
    "Reference": "If the union schema is a nullable union, get the schema for the non-nullable type.",
    "HebCup": "In a nullable type , get the unionSchema for the non-nullable type."
}
{
    "Origin": "Gets an abstract representation of the engine's {@link Filesystem}.",
    "Reference": "Gets an abstract representation of the engine's {@link FileSystem}.",
    "HebCup": "Gets an abstract representation of the engine's {@link FileSystem}."
}
{
    "Origin": "Returns the user icon image with the given identifier, or null if invalid.",
    "Reference": "Returns the user icon image with the given identifier,\nor the default image if invalid.",
    "HebCup": "Returns the user icon image with the given identifier , or null int invalid."
}
{
    "Origin": "For more\ninformation about the vault locking process,",
    "Reference": "For more information about the\nvault locking process, Amazon Glacier Vault Lock.",
    "HebCup": "For more\ninformation about the vault locking process,"
}
{
    "Origin": "Sets mBadgeScale to 1 or 0, animating if oldCount or newCount is 0\n(the badge is being added or removed).",
    "Reference": "Sets mBadgeScale to 1 or 0, animating if wasBadged or isBadged is false\n(the badge is being added or removed).",
    "HebCup": "Sets mBadgeScale to 1 or 0 , animating if wasBadged or newCount is 0 (the badge is being added or removed)."
}
{
    "Origin": "Glacier completes the job.",
    "Reference": "DescribeJob.",
    "HebCup": "Glacier completes the job."
}
{
    "Origin": "Returns true if the button is active and clickable.",
    "Reference": "Returns true if the %type% is active and clickable.",
    "HebCup": "Returns true if the button is active and clickable."
}
{
    "Origin": "Constructor that registers all players based on the given configuration,\nframe and registry.",
    "Reference": "Registers all players based on the given configuration, frame and\nregistry.",
    "HebCup": "Constructor that registers all players based on the given configuration,\nframe and registry."
}
{
    "Origin": "Check equality between a String and a char[] object.",
    "Reference": "Check equality between a CharSequence and a char[] object.",
    "HebCup": "Check equality between a CharSequence and a char[] object."
}
{
    "Origin": "Return true if this \nis used in type documentation (classes or interfaces).",
    "Reference": "Returns true if this {@code Taglet} can be used in type documentation (classes or interfaces).",
    "HebCup": "Return sites.contains if this is used in type documentation (classes or interfaces)."
}
{
    "Origin": "Registers this IQ provider into given ProviderManager.",
    "Reference": "Registers this IQ provider into ProviderManager.",
    "HebCup": "Registers this IQ provider into given ProviderManager."
}
{
    "Origin": "Gets the NamedView after adding in the parameters specified.",
    "Reference": "Gets the View after adding in the parameters specified.",
    "HebCup": "Gets the NamedView.class after adding in the parameters specified."
}
{
    "Origin": "Returns a default credential for the application.",
    "Reference": "Returns the Application Default Credentials.",
    "HebCup": "Returns a ApplicationDefault credential for the application."
}
{
    "Origin": "Get Catch Weight Menge in Preiseinheit.",
    "Reference": "Get Abgerechnet.",
    "HebCup": "Get Catch Weight Menge in Preiseinheit."
}
{
    "Origin": "Returns the last sync d l object in the ordered set where companyId = ?",
    "Reference": "Returns the last sync d l object in the ordered set where repositoryId = ?",
    "HebCup": "Returns the last sync d l object in the ordered set where repositoryId = ?"
}
{
    "Origin": "Chosen bits are [8, 6, 7]",
    "Reference": "Chosen bits are [11, 6, 4]",
    "HebCup": "Chosen bits are [8, 6, 4]"
}
{
    "Origin": "Method wasStarted returns true if this job was started",
    "Reference": "Method isStarted returns true if this underlying job has started running",
    "HebCup": "Method wasStarted returns true if this job was StartedRunning"
}
{
    "Origin": "This month-day will be passed to the formatter\n{@link DateTimeFormatter#print(TemporalAccessor) print method}.",
    "Reference": "This month-day will be passed to the formatter\n{@link DateTimeFormatter#format(TemporalAccessor) print method}.",
    "HebCup": "This month-day will be passed to the formatter {@link DateTimeFormatter#format (TemporalAccessor) format method}."
}
{
    "Origin": "Provides a list of all connection wrappers corresponding to a given environment.",
    "Reference": "Provides a list of all connection configs corresponding to a given environment.",
    "HebCup": "Provides a list of all connection Configs corresponding to a given environment."
}
{
    "Origin": "Returns the calendar booking with the primary key or throws a {@link com.liferay.calendar.NoSuchBookingException} if it could not be found.",
    "Reference": "Returns the calendar booking with the primary key or throws a {@link NoSuchBookingException} if it could not be found.",
    "HebCup": "Returns the calendar booking with the primary key or throws a {@link com.liferay.calendar.NoSuchBookingException} if it could not be found."
}
{
    "Origin": "If no sld file, throws an exception",
    "Reference": "If no sld file, throws an appropriate exception",
    "HebCup": "If no sld file, throws an exception"
}
{
    "Origin": "The endpoint type.",
    "Reference": "The action to do.",
    "HebCup": "The action type."
}
{
    "Origin": "Walk through the jdk11 directory and create a mapping, {@link #jdk11StubFiles}, from file\nname to the class contained with in it.",
    "Reference": "Walk through the jdk directory and create a mapping, {@link #jdkStubFiles}, from file name to\nthe class contained with in it.",
    "HebCup": "Walk through the jdk11 directory and create a mapping , {@link#jdkStubFiles} , from file name to the class contained with in it."
}
{
    "Origin": "Structural Specification for more details.",
    "Reference": "The\nOWL 2 Structural Specification for more details.",
    "HebCup": "Structural Specification for more details."
}
{
    "Origin": "Remove the mapping for the field name, and notify listeners about\nthe change including the {@link EntryEventSource}.",
    "Reference": "Remove the mapping for the field name, and notify listeners about\nthe change including the {@link EntriesEventSource}.",
    "HebCup": "Remove the mapping for the field name , and notify listeners about the change including the {@link EntriesEventSource}."
}
{
    "Origin": "Validates failover on redeploy of a @Stateful bean containing injected resource manager connection factories",
    "Reference": "Validates failover on redeploy of a @Stateful bean containing injected JDBC resource manager connection factories",
    "HebCup": "Validates failover on redeploy of a @Stateful bean containing injected JDBC Resource Manager Connection factories"
}
{
    "Origin": "Get client socket for connection.",
    "Reference": "Get client endpoints for connection.",
    "HebCup": "Get client socket for connection."
}
{
    "Origin": "or throws a {@link com.liferay.marketplace.NoSuchModuleException} if it could not be found.",
    "Reference": "or throws a {@link NoSuchModuleException} if it could not be found.",
    "HebCup": "or throws a {@link com.liferay.marketplace.NoSuchModuleException} if it could not be found."
}
{
    "Origin": "This is primarily intended for cases where the record needs to be\nre-transmitted with a new sequence number.",
    "Reference": "Used, if record needs to be re-transmitted with a new sequence number.",
    "HebCup": "This is primarily intended for cases where the record needs to be\nre-transmitted with a new sequence number."
}
{
    "Origin": "Create or obtain a {@link PreparedStatement} from my pool.",
    "Reference": "Creates or obtains a {@link PreparedStatement} from my pool.",
    "HebCup": "Create or obtain a {@link PreparedStatement} from my pool."
}
{
    "Origin": "Delete file system nodes\n### Functional Description: Delete nodes (room, folder, file).",
    "Reference": "Delete nodes\n### Functional Description: Delete nodes (room, folder or file).",
    "HebCup": "Delete file system nodes ### Functional Description: Auth Token (room, folder, file)."
}
{
    "Origin": "Casts the {@code DateTime} to the same chronology as this ChronoLocalDate.",
    "Reference": "Casts the {@code DateTime} to {@ChronoLocalDate} with the same chronology.",
    "HebCup": "Casts the {@code DateTime} to the same chronology as this.equals ChronoLocalDate."
}
{
    "Origin": "Returns the microblogs entry with the primary key or throws a {@link com.liferay.microblogs.NoSuchEntryException} if it could not be found.",
    "Reference": "Returns the microblogs entry with the primary key or throws a {@link NoSuchEntryException} if it could not be found.",
    "HebCup": "Returns the microblogs entry with the primary key or throws a {@link com.liferay.microblogs.NoSuchEntryException} if it could not be found."
}
{
    "Origin": "Returns a database node representation of the node.",
    "Reference": "Creates a database node copy from this node.",
    "HebCup": "Returns a database node representation of the node."
}
{
    "Origin": "Get cache affinity awareness group which is compatible with the mapping.",
    "Reference": "Get cache Partition Awareness group which is compatible with the mapping.",
    "HebCup": "Get Cache Partition Awareness Group which is compatible with the mapping."
}
{
    "Origin": "Checks if the specified expression provides an existing permission.",
    "Reference": "Checks if the specified expression contains valid permissions.",
    "HebCup": "Checks if the specified expression provides an existing permission."
}
{
    "Origin": "Creates a new {@link RedisSerializationContext} using a {@link SerializationPair#raw()} serialization pair.",
    "Reference": "Creates a new {@link RedisSerializationContext} using a {@link SerializationPair#raw() ByteBuffer} serialization\npair.",
    "HebCup": "Creates a new {@link RedisSerializationContext} using a {@link RedisSerializerToSerializationPairAdapter#raw ()} serialization pair."
}
{
    "Origin": "The name of algorithm used to sign EDI message.",
    "Reference": "The algorithm used to sign EDI message.",
    "HebCup": "The name of algorithm used to sign EDI message."
}
{
    "Origin": "Get the map of all processed certificates until now.",
    "Reference": "Get the set of all processed certificates until now.",
    "HebCup": "Get the Set of all processed certificates until now."
}
{
    "Origin": "Get information about a batch-processing request with a specified ID.",
    "Reference": "Gets information about a batch-processing job with a specified ID.",
    "HebCup": "Get information about a batch-processing request with a specified ID."
}
{
    "Origin": "Finds all {@link UnderFileSystemFactory} from the extensions directory and caches.",
    "Reference": "Finds all {@link UnderFileSystemFactory} from the extensions directory.",
    "HebCup": "Finds all {@link UnderFileSystemFactory} from the extensions directory and caches."
}
{
    "Origin": "This method choses an interface in\norder of preference:\n1. neither loopback nor point to point\n2. point to point\n3. loopback",
    "Reference": "This method chooses an interface in\norder of preference:\n1. neither loopback nor point to point\n   ( prefer interfaces with dual IP support )\n2. point to point\n3. loopback",
    "HebCup": "This method choses an interface in\norder of preference:\n1. neither loopback nor point to point\n2. point to point\n3. loopback"
}
{
    "Origin": "This is measured from the bottom, that is, the quantile estimation with the level 99% corresponds to\nthe smallest 99% observations and 1% of the observation are above that level.",
    "Reference": "This is measured from the bottom, that is, Thus the quantile estimation with the level 99% corresponds to\nthe smallest 99% observations.",
    "HebCup": "This is measured from the bottom , that is , the quantileResultWithExtrapolationFromUnsorted estimation with the level 99% corresponds to the smallest 99% observations and 1% of the observation are above that level."
}
{
    "Origin": "Creates an exception from an service id and version.",
    "Reference": "Creates an exception from an API id and version.",
    "HebCup": "Creates an exception from an api Id and version."
}
{
    "Origin": "Returns completed style ID for the child style.",
    "Reference": "Returns completed style identifier for the child style.",
    "HebCup": "Returns completed style ID for the child style."
}
{
    "Origin": "Generates an in-memory key for an service, used to index the app for later quick\nretrieval.",
    "Reference": "Generates an in-memory key for an API, used to index the app for later quick\nretrieval.",
    "HebCup": "Generates an in-memory key for an Api , used to index the app for later quick retrieval."
}
{
    "Origin": "Execute an {@link Action} locally, returning that {@link Task} used to track it, and linking an {@link TaskListener}.",
    "Reference": "Execute an {@link ActionType} locally, returning that {@link Task} used to track it, and linking an {@link TaskListener}.",
    "HebCup": "Execute an {@link ActionType} locally , returning that {@link Task} used to track it , and linking an {@link TaskListener}."
}
{
    "Origin": "Create new {@link BaseEvent} with {@link org.mule.runtime.api.message.Error} instance set.",
    "Reference": "Create new {@link CoreEvent} with {@link org.mule.runtime.api.message.Error} instance set.",
    "HebCup": "Create new {@link CoreEvent} with {@link org.mule.runtime.api.message.Error} instance set."
}
{
    "Origin": "Returns a string representation of the specified value.",
    "Reference": "Returns a chopped and quoted token representation of the specified value.",
    "HebCup": "Returns a QuotedToken representation of the specified value."
}
{
    "Origin": "So, if the given {@link Quaterniond} is\nthe identity (does not apply any additional rotation), the reflection plane will be z=0, offset by the given .",
    "Reference": "So, if the given {@link Quaterniondc} is\nthe identity (does not apply any additional rotation), the reflection plane will be z=0, offset by the given .",
    "HebCup": "So , if the given {@link Quaterniondc} is the identity (does not apply any additional rotation) , the reflection plane will be z=0 , offset by the given ."
}
{
    "Origin": "The specified uses maps a service type name to the modules\nusing the service type and that may or may not be present\nthe given modules.",
    "Reference": "The specified services maps a service type name to the modules\nusing the service type which may be empty if no observable module uses\nthat service.",
    "HebCup": "The specified serviceToUses maps a service type name to the modules using the service type and that may or may not be present the given modules."
}
{
    "Origin": "`DEPRECATED`: Customer activation code string: * valid only for types `free` and `demo` * for `pay` customers it is empty",
    "Reference": "`DEPRECATED`: Customer activation code string: * valid only for types `free` and `demo` * for `pay` customers it is empty  [Deprecated since version VERSION]",
    "HebCup": "`DEPRECATED`: Customer activation code string: * valid only for types `free` and `demo` * for `pay` customers it is empty"
}
{
    "Origin": "Process a goog.forwardDeclare() call and record the specified forward declaration.",
    "Reference": "Marks a goog.forwardDeclare call for removal.",
    "HebCup": "Process a goog.forwardDeclare() call and record the specified forward Declarations."
}
{
    "Origin": "Returns an Intent to start the full editor for the given raw contact.",
    "Reference": "Returns an Intent to start the compact editor for the given raw contact.",
    "HebCup": "Returns an Intent to start the full editor for the given contact Lookup."
}
{
    "Origin": "Get the DataService for the clientId",
    "Reference": "Get the anonymous subclass of GrpcDataService for the clientId",
    "HebCup": "Get the GrpcDataService for the clientId"
}
{
    "Origin": "Build a response with message and status.",
    "Reference": "Build a response with status.",
    "HebCup": "Build a response with message and status."
}
{
    "Origin": "Returns the contents of the specified node.",
    "Reference": "Returns textual contents for the specified node.",
    "HebCup": "Returns the texts of the specified node."
}
{
    "Origin": "{@code inetAddressList} will be null and {@code throwable} will be non-null in the case of a\nfailed DNS lookup.",
    "Reference": "{@code inetAddressList} will be null and {@code ioe} will be non-null in the case of a\nfailed DNS lookup.",
    "HebCup": "{@code inetAddressList} will be null and {@code IOException} will be non-null in the case of a failed DNS lookup."
}
{
    "Origin": "Returns partition counters page identifier, page with caches in cache group sizes.",
    "Reference": "Returns page identifier related to page with logical cache sizes in cache group.",
    "HebCup": "Returns partition Cache Sizes Page identifier, page with caches in cache group sizes."
}
{
    "Origin": "After the {@link ServiceLocator} is created, we specifically do not call\nany more methods on it: the locator must instantiate the Immediate\nservice without any further prompting to the locator.",
    "Reference": "After the {@link InstanceManager} is created, we specifically do not call\nany more methods on it: the locator must instantiate the Immediate\nservice without any further prompting to the locator.",
    "HebCup": "After the {@link InstanceManager} is created , we specifically do not call any more methods on it: the locator must instantiate the Immediate service without any further prompting to the locator."
}
{
    "Origin": "Adds a new tab.",
    "Reference": "Adds a new tab at the end.",
    "HebCup": "Adds a new tab."
}
{
    "Origin": "Gets the list of event listener delegates.",
    "Reference": "Gets the list of Event Handler delegates.",
    "HebCup": "Gets the list of event Handlers delegates."
}
{
    "Origin": "Adds the number to the provided map under the provided field name if it's should be included.",
    "Reference": "Adds the string value to the provided map under the provided field name,\nif it should be included.",
    "HebCup": "Adds the > to the provided map under the provided field name if it's should be included."
}
{
    "Origin": "Get language code from internal link, especially for the zh variants, will get \"wiki\" or \"zh-*\"",
    "Reference": "Get language variant code from a Uri, especially for the zh variants, will get \"wiki\" or \"zh-*\"",
    "HebCup": "get Language Variant From internal link, especially for the zh variants, will get ``wiki`` or ``zh-*``"
}
{
    "Origin": "Returns true if the current thread is in any way a child of a\n{@link LegacyCommand} thread.",
    "Reference": "Returns true if the given thread is in any way a child of a\n{@link LegacyCommand} thread.",
    "HebCup": "Returns true if the Legacy thread is in any way a child of a {@link LegacyCommand} thread."
}
{
    "Origin": "Obtains an instance based on the currency pair, specifying the sensitivity currency.",
    "Reference": "Obtains an instance, specifying sensitivity currency.",
    "HebCup": "Obtains an instance based on the sensitivityCurrency pair , specifying the sensitivity currency."
}
{
    "Origin": "Return the SQL that led to the problem.",
    "Reference": "Return the SQL that led to the problem (if known).",
    "HebCup": "Return the SQL that led to the problem."
}
{
    "Origin": "Group: producer",
    "Reference": "Group: consumer",
    "HebCup": "Group: producer"
}
{
    "Origin": "Weighting is a ratio from 0 to 1, where 0 disables the feature and 1 forces the same data centre if possible.",
    "Reference": "Weighting is a ratio from 0 to 1, where 0 disables the feature and 1 forces the same rack if possible.",
    "HebCup": "Weighting is a ratio from 0 to 1, where 0 disables the feature and 1 forces the same data centre if possible."
}
{
    "Origin": "Creates query for the given queryString.",
    "Reference": "Queries this contact source for the given queryString.",
    "HebCup": "Creates Source for the given queryString."
}
{
    "Origin": "Get the maximum size of a text message buffer.",
    "Reference": "Get the maximum size of a text message buffer (for streaming writing)",
    "HebCup": "Get the maximum size of a Text Message Buffer buffer."
}
{
    "Origin": "Sets the value of the descrption property.",
    "Reference": "Sets the value of the description property.",
    "HebCup": "Sets the value of the Description property."
}
{
    "Origin": "Extract the values of given field or property from the array's elements under test into a new array, this new array\nbecoming the array under test with type.",
    "Reference": "Extract the values of given field or property from the array's elements under test into a new list, this new list of the provided type\nbecoming the object under test.",
    "HebCup": "Extract the values of given field or property from the array's elements under test into a newListAssertInstance array , this newListAssertInstance array becoming the array under test with type."
}
{
    "Origin": "Test of contextual method, of class Grades.",
    "Reference": "Test of contextual method, of class GradeUtil.",
    "HebCup": "Test of contextual method, of class GradeUtil."
}
{
    "Origin": "Locks existing inodes on the specified path, in the specified {@link LockMode}.",
    "Reference": "Locks existing inodes on the specified path, in the specified {@link LockPattern}.",
    "HebCup": "Locks existing inodes on the specified path , in the specified {@link LockPattern}."
}
{
    "Origin": "The meta-property for the {@code weekendDays} property.",
    "Reference": "The meta-property for the {@code startYear} property.",
    "HebCup": "The meta-property for the {@code startYear} property."
}
{
    "Origin": "The extra code is defined in the imagej.legacy.patches package, as\ndescribed in the documentation for {@link #insertMethod(String, String)}.",
    "Reference": "The extra code is defined in the imagej.legacy.patches package, as\ndescribed in the documentation for {@link #insertNewMethod(String, String)}.",
    "HebCup": "The extra code is defined in the imagej.legacy.patches package, as\ndescribed in the documentation for {@link #insertMethod(String, String)}."
}
{
    "Origin": "KafkaMetrics of sensors which use SampledStat should be synchronized on the Sensor object\nto allow concurrent reads and updates.",
    "Reference": "KafkaMetrics of sensors which use SampledStat should be synchronized on the same lock\nfor sensor record and metric value read to allow concurrent reads and updates.",
    "HebCup": "KafkaMetrics of sensors which use SampledStat should be synchronized on the Sensor object\nto allow concurrent reads and updates."
}
{
    "Origin": "Recursively sets the env variable to this pattern and all its children",
    "Reference": "Recursively sets the env variable to this pattern in this and in all its children",
    "HebCup": "Recursively sets the env variable to this pattern and all its children"
}
{
    "Origin": "Returns the button's text's font face as default, serif, sans\nserif, or monospace.",
    "Reference": "Returns the text font face of the %type% as default, serif, sans\nserif, or monospace.",
    "HebCup": "Returns the %type%'s text's font face as default, serif, sans serif, or monospace."
}
{
    "Origin": "Default implementation returns {@link ControllerResult#RESULT_CODE_NOT_SUPPORTED}.",
    "Reference": "Default implementation returns {@link SessionResult#RESULT_CODE_NOT_SUPPORTED}.",
    "HebCup": "Default implementation returns {@link SessionResult#RESULT_CODE_NOT_SUPPORTED}."
}
{
    "Origin": "This caches the original file length, and throws an IOException\nif the output file length is different from the current input file length.",
    "Reference": "This uses the original file length, and throws an IOException\nif the output file length is different from the current input file length.",
    "HebCup": "This caches the original destFile.to length , and throws an IOException if the output destFile.to length is different from the current input destFile.to length."
}
{
    "Origin": "This will calculate the number of required connection for routing and\nrequest messages.",
    "Reference": "Calculates the number of required connections for routing and request messages.",
    "HebCup": "This will calculate the number of required connection for routing and\nrequest messages."
}
{
    "Origin": "Returns the name of the parent skill from the Locale file",
    "Reference": "Returns the name of the parent skill from the LocaleManager file",
    "HebCup": "Returns the name of the parent skill from the plugin file"
}
{
    "Origin": "Sets the quorum name for operations.",
    "Reference": "Sets the split brain protection name for operations.",
    "HebCup": "Sets the split Brain Protection Name for operations."
}
{
    "Origin": "Configure the distribution options to use.",
    "Reference": "Configures which distribution options to use.",
    "HebCup": "Configure the distribution options to use."
}
{
    "Origin": "Returns the SSL manager wrapping the SSL context and engine.",
    "Reference": "Returns the engine status.",
    "HebCup": "Returns the SSL Engine Result.Status wrapping the SSL context and engine."
}
{
    "Origin": "Loads a new module from the given ResourceLoader and may or may not immediately scan associated\ndirectories for resources, depending on parameters.",
    "Reference": "Loads a new module from the given ResourceLoader and may or may not immediately scan associated\ndirectories for resources or consider it monolithic, depending on parameters.",
    "HebCup": "Loads a new module from the given ResourceLoader and may or may not immediately scan associated\ndirectories for resources, depending on parameters."
}
{
    "Origin": "Return the {@code HttpClient} used for\n{@linkplain #createAsyncRequest(URI, HttpMethod) asynchronous execution}.",
    "Reference": "Return the {@code CloseableHttpAsyncClient} used for\n{@linkplain #createAsyncRequest(URI, HttpMethod) asynchronous execution}.",
    "HebCup": "Assert.state the {@code HttpClient} used for {@linkplain#createAsyncRequest (URI , HttpMethod) asynchronous execution}."
}
{
    "Origin": "Returns a string representation of this object; useful for testing and debugging.",
    "Reference": "Returns a string representation of this object.",
    "HebCup": "Returns a string representation of this object; useful for testing and debugging."
}
{
    "Origin": "This method subscribes the Observable emiting {@link ViewState} over time to the passed\nconsumer.",
    "Reference": "This method subscribes the Observable emitting {@code ViewState} over time to the passed\nconsumer.",
    "HebCup": "This method subscribes the Observable emiting {@link throw} over time to the passed consumer."
}
{
    "Origin": "Make sure we can successfully create a Job Started Event.",
    "Reference": "Make sure we can successfully create a Job Scheduled Event.",
    "HebCup": "Make sure we can successfully create a Job Started Event."
}
{
    "Origin": "Set the values for some metadata keys on a collection alias.",
    "Reference": "Set the values for some properties keys on a collection alias.",
    "HebCup": "Set the values for some Properties keys on a collection alias."
}
{
    "Origin": "Register a null channel in the given BeanDefinitionRegistry.",
    "Reference": "Register a null channel in the application context.",
    "HebCup": "Register a null channel in the given BeanDefinitionthis.beanFactory."
}
{
    "Origin": ":",
    "Reference": ":\n   property1 = value1,value2,\"a quoted value\",'another quoted value'",
    "HebCup": ":"
}
{
    "Origin": "Call when data read from net.",
    "Reference": "Call when data are read from net.",
    "HebCup": "Call when data read from net."
}
{
    "Origin": "Return a {@link ByteArrayInputStream} over some bytes at the beginning of the data.",
    "Reference": "Return a {@link HandshakeMessageInput} over some bytes at the beginning of the data.",
    "HebCup": "Return a {@link HandshakeMessageInput} over some bytes at the beginning of the data."
}
{
    "Origin": "Creates a new leader {@link FileSystemMaster} from a copy of the journal along with its\ndependencies, and returns the master registry containing that master.",
    "Reference": "Creates a new leader {@link FileSystemMaster} from a copy of the journal along with its\ndependencies, and returns the master registry and the journal system.",
    "HebCup": "Creates a new leader {@link FileSystemMaster} from a copy of the journal along with its dependencies, and returns the Fs Master Resource containing that master."
}
{
    "Origin": "Gets the specific \"action\" for this activity.",
    "Reference": "Gets the type for this activity.",
    "HebCup": "Gets the specific \"action\" for this activity."
}
{
    "Origin": "The official ISO-8601 standard does not define eras, however {@code ISOChronology} does.",
    "Reference": "The official ISO-8601 standard does not define eras, however {@code ISOChrono} does.",
    "HebCup": "The official ISO-8601 standard does not define eras , however {@code ISOChrono} does."
}
{
    "Origin": "Creates a SingleItemSketch on the heap given a Memory.",
    "Reference": "Creates a SingleItemSketch on the heap given a SingleItemSketch Memory image and a seed.",
    "HebCup": "Creates a SingleItemSketch on the heap given a Memory."
}
{
    "Origin": "Test blob existence check.",
    "Reference": "Test delete of nonexistent blob.",
    "HebCup": "Test blob Delete Not Found."
}
{
    "Origin": "Creates a new block blob, or updates the content of an existing block blob.",
    "Reference": "Creates a new block blob.",
    "HebCup": "Creates a new block blob, or updates the content of an existing block blob."
}
{
    "Origin": "The {@link KeyCreateOptions#getExpires() expires} and {@link",
    "Reference": "The {@link CreateKeyOptions#getExpiresOn() expires} and {@link",
    "HebCup": "The {@link CreateKeyOptions#getExpires () expires} and {@link"
}
{
    "Origin": "Report the lower bound constant",
    "Reference": "Report the lower bound value",
    "HebCup": "Report the lower bound Named"
}
{
    "Origin": "Parses and returns a string, delimited by a space or semicolon.",
    "Reference": "Parses and returns a string, delimited by a semicolon or a space.",
    "HebCup": "Parses and returns a StringBuilder , delimited by a space or semicolon."
}
{
    "Origin": "Copies or downsamples the given HLLmode sketch to tgtLgK, HLL_8.",
    "Reference": "Copies or downsamples the given HLLmode sketch to tgtLgK, HLL_8, on the heap.",
    "HebCup": "Copies or downsamples the given HLLmode sketch to tgtLgK, HLL_8."
}
{
    "Origin": "Read {@link DataMap} from InputStream.",
    "Reference": "Read JSON encoded {@link DataMap} from InputStream.",
    "HebCup": "Read {@link DataMap} from InputStream."
}
{
    "Origin": "Tests for the {@link BaseFileSystem#delete(AlluxioURI, DeleteOptions)} method.",
    "Reference": "Tests for the {@link BaseFileSystem#delete(AlluxioURI, DeletePOptions)} method.",
    "HebCup": "Tests for the {@link BaseFileSystem#delete (AlluxioURI , DeletePOptions.new)} method."
}
{
    "Origin": "Tells if this parameter declaration is varargs.",
    "Reference": "Tells if this variable is a varargs parameter element",
    "HebCup": "Tells if this parameter declaration is varargsmethodElement.isVarArgs"
}
{
    "Origin": "Returns a newly-created decorator that decorates a {@link Service} with a new {@link CorsService}\nbased on the properties of this builder.",
    "Reference": "Returns a newly-created decorator that decorates an {@link HttpService} with a new {@link CorsService}\nbased on the properties of this builder.",
    "HebCup": "Returns a newly-created decorator that decorates a {@link ?} with a new {@link CorsService} based on the properties of this builder."
}
{
    "Origin": "Creates a backup of current database contents to the directory {@link Exporter#getBackupFolderPath(String)}",
    "Reference": "Backs up the active book to the directory {@link Exporter#getBackupFolderPath(String)}.",
    "HebCup": "Creates a Book of current database contents to the directory {@link Exporter#getBackupFolderPath (String)}"
}
{
    "Origin": "The provided {@link XMPPError XMPPError}.",
    "Reference": "The provided {@link StanzaError XMPPError}.",
    "HebCup": "The provided {@link StanzaError StanzaError}."
}
{
    "Origin": "Returns the StatusSelectorMenu corresponding to the given\nprotocolProvider.",
    "Reference": "Returns the StatusEntry corresponding to the given\nprotocolProvider.",
    "HebCup": "Returns the StatusEntry corresponding to the given protocolProvider."
}
{
    "Origin": "Creates a {@link JobSpec} or {@link URI} from the {@link AvroJobSpec} record.",
    "Reference": "Creates {@link JobSpec} from the {@link AvroJobSpec} record.",
    "HebCup": "Creates a {@link JobSpec} or {@link URI} from the {@link AvroJobSpec} record."
}
{
    "Origin": "Inserts the given rich-text content at the position returned from\n{@code getAbsolutePosition(paragraphIndex, columnIndex)}.",
    "Reference": "Inserts the given rich-text content at the position returned from\n{@code getAbsolutePosition(paragraphIndex, columnPosition)}.",
    "HebCup": "Inserts the given rich-text content at the position returned from {@code getAbsolutePosition (paragraphIndex , columnPosition)}."
}
{
    "Origin": "Gets the appropriate value from the node and sets it on the appropriate field of the pojo.",
    "Reference": "Gets the appropriate value from the container and sets it on the appropriate field of the pojo.",
    "HebCup": "Gets the appropriate value from the PropertyContainer and sets it on the appropriate field of the pojo."
}
{
    "Origin": "Gets the maxPassagesPerDocument.",
    "Reference": "Gets the maxPerDocument.",
    "HebCup": "Gets the maxPerDocument."
}
{
    "Origin": "Obtain the default query timeout that will be used for {@link java.sql.Statement Statement}s\ncreated from this connection.",
    "Reference": "Gets the default query timeout that will be used for {@link java.sql.Statement Statement}s created from this\nconnection.",
    "HebCup": "Obtain the default Query Timeout Seconds that will be used for {@link java.sql.Statement Statement}s created from this connection."
}
{
    "Origin": "registerSludgeDrop               | NBTTag with an ItemStack saved on it, with the weight on the \"value\" attribute,\n                                 | A ValuedItem with item and value set.",
    "Reference": "registerSludgeDrop               | NBTTag with an @Nonnull ItemStack saved on it, with the weight on the \"value\" attribute,\n                                 | A ValuedItem with item and value set.",
    "HebCup": "registerSludgeDrop               | NBTTag with an ItemStack saved on it, with the weight on the \"value\" attribute,\n                                 | A ValuedItem with item and value set."
}
{
    "Origin": "NOTE:The specified database subnet group must not be\nassociated with any DB instances.",
    "Reference": "The specified database subnet group must not be associated with any\nDB instances.",
    "HebCup": "NOTE:The specified database subnet group must not be\nassociated with any DB instances."
}
{
    "Origin": "Stop client.",
    "Reference": "Stop benchmark.",
    "HebCup": "Stop client."
}
{
    "Origin": "First get priority from {@link FootFlagEncoder#handlePriority(ReaderWay, int)} then evaluate wheelchair specific\ntags.",
    "Reference": "First get priority from {@link FootFlagEncoder#handlePriority(ReaderWay, Integer)} then evaluate wheelchair specific\ntags.",
    "HebCup": "First get priority from {@link FootFlagEncoder#handlePriority (ReaderWay , Integer)} then evaluate wheelchair specific tags."
}
{
    "Origin": "Return the OperationNames available here.",
    "Reference": "Return the operations available here.",
    "HebCup": "Return the Operations available here."
}
{
    "Origin": "Helper Method: gets Concept value of a payroll between 2 dates (Old Compatibility)",
    "Reference": "Helper Method: gets Concept value of a payroll between 2 dates",
    "HebCup": "Helper Method: gets Concept value of a payroll between 2 dates (Old Compatibility)"
}
{
    "Origin": "Creates new {@link AggregationExpression} that returns the day of the month for a date as a number between 1 and\n31 in the factory timezone (default UTC).",
    "Reference": "Creates new {@link AggregationExpression} that returns the day of the month for a date as a number between 1 and\n31.",
    "HebCup": "Creates new {@link AggregationExpression} that returns the Day Of Month.day Of the month for a date as a number between 1 and 31 in the factory timezone (default UTC)."
}
{
    "Origin": "Tests that the registration request servlet can process a V2 RegistrationRequest from\na VERSION-beta node.",
    "Reference": "Tests that the registration request servlet can process a V2 RegistrationRequest from\na 3.x node.",
    "HebCup": "Tests that the registration config servlet can process a V2 RegistrationRequest from a VERSION-beta node."
}
{
    "Origin": "Parse a CSV into a list of ImportedGrade objects.",
    "Reference": "Parse a CSV into a list of {@link ImportedRow} objects.",
    "HebCup": "Parse a CSV into a list of ImportedSpreadsheet objects."
}
{
    "Origin": "If currently visiting a method, get the method's Method object",
    "Reference": "If currently visiting a field, get the field's Field object",
    "HebCup": "If currently visiting a field , get the method's field object"
}
{
    "Origin": "Get the maximum size of a text message buffer (for streaming writing)",
    "Reference": "Get the maximum size of a text message buffer.",
    "HebCup": "Get the maximum size of a Text Message (for streaming writing)"
}
{
    "Origin": "Joins two sets of geometries on 'contains' or 'intersects' relationship.",
    "Reference": "Inner joins two sets of geometries on 'contains' or 'intersects' relationship.",
    "HebCup": "Joins two sets of geometries on 'contains' or 'intersects' relationship."
}
{
    "Origin": "There could be cases where a field\nis considered as optional even if it is marked as required in the schema.",
    "Reference": "There could be cases where a field\nis considered as optional even if it is marked as non-nullable in the schema.",
    "HebCup": "There could be cases where a false is considered as optional even if it is marked as required in the schema."
}
{
    "Origin": "Integers 0 ... n.",
    "Reference": "Integers 0 ... n - 1.",
    "HebCup": "Integers 0 ... (."
}
{
    "Origin": "Applications should use the {@code with(WithAdjuster)} method on the\ndate-time object to make the adjustment passing this as the argument.",
    "Reference": "Applications should use the {@code with(TemporalAdjuster)} method on the\ndate-time object to make the adjustment passing this as the argument.",
    "HebCup": "Applications should use the {@code with (WithAdjuster)} method on the date-time object to make the Into passing this as the argument."
}
{
    "Origin": "All foldable conditions that fold to FALSE should have\nbeen removed by the {@link Optimizer}.",
    "Reference": "All foldable conditions that fold to FALSE should have\nbeen removed by the {@link Optimizer}#SimplifyCase.",
    "HebCup": "All foldable conditions.get that fold to FALSE should have been removed by the {@link Optimizer}."
}
{
    "Origin": "This is especially important for parameters that are critical\nwhen creating the default database for a DB cluster, such as the\ncharacter set for the default database defined by the\ncharacter_set_database parameter.",
    "Reference": "This is especially important for\nparameters that are critical when creating the default database for a DB\ncluster, such as the character set for the default database defined by\nthe  parameter.",
    "HebCup": "This is especially important for parameters that are critical\nwhen creating the default database for a DB cluster, such as the\ncharacter set for the default database defined by the\ncharacter_set_database parameter."
}
{
    "Origin": "Gets or creates the power level objective on the main scoreboard.",
    "Reference": "Gets or creates the power level objective on the main targetBoard.",
    "HebCup": "Gets or creates the power level objective on the main targetBoard."
}
{
    "Origin": "This method returns the original edge via its traversal key.",
    "Reference": "This method returns the original edge via its key.",
    "HebCup": "This method returns the original edge via its Edge Key."
}
{
    "Origin": "Gets the classpath component containing the given class.",
    "Reference": "Gets the base location of the given class.",
    "HebCup": "Gets the classpath component containing the given class."
}
{
    "Origin": "testReadEvictedTuples",
    "Reference": "testEvictTuples",
    "HebCup": "testEvictTuples"
}
{
    "Origin": "Returns {@code true} if there are properties in the processConfigDef instance.",
    "Reference": "Returns {@code true} if there are properties in the stepConfigDef instance.",
    "HebCup": "Returns {@code true} if there are properties in the stepConfigDef instance."
}
{
    "Origin": "Returns an ordered range of all the sync d l objects where modifiedTime > ?",
    "Reference": "Returns an ordered range of all the sync d l objects where repositoryId = ?",
    "HebCup": "Returns an ordered range of all the sync d l objects where modifiedTime > ?"
}
{
    "Origin": "Adds a fatal exception to the message set and throws\nthe unit as a PhaseFailedException.",
    "Reference": "Adds an error to the message set and throws CompilationFailedException.",
    "HebCup": "Adds a fatal exception to the message set and throws\nthe unit as a PhaseFailedException."
}
{
    "Origin": "Get a reference to the currently executing job, if any.",
    "Reference": "Get a reference to the currently job executed.",
    "HebCup": "Get a reference to the currently executing job, if any."
}
{
    "Origin": "Add a new way-point to the track.",
    "Reference": "Create a new track-segment with the given points.",
    "HebCup": "Track a new way-point to the track."
}
{
    "Origin": "Test of npara method, of class Exponential.",
    "Reference": "Test of length method, of class Exponential.",
    "HebCup": "Test of Length method , of class Exponential."
}
{
    "Origin": "Otherwise, the segment is only freed and made eligible for reclamation by the GC.",
    "Reference": "The segment is only freed and made eligible for reclamation by the GC.",
    "HebCup": "Otherwise, the segment is only freed and made eligible for reclamation by the GC."
}
{
    "Origin": "(Or NaN if they're all NaN.)",
    "Reference": "(Or NaN if no entries or they're all NaN.)",
    "HebCup": "(Or NaN if they're all NaN.)"
}
{
    "Origin": "Returns a string representation of this object; useful for testing and debugging.",
    "Reference": "Returns a string representation of this object.",
    "HebCup": "Returns a string representation of this object; useful for testing and debugging."
}
{
    "Origin": "Checks whether two filenames are equal, optionally normalizing and providing\ncontrol over the case-sensitivity.",
    "Reference": "Checks whether two fileNames are equal, optionally normalizing and providing\ncontrol over the case-sensitivity.",
    "HebCup": "Checks whether two filenames are equal, optionally normalizing and providing\ncontrol over the case-sensitivity."
}
{
    "Origin": "and repositoryId = ?.",
    "Reference": "and parentFolderId = ?.",
    "HebCup": "and parentFolderId = ?."
}
{
    "Origin": "Returns the timestamp when the result was created.",
    "Reference": "Returns the timestamp when the result was created as a formatted String.",
    "HebCup": "Returns the DATE_FORMAT_PATTERN.format when the result was created."
}
{
    "Origin": "Returns the first sync d l object in the ordered set where companyId = ?",
    "Reference": "Returns the first sync d l object in the ordered set where repositoryId = ?",
    "HebCup": "Returns the first sync d l object in the ordered set where repositoryId = ?"
}
{
    "Origin": "Returns the k b article with the primary key or throws a {@link com.liferay.knowledgebase.NoSuchArticleException} if it could not be found.",
    "Reference": "Returns the k b article with the primary key or throws a {@link NoSuchArticleException} if it could not be found.",
    "HebCup": "Returns the k b article with the primary key or throws a {@link com.liferay.knowledgebase.NoSuchArticleException} if it could not be found."
}
{
    "Origin": "Read one constant from the given file, the type depends on a tag byte.",
    "Reference": "Read one constant from the given input, the type depends on a tag byte.",
    "HebCup": "Read one constant from the given input , the type depends on a tag byte."
}
{
    "Origin": "Cancels all the subscription query {@link Registration}s which are contained by this\n{@link SubscriptionQueryRequestTarget}.",
    "Reference": "Cancels all the subscription query {@link Registration}s for the given {@code context} which are contained by\nthis {@link SubscriptionQueryRequestTarget}.",
    "HebCup": "Cancels all the subscription query {@link Registration}s which are contained by this {@link SubscriptionQueryRequestTarget}."
}
{
    "Origin": "Create an instance of {@link JAXBElement }{@code <}{@link CTMarkupRange }{@code >}}",
    "Reference": "Create an instance of {@link JAXBElement }{@code <}{@link CTMoveToRangeEnd }{@code >}}",
    "HebCup": "Create an instance of {@link JAXBElement} {@code <} {@link CTMoveToRangeEnd} {@code >}}"
}
{
    "Origin": "Put buffer which is not used any more back to the pool.",
    "Reference": "Put buffer which is not used any more back to the pool or frees direct memory if pool is full.",
    "HebCup": "Put buffer which is not used any more back to the pointersPool."
}
{
    "Origin": "If the variable was set, a configuration {@link ConfigurationEvent event} will be passed to\nall registered listeners.",
    "Reference": "If the variable was set, a CONFIGURATION {@link ConfigurationEvent event} will be passed to\nall registered listeners.",
    "HebCup": "If the variable was set , a CONFIGURATION {@link ConfigurationEvent event} will be passed to all registered listeners."
}
{
    "Origin": "Starts with action registration.",
    "Reference": "route binding.",
    "HebCup": "Starts with route registration."
}
{
    "Origin": "Decorates {@link Service}s under the specified directory.",
    "Reference": "Decorates {@link HttpService}s under the specified directory.",
    "HebCup": "Decorates {@link Service}s under the specified directory."
}
{
    "Origin": "However, the problem with exposing the\ninformation is that people running from an IDE can observe stale\ndata from old  class files left from a\nprevious build of a JAR.",
    "Reference": "However, people running from an IDE will\nobserve stale data from old \nclass files left from a previous build of a JAR.",
    "HebCup": "However, the problem with exposing the\ninformation is that people running from an IDE can observe stale\ndata from old  class files left from a\nprevious build of a JAR."
}
{
    "Origin": "Returns {@link Ordered#HIGHEST_PRECEDENCE}.",
    "Reference": "Returns {@code 10000}.",
    "HebCup": "Returns {@link Ordered#10_000_PRECEDENCE}."
}
{
    "Origin": "IMPLEMENTATION NOTE - For backwards compatibility,\nthe reader that processes this entry will accept either\n or name for the username\nproperty.",
    "Reference": "IMPLEMENTATION NOTE - For backwards compatibility,\nthe reader that processes this entry will accept either\n or  for the username\nproperty.",
    "HebCup": "IMPLEMENTATION NOTE - For backwards compatibility,\nthe reader that processes this entry will accept either\n or name for the username\nproperty."
}
{
    "Origin": "Send request for execution via {@link #cliIo}.",
    "Reference": "Send request for execution via corresponding singleIo from {@link #ios} or sticky singleIo.",
    "HebCup": "Send request for execution via {@link#stickyIO}."
}
{
    "Origin": "The {@link KeyCreateOptions#getKeyType() keyType} indicates the type of key to create.",
    "Reference": "The {@link CreateKeyOptions#getKeyType() keyType} indicates the type of key to create.",
    "HebCup": "The {@link CreateKeyOptions#getKeyType () keyType} indicates the type of key to create."
}
{
    "Origin": "Returns an healthy {@link ResultBuilder}",
    "Reference": "Returns a new {@link ResultBuilder}",
    "HebCup": "Returns an healthy {@link Resultbuilder}"
}
{
    "Origin": "It is up to the Authenticator implementation processing this token if\nan authentication attempt without an inetAddress is valid or not.",
    "Reference": "It is up to the Authenticator implementation processing this\ntoken if an authentication attempt without a host is valid or not.",
    "HebCup": "It is up to the Authenticator implementation processing this token if an authentication attempt without an String is valid or not."
}
{
    "Origin": "Lists all dataset instances in a namespace.",
    "Reference": "Lists all dataset instances in a namespace having specified properties.",
    "HebCup": "Lists all dataset instances in a namespace."
}
{
    "Origin": "Code snippets for {@link BlobClientBase#startCopyFromURLWithResponse(String, Map, AccessTier, RehydratePriority,",
    "Reference": "Code snippets for {@link BlobClientBase#beginCopy(String, Map, AccessTier, RehydratePriority,",
    "HebCup": "Code snippets for {@link BlobClientBase#beginCopyFromUrl (String , Map , AccessTier , RehydratePriority ,"
}
{
    "Origin": "Adds a new job to the job queue to remove the specified extension from the specified namespace.",
    "Reference": "Adds a new job to the job queue to perform the given uninstall plan request.",
    "HebCup": "Adds a new job to the job queue to remove the specified Uninstall from the specified namespace."
}
{
    "Origin": "Adds subclusters to this cluster.",
    "Reference": "Adds a child cluster to this cluster.",
    "HebCup": "Adds clusters to this cluster."
}
{
    "Origin": "test re-packing of instances",
    "Reference": "test re-packing with same total instances",
    "HebCup": "test Repacking With Same Total-packing of instances"
}
{
    "Origin": "Felix constructor documentation for more\n      information on the framework configuration options.",
    "Reference": "Refer to the  Felix\n constructor documentation for more information on the framework\nconfiguration options.",
    "HebCup": "Felix constructor documentation for more\n      information on the framework configuration options."
}
{
    "Origin": "Obtains a failure from a reason, exception and message.",
    "Reference": "Obtains a failure from a reason, throwable and message.",
    "HebCup": "Obtains a failure from a reason , Throwable and message."
}
{
    "Origin": "Use the\n{@linkplain #addPickup(Shipment, TimeWindow)} instead.",
    "Reference": "Use the\n{@linkplain #addPickup(ShipmentJob, TimeWindow)} instead.",
    "HebCup": "Use the {@linkplain #addPickup(ShipmentJob, TimeWindow)} instead."
}
{
    "Origin": "Main method to invoke this demo about how to analyze sentiment of a text input.",
    "Reference": "Main method to invoke this demo about how to recognize the PII entities of an input text.",
    "HebCup": "Main method to invoke this demo about how to analyze sentiment of a text input."
}
{
    "Origin": "Obtains an instance based on discount factors and bond group.",
    "Reference": "Obtains an instance based on discount factors and group.",
    "HebCup": "Obtains an instance based on discount factors and Repo Group."
}
{
    "Origin": "Returns the (biased) kurtosis of all the values within a {@link PointSet}\nregion of a {@link Dataset}",
    "Reference": "Returns the (biased) estimate of the sample standard deviation of the\nvalues within a {@link PointSet} region of a {@link Dataset}.",
    "HebCup": "Returns the (biased) population of all the values within a {@link PointSet} region of a {@link Dataset}"
}
{
    "Origin": "Returns the ContactDetail.SubCategory corresponding to the given label.",
    "Reference": "Returns the SubCategory corresponding to the given label.",
    "HebCup": "Returns the SubCategory corresponding to the given label."
}
{
    "Origin": "Trading Strategy - we expect the engine to shutdown.",
    "Reference": "Exception from Trading Strategy - we expect the engine to shutdown.",
    "HebCup": "Trading Strategy - we expect the engine to shutdown."
}
{
    "Origin": "Creates a new {@link IFlexible} item.",
    "Reference": "Creates a {@link FlexibleItemProvider}.",
    "HebCup": "Creates a new {@link Model} item."
}
{
    "Origin": "Returns the type with the primary key or throws a {@link com.liferay.ams.NoSuchTypeException} if it could not be found.",
    "Reference": "Returns the type with the primary key or throws a {@link NoSuchTypeException} if it could not be found.",
    "HebCup": "Returns the type with the primary key or throws a {@link com.liferay.ams.NoSuchTypeException} if it could not be found."
}
{
    "Origin": "Called when a track has been selected.",
    "Reference": "Called when a track is selected.",
    "HebCup": "Called when a track has been selected."
}
{
    "Origin": "Get instance manager.",
    "Reference": "Get injection manager.",
    "HebCup": "get Injection Manager."
}
{
    "Origin": "Is has query assisted column or not.",
    "Reference": "Contains query assisted column or not.",
    "HebCup": "contains Query Assisted Column or not."
}
{
    "Origin": "This method returns the value of the database column m_monitor_item.user",
    "Reference": "This method returns the value of the database column m_monitor_item.username",
    "HebCup": "This method returns the value of the database column m_monitor_item.Username"
}
{
    "Origin": "Loads the repository interface contained in the given {@link RepositoryConfiguration} using the given\n{@link ResourceLoader}.",
    "Reference": "Loads the repository interface contained in the given {@link RepositoryConfiguration} using the given\n{@link ClassLoader}.",
    "HebCup": "Loads the repository interface contained in the given {@link RepositoryConfiguration} using the given {@link ClassLoader}."
}
{
    "Origin": "If Main Branch = 0 LOCs (provisioned but never analyzed) and the \"largest long-lived branch\" is 120 LOCs, I'm expecting to consider the value 120.",
    "Reference": "If Main Branch = 0 LOCs (provisioned but never analyzed) and the \"largest branch\" is 120 LOCs, I'm expecting to consider the value 120.",
    "HebCup": "If Main Branch = 0 LOCs (provisioned but never analyzed) and the ``largest BRANCH-lived branch`` is 120 LOCs, I'm expecting to consider the value 120."
}
{
    "Origin": "Checks if the path is a project repo.",
    "Reference": "Checks if the path is a project.",
    "HebCup": "Checks if the path is a Ballerina Project."
}
{
    "Origin": "Division by zero results in 1.",
    "Reference": "a/b Division by zero\nresults in 1.",
    "HebCup": "Division by zero results in 1."
}
{
    "Origin": "Returns the test blob entry with the primary key or throws a {@link com.liferay.testblob.NoSuchEntryException} if it could not be found.",
    "Reference": "Returns the test blob entry with the primary key or throws a {@link NoSuchEntryException} if it could not be found.",
    "HebCup": "Returns the test blob entry with the primary key or throws a {@link com.liferay.testblob.NoSuchEntryException} if it could not be found."
}
{
    "Origin": "Extract the result of given method invocation from the array's elements under test into a new array, this new array\nbecoming the array under test.",
    "Reference": "Extract the result of given method invocation from the array's elements under test into a list, this list becoming\nthe object under test.",
    "HebCup": "Extract the result of given method invocation from the array's elements under test into a newListAssertInstance array , this newListAssertInstance array becoming the array under test."
}
{
    "Origin": "Sets the intents.",
    "Reference": "Set the intents.",
    "HebCup": "Sets the intents."
}
{
    "Origin": "Obtains an instance of {@code LocalTime} from a date-time object.",
    "Reference": "Obtains an instance of {@code LocalTime} from a temporal object.",
    "HebCup": "Obtains an instance of {@code LocalTime} from a date-time object."
}
{
    "Origin": "Returns an access log writer.",
    "Reference": "Returns the access log writer.",
    "HebCup": "Returns an default Virtual Host.access Log Writer."
}
{
    "Origin": "Helper method to get the number of stores configured with a changelog.",
    "Reference": "Helper method to get the number of persistent stores.",
    "HebCup": "Helper method to get the number of stores configured Present a changelog."
}
{
    "Origin": "See Immutable Set Static Factory Methods for details.",
    "Reference": "See Unmodifiable Sets for details.",
    "HebCup": "See Unmodifiable Set Static Factory Methods for details."
}
{
    "Origin": "- (optional bool) when true then additional detailed metrics\n  will be collected.",
    "Reference": "- (optional bool, default false) when true then additional detailed metrics\n  will be collected.",
    "HebCup": "- (optional bool) when true then additional detailed metrics\n  will be collected."
}
{
    "Origin": "This method loads an image of a specified type from the given input stream.",
    "Reference": "This method loads a texture which is packed into the blender file.",
    "HebCup": "This method loads an image of a specified type from the given Blender Input Stream."
}
{
    "Origin": "Returns map of {@link StatisticsKind} and statistics values obtained from specified {@link DrillStatsTable} for specified column.",
    "Reference": "Returns list of {@link StatisticsKind} and statistics values obtained from specified {@link DrillStatsTable} for specified column.",
    "HebCup": "Returns map of {@link StatisticsHolder} and statistics values obtained from specified {@link DrillStatsTable} for specified column."
}
{
    "Origin": "Returns a string representation of this object; useful for testing and debugging.",
    "Reference": "Returns a string representation of this object.",
    "HebCup": "Returns a string representation of this object; useful for testing and debugging."
}
{
    "Origin": "Find the application id from job log by matching \"application_\" pattern.",
    "Reference": "Find all the application ids the job log data contains by matching \"application_\" pattern.",
    "HebCup": "Find the Application Ids From job log by matching ``application_`` pattern."
}
{
    "Origin": "Locks a policy for execution.",
    "Reference": "Locks a policy to prevent concurrent execution.",
    "HebCup": "Locks a policy for execution."
}
{
    "Origin": "Starts new ignite node and submits computation job to it.",
    "Reference": "Starts computation job.",
    "HebCup": "Starts new ignite Local and submits computation job to it."
}
{
    "Origin": "Create an instance of {@link JAXBElement }{@code <}{@link CTMarkupRange }{@code >}}",
    "Reference": "Create an instance of {@link JAXBElement }{@code <}{@link CTMoveFromRangeEnd }{@code >}}",
    "HebCup": "Create an instance of {@link JAXBElement} {@code <} {@link CTMoveFromRangeEnd} {@code >}}"
}
{
    "Origin": "A method signature represents the arguments that the method expects, and\nthe value that it returns.",
    "Reference": "This method converts such a string into a Java type declaration like\n`void main(String[])' and throws a `ClassFormatException' when the parsed\ntype is invalid.",
    "HebCup": "This method converts such a final into a Java type declaration like `void _main (String[])' and throws a `ClassFormatException' when the parsed type is invalid."
}
{
    "Origin": "Test of npara method, of class ChiSquareDistribution.",
    "Reference": "Test of length method, of class ChiSquareDistribution.",
    "HebCup": "Test of Length method , of class ChiSquareDistribution."
}
{
    "Origin": "Returns the button's text's font size, measured in sp(scale-independent pixels).",
    "Reference": "Returns the text font size of the %type%, measured in sp(scale-independent pixels).",
    "HebCup": "Returns the %type%'s text's font size, measured in sp(scale-independent pixels)."
}
{
    "Origin": "Create a {@link ClusterLoadBalancerScript} unless one exists.",
    "Reference": "Create a {@link ClusterSelectorScript} unless one exists.",
    "HebCup": "Create a {@link ClusterSelectorScript} unless one exists."
}
{
    "Origin": "(Try to) connect this marker with a suitable barline.",
    "Reference": "(Try to) connect this marker with a suitable StaffBarline.",
    "HebCup": "(Try to) connect this marker with a suitable StaffBarline."
}
{
    "Origin": "Get Untergruppe.",
    "Reference": "Get Unterregister.",
    "HebCup": "Get Untergruppe."
}
{
    "Origin": "The timestamp for creation of the dialog node.",
    "Reference": "The timestamp for creation of the object.",
    "HebCup": "The timestamp for creation of the dialog node."
}
{
    "Origin": "Generates the name of the parameter token that should be populated with\nthe value of the given attribute.",
    "Reference": "Generates the name of the parameter token that should be populated with\nthe given string.",
    "HebCup": "Generates the name of the parameter token that should be populated with the value of the given canonicalize."
}
{
    "Origin": "Fails silently if no match found.",
    "Reference": "Fails silently if the student does not exist.",
    "HebCup": "Fails silently if no match found."
}
{
    "Origin": "Returns a context that is limited to given tenant, application",
    "Reference": "Returns a context that is limited to given tenant and application",
    "HebCup": "Returns a context that is limited to given tenant, application"
}
{
    "Origin": "Save cluster.",
    "Reference": "Save cluster advanced configuration.",
    "HebCup": "Save cluster."
}
{
    "Origin": "Consume a CSS element selector (tag name, but | instead of : for namespaces, to not conflict with :pseudo selects).",
    "Reference": "Consume a CSS element selector (tag name, but | instead of : for namespaces (or *| for wildcard namespace), to not conflict with :pseudo selects).",
    "HebCup": "Consume a CSS element selector (tag name, but | instead of : for namespaces, to not conflict with :pseudo selects)."
}
{
    "Origin": "{@link WebConstants#HYPERLINK_VIEW}: a lightweight alternative to returning the",
    "Reference": "{@link WebConstants#URI_VIEW}: a lightweight alternative to returning the",
    "HebCup": "{@link ComplexObsHandler#HYPERLINK_VIEW}: a lightweight alternative to returning the"
}
{
    "Origin": "Note that the returned {@link Bits}\ninstance MUST be consumed in order.",
    "Reference": "NOTE: that the returned {@link Bits} instance MUST be consumed in order.",
    "HebCup": "Note that the returned {@link as} instance MUST be consumed in order."
}
{
    "Origin": "{@link Query#rxPlain()}.",
    "Reference": "{@link Query#__internalRxPlain()}.",
    "HebCup": "{@link Query#__internalRxPlain ()}."
}
{
    "Origin": "Returns the whitelisted class names.",
    "Reference": "Returns the white class names.",
    "HebCup": "Returns the White Class Names."
}
{
    "Origin": "No processing is performed on the filenames other than comparison,\nthus this is merely a null-safe case-sensitive equals.",
    "Reference": "No processing is performed on the fileNames other than comparison,\nthus this is merely a null-safe case-sensitive equals.",
    "HebCup": "No processing is performed on the filenames other than comparison,\nthus this is merely a null-safe case-sensitive equals."
}
{
    "Origin": "Sets the exception associated with this operation.",
    "Reference": "Set the exception associated with this operation.",
    "HebCup": "Sets the RouterException associated with this operation."
}
{
    "Origin": "Finds a class or interface given its fully-qualified name.",
    "Reference": "Finds a type (even nested ones) given its fully-qualified name.",
    "HebCup": "Finds a class or interface given its fully-qualified name."
}
{
    "Origin": "Verifies that the username matches the user whose connections are being managed by this\nfactory and closes the pool if this is the case; otherwise does nothing.",
    "Reference": "Verifies that the user name matches the user whose connections are being managed by this factory and closes the\npool if this is the case; otherwise does nothing.",
    "HebCup": "Verifies that the userName matches the user whose connections are being managed by this factory and closes the pool if this is the case; otherwise does nothing."
}
{
    "Origin": "If it fails due to another dumb mode having started,\ntry again until the runnable is able to complete successfully.",
    "Reference": "If it fails due to another dumb mode having started,\ntry again until the runnable can complete successfully.",
    "HebCup": "If it fails due to another dumb mode having started,\ntry again until the runnable is able to complete successfully."
}
{
    "Origin": "Set the force running option of the command.",
    "Reference": "Set the output directory for this crossfold operation.",
    "HebCup": "set Output the force running option of the command."
}
{
    "Origin": "Convert to object types, returning null if text is null.",
    "Reference": "Convert to object types, returning null if text is null or empty.",
    "HebCup": "Convert to object types, returning null if text is null."
}
{
    "Origin": "Execute a requestHandler for the given exception.",
    "Reference": "Process the given exception.",
    "HebCup": "Execute a requestHandler for the given exception."
}
{
    "Origin": "In quiet mode, only the errors (dependants plugins) are printed.",
    "Reference": "In quiet mode, only the errors (dependents plugins) are printed.",
    "HebCup": "In quiet mode, only the errors (Dependents plugins) are printed."
}
{
    "Origin": "Returns an unmodifiable list of all the completers.",
    "Reference": "Returns the completer.",
    "HebCup": "Returns an unmodifiable list of all the Completer."
}
{
    "Origin": "Add a classpath element.",
    "Reference": "Add a classpath entry.",
    "HebCup": "Add a Classpath Entry."
}
{
    "Origin": "Create default tokenizers.",
    "Reference": "Create default tokenizer factories.",
    "HebCup": "Create whitespace tokenizers."
}
{
    "Origin": "This method will be marked private until a\ncross-platform working solution can be provided.",
    "Reference": "No public method will be\navailable until a working cross-platform solution can be provided.",
    "HebCup": "This method will be marked private until a\ncross-platform working solution can be provided."
}
{
    "Origin": "Check whether the given request match the realm for which this handler is responsible",
    "Reference": "Check whether the given request match the provider for which this handler is responsible",
    "HebCup": "Check whether the given request match the Provider for which this handler is responsible"
}
{
    "Origin": "Uppercases the first character.",
    "Reference": "Lowercases the first character.",
    "HebCup": "LowerCase the first character."
}
{
    "Origin": "Optimization does *not* apply to pattern:",
    "Reference": "Optimization applies to pattern:",
    "HebCup": "Optimization does *not* apply to pattern:"
}
{
    "Origin": "The  of all leaf nodes\nis returned\nas a list ordered by the natural left to right order of the\nleaves.",
    "Reference": "The {@code Label} of all leaf nodes\nis returned\nas a list ordered by the natural left to right order of the\nleaves.",
    "HebCup": "The  of all leaf nodes\nis returned\nas a list ordered by the natural left to right order of the\nleaves."
}
{
    "Origin": "Returns a readable description of this task in the form 'MethodName on AdapterName with TorrentName and AllExtras'",
    "Reference": "Returns a readable description of this task in the form 'MethodName on AdapterName with TorrentName and",
    "HebCup": "Returns a readable description of this task in the form 'MethodName on AdapterName with TorrentName and AllExtras'"
}
{
    "Origin": "The node flavor requested, or empty if no particular flavor is specified.",
    "Reference": "The node flavor requested, or empty if no legacy flavor name has been used.",
    "HebCup": "The node Optional requested , or empty if no particular Optional is specified."
}
{
    "Origin": "Builds a safe decorated {@link Service} by wrapping the localDecorator with exceptionHandlingDecorators.",
    "Reference": "Builds a safe decorated {@link HttpService} by wrapping the localDecorator with\nexceptionHandlingDecorators.",
    "HebCup": "Builds a safe decorated {@link HttpService} by wrapping the localDecorator with exceptionHandlingDecorators."
}
{
    "Origin": "If you specify both tag keys and tag values in the same request,",
    "Reference": "If you specify both tag keys and tag values in the same request, Amazon",
    "HebCup": "If you specify both tag keys and tag values in the same request,"
}
{
    "Origin": "Gets the value of the 'RowKey' field.",
    "Reference": "Gets the value of the 'rowKey' field.",
    "HebCup": "Gets the value of the 'rowKey' field."
}
{
    "Origin": "Get the bibtex field name used to extension to this file type.",
    "Reference": "Get the bibtex field name used for this file type.",
    "HebCup": "Get the bibtex Field used to extension to this file type."
}
{
    "Origin": "LUCENE-1468: once we create an output, we should see\n it in the dir listing and be able to open it with\n openInput.",
    "Reference": "LUCENE-1468: once we create an output, we should see\nit in the dir listing.",
    "HebCup": "LUCENE-1468: once we create an output, we should see\n it in the dir listing and be able to open it with\n openInput."
}
{
    "Origin": "Getter for {@link #exposeHeaders}",
    "Reference": "Getter for {@link #allowHeaders}",
    "HebCup": "Getter for {@link#allowHeaders}"
}
{
    "Origin": "Access Control Using AWS Identity and Access Management (IAM) \n.",
    "Reference": "For more information, see Access Control Using AWS Identity and Access Management (IAM).",
    "HebCup": "Access Control Using AWS Identity and Access Management (IAM) \n."
}
{
    "Origin": "The returned controller will instantiate new processing component instances for each\nprocessing request and will not perform any caching of the processing results.",
    "Reference": "The returned controller will instantiate new processing component instances for each\nprocessing request.",
    "HebCup": "The returned controller will instantiate new processing component instances for each\nprocessing request and will not perform any caching of the processing results."
}
{
    "Origin": "Transform to a SurfaceConfiguration object with cameraId, image format and size info",
    "Reference": "Transform to a SurfaceConfig object with cameraId, image format and size info",
    "HebCup": "Transform to a SurfaceConfig object with cameraId , image format and size info"
}
{
    "Origin": "Gets the value of the cryptAlgorithmSid property.",
    "Reference": "Gets the value of the hashValue property.",
    "HebCup": "Gets the value of the hashValue property."
}
{
    "Origin": "Set a default timeout for {@link CuratorZookeeperClient#close() }.",
    "Reference": "Set a timeout for {@link CuratorZookeeperClient#close(int)}  }.",
    "HebCup": "Set a default timeout for {@link CuratorZookeeperClient#close() }."
}
{
    "Origin": "If not\nexplicitly configured with an annotation, this value will be used.",
    "Reference": "If not explicitly\nconfigured with an annotation, or on a method element, this value will be used.",
    "HebCup": "If not\nexplicitly configured with an annotation, this value will be used."
}
{
    "Origin": "It may return null if the security is not supported by QR code generator nor\nscanner.",
    "Reference": "It may return null if the security is not\nsupported by QR code scanner.",
    "HebCup": "It may return null if the security is not supported by QR code generator nor\nscanner."
}
{
    "Origin": "Closes the Lucene index searcher for this index.",
    "Reference": "Closes the index searcher for this index.",
    "HebCup": "Closes the Lucene index searcher for this index."
}
{
    "Origin": "Returns the partition data directory.",
    "Reference": "Returns the compaction configuration.",
    "HebCup": "Returns the partition compaction Config."
}
{
    "Origin": "Verify that duplicate exported packages are detected.",
    "Reference": "Verify that duplicate requires are detected.",
    "HebCup": "Verify that duplicate exported Static are detected."
}
{
    "Origin": "Return a name/value string suitable for sending in a \"Cookie\"\nheader as defined in RFC 2109 for backward compatibility with cookie\nversion 0",
    "Reference": "Return a name/value string suitable for sending in a {@code \"Cookie\"}\nheader as defined in RFC 2109 for backward compatibility with cookie\nversion 0",
    "HebCup": "Return a name/value string suitable for sending in a \"Cookie\"\nheader as defined in RFC 2109 for backward compatibility with cookie\nversion 0"
}
{
    "Origin": "Returns whether the code is a valid/known code or not.",
    "Reference": "Returns whether the code is a valid/known {@code ISO 639} code or not.",
    "HebCup": "to whether the code is a valid/known code or not."
}
{
    "Origin": "Wait for this task to meet the expected number of commits as defined by {@code\nexpectedCommits}.",
    "Reference": "Wait up to the specified timeout for this task to meet the expected number of commits as\ndefined by {@code expectedCommits}.",
    "HebCup": "Wait for this task to meet the expected number of commits as defined by {@code\nexpectedCommits}."
}
{
    "Origin": "The timestamp for the last update to the entity value.",
    "Reference": "The timestamp for the most recent update to the object.",
    "HebCup": "The timestamp for the last update to the entity value."
}
{
    "Origin": "This is the class name without the\npackage prefix by default.",
    "Reference": "This is the class name without the\npackage prefix by default, never null",
    "HebCup": "This is the class name without the\npackage prefix by default."
}
{
    "Origin": "Elements of a block must at least extend\n{@link Node} and implement {@link VoidElement}.",
    "Reference": "Elements of a block must at least extend\n{@link Node}.",
    "HebCup": "Elements of a block must at least extend\n{@link Node} and implement {@link VoidElement}."
}
{
    "Origin": "The option is a:  type.",
    "Reference": "The option will be converted to a  type.",
    "HebCup": "The option is a:  type."
}
{
    "Origin": "Shuts down the managed channel for given key.",
    "Reference": "Shuts down the managed channel.",
    "HebCup": "Shuts down the managed managed for given key."
}
{
    "Origin": "{@code throwable} will be null in the case of a successful attempt to execute the call.",
    "Reference": "{@code ioe} will be null in the case of a successful attempt to execute the call.",
    "HebCup": "{@code IOException} will be null in the case of a successful attempt to execute the call."
}
{
    "Origin": "Returns an ordered range of all the sync d l objects where parentFolderId = ?.",
    "Reference": "Returns an ordered range of all the sync d l objects where modifiedTime > ?",
    "HebCup": "Returns an ordered range of all the sync d l objects where repositoryId = ?."
}
{
    "Origin": "Parses the WSDL file in order to validate the service, port and operation, to get the SOAP Action (if defined)\nand to check if the operation requires input parameters or not.",
    "Reference": "Resolves the WSDL file in order to validate the service, port and operation, to get the SOAP Action (if defined)\nand to check if the operation requires input parameters or not.",
    "HebCup": "Parses the wsdl file in order to validate the service , port and operation , to get the SOAP Action (if defined) and to check if the operation requires input parameters or not."
}
{
    "Origin": "Return true if the given CmsTreeItem or its children is selected.",
    "Reference": "Return true if at least one child of the given tree item is selected.",
    "HebCup": "Return true if the given CmsTreechild or its children is selected."
}
{
    "Origin": "Adds a config file to the set of \"active\" config files listed in the metadata",
    "Reference": "Adds a file to the set of files to delete listed in the metadata",
    "HebCup": "Adds a File To Delete to the set of ``active`` config files listed in the metadata"
}
{
    "Origin": "Returns  if the given type has {@link ITokenTypeAttribute#TF_SEPARATOR_DOCUMENT} set.",
    "Reference": "Returns  if the given type has {@link ITokenizer#TF_SEPARATOR_DOCUMENT} set.",
    "HebCup": "Returns if the given type has {@link ITokenizer#TF_SEPARATOR_DOCUMENT} set."
}
{
    "Origin": "Get RADIUS Configuration\n### Functional Description:   Retrieve RADIUS configuration.",
    "Reference": "Get RADIUS configuration\n### Functional Description:   Retrieve a RADIUS configuration.",
    "HebCup": "Get RADIUS Configuration\n### Functional Description:   Retrieve RADIUS configuration."
}
{
    "Origin": "H2O Frame is the \"backing\"\n     data structure behind CheckpointedDrm.",
    "Reference": "Frame is the backing data structure behind CheckpointedDrm.",
    "HebCup": "H2O Frame is the \"backing\"\n     data structure behind CheckpointedDrm."
}
{
    "Origin": "Parses the 'Responses' annotation attachment and build swagger operation.",
    "Reference": "Parses the 'Responses' annotation attachment and build openApi operation.",
    "HebCup": "Parses the 'Responses' annotation attachment and build openApi operation."
}
{
    "Origin": "The {@link RsaKeyCreateOptions} is required.",
    "Reference": "The {@link CreateRsaKeyOptions} is required.",
    "HebCup": "The {@link CreateRsaKeyOptions} is required."
}
{
    "Origin": "Construct a {@link CxxLink} rule that builds a native linkable from top-level input objects and\na dependency tree of {@link NativeLinkable} dependencies.",
    "Reference": "Construct a {@link CxxLink} rule that builds a native linkable from top-level input objects and\na dependency tree of {@link NativeLinkableGroup} dependencies.",
    "HebCup": "Construct a {@link CxxLink} rule that builds a native linkable from top-level input objects and a dependency tree of {@link NativeLinkableGroup} dependencies."
}
{
    "Origin": "TransactionService, TargetedSweepFollower)} method before any writes can be made to the sweep queue, or before\nthe background sweep job can run.",
    "Reference": "TargetedSweepFollower)} method before any writes can be made to the sweep queue, or before the background sweep\njob can run.",
    "HebCup": "TransactionService, TargetedSweepFollower)} method before any writes can be made to the sweep queue, or before\nthe background sweep job can run."
}
{
    "Origin": "Return a {@link JettyRemoteRepositoryManager} for talking to the\n{@link NanoSparqlServer} instance associated with an {@link HAGlue}\ninterface.",
    "Reference": "Return a {@link RemoteRepositoryManager} for talking to the\n{@link NanoSparqlServer} instance associated with an {@link HAGlue}\ninterface.",
    "HebCup": "Return a {@link RemoteRepositoryManager} for talking to the {@link NanoSparqlServer} instance associated with an {@link HAGlue} interface."
}
{
    "Origin": "Note that the saved system properties do not include\nthe ones set by sun.misc.Version.init().",
    "Reference": "Note that the saved system properties do not include\nthe ones set by java.lang.VersionProps.init().",
    "HebCup": "Note that the saved system properties do not include\nthe ones set by sun.misc.Version.init()."
}
{
    "Origin": "Transform a nullable value into an observable with 0 or 1 element.",
    "Reference": "Transform a nullable value into a Maybe",
    "HebCup": "Transform a nullable value into an Maybe with 0 or 1 element."
}
{
    "Origin": "Gets the list of {@link DeletedSecret deletedSecrets} on this page.",
    "Reference": "Gets the iterable stream of {@link DeletedSecret deletedSecrets} on this page.",
    "HebCup": "Gets the IterableStream of {@link DeletedSecret deletedSecrets} on this page."
}
{
    "Origin": "Returns a string representation of this object; useful for testing and debugging.",
    "Reference": "Returns a string representation of this object.",
    "HebCup": "Returns a string representation of this object; useful for testing and debugging."
}
{
    "Origin": "Retrieves the pid stored in the {@link CommandSession} or passed as an argument.",
    "Reference": "Retrieves the pid stored in the {@link Session} or passed as an argument.",
    "HebCup": "Retrieves the pid stored in the {@link CommandLine} or passed as an argument."
}
{
    "Origin": "Perform the tests of this quick start using the SecurityContextAssociation API to set the desired Principal.",
    "Reference": "Perform the tests of this quick start using a thread local in the client-side interceptor to set the desired principal name.",
    "HebCup": "Perform the tests of this quick start using the ClientSecurityContextAssociation API to set the desired Principal."
}
{
    "Origin": "Fetches the leader index metadata and history UUIDs for leader index shards from the remote cluster.",
    "Reference": "Fetches the remote cluster state, leader index metadata, and history UUIDs for leader index shards from\nthe remote cluster.",
    "HebCup": "Fetches the Cluster State Leader Index Metadata And History UUIDs for leader index shards from the remote cluster."
}
{
    "Origin": "Returns the default SelectorProvider.",
    "Reference": "Returns the default SelectorProvider implementation.",
    "HebCup": "Returns the default SelectorProviderImpl."
}
{
    "Origin": "This factory creates a {@code ZonedDateTime} from a date-time and time-zone.",
    "Reference": "Obtains an instance of {@code ZonedDateTime} from a local date-time.",
    "HebCup": "This factory creates a {@code ZonedlocalDateTime} from a date-time and time-zone."
}
{
    "Origin": "Saves locale to HTTP session.",
    "Reference": "Saves Locale to HTTP session.",
    "HebCup": "Saves Tag to HTTP session."
}
{
    "Origin": "Returns an immutable set containing zero elements.",
    "Reference": "Returns an unmodifiable set containing zero elements.",
    "HebCup": "Returns an Unmodifiable set containing zero elements."
}
{
    "Origin": "The timestamp for creation of the entity value.",
    "Reference": "The timestamp for creation of the object.",
    "HebCup": "The timestamp for creation of the entity value."
}
{
    "Origin": "Set Zahlwert.",
    "Reference": "Set Eingaberegister.",
    "HebCup": "Set Zahlwert."
}
{
    "Origin": "Looks up from {@link ServicesInjector}.",
    "Reference": "Looks up from {@link ServiceInjector}.",
    "HebCup": "Looks up from {@link getTranslationService}."
}
{
    "Origin": "Returns the query.",
    "Reference": "Returns the query consistency level.",
    "HebCup": "Returns the ConsistencyLevel."
}
{
    "Origin": "Clears the render thread for this component; call at the last opportunity before thread destruction",
    "Reference": "Clears the render thread for this component.",
    "HebCup": "Clears the render thread for this component; call at the last opportunity before thread destruction"
}
{
    "Origin": "Clears global cache for the specified {@link IconData}.",
    "Reference": "Clears global cache for the specified {@link IconSource}.",
    "HebCup": "Clears global cache for the specified {@link IconSource}."
}
{
    "Origin": "Returns a string representation of this object; useful for testing and debugging.",
    "Reference": "Returns a string representation of this object.",
    "HebCup": "Returns a string representation of this object; useful for testing and debugging."
}
{
    "Origin": "{@codesnippet com.azure.storage.blob.specialized.BlobClientBase.setHTTPHeaders#BlobHttpHeaders}",
    "Reference": "{@codesnippet com.azure.storage.blob.specialized.BlobClientBase.setHttpHeaders#BlobHttpHeaders}",
    "HebCup": "{@codesnippet com.azure.storage.blob.specialized.BlobClientBase.setHttpHeaders#BlobHttpHeaders}"
}
{
    "Origin": "Transform the results into a LinkedHashMap with abstract files.",
    "Reference": "Transform the results into a LinkedHashMap with result files.",
    "HebCup": "Transform the results into a LinkedHashMap with Files."
}
{
    "Origin": "Sets the Script.",
    "Reference": "Sets the paramConsolescript.",
    "HebCup": "Sets the Consolescript."
}
{
    "Origin": "Compares the specified item.",
    "Reference": "Compares the specified name.",
    "HebCup": "Compares the specified item."
}
{
    "Origin": "Validate the input, in this case asserting that the backoff factor is positive (>= 0).",
    "Reference": "Validate the input, in this case asserting that the backoff factor is strictly positive (>= 1).",
    "HebCup": "Validate the input, in this case asserting that the backoff factor is positive (>= 0) 1."
}
{
    "Origin": "Default value is {@code Integer.MAX_VALUE}, meaning that it's non-ordered.",
    "Reference": "The default value is {@code Ordered.LOWEST_PRECEDENCE}, meaning non-ordered.",
    "HebCup": "Default value is {@code Integer.MAX_VALUE}, meaning that it's non-ordered."
}
{
    "Origin": "Configures SSL or TLS of the default {@link VirtualHost} with an auto-generated self-signed\ncertificate.",
    "Reference": "Configures SSL or TLS of the {@link Server} with an auto-generated self-signed certificate.",
    "HebCup": "Configures SSL or TLS of the default {@link virtualHost} with an auto-generated self-signed certificate."
}
{
    "Origin": "Set the {@link RecordMessageConverter} to use.",
    "Reference": "Set the {@link MessageConverter} to use.",
    "HebCup": "Set the {@link MessageConverter} to use."
}
{
    "Origin": "Returns true if field execTime is set (has been assigned a value) and false otherwise",
    "Reference": "Returns true if field startTime is set (has been assigned a value) and false otherwise",
    "HebCup": "Returns true if field StartTime is set (has been assigned a value) and false otherwise"
}
{
    "Origin": "Computes the average for each pixel across all bands in the {@link Planar} image.",
    "Reference": "Computes the average for each pixel across selected bands in the {@link Planar} image.",
    "HebCup": "Computes the average for each pixel across all bands in the {@link Planar} image."
}
{
    "Origin": "Returns all users, or users from a specified database.",
    "Reference": "Returns all users, or users that have permissions for a specific database.",
    "HebCup": "Returns all users, or users from a specified database."
}
{
    "Origin": "If it runs out of a transaction, after the execution you will still be out of tx.",
    "Reference": "If the DB does not have an active transaction, after the execution you will still be out of tx.",
    "HebCup": "If it runs out of a transaction, after the execution you will still be out of tx."
}
{
    "Origin": "Resolve default name for a given reference type.",
    "Reference": "Resolve default reference for a given reference type.",
    "HebCup": "Resolve default Parent for a given reference type."
}
{
    "Origin": "Subscribe to future updates and be notified of any existing ssrc associations.",
    "Reference": "Subscribe to future updates and be notified of any existing SSRC\nassociations.",
    "HebCup": "Subscribe to future updates and be notified of any existing ssrc associations."
}
{
    "Origin": "Returns the current navigation URI.",
    "Reference": "Returns the current request URI.",
    "HebCup": "Returns the current navigation URI."
}
{
    "Origin": "The candidate collection can be used for speculation, although at present it would break\nLOCAL_QUORUM and EACH_QUORUM to do so without further filtering",
    "Reference": "The candidate collection can be used for speculation, although at present\nit would break EACH_QUORUM to do so without further filtering",
    "HebCup": "The consistenc collection can be used for speculation , although at present it would break LOCAL_QUORUM and EACH_QUORUM to do so without further filtering"
}
{
    "Origin": "NOTE: This method is meaningless unless you explicitly provide paths when constructing this instance",
    "Reference": "NOTE: This method is meaningless in SSLTestConfig.",
    "HebCup": "NOTE: This method is meaningless unless you explicitly provide paths when constructing this instance"
}
{
    "Origin": "Set up both primary toolbar for navigation and search, and secondary toolbar for master switch.",
    "Reference": "Set up primary toolbar for navigation and search",
    "HebCup": "Set up both primary Toolbar for navigation and search, and secondary Toolbar for master switch."
}
{
    "Origin": "Returns a new Task that, when this task completes\nnormally, is executed using the supplied Scheduler, with this\ntask's result as the argument to the supplied function.",
    "Reference": "Returns a new Task that, when this task completes\nnormally, is executed using the supplied Executor, with this\ntask's result as the argument to the supplied function.",
    "HebCup": "Returns a new Task that , when this task completes normally , is executed using the supplied Executor , with this task's result as the argument to the supplied function."
}
{
    "Origin": "Returns the width of the space character.",
    "Reference": "Returns the x-advance of the space character.",
    "HebCup": "Returns the Xadvance of the space character."
}
{
    "Origin": "Returns the specified codepoints as value.",
    "Reference": "Returns the specified characters as sequence of strings.",
    "HebCup": "Returns the specified codepoints as value."
}
{
    "Origin": "Adds one member to this action profile group.",
    "Reference": "Adds one member to this action profile group with default weight.",
    "HebCup": "Adds one memberInstance to this action profile group."
}
{
    "Origin": "Set the exclude filter file",
    "Reference": "Set the baseline bugs file",
    "HebCup": "Set the exclude filter file"
}
{
    "Origin": "If {@link ConfigurationSetting#getETag() etag} is specified, the configuration value is updated if the current\nsetting's etag matches.",
    "Reference": "If {@link ConfigurationSetting#getETag() ETag} is specified, the configuration value is updated if the current\nsetting's ETag matches.",
    "HebCup": "If {@link ConfigurationConfigurationSetting#getETag() etag} is specified, the configuration value is updated if the current ConfigurationSetting's etag matches."
}
{
    "Origin": "This is why there is not a set method for the egBlockLevelElts property.",
    "Reference": "This is why there is not a set method for the content property.",
    "HebCup": "This is why there is not a set method for the content property."
}
{
    "Origin": "Casts the {@code DateTime} to {@ChronoOffsetDateTime} with the same chronology.",
    "Reference": "Casts the {@code DateTime} to {@code ChronoOffsetDateTime} with the same chronology.",
    "HebCup": "Casts the {@code DateTime} to {@ChronoOffsetDateTime} with the same chronology."
}
{
    "Origin": "Main method to invoke this demo about how to extract key phrases of a text input.",
    "Reference": "Main method to invoke this demo about how to extract the key phrases of an input text.",
    "HebCup": "Main method to invoke this demo about how to extract key phrases of a text input."
}
{
    "Origin": "Return the normalized load for the host.",
    "Reference": "Return the normalized availability for the host.",
    "HebCup": "Return the normalized load for the host."
}
{
    "Origin": "Returns the primitive management service.",
    "Reference": "Returns the primitive thread factory.",
    "HebCup": "Returns the Thread Context Factory."
}
{
    "Origin": "Counts entries in the queue with the specified status for each specified component uuid.",
    "Reference": "Counts entries in the queue with the specified status for each specified main component uuid.",
    "HebCup": "Counts entries in the queue with the specified status for each specified Main Component Uuid."
}
{
    "Origin": "Returns an array containing all of the instructions in this list.",
    "Reference": "Returns an array containing all the instructions in this list.",
    "HebCup": "Returns an array containing all of the instructions in this list."
}
{
    "Origin": "Simply create some instance of Direct Byte Buffer and try to get declared constructor.",
    "Reference": "Simply create some instance of direct Byte Buffer and try to get it's class declared constructor.",
    "HebCup": "Simply create some instance of buf Byte Buffer and try to get declared constructor."
}
{
    "Origin": "Return the topicPartitions for this endpoint.",
    "Reference": "Set the topicPartitions to use.",
    "HebCup": "Return the topicPartitions for this endpoint."
}
{
    "Origin": "The map has weak\nkeys so it can be expunged when the target class is GC'ed/unloaded.",
    "Reference": "The map has weak\nkeys so it can be expunged when the caller is GC'ed/unloaded.",
    "HebCup": "The map has weak\nkeys so it can be expunged when the target class is GC'ed/unloaded."
}
{
    "Origin": "Currently only HTTP live streaming data URI's embedded with timed ID3 tags generates\n{@link TimedMetaData2}.",
    "Reference": "Currently only HTTP live streaming data URI's embedded with timed ID3 tags generates\n{@link TimedMetaData}.",
    "HebCup": "Currently only HTTP live streaming data URI's embedded with timed ID3 tags generates {@link TimedMetaData}."
}
{
    "Origin": "Get order by.",
    "Reference": "Get order by segment.",
    "HebCup": "Get order by."
}
{
    "Origin": "Gets the Chemical Oxidizer Recipe for the ItemStackInput in the parameters.",
    "Reference": "Gets the Chemical Oxidizer Recipe for the ItemStack in the parameters.",
    "HebCup": "Gets the Chemical Oxidizer Recipe for the ItemStack in the parameters."
}
{
    "Origin": "Synchronously send a request and obtain the response.",
    "Reference": "Sends the request and obtain a response.",
    "HebCup": "Synchronously send a request and obtain the response."
}
{
    "Origin": "Standard getter for the leftwardLabel String for this RelationshipType",
    "Reference": "Standard getter for the leftwardType String for this RelationshipType",
    "HebCup": "Standard getter for the leftwardType String for this RelationshipType"
}
{
    "Origin": "Register a descriptor by name.",
    "Reference": "Register a named descriptor by name.",
    "HebCup": "Register a descriptor by name."
}
{
    "Origin": "Match closeness is calculated as the total number of matched\nsource to destination tokens / the total number of source and destination tokens.",
    "Reference": "Match closeness is calculated as the total number of matched\nsource to destination tokens * the weight that the order of properties are matched /\nthe total number of source and destination tokens.",
    "HebCup": "Match closeness is calculated as the total number of matched\nsource to destination tokens / the total number of source and destination tokens."
}
{
    "Origin": "Create an instance of {@link JAXBElement }{@code <}{@link CTMarkupRange }{@code >}}",
    "Reference": "Create an instance of {@link JAXBElement }{@code <}{@link CTMoveToRangeEnd }{@code >}}",
    "HebCup": "Create an instance of {@link JAXBElement} {@code <} {@link CTMoveToRangeEnd} {@code >}}"
}
{
    "Origin": "The start within a native image heap section (e.g., read-only or writable).",
    "Reference": "Otherwise, this returns the offset of the object within a native image section\n(e.g., read-only or writable).",
    "HebCup": "The start within a native image heap section (e.g., read-only or writable).get."
}
{
    "Origin": "Return a new {@link Tags} instance by merging this collection and the specific key/value pairs.",
    "Reference": "Return a new {@code Tags} instance by merging this collection and the specified key/value pairs.",
    "HebCup": "Return a new {@link Tags} instance by merging this collection and the specific key/value pairs."
}
{
    "Origin": "Typically used for RPCs\nat best efforts (e.g., async cache).",
    "Reference": "This method is typically used for RPCs\nproviding best efforts (e.g., async cache).",
    "HebCup": "Typically used for RPCs\nat best efforts (e.g., async cache)."
}
{
    "Origin": "Update the start and end points of the line.",
    "Reference": "Alter the start and end.",
    "HebCup": "Update the start and end points of the line."
}
{
    "Origin": "Open a new file for data matching a schema.",
    "Reference": "Open a new file for data matching a schema with a random sync.",
    "HebCup": "Open a new file for data matching a schema."
}
{
    "Origin": "Creates new {@link AggregationExpression} that returns the minute portion of a date as a number between 0 and 59\nin the factory timezone (default UTC).",
    "Reference": "Creates new {@link AggregationExpression} that returns the minute portion of a date as a number between 0 and 59.",
    "HebCup": "Creates new {@link AggregationExpression} that returns the Minute.minute portion of a date as a number between 0 and 59 in the factory timezone (default UTC)."
}
{
    "Origin": "Returns the rfs name plus the default file name.",
    "Reference": "Returns the real file system name plus the default file name.",
    "HebCup": "Returns the rfs name plus the default file name."
}
{
    "Origin": "Returns a string representation of this object; useful for testing and debugging.",
    "Reference": "Returns a string representation of this object.",
    "HebCup": "Returns a string representation of this object; useful for testing and debugging."
}
{
    "Origin": "Get Account Sign.",
    "Reference": "Get Kontovorzeichen.",
    "HebCup": "Get Account Sign."
}
{
    "Origin": "Complexity: 6 (2 of which emulated) trigonometric functions.",
    "Reference": "Complexity: 6 trigonometric functions.",
    "HebCup": "Complexity: 6 (2 of which emulated) trigonometric functions."
}
{
    "Origin": "Sets the value of the pubBrowser property.",
    "Reference": "Sets the value of the target property.",
    "HebCup": "Sets the value of the Target property."
}
{
    "Origin": "This will open a new one {@link Session} if it hasn't been opened before",
    "Reference": "This will open a new one Session if it hasn't been opened before",
    "HebCup": "This will open a new one {@link Session} if it hasn't been opened before"
}
{
    "Origin": "Sets the top border for a region of cells by manipulating the cell style of the individual\ncells on the top",
    "Reference": "Sets the top border style for a region of cells by manipulating the cell style of the individual\ncells on the top",
    "HebCup": "Sets the top border for a region of cells by manipulating the cell style of the individual\ncells on the top"
}
{
    "Origin": "Is the counter valid for usage?",
    "Reference": "Is the counter active for usage?",
    "HebCup": "Is the counter Active for usage?"
}
{
    "Origin": "or throws a {@link com.liferay.calendar.NoSuchCalendarException} if it could not be found.",
    "Reference": "or throws a {@link NoSuchCalendarException} if it could not be found.",
    "HebCup": "or throws a {@link com.liferay.calendar.NoSuchCalendarException} if it could not be found."
}
{
    "Origin": "Returns the defined response scheduler.",
    "Reference": "Returns the currently configured token.",
    "HebCup": "Returns the defined token."
}
{
    "Origin": "Returns a sampler, given a rate expressed as a percentage.",
    "Reference": "Returns a sampler, given a probability expressed as a percentage.",
    "HebCup": "Returns a sampler , given a probability expressed as a percentage."
}
{
    "Origin": "Verify that a named subquery exists for each INCLUDE.",
    "Reference": "Verify that a named subquery of solution set exists for each INCLUDE.",
    "HebCup": "Verify the a named subquery exists for each INCLUDE."
}
{
    "Origin": "A new\n{@link EventContext} is used instead of the existing instance referenced by the existing {@link BaseEvent}.",
    "Reference": "A new\n{@link EventContext} is used instead of the existing instance referenced by the existing {@link CoreEvent}.",
    "HebCup": "A new {@link EventContext} is used instead of the existing instance referenced by the existing {@link CoreEvent}."
}
{
    "Origin": "Checks and adjusts the market data names.",
    "Reference": "Checks and adjusts the parameter metadata values.",
    "HebCup": "Checks and adjusts the market data md."
}